803/F __label__number  theory  let  call  non  empty  sequence  positive  coprime  greatest  common  divisor  element  sequence  equal  given  array  consisting  positive  find  coprime  subsequence  since  answer  large  print  modulo  note  subsequence  considered  different  chosen  index  different  example  array  different  subsequence  contains  second  contains  print  coprime  subsequence  modulo
1256/C __label__greedy  river  width  left  bank  river  cell  right  bank  cell  formally  river  represented  sequence  cell  numbered  wooden  platform  river  platform  ha  length  platform  take  consecutive  cell  river  guaranteed  sum  length  platform  doe  exceed  standing  want  reach  somehow  standing  position  jump  position  range  really  like  water  jump  cell  belong  wooden  platform  example  jump  next  position  belongs  wooden  platform  assume  cell  belong  wooden  platform  want  know  possible  reach  move  platform  left  right  arbitrary  time  possibly  long  intersect  platform  touch  mean  change  relative  order  platform  note  move  platform  start  jumping  word  move  platform  start  jumping  example  way  reach  follow  example  input  contains  width  river  platform  maximum  distance  jump  correspondingly  second  input  contains  length  platform  impossible  reach  print  otherwise  print  yes  array  length  second  sequence  river  cell  excluding  cell  cell
825/F __label__dp  __label__strings  ivan  want  write  letter  friend  letter  string  consisting  lowercase  latin  letter  unfortunately  ivan  started  writing  letter  realised  long  writing  whole  letter  take  extremely  long  time  want  write  compressed  version  string  instead  string  compressed  version  string  sequence  string  decimal  representation  without  leading  string  consisting  lowercase  latin  letter  ivan  writes  string  exactly  time  string  exactly  time  result  string  length  compressed  version  compressed  version  ivan  want  choose  version  length  minimum  possible  help  ivan  determine  minimum  possible  length  input  contains  string  consisting  lowercase  latin  letter  output  minimum  possible  length  compressed  version
407/E __label__data  structures  call  sequence  good  sequence  add  way  sorting  sequence  arithmetic  progression  difference  got  hold  sequence  consisting  task  find  longest  contiguous  subsegment  good  sequence  contains  space  separated  second  contains  space  separated  actual  sequence  print  space  separated  show  sequence  longest  subsegment  good  sequence
618/B __label__constructive  algorithms  bob  ha  permutation  denote  permutation  element  denoted  pair  distinct  wrote  writes  bob  gave  value  wrote  job  reconstruct  permutation  could  generated  value  input  formed  guaranteed  least  solution  consistent  information  given  input  single  next  value  represent  guaranteed  least  solution  consistent  information  given  print  space  separated  represents  permutation  could  generated  value  multiple  possible  solution  print
717/H __label__math  welcome  world  pokermon  yellow  little  mouse  like  creature  absolutely  love  playing  poker  yeah  right  ensuing  pokermon  league  registered  pokermon  trainer  existing  trainer  team  belongs  conference  since  lot  jealousy  trainer  pair  trainer  hate  hate  mutual  identical  pair  trainer  hate  world  pokermon  joyful  place  trainer  ha  wish  list  length  team  like  join  task  divide  player  team  team  conference  trainer  belongs  exactly  team  team  conference  total  hate  conference  least  every  trainer  team  wish  list  total  hate  conference  calculated  pair  trainer  team  different  conference  hate  input  contains  total  pokermon  trainer  pair  trainer  hate  pokermon  trainer  numbered  next  indicating  pokermon  trainer  hate  next  following  format  starting  pokermon  trainer  trainer  consecutive  order  size  pokermon  trainer  wish  list  positive  providing  team  trainer  would  like  trainer  wish  list  team  team  wish  list  numbered  way  set  team  appear  least  wish  list  set  consecutive  positive  might  print  specifying  trainer  team
467/A __label__implementation  george  ha  recently  entered  bsucp  berland  state  university  cool  programmer  george  ha  friend  alex  ha  entered  university  moving  dormitory  george  alex  want  live  room  dormitory  ha  room  total  moment  room  ha  people  living  room  accommodate  people  total  pii  task  count  many  room  ha  free  place  george  alex  contains  single  room  next  contains  ii  people  already  live  room  room  capacity  print  single  room  george  alex  move
961/B __label__dp  __label__implementation  __label__data  structures  friend  mishka  attend  calculus  lecture  lecture  last  minute  lecturer  tell  theorem  minute  mishka  really  interested  calculus  though  hard  stay  awake  time  lecture  given  array  mishka  behavior  mishka  asleep  minute  lecture  equal  otherwise  equal  mishka  awake  writes  theorem  told  minute  otherwise  writes  nothing  know  secret  technique  keep  mishka  awake  minute  straight  use  start  using  beginning  minute  use  minute  mishka  awake  minute  write  theorem  lecturer  tell  task  calculate  maximum  theorem  mishka  able  write  use  technique  wake  input  contains  duration  lecture  minute  minute  keep  mishka  awake  second  input  contains  theorem  lecturer  tell  minute  third  input  contains  type  mishka  behavior  minute  lecture  print  maximum  theorem  mishka  able  write  use  technique  wake
441/E __label__math  __label__dp  valera  coder  recently  wrote  funny  program  pseudo  code  program  given  input  step  step  step  step  rnd  random  rnd  else  remainder  dividing  equal  valera  wonder  given  value  expected  value  resulting  input  contains  print  required  expected  value  answer  considered  correct  absolute  relative  error  exceed
630/B __label__math  city  administration  city  decided  fix  symbol  scientific  technical  progress  city  main  square  namely  indicator  board  show  effect  moore  law  real  time  moore  law  observation  transistor  dense  integrated  circuit  double  approximately  every  month  implication  moore  law  computer  performance  function  time  increase  exponentially  well  prepare  information  change  every  second  display  indicator  board  let  assume  every  second  transistor  increase  exactly  time  input  contains  pair  transistor  initial  time  second  passed  since  initial  time  output  estimate  transistor  dence  integrated  circuit  second  since  initial  time  relative  error  answer  greater
610/B __label__implementation  __label__constructive  algorithms  vika  ha  jar  paint  distinct  color  jar  numbered  jar  contains  liter  paint  color  vika  ha  infinitely  long  rectangular  piece  paper  width  consisting  square  size  square  numbered  vika  decided  start  painting  square  left  right  starting  square  arbitrary  color  square  wa  painted  color  next  square  painted  color  case  next  square  painted  color  paint  color  vika  want  use  stop  square  always  painted  color  take  exactly  liter  paint  task  calculate  maximum  square  might  painted  vika  chooses  right  color  paint  square  input  contains  single  jar  color  vika  ha  second  input  contains  sequence  equal  liter  paint  jar  liter  color  vika  ha  output  single  maximum  square  vika  paint  follows  rule  described
323/A __label__constructive  algorithms  given  cube  size  k  consists  unit  cube  unit  cube  considered  neighbouring  common  face  task  paint  unit  cube  colour  black  white  following  condition  must  satisfied  white  cube  ha  exactly  neighbouring  cube  white  color  black  cube  ha  exactly  neighbouring  cube  black  color  contains  size  cube  print  solution  otherwise  print  required  painting  cube  consequently  layer  print  k  matrix  showing  layer  cube  painted  following  print  k  matrix  way  second  layer  painted  last  layer  note  orientation  cube  space  doe  matter
858/E __label__implementation  berland  national  olympiad  informatics  ha  ended  vladimir  want  upload  contest  olympiad  gym  popular  codehorses  website  unfortunately  archive  olympiad  data  mess  example  file  test  named  arbitrary  without  logic  vladimir  want  rename  file  test  name  distinct  starting  without  gap  namely  total  test  file  test  statement  example  others  regular  test  possible  example  possible  test  example  vladimir  want  rename  file  example  several  test  next  file  regular  test  operation  vladimir  perform  move  command  vladimir  want  write  script  file  move  file  file  mean  file  file  renamed  file  file  file  moment  run  file  rewritten  move  file  file  file  file  exist  file  file  content  equal  content  file  move  command  help  vladimir  write  script  file  minimum  possible  script  run  example  several  test  filename  total  example  file  regular  test  filename  total  test  contains  single  file  test  follow  describing  file  test  ha  form  namei  typei  namei  filename  typei  equal  file  contains  example  test  contains  regular  test  filename  file  string  digit  small  english  letter  length  character  filename  guaranteed  distinct  print  minimum  vladimir  script  file
981/B __label__sortings  famous  competing  company  chemforces  topchemist  decided  show  set  recently  discovered  chemical  element  exhibition  know  element  present  set  company  order  avoid  representative  company  decided  make  agreement  set  company  present  set  chosen  way  maximizes  total  income  company  element  enumerated  chemforces  company  ha  discovered  distinct  chemical  element  index  get  income  berland  ruble  element  list  set  company  topchemist  company  discovered  distinct  chemical  element  index  get  income  berland  ruble  including  element  list  set  word  company  present  subset  element  possibly  empty  subset  second  company  present  subset  element  possibly  empty  subset  equal  element  subset  help  representative  select  set  way  element  presented  set  total  income  maximum  possible  contains  single  element  discovered  chemforces  next  contains  index  element  income  usage  exhibition  guaranteed  distinct  next  contains  single  chemical  invented  topchemist  next  contains  index  element  income  usage  exhibition  guaranteed  distinct  print  maximum  total  income  obtain  choosing  set  company  way  element  presented  set
1191/A __label__brute  force  tokitsukaze  character  game  kantai  collection  game  every  character  ha  common  attribute  health  point  shortened  general  different  value  grouped  category  category  form  divided  remainder  category  form  divided  remainder  category  form  divided  remainder  category  form  divided  remainder  mentioned  category  ordered  highest  lowest  mean  category  highest  category  lowest  playing  game  player  increase  character  tokitsukaze  want  increase  either  much  increase  ha  highest  possible  category  contains  single  value  tokitsukaze  currently  print  uppercase  letter  representing  best  way  increase  category  becomes
932/A __label__constructive  algorithms  given  string  find  string  palindrome  subsequence  subsequence  string  string  derived  deleting  necessarily  consecutive  character  without  changing  order  remaining  character  example  cotst  subsequence  contest  palindrome  string  read  forward  backward  length  string  guaranteed  always  exists  string  need  find  shortest  answer  restriction  length  string  exceed  contains  string  consisting  lowercase  latin  letter  length  output  single  containing  consisting  lowercase  latin  letter  need  find  shortest  answer  restriction  length  string  exceed  many  possible  print
704/D __label__greedy  steve  rogers  fascinated  new  vibranium  shield  gave  uncolored  shield  total  shield  located  point  coordinate  plane  possible  shield  share  location  steve  want  paint  shield  paint  shield  either  red  blue  painting  shield  red  cost  dollar  painting  blue  cost  dollar  additionally  constraint  steve  want  satisfied  constraint  provided  absolute  difference  red  blue  shield  exceed  absolute  difference  red  blue  shield  exceed  steve  gave  task  finding  painting  satisfies  condition  total  cost  minimum  input  contains  shield  constraint  respectively  second  contains  next  shield  coordinate  contains  next  constrains  contains  j  j  j  satisfying  constraint  impossible  print  output
590/E __label__strings  today  birthday  little  dasha  year  old  occasion  friend  relative  gave  ribbon  greeting  written  turned  greeting  different  dasha  gathered  ribbon  decided  throw  away  order  make  remaining  set  stylish  birthday  girl  considers  set  ribbon  stylish  greeting  written  ribbon  substring  another  greeting  written  ribbon  let  recall  substring  string  continuous  segment  help  dasha  keep  many  ribbon  possible  could  brag  friend  dasha  rotate  flip  ribbon  greeting  read  single  way  given  input  input  contains  dasha  relative  friend  next  contains  exactly  greeting  greeting  consists  character  total  length  greeting  exceed  character  print  maximum  size  stylish  set  second  print  ribbon  involved  assuming  numbered  order  appear  input  several  stylish  set  maximum  size  print
396/E __label__math  course  many  calculate  positive  le  equal  coprime  need  calculate  function  taken  time  given  canonical  decomposition  prime  factor  given  calculate  value  print  result  canonical  decomposition  prime  factor  contains  distinct  prime  divisor  canonical  representaion  next  contains  pair  space  separated  another  prime  divisor  power  canonical  representation  sum  exceed  prime  divisor  input  follow  strictly  increasing  order  last  contains  print  distinct  prime  divisor  function  taken  time
600/D __label__geometry  given  circle  find  area  intersection  contains  position  center  radius  circle  second  contains  position  center  radius  second  circle  print  area  intersection  circle  answer  considered  correct  absolute  relative  error  exceed
794/D __label__dfs  __label__graphs  oleg  bank  client  life  bankopolia  city  bankopolia  pair  city  connected  directly  directional  road  city  numbered  total  road  bankopolia  road  connects  city  guaranteed  city  possible  travel  city  using  road  oleg  want  give  label  city  suppose  label  city  equal  must  hold  pair  city  condition  hold  road  connecting  oleg  wonder  labeling  possible  find  example  labeling  task  possible  state  impossible  otherwise  input  contains  space  separated  city  road  next  follow  contains  space  separated  uii  city  connected  road  guaranteed  road  pair  city  possible  travel  city  city  using  road  required  labeling  possible  output  single  containing  string  without  quote
1095/C __label__greedy  positive  called  power  represented  non  negative  power  given  positive  task  represent  sum  exactly  power  input  contains  impossible  represent  sum  power  print
1141/A __label__math  __label__implementation  polycarp  play  game  initially  ha  goal  transform  move  multiply  multiply  perform  move  print  move  needed  transform  print  impossible  easy  prove  way  transform  contains  move  move  depend  way  transformation  input  contains  print  move  transform  solution
1250/D __label__dp  large  scale  conference  unnatural  science  going  held  soon  berland  total  scientist  around  world  applied  indicated  time  segment  attend  conference  day  arrival  day  departure  scientist  indicated  country  preferred  scientist  ha  value  scientist  coming  country  country  numbered  scientist  preferred  indicate  country  everyone  know  interesting  useful  chat  representative  country  participant  conference  upset  meet  people  country  stay  possible  meet  people  time  stay  including  day  arrival  day  departure  conference  organizer  need  ready  worst  interested  largest  possible  people  attending  conference  exactly  upset  help  organizer  find  maximum  upset  scientist  input  contains  test  case  test  case  follow  test  case  contains  registered  conference  participant  next  follow  containing  day  arrival  day  departure  country  fact  wa  indicated  participant  sum  test  case  input  doe  exceed  output  maximum  upset  scientist  test  case
660/B __label__implementation  consider  row  seat  bus  row  seat  left  row  seat  right  row  filled  people  total  capacity  bus  consider  n  people  occupy  seat  bus  passenger  entering  bus  numbered  order  entering  bus  pattern  seat  occupation  row  left  window  seat  row  right  window  seat  row  left  window  seat  row  right  window  seat  row  left  window  seat  row  right  window  seat  occupying  window  seat  non  window  seat  occupied  row  left  non  window  seat  row  right  non  window  seat  row  left  non  window  seat  row  right  non  window  seat  passenger  single  final  destination  final  destination  passenger  get  given  order  row  left  non  window  seat  row  left  window  seat  row  right  non  window  seat  row  right  window  seat  row  left  non  window  seat  row  left  window  seat  row  right  non  window  seat  row  right  window  seat  seating  given  value  output  order  passenger  get  bus  contains  n  pair  row  passenger  print  distinct  order  passenger  get  bus
1203/B __label__math  __label__greedy  given  stick  length  stick  create  rectangle  rectangle  consist  exactly  stick  given  set  rectangle  consists  side  opposite  side  equal  length  angle  right  note  stick  used  rectangle  stick  used  side  break  stick  use  full  length  want  rectangle  equal  area  area  rectangle  side  task  say  possible  create  exactly  rectangle  equal  area  answer  independent  query  input  contains  query  query  follow  query  contains  rectangle  second  query  contains  length  stick  query  print  answer  impossible  create  exactly  rectangle  equal  area  using  given  stick  print  otherwise  print  yes
1093/D __label__dfs  __label__graphs  given  undirected  unweighted  graph  consisting  vertex  edge  write  vertex  graph  graph  becomes  beautiful  edge  sum  vertex  connected  edge  odd  calculate  possible  way  write  vertex  graph  becomes  beautiful  since  large  print  modulo  note  write  exactly  vertex  graph  doe  self  loop  multiple  edge  contains  test  input  test  contains  vertex  edge  respectively  next  describe  edge  contains  index  vertex  connected  edge  guaranteed  test  print  containing  possible  way  write  vertex  given  graph  becomes  beautiful  since  answer  large  print  modulo
452/C __label__math  alex  enjoys  performing  magic  trick  ha  trick  requires  deck  card  ha  identical  deck  different  card  mixed  together  alex  wish  perform  trick  grab  card  random  performs  trick  resulting  deck  look  like  normal  deck  duplicate  card  trick  performed  follows  alex  allows  choose  random  card  deck  memorize  card  put  back  deck  alex  shuffle  deck  pull  card  card  match  memorized  trick  successful  think  alex  good  magician  pull  card  randomly  deck  determine  probability  trick  successful  case  input  consists  separated  space  card  deck  deck  output  print  floating  point  probability  alex  successfully  performing  trick  relative  absolute  error  answer  higher
1111/D __label__math  __label__dp  colony  villain  several  hole  aligned  row  hole  contains  exactly  villain  colony  arrangement  expressed  string  even  length  character  string  represents  type  villain  hole  iron  man  destroy  colony  colony  arrangement  villain  certain  type  either  live  half  colony  second  half  colony  assistant  jarvis  ha  special  power  swap  villain  hole  swap  character  string  operation  time  iron  man  asks  jarvis  question  question  give  jarvis  jarvis  ha  tell  iron  man  distinct  colony  arrangement  create  original  using  power  villain  type  originally  living  hole  hole  live  half  iron  man  destroy  colony  arrangement  colony  arrangement  considered  different  exists  hole  different  type  villain  present  hole  arrangement  contains  string  representing  initial  colony  arrangement  string  lowercase  uppercase  english  letter  length  even  second  contains  single  question  next  contains  given  jarvis  question  question  output  arrangement  possible  modulo
1231/C __label__greedy  problem  nm  rectangular  matrix  called  increasing  row  left  right  value  strictly  increase  column  top  bottom  value  strictly  increase  given  matrix  non  negative  necessary  replace  value  positive  resulting  matrix  increasing  sum  element  maximum  find  impossible  guaranteed  given  value  matrix  value  contained  internal  cell  last  row  last  column  contains  row  column  given  matrix  following  non  negative  value  corresponding  row  given  matrix  guaranteed  true  possible  replace  positive  matrix  increasing  print  maximum  possible  sum  matrix  element  otherwise  print
455/A __label__dp  alex  like  boredom  whenever  get  bored  come  game  long  winter  evening  came  game  decided  play  given  sequence  consisting  player  make  several  step  single  step  choose  element  sequence  let  denote  delete  element  equal  must  deleted  sequence  step  brings  point  player  alex  perfectionist  decided  get  many  point  possible  help  contains  show  many  alex  sequence  second  contains  print  single  maximum  point  alex  earn
875/D __label__data  structures  __label__binary  search  disclaimer  lot  untranslateable  pun  russian  version  statement  reason  learn  russian  rick  morty  like  ridge  high  cry  cry  loudly  extraordinary  echo  recently  discovered  interesting  acoustic  characteristic  ridge  rick  morty  begin  cry  simultaneously  different  mountain  cry  would  heard  mountain  height  equal  bitwise  mountain  climbed  mountain  bitwise  binary  operation  determined  following  way  consider  representation  binary  numeric  system  probably  leading  x  x  defined  following  way  z  z  otherwise  word  digit  bitwise  equal  digit  corresponding  position  equal  example  bitwise  equal  programming  language  java  python  operation  defined  pascal  help  rick  morty  calculate  way  select  mountain  way  start  cry  mountain  cry  heard  mountain  mountain  formally  find  pair  bitwise  height  mountain  inclusive  larger  height  mountain  interval  contains  mountain  ridge  second  contains  height  mountain  order  located  ridge  print  way  choose  different  mountain
1089/G __label__math  berland  state  university  invite  people  world  guest  student  come  capital  berland  study  best  teacher  country  berland  state  university  work  every  day  week  class  guest  student  held  following  schedule  know  sequence  class  guest  student  sunday  class  guest  student  monday  class  guest  student  saturday  class  guest  student  held  least  day  week  want  visit  capital  berland  spend  minimum  day  study  day  guest  student  berland  state  university  write  program  find  length  shortest  continuous  period  day  stay  capital  study  exactly  day  guest  student  input  contains  test  case  process  test  case  independently  solve  problem  print  answer  test  case  consists  contains  required  day  study  guest  student  second  contains  exactly  class  guest  student  held  day  week  print  answer  test  case  length  shortest  continuous  period  day  need  stay  study  exactly  day  guest  student
1076/G __label__data  structures  consider  following  game  player  array  consisting  positive  initially  chip  placed  cell  array  decreased  player  move  turn  turn  current  player  ha  following  index  cell  chip  currently  placed  ha  choose  index  min  move  chip  cell  decrease  impossible  make  valid  move  current  player  loses  game  task  following  given  array  consisting  positive  query  type  query  every  increase  tell  winner  game  played  subarray  index  index  inclusive  assume  player  choose  optimal  strategy  contains  element  parameter  described  game  query  respectively  second  contains  element  array  follow  containing  query  type  query  query  type  denoted  mean  every  increase  query  second  type  denoted  mean  determine  win  game  played  subarray  index  index  inclusive  least  query  type  query  type  print  player  win  corresponding  game  second  player  win
115/B __label__greedy  __label__sortings  garden  consisting  entirely  grass  weed  garden  described  n  grid  row  numbered  top  bottom  column  left  right  cell  identified  pair  mean  cell  located  row  column  cell  either  grass  weed  example  garden  look  follows  empty  cell  denote  grass  land  mower  mow  weed  initially  standing  lawnmower  top  left  corner  garden  cell  moment  time  facing  certain  direction  either  left  right  initially  face  right  move  either  move  cell  direction  facing  facing  right  move  cell  cell  facing  left  move  cell  cell  move  cell  cell  cell  change  direction  opposite  facing  right  previously  face  left  facing  left  previously  face  right  allowed  leave  garden  weed  mowed  lawnmower  standing  cell  containing  weed  direction  matter  action  counted  move  minimum  move  required  mow  weed  contains  row  column  respectively  follow  containing  character  content  grid  mean  cell  contains  grass  mean  cell  contains  weed  guaranteed  top  left  corner  grid  grass  print  single  minimum  move  required  mow  weed
961/F __label__binary  search  given  string  consisting  lowercase  latin  letter  let  denote  substring  string  subsk  ksk  obviously  sub  exactly  substring  let  call  string  odd  proper  suprefix  string  iff  following  condition  met  odd  simultaneously  prefix  suffix  evey  substring  calculate  maximum  length  odd  proper  suprefix  contains  length  second  contains  string  consisting  lowercase  latin  letter  print  equal  maximum  length  odd  proper  suprefix  substring  string  odd  proper  suprefix  substring
1172/A __label__implementation  __label__greedy  nauuo  girl  love  playing  card  day  wa  playing  card  found  card  mixed  empty  card  numbered  mixed  another  empty  card  piled  card  drew  card  nauuo  hand  given  remaining  card  pile  given  order  top  bottom  operation  choose  card  hand  play  put  bottom  pile  draw  top  card  pile  nauuo  want  make  numbered  card  piled  increasing  order  card  pile  top  bottom  card  quickly  possible  tell  minimum  operation  contains  single  numbered  card  second  contains  initial  card  nauuo  hand  represents  empty  card  third  contains  initial  card  pile  given  order  top  bottom  represents  empty  card  guaranteed  appears  exactly  either  output  contains  single  minimum  operation  make  numbered  card  piled  increasing  order
847/G __label__implementation  student  group  university  study  day  group  take  class  time  slot  numbered  allocated  class  schedule  monday  known  group  time  slot  group  class  known  task  determine  minimum  room  needed  hold  class  group  monday  note  room  hold  group  class  single  time  slot  contains  single  group  following  contains  sequence  consisting  schedule  class  monday  group  symbol  position  equal  group  ha  class  corresponding  time  slot  case  group  ha  class  corresponding  time  slot  print  minimum  room  needed  hold  group  class  monday
79/D __label__dp  finally  fox  ciel  arrived  front  castle  type  password  enter  castle  input  device  attached  castle  bit  unusual  input  device  rectangle  divided  square  panel  numbered  left  right  panel  ha  state  either  initially  panel  state  enter  castle  panel  state  panel  state  given  array  move  perform  following  operation  choose  index  choose  consecutive  panel  flip  state  panel  onff  offn  unfortunately  forgets  type  password  operation  determine  minimal  operation  required  enter  castle  contains  separated  single  space  second  contains  k  separated  single  space  third  contains  separated  single  space  possible  element  array  equal  value  print  minimal  move  required  type  password  impossible  print
729/B __label__dp  __label__implementation  theater  stage  rectangular  field  size  n  director  gave  stage  plan  actor  follow  cell  stated  plan  would  actor  cell  place  spotlight  stage  good  position  spotlight  project  light  direction  look  stage  left  right  thus  spotlight  position  cell  placed  direction  shine  position  good  condition  hold  actor  cell  spotlight  placed  least  actor  direction  spotlight  project  count  good  position  placing  spotlight  position  spotlight  considered  different  location  cell  projection  direction  differ  contains  positive  row  column  plan  next  description  plan  mean  actor  corresponding  cell  mean  cell  remain  empty  guaranteed  least  actor  plan  print  good  position  placing  spotlight
786/B __label__data  structures  __label__graphs  rick  worker  made  new  radioactive  formula  lot  bad  guy  rick  want  give  legacy  morty  bad  guy  catch  planet  universe  numbered  rick  planet  earth  know  morty  know  rick  owns  portal  gun  gun  open  way  portal  planet  planet  including  planet  limit  gun  still  using  free  trial  default  open  portal  gun  plan  website  sell  gun  every  time  purchase  plan  use  purchase  want  use  plan  website  type  plan  type  open  portal  planet  planet  plan  type  open  portal  planet  planet  index  range  plan  type  open  portal  planet  index  range  planet  rick  known  morty  unity  going  inform  want  prepared  find  start  journey  immediately  planet  including  earth  want  know  minimum  amount  money  need  get  earth  planet  input  contains  planet  plan  index  earth  respectively  next  plan  start  type  plan  followed  cost  plan  otherwise  followed  cost  plan  output  print  separated  space  minimum  money  get  earth  planet  impossible  get  planet
540/D __label__dp  bad  luck  island  inhabited  kind  specie  rock  scissors  paper  moment  time  random  individual  meet  pair  individual  meet  equiprobably  belong  different  specie  individual  kill  rock  kill  scissors  scissors  kill  paper  paper  kill  rock  task  determine  specie  probability  specie  inhabit  island  long  enough  period  time  single  contains  original  individual  specie  rock  scissors  paper  respectively  print  space  separated  real  probability  rock  scissors  paper  surviving  specie  respectively  answer  considered  correct  relative  absolute  error  exceed
459/A __label__implementation  pashmak  ha  fallen  love  attractive  girl  called  parmida  since  year  ago  today  pashmak  set  meeting  partner  romantic  garden  unfortunately  pashmak  ha  forgotten  garden  remembers  garden  look  like  square  side  parallel  coordinate  ax  remembers  exactly  tree  vertex  square  pashmak  know  position  tree  help  find  position  remaining  contains  space  separated  coordinate  tree  coordinate  second  tree  guaranteed  given  point  distinct  solution  problem  print  otherwise  print  space  separated  correspond  coordinate  tree  several  solution  output
681/B __label__brute  force  kolya  developing  economy  simulator  game  favourite  part  development  process  game  testing  wa  entertained  testing  much  found  game  coin  score  become  equal  kolya  remembers  beginning  game  game  coin  score  wa  equal  bought  house  game  coin  car  game  coin  computer  game  coin  kolya  interested  whether  could  spent  initial  game  coin  buying  house  car  computer  bug  game  formally  triple  non  negative  please  help  kolya  answer  question  input  contains  single  kolya  initial  game  coin  score  print  yes  without  quote  possible  kolya  spent  initial  coin  buying  house  car  computer  otherwise  print  without  quote
675/A __label__math  vasya  like  everything  infinite  studying  property  sequence  element  equal  difference  neighbouring  element  equal  particular  vasya  wonder  favourite  appears  sequence  exists  positive  course  person  asks  help  input  element  sequence  vasya  favorite  difference  neighbouring  element  sequence  respectively  appears  sequence  print  yes  without  quote  otherwise  print  without  quote
1103/D __label__dp  cardbluff  popular  sport  game  telegram  cardbluff  player  ha  ever  dreamed  entrance  professional  layer  judge  layer  trying  pas  entrance  exam  skill  cardbluff  judge  ha  indicator  uncertainty  entrance  professional  layer  experience  playing  cardbluff  pas  exam  need  convince  judge  playing  play  game  judge  result  particular  game  divide  uncertainty  judge  natural  divisor  gcd  indicator  equal  enter  professional  layer  become  judge  want  minimize  total  amount  spent  time  play  judge  total  experience  spend  second  print  minimal  time  enter  professional  layer  impossible  judge  skill  cardbluff  second  contains  uncertainty  judge  third  contains  format  experience  judge  print  single  minimal  second  pas  exam  impossible
498/A __label__geometry  crazy  town  plane  infinite  road  road  defined  equation  aix  iy  equal  road  divide  plane  connected  region  possibly  infinite  space  let  call  region  block  define  intersection  point  least  different  road  intersect  home  located  block  today  need  get  university  located  block  step  move  block  another  length  common  border  nonzero  particular  mean  block  adjacent  intersection  shared  nonzero  boundary  segment  allowed  move  another  step  determine  minimum  step  perform  get  block  containing  university  guaranteed  neither  home  university  located  road  contains  space  separated  coordinate  home  second  contains  separated  space  coordinate  university  studying  third  contains  road  city  following  space  separated  coefficient  aix  iy  defining  road  guaranteed  road  addition  neither  home  university  lie  road  belong  output  answer  problem
792/D __label__trees  complete  binary  tree  consisting  vertex  mean  exactly  vertex  root  vertex  either  leaf  child  inner  node  ha  exactly  child  leaf  complete  binary  tree  depth  distance  root  power  picture  see  complete  binary  tree  vertex  numbered  special  recursive  way  recursively  assign  vertex  left  subtree  current  vertex  leaf  assign  current  vertex  recursively  assign  vertex  right  subtree  exists  picture  vertex  numbered  exactly  using  algorithm  clear  size  complete  binary  tree  exists  exactly  way  give  vertex  way  numbering  called  symmetric  write  program  given  answer  query  tree  query  consists  string  vertex  represents  path  starting  vertex  string  character  mean  traverse  left  child  right  child  parent  respectively  character  processed  left  right  considering  vertex  path  start  impossible  process  character  example  left  child  leaf  skip  answer  vertex  path  represented  end  example  url  answer  contains  q  power  next  represent  query  query  consists  consecutive  contains  second  contains  non  empty  string  character  guaranteed  sum  length  exceed  print  must  answer  query
534/C __label__math  polycarp  ha  dice  dice  show  polycarp  rolled  dice  sum  showed  agrippina  see  dice  showed  know  sum  value  find  enough  make  series  statement  following  type  dice  show  example  polycarp  faced  dice  total  sum  agrippina  state  dice  show  value  le  otherwise  remaining  dice  must  value  least  impossible  dice  find  value  guaranteed  dice  show  value  sum  shown  value  contains  dice  sum  shown  value  second  contains  maximum  value  dice  show  print  value  guaranteed  dice  show
686/B __label__implementation  __label__sortings  __label__constructive  algorithms  little  robber  girl  like  scare  animal  zoo  fun  decided  arrange  animal  row  order  non  decreasing  height  animal  scared  stay  right  place  robber  girl  wa  angry  decided  arrange  animal  repeatedly  name  even  animal  occupy  position  inclusively  rearranged  follows  animal  position  swap  place  animal  position  animal  swap  animal  finally  animal  position  swap  animal  help  robber  girl  arrange  animal  order  non  decreasing  height  name  segment  since  otherwise  robber  girl  become  bored  start  scaring  animal  contains  single  animal  robber  girl  zoo  second  contains  space  separated  height  animal  occupying  place  print  sequence  operation  rearrange  animal  non  decreasing  height
913/G __label__math  __label__number  theory  given  positive  every  need  find  positive  decimal  notation  ki  contains  decimal  notation  substring  last  min  ength  ki  digit  length  length  decimal  notation  note  minimize  decimal  notation  problem  leading  contains  single  next  contains  positive  print  positive  last  min  ength  ki  digit  ki  decimal  notation  substring  must  satisfy
891/E __label__math  false  witness  speaketh  lie  given  sequence  containing  variable  equal  initially  following  process  repeat  time  choose  index  uniformly  random  name  add  multiply  subtract  find  expected  value  end  process  proved  expected  value  represented  irreducible  fraction  find  contains  element  parameter  specified  statement  second  contains  space  separated  output  single  value
710/C __label__constructive  algorithms  find  n  matrix  different  sum  row  column  main  diagonal  odd  contains  odd  print  different  sum  row  column  main  diagonal  odd
933/B __label__math  order  put  away  old  thing  welcome  fresh  new  year  thorough  cleaning  house  must  little  tommy  find  old  polynomial  cleaned  taking  modulo  another  regret  given  find  polynomial  non  negative  coefficient  strictly  le  whose  remainder  divided  polynomial  necessarily  coefficient  input  contains  space  separated  polynomial  doe  exist  print  single  output  otherwise
757/A __label__implementation  bash  want  become  pokemon  master  day  although  liked  lot  pokemon  ha  always  fascinated  bulbasaur  soon  thing  started  getting  serious  fascination  turned  obsession  since  young  catch  bulbasaur  came  way  catching  bulbasaur  day  take  front  page  newspaper  cut  letter  time  anywhere  front  page  newspaper  form  word  bulbasaur  without  quote  stick  wall  bash  particular  case  letter  bulbasaur  must  upper  case  rest  must  lower  case  think  ha  caught  bulbasaur  repeat  step  left  part  newspaper  keep  possible  form  word  bulbasaur  newspaper  given  text  front  page  newspaper  tell  many  bulbasaurs  catch  today  note  uppercase  lowercase  letter  considered  different  contains  single  containing  string  text  front  page  newspaper  without  space  punctuation  mark  length  string  string  contains  lowercase  uppercase  english  letter  output  single  answer  problem
1028/F __label__brute  force  consider  set  point  initially  empty  type  query  insert  point  guaranteed  point  doe  belong  moment  remove  point  guaranteed  point  belongs  moment  given  point  calculate  minimum  point  required  add  make  symmetrical  respect  containing  point  note  point  actually  added  query  independent  contains  single  query  following  describes  query  contains  type  query  coordinate  point  type  addition  point  type  removal  point  type  query  compute  minimum  point  required  make  symmetrical  guaranteed  query  type  query  type  query  third  type  output  single  answer  query
666/C __label__strings  famous  sculptor  cicasso  reberlandian  spy  breaking  news  berlandian  paper  today  sculptor  hiding  time  give  shelter  maestro  protected  bunker  provide  friend  set  security  system  way  open  bunker  open  solve  problem  hard  others  simple  every  day  bunker  generates  codeword  every  time  someone  want  enter  bunker  appears  screen  answer  enter  another  residue  modulo  string  length  consist  lowercase  english  letter  string  subsequence  subsequence  string  string  derived  string  removing  symbol  maybe  none  particular  string  subsequence  example  string  cfo  subsequence  string  codeforces  implemented  algorithm  calculates  correct  answer  asap  contains  event  test  case  second  contains  nonempty  string  string  generated  bunker  current  day  next  description  event  description  start  type  event  consider  new  day  ha  come  new  string  used  case  contains  new  value  string  given  event  mean  needed  find  answer  current  string  value  sum  length  generated  string  exceed  given  string  consist  lowercase  english  letter  query  type  print  answer  modulo  separate
492/C __label__greedy  __label__sortings  vanya  want  pas  exam  get  academic  scholarship  get  scholarship  average  grade  mark  exam  least  avg  exam  grade  exceed  vanya  ha  passed  exam  got  grade  exam  increase  grade  exam  point  vanya  must  write  essay  raise  exam  grade  multiple  time  minimum  essay  vanya  need  write  get  scholarship  contains  avg  vgin  exam  maximum  grade  required  grade  point  average  respectively  following  contains  space  separated  print  minimum  essay
856/F __label__greedy  vasya  petya  playing  online  game  online  game  ha  hero  progress  system  allows  player  gain  experience  make  hero  stronger  course  vasya  would  like  get  many  experience  point  possible  careful  study  experience  point  allocation  found  play  game  alone  get  experience  point  second  player  playing  together  current  experience  value  differ  point  boost  progress  get  experience  point  second  since  vasya  petya  middle  school  student  parent  allow  play  day  around  friend  ha  schedule  vasya  play  interval  petya  play  interval  time  period  given  second  current  moment  vasya  good  math  ha  noticed  sometimes  profitable  play  alone  experience  difference  could  become  big  progress  would  boosted  even  played  together  would  like  create  schedule  playing  vasya  final  experience  wa  greatest  possible  current  player  experience  petya  concerned  experience  ready  cooperate  play  needed  maximize  vasya  experience  input  data  contains  interval  vasya  play  interval  petya  play  maximal  difference  experience  level  playing  together  still  give  progress  boost  following  interval  vasya  play  following  interval  petya  play  output  maximal  experience  vasya  end  player  try  maximize  value
1030/D __label__number  theory  __label__geometry  vasya  ha  got  like  find  point  area  triangle  formed  point  equal  help  vasya  find  point  possible  multiple  solution  print  single  contains  point  print
946/F __label__dp  given  binary  string  character  string  either  let  denote  cost  string  occurences  example  cost  let  denote  fibonacci  string  sequence  follows  mean  concatenation  string  task  calculate  sum  cost  subsequence  string  since  answer  large  calculate  modulo  contains  length  index  fibonacci  string  interested  respectively  second  contains  string  consisting  character  character  either  print  sum  cost  subsequence  string  taken  modulo
436/A __label__greedy  hero  cut  rope  game  little  monster  named  nom  love  candy  coincidence  hero  today  problem  day  nom  visited  friend  evan  evan  ha  candy  type  fruit  drop  caramel  drop  candy  hang  height  centimeter  floor  house  mass  nom  want  eat  many  candy  possible  beginning  nom  make  centimeter  high  jump  nom  eats  candy  mass  get  stronger  height  jump  increase  centimeter  maximum  candy  nom  eat  never  eats  candy  type  row  nom  find  boring  contains  sweet  evan  ha  initial  height  nom  jump  following  contains  type  height  mass  candy  equal  current  candy  caramel  drop  otherwise  fruit  drop  print  single  maximum  candy  nom  eat
599/A __label__implementation  today  patrick  wait  visit  friend  spongebob  prepare  visit  patrick  need  buy  goody  store  located  near  house  meter  long  road  house  shop  meter  long  road  house  second  shop  road  length  directly  connecting  shop  help  patrick  calculate  minimum  distance  need  walk  order  shop  return  house  patrick  always  start  house  visit  shop  moving  along  existing  road  return  back  house  mind  visiting  shop  passing  road  multiple  time  goal  minimize  total  distance  traveled  input  contains  length  path  length  path  connecting  patrick  house  shop  length  path  connecting  patrick  house  second  shop  length  path  connecting  shop  print  minimum  distance  patrick  walk  order  visit  shop  return  house
431/E __label__data  structures  __label__binary  search  day  student  grisha  diana  found  university  chemistry  lab  lab  student  found  test  tube  mercury  numbered  decided  conduct  experiment  experiment  consists  step  step  following  action  occurs  diana  pours  content  tube  pours  exactly  liter  mercury  let  consider  way  add  liter  water  tube  way  let  count  volume  liquid  water  mercury  tube  water  maximum  amount  liquid  finally  let  find  minimum  counted  maximum  student  want  count  student  actually  pour  mercury  perform  calculation  without  changing  content  tube  unfortunately  calculation  proved  complex  student  asked  help  help  conduct  described  experiment  contains  tube  experiment  step  next  contains  space  separated  volume  mercury  tube  beginning  experiment  next  game  action  following  format  form  mean  action  type  form  mean  action  second  type  guaranteed  least  action  second  type  guaranteed  describe  experiment  action  second  type  print  calculated  value  answer  considered  correct  relative  absolute  error  exceed
952/B __label__brute  force  ever  interacted  cat  probably  noticed  quite  particular  pet  approximate  map  normal  cat  cat  tolerate  nonsense  human  map  grumpy  cat  met  cat  figure  whether  normal  grumpy  interaction  interactive  problem  initially  given  information  cat  instead  cat  divided  area  indexed  query  choose  area  pet  print  corresponding  index  standard  get  cat  response  depicted  corresponding  map  via  standard  simplicity  response  written  lowercase  certain  type  cat  dealing  output  normal  grumpy  standard  please  make  sure  use  stream  flushing  operation  query  order  leave  part  output  buffer
1012/C __label__dp  welcome  innopolis  city  throughout  whole  year  innopolis  citizen  suffer  everlasting  city  construction  window  room  see  sequence  hill  ha  height  innopolis  administration  want  build  house  hill  sake  city  appearance  house  built  hill  strictly  higher  neighbouring  hill  present  example  sequence  height  house  could  built  hill  height  innopolis  administration  ha  excavator  decrease  height  arbitrary  hill  hour  excavator  work  hill  time  allowed  decrease  hill  height  even  negative  value  increasing  height  hill  impossible  city  administration  want  build  house  must  least  hill  satisfy  condition  minimum  time  required  adjust  hill  achieve  administration  plan  exact  value  determined  could  please  calculate  answer  range  denotes  divided  rounded  input  contains  hill  sequence  second  contains  height  hill  sequence  print  exactly  separated  space  printed  equal  minimum  hour  required  level  hill  becomes  possible  build  house
379/G __label__dp  jack  jill  tired  new  year  tree  got  new  year  cactus  home  cactus  connected  undirected  graph  simple  cycle  common  vertex  word  graph  edge  lie  simple  cycle  st  december  going  decorate  cactus  hanging  toy  vertex  toy  going  hang  vertex  either  toy  jack  hung  toy  jill  hung  possible  vertex  toy  jack  jill  ha  arguing  want  edge  connect  vertex  vertex  ha  jack  toy  vertex  ha  jill  toy  jack  ha  decided  hang  toy  maximum  toy  jill  hang  cooperate  maximize  value  task  write  program  find  sought  vertex  new  year  cactus  contains  vertex  edge  correspondingly  next  mean  edge  connecting  vertex  pair  vertex  ha  edge  must  space  separated  equal  maximum  jill  toy  cactus  considering  ha  jack  toy  order  increasing
705/A __label__implementation  bruce  banner  hate  enemy  like  others  know  barely  talk  turn  incredible  hulk  asked  help  express  feeling  hulk  like  inception  much  like  feeling  complicated  layer  layer  hate  second  love  third  hate  example  feeling  hate  hate  love  hate  love  hate  please  help  banner  input  contains  single  layer  love  hate  print  banner  feeling
703/D __label__data  structures  little  mishka  enjoys  programming  since  birthday  ha  passed  friend  decided  present  array  non  negative  element  mishka  loved  array  instantly  decided  determine  beauty  value  little  process  large  array  right  invited  visit  asked  process  query  query  processed  following  way  specified  bound  query  segment  presented  array  segment  sequence  even  time  written  xor  sum  written  calculated  value  answer  query  formally  written  point  mishka  want  know  value  operator  exclusive  bitwise  since  little  bear  know  definition  array  beauty  answer  query  presented  input  contains  single  element  array  second  input  contains  array  element  third  input  contains  single  query  next  describes  corresponding  query  pair  bound  query  segment  print  non  negative  answer  query  order  appear  input
359/E __label__dfs  simon  love  neatness  go  bed  simon  want  complete  chore  house  simon  house  look  like  rectangular  table  consisting  row  column  row  table  numbered  top  bottom  column  table  numbered  left  right  cell  table  room  pair  denotes  room  located  intersection  row  column  room  know  light  initially  simon  room  want  turn  light  room  house  return  room  suppose  current  moment  simon  room  reach  desired  result  perform  following  step  format  action  action  turn  light  room  simon  room  already  ha  light  format  action  action  turn  light  room  simon  room  already  ha  light  format  action  dir  dir  character  action  move  side  adjacent  room  direction  dir  direction  left  right  corresponding  dir  additionally  simon  move  see  light  direction  dir  formally  represent  room  simon  want  shold  room  ha  light  course  simon  move  house  help  simon  find  sequence  action  let  achieve  desired  result  contains  positive  next  description  room  house  contains  space  separated  ai  aij  equal  room  ha  light  aij  equal  room  ha  light  guaranteed  least  room  ha  light  desired  sequence  action  print  without  quote  otherwise  print  yes  without  quote  description  required  sequence  action  string  note  minimize  length  sequence  action  use  action
847/E __label__binary  search  game  field  strip  square  cell  cell  packman  cell  asterisk  cell  empty  packman  move  neighboring  cell  time  unit  asterisk  target  cell  packman  eats  packman  spend  time  eat  asterisk  initial  moment  time  packman  begin  move  packman  change  direction  move  unlimited  time  allowed  beyond  boundary  game  field  packman  interfere  movement  packman  cell  packman  moving  direction  task  determine  minimum  possible  time  packman  eat  asterisk  contains  single  length  game  field  second  contains  description  game  field  consisting  symbol  symbol  position  cell  empty  symbol  position  cell  contains  asterisk  symbol  position  packman  cell  guaranteed  game  field  least  packman  least  asterisk  print  minimum  possible  time  packman  eat  asterisk
930/E __label__math  __label__dp  __label__data  structures  arkady  kirill  visited  exhibition  rare  coin  coin  located  row  enumerated  left  right  coin  either  wa  laid  obverse  front  side  reverse  back  side  arkady  kirill  made  photo  coin  photo  contained  segment  neighboring  coin  akrady  interested  obverse  photo  made  least  coin  obverse  side  contrary  kirill  interested  revers  photo  made  least  coin  reverse  side  photo  lost  arkady  kirill  still  remember  bound  segment  coin  photo  contained  given  information  compute  remainder  division  way  choose  upper  side  coin  way  arkady  photo  least  coin  obverse  side  kirill  photo  least  coin  reverse  side  contains  total  coin  photo  made  arkady  photo  made  kirill  respectively  next  description  arkady  photo  per  contains  meaning  coin  least  obverse  side  next  description  kirill  photo  per  contains  meaning  coin  least  reverse  side  print  way  choose  side  coin  modulo
762/D __label__dp  __label__implementation  given  rectangular  table  cell  contains  move  cell  another  share  side  find  path  upper  left  cell  bottom  right  cell  table  visit  cell  twice  sum  written  cell  path  maximum  possible  contains  column  table  next  description  table  corresponds  cell  aij  ij  table  output  maximum  sum  path  upper  left  cell  bottom  right  cell  table  visit  cell  twice
745/B __label__implementation  hongcow  like  solving  puzzle  day  hongcow  find  identical  puzzle  piece  instruction  make  rectangle  next  piece  described  grid  character  character  denotes  part  puzzle  denotes  empty  part  grid  guaranteed  puzzle  piece  connected  piece  see  input  format  sample  exact  detail  jigsaw  piece  specified  puzzle  piece  heavy  hongcow  rotate  flip  puzzle  piece  allowed  move  direction  puzzle  piece  overlap  given  input  description  piece  determine  possible  make  rectangle  identical  copy  given  input  rectangle  solid  empty  hole  inside  border  keep  mind  hongcow  allowed  flip  rotate  piece  overlap  different  piece  share  position  input  dimension  puzzle  piece  next  describe  jigsaw  piece  length  consist  character  corresponds  part  puzzle  piece  empty  space  guaranteed  least  character  input  character  form  connected  region  output  yes  possible  hongcow  make  rectangle  output  otherwise
414/E __label__data  structures  lot  trying  mashmokh  designed  problem  job  solve  tree  vertex  vertex  ha  unique  index  root  ha  index  vertex  tree  given  list  child  specific  order  must  perform  type  query  tree  find  distance  edge  shortest  path  given  disconnect  father  connect  ancestor  formally  let  denote  path  root  root  disconnect  father  connect  vertex  must  added  end  child  list  vertex  vertex  sequence  produced  calling  function  dfs  root  find  latest  vertex  ha  distance  root  pseudo  code  function  dfs  list  child  vertex  element  size  size  sequence  result  empty  sequence  void  dfs  vertex  add  end  result  int  size  loop  size  dfs  input  contains  space  separated  vertex  query  perform  following  contains  vertex  child  space  separated  follow  index  child  vertex  note  order  vertex  important  following  ha  following  format  type  query  perform  according  problem  statement  next  description  query  guaranteed  query  correct  example  second  type  query  least  distance  root  third  type  query  least  vertex  distance  root  time  query  given  query  third  type  output  containing  result  query
722/A __label__implementation  __label__brute  force  given  broken  clock  know  supposed  show  time  hour  format  hour  format  hour  change  hour  change  format  minute  change  given  time  format  currently  displayed  broken  clock  goal  change  minimum  digit  order  make  clock  display  correct  time  given  format  example  displayed  enough  replace  second  order  get  correct  time  hour  format  make  correct  hour  format  ha  change  least  digit  additionally  change  replace  second  obtain  input  contains  denote  hour  hour  format  respectively  second  contains  time  format  currently  displayed  clock  character  stand  hour  next  show  minute  output  time  format  correct  time  given  format  differ  original  position  possible  many  optimal  solution  print
523/B __label__implementation  problem  deal  real  algorithm  used  social  network  company  creates  high  loaded  website  developer  deal  request  statistic  regularly  important  indicator  reflecting  load  site  mean  request  certain  period  time  second  example  second  min  second  day  example  value  drop  dramatically  show  site  ha  access  problem  value  grows  reason  analyze  cause  growth  add  server  website  really  needed  even  natural  problem  counting  mean  query  period  time  challenge  process  amount  data  huge  social  network  developer  use  original  technique  solve  problem  approximately  effectively  time  let  consider  following  formal  model  service  work  second  know  query  resource  moment  time  let  formulate  following  algorithm  calculating  mean  exponential  decay  let  real  strictly  larger  setting  constant  value  correctly  adjust  time  range  statistic  calculated  double  constant  value  result  algorithm  performance  variable  mean  query  last  second  current  moment  time  double  mean  second  following  query  came  last  second  mean  mean  thus  mean  variable  recalculated  second  using  query  came  second  make  mathematical  calculation  prove  choosing  value  constant  correctly  make  value  mean  different  real  mean  value  advantage  approach  us  request  current  moment  time  require  storing  history  request  large  time  range  considers  recent  value  weight  larger  weight  old  help  react  dramatic  change  value  quicker  using  new  theoretical  approach  industrial  programming  obligatory  step  make  test  credibility  practically  given  test  data  set  task  compare  data  obtained  result  work  approximate  algorithm  real  data  given  value  real  given  moment  interested  mean  value  query  last  second  implement  algorithm  calculate  required  value  definition  formula  second  algorithm  calculate  mean  value  described  print  value  calculate  relative  error  second  algorithm  formula  approx  approximate  value  obtained  second  algorithm  real  exact  value  obtained  algorithm  contains  real  time  range  resource  work  length  time  range  need  mean  request  coefficient  work  approximate  algorithm  given  exactly  digit  decimal  point  next  contains  query  service  moment  time  next  contains  moment  time  interested  mean  query  last  second  next  contains  tj  representing  another  moment  time  need  statistic  moment  strictly  increasing  print  must  real  approx  error
991/E __label__math  __label__brute  force  night  easy  vasya  favorite  team  lost  find  victorious  either  although  played  perfectly  teammate  let  every  time  win  least  time  losestreak  grew  longer  longer  wonder  get  sleep  night  morning  vasya  wa  waiting  bus  university  bus  stop  vasya  thought  hazy  remember  right  bus  quite  right  got  onto  bus  bus  vasya  thought  could  get  order  digit  bus  wrong  futhermore  could  see  digit  several  time  digit  saw  definitely  real  bus  example  vasya  saw  could  mean  real  bus  could  definitely  bus  real  bus  start  digit  meaning  example  real  bus  given  determine  total  possible  bus  variant  contains  bus  wa  seen  vasya  guaranteed  doe  start  output  single  amount  possible  variant  real  bus
379/A __label__implementation  vasily  programmer  love  romance  year  decided  illuminate  room  candle  vasily  ha  candle  vasily  light  new  candle  burn  hour  go  vasily  smart  make  went  candle  new  candle  result  new  candle  used  like  new  candle  vasily  wonder  many  hour  candle  light  room  act  optimally  well  help  find  single  contains  print  single  hour  vasily  light  room
595/A __label__implementation  __label__constructive  algorithms  day  vitaly  wa  going  home  late  night  wondering  many  people  sleeping  moment  estimate  vitaly  decided  look  window  lit  house  wa  passing  moment  vitaly  see  building  floor  window  floor  floor  flat  numbered  consecutive  window  correspond  flat  window  left  right  flat  floor  ha  window  corresponding  row  window  usual  floor  enumerated  bottom  vitaly  think  people  flat  sleeping  moment  least  window  corresponding  flat  ha  light  given  information  window  given  house  task  calculate  flat  according  vitaly  people  sleeping  input  contains  floor  house  flat  floor  respectively  next  describe  floor  top  bottom  character  window  given  floor  ha  light  character  otherwise  print  single  flat  light  least  window  flat  according  vitaly  people  sleeping
850/E __label__math  __label__brute  force  presidential  election  coming  bearland  next  year  everybody  excited  far  candidate  alice  bob  charlie  citizen  bearland  election  result  determine  life  citizen  bearland  many  year  great  responsibility  citizen  choose  order  preference  alice  bob  charlie  uniformly  random  independently  voter  government  bearland  ha  devised  function  help  determine  outcome  election  given  voter  preference  specifically  function  take  boolean  return  boolean  function  obeys  following  property  round  run  pair  candidate  alice  bob  bob  charlie  charlie  alice  round  equal  citizen  prefers  candidate  second  round  otherwise  calculated  candidate  declared  winner  round  second  winner  respectively  define  probability  candidate  round  always  print  value  modulo  contains  next  contains  string  length  representing  function  let  bit  binary  representation  based  digit  string  show  return  value  guaranteed  value  dot  output  answer  problem
1113/B __label__greedy  __label__number  theory  day  sasha  visited  farmer  famous  magnetic  farm  farm  crop  grows  due  influence  special  magnetic  field  maintaining  magnetic  field  provided  machine  power  machine  year  decided  cultivate  new  culture  exactly  say  successful  growth  new  culture  necessary  slightly  change  power  machine  choose  arbitrary  choose  machine  reduce  power  machine  time  time  increase  power  another  machine  time  power  machine  must  stay  positive  note  want  formally  choose  index  divisor  change  power  following  sasha  curious  want  calculate  minimum  total  power  farmer  reach  many  machine  sasha  cope  computation  help  contains  machine  second  contains  power  machine  print  minimum  total  power
725/F __label__greedy  alice  bonnie  sister  like  much  old  family  photo  found  attic  started  argue  receive  photo  end  decided  would  take  turn  picking  photo  alice  go  stack  photo  stack  contains  exactly  photo  turn  player  take  photo  top  stack  photo  described  non  negative  indicating  worth  unit  happiness  alice  unit  happiness  bonnie  value  might  differ  different  photo  allowed  pas  instead  taking  photo  game  end  photo  taken  player  pas  consecutively  player  act  maximize  happiness  instead  player  act  maximize  amount  happiness  exceeds  sister  assuming  player  play  optimal  find  difference  alice  bonnie  happiness  perfectly  played  game  alice  ha  happiness  bonnie  ha  happiness  end  print  input  contains  single  photo  stack  follow  describing  stack  stack  described  space  separated  non  negative  exceeding  describe  top  photo  stack  describe  bottom  photo  stack  output  single  difference  alice  bonnie  happiness  play  optimally
1186/D __label__math  __label__greedy  __label__constructive  algorithms  vus  cossack  ha  real  known  sum  equal  want  choose  sequence  size  sum  either  word  equal  rounded  necessary  round  nearest  example  equal  example  note  difference  always  equal  help  vus  cossack  find  sequence  contains  next  contains  real  guaranteed  ha  exactly  digit  decimal  point  guaranteed  sum  equal  next  print  must  met
838/E __label__dp  given  strictly  convex  polygon  vertex  guaranteed  point  collinear  would  like  take  maximum  non  intersecting  path  polygon  vertex  visit  point  specifically  path  represented  sequence  distinct  polygon  vertex  path  straight  segment  adjacent  vertex  order  segment  allowed  touch  intersect  except  vertex  sequence  given  polygon  print  maximum  length  non  intersecting  path  visit  point  input  single  point  next  denoting  coordinate  vertex  guaranteed  point  listed  clockwise  order  print  single  floating  point  representing  longest  non  intersecting  path  visit  vertex
802/A __label__greedy  search  heidi  finally  found  library  dressed  human  fact  ha  spent  much  time  run  place  job  buy  book  keep  library  people  borrow  read  different  book  numbered  look  library  operation  consecutive  day  heidi  know  advance  day  precisely  person  come  library  request  borrow  book  read  hour  return  book  later  day  heidi  desperately  want  please  guest  make  sure  always  book  available  library  day  night  day  ha  option  going  bookstore  operates  night  avoid  competition  library  buying  book  price  chf  course  already  ha  book  library  doe  need  buy  initially  library  contains  book  problem  though  capacity  library  mean  time  book  library  buying  new  book  would  cause  heidi  book  must  get  rid  book  already  ha  order  make  room  new  book  later  need  book  got  rid  need  buy  book  given  sequence  request  book  minimum  cost  chf  buying  new  book  satisfy  request  input  second  sequence  book  request  single  print  minimum  cost  buying  book  store  satisfy  request
1166/A __label__greedy  student  grade  nlogonia  high  school  principal  wish  split  student  classroom  student  must  exactly  classroom  distinct  student  whose  name  start  letter  chatty  put  classroom  must  lot  common  let  pair  student  split  pair  counted  example  student  olivia  jacob  tanya  jack  oliver  jessica  splitting  classroom  jack  jacob  jessica  tanya  olivia  oliver  give  chatting  pair  classroom  chatting  pair  second  classroom  splitting  classroom  jack  tanya  olivia  jessica  oliver  jacob  give  chatting  pair  classroom  chatting  pair  second  classroom  given  list  name  minimum  obtain  splitting  student  classroom  note  valid  place  student  classroom  leaving  empty  contains  single  student  follow  contains  name  student  guaranteed  name  string  lowercase  english  letter  length  note  multiple  student  share  name  output  must  consist  single  minimum  possible  chatty  pair
303/B __label__math  __label__implementation  given  rectangle  grid  grid  size  n  let  denote  coordinate  system  grid  point  grid  coordinate  pair  task  find  maximum  sub  rectangle  grid  contains  given  point  length  width  ratio  exactly  word  following  condition  must  hold  side  sub  rectangle  parallel  ax  value  multiple  solution  find  rectangle  closest  closest  mean  euclid  distance  center  rectangle  small  possible  still  multiple  solution  find  lexicographically  minimum  lexicographically  minimum  mean  consider  sub  rectangle  sequence  choose  lexicographically  minimum  contains  print  represent  founded  sub  rectangle  whose  left  bottom  point  right  point
358/B __label__brute  force  __label__strings  seryozha  ha  changeable  character  time  refused  leave  room  dima  girlfriend  hame  inna  way  lovebird  always  find  way  communicate  today  writing  text  message  dima  inna  using  secret  code  text  message  dima  want  send  inna  sentence  writes  word  inserting  heart  word  last  word  heart  sequence  character  le  character  digit  applying  code  test  message  look  like  word  word  wordn  encoding  end  dima  insert  random  small  english  character  digit  sign  le  place  message  inna  know  dima  perfectly  well  know  phrase  dima  going  send  beforehand  inna  ha  got  text  message  help  find  dima  encoded  message  correctly  word  find  text  message  could  received  encoding  manner  described  contains  word  dima  message  next  non  empty  word  word  per  word  consist  small  english  letter  total  length  word  exceed  last  contains  non  empty  text  message  inna  ha  got  character  text  message  exceed  text  message  small  english  letter  digit  sign  le  single  print  yes  without  quote  dima  decoded  text  message  correctly  without  quote  otherwise
913/H __label__math  generate  real  follows  real  chosen  independently  uniformly  random  inclusive  given  real  interested  probability  sii  true  simultaneously  shown  represented  coprime  print  value  modulo  contains  next  real  given  digit  decimal  point  print  single  answer  problem
772/A __label__math  __label__binary  search  device  want  use  simultaneously  device  us  unit  power  per  second  usage  continuous  second  device  use  unit  power  device  currently  ha  unit  power  stored  device  store  arbitrary  amount  power  single  charger  plug  single  device  charger  add  unit  power  per  second  device  charging  continuous  plug  device  second  gain  unit  power  switch  device  charging  arbitrary  unit  time  including  real  time  take  switch  negligible  wondering  maximum  amount  time  use  device  hit  unit  power  use  device  indefinitely  print  otherwise  print  maximum  amount  time  device  hit  power  contains  device  power  charger  followed  contains  power  device  amount  power  stored  device  beginning  use  device  indefinitely  print  otherwise  print  maximum  amount  time  device  hit  power
1146/G __label__dp  __label__graphs  planning  build  housing  street  spot  available  street  build  house  spot  labeled  left  right  spot  build  house  height  spot  house  ha  height  gain  dollar  city  ha  zoning  restriction  though  restriction  say  tallest  house  spot  strictly  must  pay  fine  would  like  build  house  maximize  profit  sum  dollar  gained  minus  fine  determine  maximum  profit  possible  contains  spot  maximum  height  restriction  respectively  next  contains  print  single  denoting  maximum  profit  make
1252/J __label__dp  __label__brute  force  talia  ha  bought  abandoned  house  outskirt  jakarta  house  ha  nice  long  yard  represented  dimensional  grid  containing  n  cell  beautify  house  talia  going  build  terrace  yard  tiling  cell  cell  yard  contains  either  soil  represented  character  rock  represented  character  cell  containing  rock  superstitious  person  talia  want  tile  terrace  mystical  tile  power  repel  ghost  type  mystical  tile  type  cover  cell  placed  soil  cell  type  cover  cell  placed  consecutive  soil  cell  type  cover  cell  placed  consecutive  soil  rock  soil  cell  tile  type  type  type  ha  power  repel  ghost  per  day  respectively  mystical  rule  must  followed  power  effective  overlapping  tile  cell  covered  tile  tile  type  limitation  tile  type  type  talia  scared  ghost  thus  terrace  tiled  mystical  tile  able  repel  many  ghost  possible  help  talia  find  maximum  ghost  repelled  per  day  terrace  note  talia  doe  need  tile  cell  yard  long  ghost  repelled  terrace  maximum  begin  containing  representing  cell  maximum  tile  type  ghost  repelled  per  day  tile  type  ghost  repelled  per  day  tile  type  ghost  repelled  tile  type  respectively  next  contains  string  character  representing  yard  character  string  either  represents  soil  cell  represents  rock  cell  rock  cell  output  representing  maximum  ghost  repelled  per  day
1056/C __label__implementation  __label__greedy  __label__sortings  tell  think  say  arkady  bit  old  fashioned  playing  checker  right  modern  computer  game  arkady  friend  keen  discus  rule  feature  important  problem  player  ha  pick  distinct  hero  beginning  game  team  player  hero  distribute  team  team  take  turn  picking  hero  team  chooses  hero  team  second  team  chooses  hero  note  hero  chosen  becomes  unavailable  team  friend  estimate  power  hero  team  want  maximize  total  power  hero  exception  pair  hero  especially  strong  team  chooses  hero  pair  team  must  choose  turn  hero  pair  interactive  problem  write  program  optimally  choose  hero  team  jury  program  play  team  note  jury  program  behave  inefficiently  case  take  opportunity  still  maximize  total  power  team  formally  ever  chance  reach  total  power  greater  regardless  jury  program  choice  must  get  greater  pas  test  contains  player  team  special  pair  hero  second  contains  power  hero  next  contains  b  n  pair  hero  especially  strong  guaranteed  hero  appears  list  next  contains  single  team  play  turn  otherwise  second  turn  hack  order  hack  use  format  described  additional  output  distinct  priority  order  jury  team  jury  team  turn  select  possible  hero  list  possible  mean  taken  doe  contradict  rule  special  pair  hero  turn  print  single  n  index  hero  chosen  note  choose  hero  previously  chosen  either  player  must  follow  rule  special  pair  hero
1096/D __label__dp  vasya  preparing  contest  ha  written  statement  easy  problem  statement  string  length  consisting  lowercase  latin  latter  vasya  think  statement  considered  hard  contains  subsequence  hard  otherwise  statement  easy  example  hard  hzazrzd  haaaaard  considered  hard  statement  har  hart  drah  easy  statement  vasya  want  statement  hard  remove  character  statement  order  make  easy  course  part  statement  crucial  understanding  initially  ambiguity  statement  removing  character  increase  ambiguity  index  character  considered  wa  original  statement  example  delete  character  hard  character  index  still  even  though  delete  string  vasya  want  calculate  minimum  ambiguity  statement  remove  character  possibly  statement  easy  help  recall  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  contains  length  statement  second  contains  string  length  consisting  lowercase  latin  letter  statement  written  vasya  third  contains  print  minimum  possible  ambiguity  statement  vasya  deletes  possibly  character  resulting  statement  easy
737/F __label__math  __label__constructive  algorithms  celebration  stack  dirty  plate  nikita  kitchen  nikita  ha  wash  put  dryer  dryer  plate  placed  stack  plate  size  increase  size  plate  distinct  nikita  ha  much  free  space  specifically  ha  place  stack  plate  therefore  perform  operation  take  plate  top  dirty  stack  wash  put  intermediate  stack  take  plate  top  intermediate  stack  put  stack  dryer  note  performing  operation  plate  put  order  operation  given  size  plate  order  dirty  stack  size  distinct  write  program  determines  whether  nikita  put  plate  increasing  order  dryer  able  program  find  sequence  operation  necessary  optimal  achieve  contains  second  contains  size  plate  order  size  distinct  print  yes  solution  case  second  print  operation  print  operation  per  operation  described  operation  wash  top  place  dirty  stack  put  onto  intermediate  stack  operation  move  top  plate  intermediate  stack  dryer
838/D __label__math  __label__number  theory  airplane  ha  row  front  back  people  boarding  airplane  airplane  ha  entrance  front  back  plane  person  ha  assigned  seat  possible  multiple  people  assigned  seat  people  board  plane  starting  person  person  independently  choose  either  front  entrance  back  entrance  enter  plane  person  walk  plane  walk  directly  assigned  seat  try  sit  occupied  continue  walking  direction  walked  empty  seat  take  earliest  empty  seat  find  get  end  row  without  finding  seat  angry  find  way  assign  ticket  passenger  board  plane  without  anyone  getting  angry  way  different  exists  passenger  chose  different  entrance  way  assigned  seat  different  print  count  modulo  input  seat  passenger  respectively  print  single  way  modulo
1051/A __label__implementation  __label__greedy  __label__strings  vasya  came  password  register  eatforces  string  password  eatforces  string  consisting  lowercase  uppercase  latin  letter  digit  since  eatforces  take  care  security  user  user  password  must  least  digit  least  uppercase  latin  letter  least  lowercase  latin  letter  example  password  abacaba  z  q  r  valid  password  qwerty  qwerty  password  substring  string  string  len  en  len  length  substring  note  empty  string  considered  substring  ha  length  vasya  password  come  weak  security  setting  eatforces  like  password  want  replace  substring  another  string  length  order  satisfy  condition  operation  performed  exactly  chosen  string  minimal  possible  length  note  length  change  replacement  substring  string  lowercase  uppercase  latin  letter  digit  contains  single  testcases  next  contains  initial  password  consisting  lowercase  uppercase  latin  letter  digit  allowed  hack  testcase  print  renewed  password  corresponds  given  condition
1017/F __label__math  __label__brute  force  notice  unusual  memory  limit  war  destroyed  city  neutral  zone  restored  child  went  back  school  war  changed  world  well  education  hard  day  new  math  concept  wa  created  know  logarithm  function  described  log  log  log  log  log  p  p  pka  log  log  aklogk  prime  factorization  problem  function  us  definition  hard  calculate  mathematician  neutral  zone  invented  exlog  exlogf  p  p  pka  f  f  akf  notice  exlog  exlog  always  equal  concept  function  wa  hard  child  teacher  told  polynomial  degree  daily  us  class  forget  homework  exlog  nexlogf  help  child  homework  since  value  big  need  find  answer  modulo  contains  print  answer  modulo
460/B __label__math  __label__implementation  __label__brute  force  __label__number  theory  little  dima  misbehaved  math  lesson  lot  nasty  teacher  pickle  gave  following  problem  punishment  find  solution  equation  predetermined  constant  value  function  determines  sum  digit  decimal  representation  teacher  give  problem  dima  lesson  change  parameter  equation  dima  got  sick  getting  bad  mark  asks  help  solve  challenging  problem  contains  space  separated  print  solution  found  next  print  increasing  order  solution  given  equation  print  solution  larger  strictly  le
952/G __label__constructive  algorithms  problem  write  simple  code  generator  programming  language  derived  brainfuck  code  language  rectangular  grid  character  code  converted  brainfuck  program  follows  character  read  usual  order  top  bottom  left  right  character  converted  brainfuck  instruction  executed  instruction  defined  left  top  right  neighbor  character  using  following  conversion  table  given  string  output  program  described  language  print  string  download  language  interpreter  used  judging  http  asset  codeforces  com  round  puzzling  interpreter  cpp  use  compile  code  note  several  implementation  detail  step  language  interpretation  conversion  brainfuck  program  executed  code  must  rectangular  length  column  character  code  ha  toroidal  topology  top  neighbor  last  brainfuck  interpreter  ha  memory  cell  store  increment  decrement  done  modulo  console  input  command  allowed  brainfuck  code  ha  effect  executed  input  consists  single  string  character  ascii  code  inclusive  length  string  character  inclusive  output  program  described  language  executed  print  given  message
1013/A __label__math  beautiful  garden  stone  innopolis  beautiful  place  pile  stone  numbered  ejoi  participant  visited  place  twice  visited  stone  pile  wa  correspondingly  participant  wrote  sequence  notebook  visited  following  day  stone  pile  wa  equal  participant  wrote  notebook  well  known  every  member  ejoi  jury  night  either  sits  room  come  place  stone  jury  member  come  either  take  stone  move  stone  pile  another  assume  unlimited  jury  member  except  jury  go  place  stone  night  participant  want  know  whether  note  correct  sure  made  mistake  input  file  contains  single  pile  stone  garden  second  contains  separated  space  stone  pile  recorded  notebook  participant  came  place  stone  time  third  contains  separated  space  stone  pile  recorded  notebook  participant  came  place  stone  second  time  record  consistent  output  yes  otherwise  output  quote  clarity
433/E __label__dp  tachibana  kanade  like  mapo  tofu  much  day  canteen  cooked  kind  tofu  sell  tofu  mapo  tofu  spicy  enough  called  mapo  tofu  piece  tofu  canteen  given  based  range  based  every  based  range  exists  piece  tofu  judge  tofu  mapo  tofu  tachibana  kanade  chose  based  string  assigned  value  string  string  appears  tofu  value  string  added  value  tofu  string  appears  multiple  time  value  added  many  time  initially  value  tofu  tachibana  kanade  considers  tofu  value  mapo  tofu  tachibana  kanade  want  know  many  piece  tofu  mapo  tofu  contains  denotes  string  denotes  base  used  denotes  limit  value  mapo  tofu  second  represents  len  en  describing  length  digit  base  follow  len  len  separated  space  representing  digit  highest  digit  alen  lowest  digit  third  represents  format  guaranteed  follow  describing  string  contains  string  value  string  string  described  almost  format  difference  string  necessary  leading  see  example  sum  length  string  doe  exceed  output  piece  mapo  tofu  modulo  answer  decimal
1109/B __label__constructive  algorithms  __label__strings  reading  book  sasha  passion  wa  reading  book  became  acquainted  unusual  character  character  told  like  many  name  many  country  mithrandir  elf  thark  dwarf  ol  rin  wa  youth  west  forgotten  south  inc  nu  north  gandalf  east  moment  sasha  thought  would  character  called  east  east  name  palindrome  string  palindrome  read  backward  forward  example  string  kazak  palindrome  string  abb  sasha  believed  hero  would  named  god  east  long  equal  name  east  people  following  wrote  original  name  string  piece  paper  cut  paper  minimum  time  got  piece  paper  substring  initial  string  unite  piece  together  get  new  string  piece  turned  could  shuffled  way  possible  achive  string  abcdefg  stringabc  using  cut  swapping  paper  substring  abc  string  cbadefg  received  using  cut  formally  sasha  want  given  palindrome  find  minimum  cut  string  part  unite  way  final  string  palindrome  equal  initial  string  answer  print  impossible  without  quote  contains  string  initial  name  consists  lowercase  latin  letter  guaranteed  palindrome  print  minimum  cut  needed  get  new  name  impossible  without  quote
1054/A __label__implementation  masha  life  multi  storey  building  floor  numbered  positive  floor  called  adjacent  differ  masha  decided  visit  egor  masha  life  floor  egor  floor  floor  masha  house  ha  staircase  elevator  masha  us  stair  take  second  walk  adjacent  floor  direction  elevator  pass  adjacent  floor  way  second  elevator  move  door  closed  elevator  spends  second  open  close  door  assume  time  spent  action  except  moving  adjacent  floor  waiting  door  open  close  masha  us  elevator  immediately  go  directly  desired  floor  coming  apartment  floor  masha  noticed  elevator  floor  ha  closed  door  ha  choose  whether  use  stair  use  elevator  time  masha  need  get  egor  floor  stair  strictly  le  time  take  using  elevator  use  stair  otherwise  choose  elevator  help  mary  understand  whether  use  elevator  stair  contains  floor  masha  floor  masha  want  get  floor  elevator  located  time  take  masha  pas  floor  stair  time  take  elevator  pas  floor  time  take  elevator  close  open  door  guaranteed  time  take  use  elevator  greater  time  take  use  stair  print  yes  without  quote  otherwise  print  without  quote
576/A __label__math  __label__number  theory  vasya  petya  playing  simple  game  vasya  thought  petya  try  guess  petya  ask  question  like  unknown  divisible  game  played  following  rule  petya  asks  question  interest  ask  question  vasya  responds  question  yes  receiving  answer  petya  determine  vasya  thought  unfortunately  petya  familiar  theory  help  find  minimum  question  ask  make  guaranteed  guess  vasya  ask  question  single  contains  print  length  sequence  question  followed  question
383/E __label__dp  iahubina  tired  many  complicated  language  decided  invent  new  simple  language  already  made  dictionary  consisting  word  word  sequence  exactly  lowercase  letter  letter  english  alphabet  decided  letter  vowel  others  consonant  whole  language  based  simple  rule  word  contains  least  vowel  correct  iahubina  forgot  letter  vowel  want  find  possible  correct  set  vowel  asks  iahub  question  question  give  iahub  set  letter  considered  vowel  question  question  want  know  many  word  dictionary  correct  considering  given  set  vowel  iahubina  want  know  xor  squared  answer  possible  question  different  question  subset  set  letter  english  alphabet  help  iahub  find  contains  next  contains  word  consisting  lowercase  letter  identical  word  print  xor  squared  answer  query
1102/D __label__greedy  __label__strings  given  string  consisting  exactly  character  character  either  string  called  ternary  string  task  replace  minimum  character  string  character  obtain  balanced  ternary  string  balanced  ternary  string  ternary  string  character  string  equal  character  character  obviously  equal  character  possible  balanced  ternary  string  obtain  lexicographically  alphabetically  smallest  note  neither  remove  character  string  add  character  string  note  replace  given  character  character  guaranteed  answer  exists  input  contains  divisible  character  second  contains  string  consisting  exactly  character  print  string  lexicographically  alphabetically  smallest  balanced  ternary  string  obtained  given  minimum  replacement
583/B __label__implementation  __label__greedy  robot  doc  located  hall  computer  stand  numbered  left  right  computer  contains  exactly  piece  information  doc  want  get  eventually  computer  equipped  security  system  crack  robot  need  collect  least  piece  information  computer  doc  hack  computer  right  next  robot  assembled  using  modern  technology  move  along  computer  either  possible  direction  change  direction  requires  large  amount  resource  doc  tell  minimum  change  direction  robot  make  collect  part  information  initially  next  computer  guaranteed  exists  least  sequence  robot  action  lead  collection  information  initially  doc  piece  information  contains  second  contains  non  negative  separated  space  guaranteed  exists  way  robot  collect  piece  information  print  single  minimum  change  direction  robot  make  order  collect  part  information
402/B __label__implementation  __label__brute  force  queen  england  ha  tree  growing  row  garden  tree  left  ha  height  meter  today  queen  decided  update  scenery  garden  want  tree  height  meet  condition  queen  chose  unfortunately  royal  gardener  machine  fulfill  desire  queen  instantly  minute  gardener  either  decrease  height  tree  positive  height  increase  height  tree  positive  height  royal  gardener  act  fulfill  whim  majesty  minimum  minute  contains  space  separated  second  contains  space  separated  height  tree  row  print  single  minimum  minute  gardener  need  next  print  description  action
457/A __label__math  piegirl  got  bored  binary  decimal  based  counting  system  recently  discovered  interesting  property  particular  think  would  make  good  base  new  unique  system  called  golden  system  golden  system  non  empty  string  containing  digit  decimal  value  expression  equal  soon  piegirl  found  system  property  base  system  operation  performed  able  come  fast  way  comparing  asking  help  given  written  golden  system  notation  determine  ha  larger  decimal  value  consists  contains  non  empty  string  consisting  character  length  string  doe  exceed  print  larger  smaller  equal
1061/D __label__implementation  __label__greedy  __label__data  structures  __label__sortings  show  want  watch  suppose  whole  time  split  equal  part  called  minute  show  going  minute  end  inclusive  need  watch  show  watch  show  air  time  possible  need  multiple  tv  minute  example  segment  intersect  show  watched  simultaneously  start  watching  show  possible  move  another  since  would  distracting  watch  another  show  show  end  rental  shop  near  rent  rupee  charge  rupee  every  extra  minute  keep  order  rent  minute  need  pay  assume  taking  returning  take  time  distract  watching  show  find  minimum  possible  cost  view  show  since  value  could  large  print  modulo  contains  show  cost  rent  minute  cost  rent  every  subsequent  minute  next  contains  denoting  start  end  minute  show  print  exactly  minimum  cost  view  show  taken  modulo
993/A __label__implementation  __label__geometry  given  square  side  parallel  coordinate  ax  another  side  degree  coordinate  ax  find  whether  square  intersect  interior  square  considered  part  square  square  completely  inside  another  intersect  square  share  common  point  considered  intersect  input  data  consists  square  containing  pair  pair  represents  coordinate  vertex  square  coordinate  either  clockwise  counterclockwise  order  contains  coordinate  square  side  parallel  coordinate  ax  second  contains  coordinate  square  degree  value  print  yes  square  intersect  otherwise  print
747/C __label__implementation  server  laboratory  perform  task  server  ha  unique  known  day  task  come  characterized  moment  second  task  come  server  needed  perform  time  needed  perform  task  second  distinct  perform  task  need  server  unoccupied  second  server  begin  perform  task  busy  next  second  thus  busy  second  performing  task  server  smallest  id  chosen  unoccupied  server  second  enough  unoccupied  server  task  ignored  write  program  determines  task  performed  ignored  contains  positive  server  task  next  contains  contains  moment  second  task  come  server  needed  perform  time  needed  perform  task  second  task  given  chronological  order  come  distinct  second  print  task  performed  server  print  sum  server  id  task  performed  otherwise  print
858/A __label__math  __label__brute  force  __label__number  theory  given  positive  denote  rounding  minimum  positive  end  base  divisible  example  rounding  minimum  end  divisible  write  program  perform  rounding  contains  print  rounding
610/A __label__math  pasha  ha  wooden  stick  positive  length  want  perform  exactly  cut  get  part  stick  part  must  positive  length  sum  length  obviously  pasha  like  rectangle  hate  square  wonder  many  way  split  stick  part  possible  form  rectangle  using  part  impossible  form  square  task  help  pasha  count  way  way  cut  stick  considered  distinct  exists  part  length  way  differ  part  length  second  way  input  contains  positive  length  pasha  stick  output  single  way  split  pasha  stick  part  positive  length  possible  make  rectangle  connecting  end  part  impossible  form  square
1228/C __label__math  __label__number  theory  let  introduce  definition  needed  later  let  prime  set  prime  divisor  example  prime  prime  let  maximum  possible  divisible  example  divisible  divisible  divisible  divisible  let  product  prime  example  calculate  f  mod  contains  used  formula  print  answer
812/B __label__dp  __label__brute  force  people  leave  light  workplace  leave  waste  resource  hausmeister  dhbw  sagheer  wait  till  student  professor  leave  university  building  go  turn  light  building  consists  floor  stair  left  right  side  floor  ha  room  corridor  connects  left  right  stair  passing  room  word  building  represented  rectangle  row  column  last  column  represent  stair  column  middle  represent  room  sagheer  standing  ground  floor  left  stair  want  turn  light  way  upstairs  light  floor  standing  course  sagheer  must  visit  room  turn  light  take  minute  sagheer  next  floor  using  stair  move  current  room  stair  neighboring  room  stair  floor  take  time  switch  light  room  currently  standing  help  sagheer  find  minimum  total  time  turn  light  note  sagheer  doe  back  starting  position  doe  visit  room  light  already  switched  contains  floor  room  floor  respectively  next  contains  building  description  contains  binary  string  length  representing  floor  left  stair  room  right  stair  indicates  light  indicates  light  floor  listed  top  bottom  last  represents  ground  floor  last  character  string  represent  left  right  stair  respectively  always  print  single  minimum  total  time  needed  turn  light
1210/G __label__dp  mateusz  like  travel  visit  saint  computersburg  much  left  sightsee  decided  escape  room  friend  team  ha  solved  riddle  flawlessly  riddle  remaining  huge  circular  table  weighing  scale  lying  top  table  distributed  along  circle  scale  adjacent  exactly  scale  scale  adjacent  well  scale  scale  initially  contains  heavy  coin  mateusz  perform  move  move  consists  fetching  single  coin  scale  putting  adjacent  scale  turn  riddle  solved  specific  amount  coin  scale  specifically  scale  ha  parameter  coin  lie  single  scale  scale  contains  least  coin  riddle  solved  mateusz  team  win  mateusz  aiming  best  possible  time  therefore  want  solved  riddle  quickly  possible  minimum  possible  move  required  fulfill  condition  contains  weighing  scale  circle  following  describe  scale  describes  scale  consists  guaranteed  riddle  solvable  output  minimum  operation  required  solve  riddle
1097/B __label__dp  __label__brute  force  petr  ha  bought  new  car  arrived  known  petersburg  petrol  station  refuel  suddenly  discovered  petrol  tank  secured  combination  lock  lock  ha  scale  degree  pointer  initially  point  petr  called  car  dealer  instructed  rotate  lock  wheel  exactly  time  rotation  degree  either  clockwise  counterclockwise  rotation  pointer  point  confused  petr  little  bit  sure  rotation  done  clockwise  done  counterclockwise  many  possible  way  rotating  lock  help  find  whether  exists  least  rotation  pointer  point  contains  rotation  following  contains  angle  rotation  degree  possible  rotation  pointer  point  performed  print  single  word  yes  otherwise  print  petr  probably  buy  new  car  case
356/B __label__math  __label__implementation  xenia  amateur  programmer  today  lesson  learned  hamming  distance  hamming  distance  string  equal  length  value  record  sii  iverson  notation  represents  following  sii  otherwise  xenia  want  calculate  hamming  distance  long  string  string  concatenation  copy  string  second  string  concatenation  copy  string  help  xenia  calculate  required  hamming  distance  given  contains  second  contains  non  empty  string  third  contains  non  empty  string  string  consist  lowercase  english  letter  guaranteed  string  obtain  input  length  print  single  required  hamming  distance
452/D __label__implementation  __label__greedy  piece  laundry  want  wash  dry  fold  laundromat  ha  washing  machine  drying  machine  folding  machine  machine  process  piece  laundry  time  dry  piece  laundry  washed  fold  dried  moreover  piece  laundry  washed  need  immediately  moved  drying  machine  dried  need  immediately  moved  folding  machine  take  minute  wash  piece  laundry  washing  machine  minute  dry  drying  machine  minute  fold  folding  machine  find  smallest  minute  enough  wash  dry  fold  laundry  input  contains  print  smallest  minute  laundry
482/A __label__greedy  __label__constructive  algorithms  permutation  ordered  set  n  consisting  distinct  positive  larger  denote  length  permutation  n  task  find  permutation  length  group  ha  exactly  distinct  element  single  input  contains  space  separated  positive  print  forming  permutation  multiple  answer  print
1250/H __label__math  set  birthday  cake  candle  candle  represents  digit  inclusive  example  birthday  cake  candle  let  denote  candle  representing  digit  candle  set  contains  instance  candle  instance  candle  total  candle  digit  needed  wish  cat  happy  birthday  birthday  starting  want  compose  age  cat  using  digit  set  since  light  candle  short  time  candle  time  burn  reason  reuse  candle  arbitrary  time  therefore  set  candle  never  change  example  instance  digit  compose  using  set  compose  determine  birthday  compose  age  cat  using  candle  set  word  find  minimum  composed  digit  set  composed  contains  test  case  input  test  case  contains  candle  candle  candle  guaranteed  sum  input  doe  exceed  test  case  output  single  minimum  age  composed  candle  set  please  note  age  quite  large  exceed  standard  bit  type  programming  language
1215/C __label__greedy  __label__constructive  algorithms  monocarp  ha  got  string  equal  length  string  consist  lowercase  latin  letter  monocarp  want  make  string  equal  following  operation  time  choose  index  string  choose  index  string  swap  determine  minimum  operation  monocarp  ha  perform  make  equal  print  optimal  sequence  operation  say  impossible  make  string  equal  contains  length  second  contains  string  consisting  character  third  contains  string  consisting  character  impossible  make  string  equal  print
690/F2 __label__trees  __label__constructive  algorithms  heidi  got  tired  deciphering  prophecy  hidden  tree  life  decided  back  headquarters  rest  little  try  course  uproot  tree  take  made  drawing  tree  piece  paper  second  thought  made  identical  drawing  total  vertex  tree  life  know  might  happen  indeed  way  back  heidi  wa  ambushed  group  zombie  managed  fend  damaged  drawing  peculiar  way  copy  vertex  numbered  wa  removed  along  adjacent  edge  picture  zombie  erased  vertex  relabeled  remaining  vertex  arbitrarily  using  fortunately  vertex  still  ha  distinct  drawing  arbitrarily  shuffled  reordered  heidi  want  recover  tree  life  description  drawing  list  edge  input  contains  z  test  case  description  single  test  case  follow  test  case  input  contains  drawing  following  description  drawing  given  description  drawing  containing  edge  drawing  followed  describing  edge  contains  space  separated  vertex  connected  edge  heidi  drawing  possibly  come  single  tree  output  word  otherwise  output  containing  word  yes  describing  tree  heidi  drawing  could  come  every  edge  output  vertex  connects  separated  single  space  many  solution  print
845/B __label__implementation  __label__greedy  __label__brute  force  luba  ha  ticket  consisting  digit  move  choose  digit  position  replace  arbitrary  digit  want  know  minimum  digit  need  replace  order  make  ticket  lucky  ticket  considered  lucky  sum  digit  equal  sum  last  digit  given  string  consisting  character  character  digit  string  denotes  luba  ticket  ticket  start  digit  print  minimum  possible  digit  luba  need  replace  make  ticket  lucky
448/C __label__dp  __label__greedy  bizon  champion  attentive  hardworking  bizon  champion  decided  paint  old  fence  favorite  color  orange  fence  represented  vertical  plank  put  row  adjacent  plank  gap  plank  numbered  left  right  starting  plank  ha  width  meter  height  meter  bizon  champion  bought  brush  shop  brush  width  meter  make  vertical  horizontal  stroke  brush  stroke  brush  full  surface  must  touch  fence  time  see  sample  better  understanding  minimum  stroke  bizon  champion  fully  paint  fence  note  allowed  paint  area  fence  multiple  time  contains  fence  plank  second  contains  space  separated  print  single  minimum  stroke  needed  paint  whole  fence
766/E __label__math  __label__dp  __label__data  structures  __label__dfs  __label__trees  __label__constructive  algorithms  mahmoud  ehab  live  country  city  numbered  connected  undirected  road  guaranteed  reach  city  using  road  city  ha  attached  define  distance  city  city  xor  attached  city  path  including  word  value  attached  city  path  form  array  length  distance  bitwise  xor  operation  mahmoud  ehab  want  choose  city  make  journey  another  index  start  city  always  le  equal  index  finish  city  start  finish  city  case  distance  equal  attached  city  determine  city  try  every  city  start  every  city  greater  index  finish  want  know  total  distance  pair  city  contains  city  mahmoud  ehab  country  second  contains  represent  attached  city  attached  city  next  contains  u  denoting  undirected  road  city  guaranteed  reach  city  using  road  output  denoting  total  distance  pair  city
659/D __label__math  __label__implementation  __label__geometry  maria  participates  bicycle  race  speedway  take  place  shore  lake  lucerne  repeating  contour  know  lake  shore  consists  straight  section  directed  north  south  east  west  let  introduce  system  coordinate  directing  axis  west  east  axis  south  north  starting  position  race  southernmost  point  track  selected  several  point  western  participant  start  race  moving  north  straight  section  track  participant  travel  direction  north  south  east  west  change  direction  movement  bend  straight  section  participant  course  never  turn  back  change  direction  movement  north  south  east  west  vice  versa  maria  still  young  doe  feel  confident  turn  namely  maria  feel  insecure  failed  untimely  turn  get  water  word  maria  considers  turn  dangerous  immediately  get  water  ignored  help  maria  get  ready  competition  determine  dangerous  turn  track  input  contains  straight  section  track  following  contains  pair  point  starting  position  straight  section  track  begin  point  end  point  guaranteed  straight  section  directed  north  southernmost  several  western  point  track  point  last  point  coincides  start  position  pair  straight  section  track  ha  shared  point  except  neighboring  share  exactly  point  pair  point  except  last  adjacent  straight  section  directed  direction  opposite  direction  print  single  dangerous  turn  track
361/B __label__math  __label__constructive  algorithms  __label__number  theory  levko  love  permutation  much  permutation  length  sequence  distinct  positive  let  assume  value  gcd  show  greatest  common  divisor  levko  assumes  element  permutation  good  gcd  levko  considers  permutation  beautiful  ha  exactly  good  element  unfortunately  know  beautiful  permutation  task  help  find  least  single  contains  single  print  either  beautiful  permutation  permutation  exist
452/F __label__data  structures  given  permutation  determine  whether  pair  element  note  usual  division  permutation  consists  single  size  permutation  second  contains  permutation  print  yes  pair  exists  otherwise  case  without  quote  answer  case  insensitive
699/B __label__implementation  given  description  depot  rectangular  checkered  field  n  size  cell  field  empty  occupied  wall  bomb  lay  bomb  cell  triggering  wipe  wall  row  wall  column  determine  possible  wipe  wall  depot  placing  triggering  exactly  bomb  bomb  laid  empty  cell  cell  occupied  wall  contains  positive  row  column  depot  field  next  symbol  description  field  symbol  stand  cell  symbol  equal  corresponding  cell  empty  otherwise  equal  corresponding  cell  occupied  wall  impossible  wipe  wall  placing  triggering  exactly  bomb  print  without  quote
1016/G __label__math  __label__number  theory  since  next  season  coming  like  form  team  participant  candidate  candidate  ha  rank  weird  requirement  teammate  rank  chosen  candidate  gcd  lcm  must  met  experienced  change  rank  non  negative  tied  birthdate  fixed  want  know  many  pair  exists  meeting  following  constraint  gcd  lcm  possible  form  team  gcd  greatest  common  divisor  lcm  least  common  multiple  contains  candidate  corresponding  constant  second  contains  space  separated  rank  candidate  print  pair  exists  meeting  following  constraint  gcd  lcm  possible
813/D __label__dp  alice  beginner  composer  ready  create  another  masterpiece  even  single  time  alice  ha  sheet  note  written  want  take  non  empty  non  intersecting  subsequence  form  melody  sum  length  maximal  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  subsequence  form  melody  adjacent  note  either  differs  congruent  modulo  write  program  calculate  maximum  sum  length  non  empty  non  intersecting  subsequence  form  melody  contains  second  contains  note  written  sheet  print  maximum  sum  length  non  empty  non  intersecting  subsequence  form  melody
1004/B __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  sonya  decided  organize  exhibition  flower  since  girl  like  rose  lily  decided  kind  flower  exhibition  flower  row  exhibition  sonya  put  either  rose  lily  position  thus  position  exactly  flower  rose  lily  know  exactly  people  visit  exhibition  visitor  visit  flower  inclusive  girl  know  segment  ha  beauty  equal  product  rose  lily  sonya  want  exhibition  liked  lot  people  want  put  flower  way  sum  beauty  segment  would  maximum  possible  contains  flower  visitor  respectively  next  contains  meaning  visitor  visit  flower  inclusive  print  string  character  symbol  want  put  rose  position  otherwise  want  put  lily
493/D __label__math  __label__constructive  algorithms  vasya  decided  learn  play  chess  classic  chess  seem  interesting  play  sort  chess  queen  piece  capture  square  vertical  horizontal  diagonal  cell  located  vertical  horizontal  diagonal  queen  cell  contains  piece  enemy  color  queen  able  move  square  enemy  piece  removed  board  queen  move  cell  containing  enemy  piece  piece  queen  n  chessboard  denote  cell  intersection  row  column  square  contains  white  queen  square  contains  black  queen  square  green  pawn  belong  anyone  player  move  turn  player  move  play  white  queen  opponent  play  black  queen  move  player  ha  capture  piece  queen  move  square  contains  either  green  pawn  enemy  queen  player  loses  either  capture  piece  move  opponent  took  queen  previous  move  help  vasya  determine  win  player  play  optimal  strategy  board  n  input  contains  single  size  board  print  answer  problem  string  white  string  black  depending  win  player  play  optimally
988/F __label__dp  polycarp  life  coordinate  point  go  friend  life  point  polycarp  move  left  right  pas  unit  length  second  raining  segment  way  rain  formally  raining  non  intersecting  segment  segment  rain  represented  umbrella  lying  umbrella  located  point  ha  weight  polycarp  begin  journey  umbrella  journey  polycarp  pick  throw  away  umbrella  polycarp  pick  throw  umbrella  instantly  carry  umbrella  moment  time  polycarp  want  get  wet  must  carry  least  umbrella  move  segment  rain  exists  condition  requirement  example  possible  without  umbrella  point  rain  segment  start  pick  umbrella  point  move  along  umbrella  polycarp  swap  umbrella  rain  unit  length  passed  increase  polycarp  fatigue  sum  weight  umbrella  carry  moving  polycarp  make  way  point  point  yes  find  minimum  total  fatigue  reaching  polycarp  pick  throw  away  umbrella  optimally  contains  point  polycarp  friend  life  segment  rain  umbrella  next  contains  border  segment  rain  guaranteed  pair  intersecting  segment  word  pair  segment  either  next  contains  location  weight  umbrella  print  without  quote  polycarp  make  way  point  point  otherwise  print  minimum  total  fatigue  reaching  polycarp  pick  throw  away  umbrella  optimally
1080/E __label__strings  sonya  birthday  recently  wa  presented  matrix  size  nm  consist  lowercase  latin  letter  assume  row  numbered  bottom  top  column  numbered  left  right  let  call  submatrix  element  matrix  sonya  state  submatrix  beautiful  independently  reorder  character  row  column  row  column  submatrix  form  palidroms  let  recall  string  called  palindrome  read  left  right  right  left  example  string  abacaba  bcaacb  palindrome  string  abca  acbba  help  sonya  find  beautiful  submatrixes  submatrixes  different  element  belongs  submatrix  contains  matrix  dimension  next  contains  lowercase  latin  letter  print  beautiful  submatrixes
457/D __label__math  game  bingo  played  square  grid  filled  distinct  problem  consider  generalized  version  played  n  grid  distinct  player  begin  selecting  randomly  generated  bingo  grid  generated  uniformly  available  grid  distinct  called  random  called  uniformly  available  set  called  appears  grid  player  mark  cell  score  end  raised  power  completely  marked  row  plus  completely  marked  column  determine  expected  value  score  expected  score  large  expected  score  larger  print  instead  example  e  without  quote  consist  n  n  print  smaller  expected  score  answer  must  correct  absolute  relative  error
735/C __label__math  __label__greedy  __label__constructive  algorithms  famous  brazil  city  rio  janeiro  hold  tennis  tournament  ostap  bender  want  miss  event  player  participating  tournament  follow  knockout  rule  game  mean  someone  loses  game  leaf  tournament  immediately  organizer  still  arranging  tournament  grid  order  game  happen  going  play  already  fixed  rule  player  play  game  ha  already  played  differs  game  ha  already  played  course  player  win  game  order  continue  participating  tournament  tournament  started  audience  bit  bored  ostap  decided  find  maximum  game  winner  tournament  take  part  assuming  rule  used  unlikely  deal  problem  without  help  input  contains  single  player  participate  tournament  print  maximum  game  winner  tournament  take  part
359/D __label__math  __label__data  structures  __label__brute  force  __label__binary  search  simon  ha  array  consisting  positive  today  simon  asked  find  pair  following  condition  hold  l  divisible  value  take  maximum  value  pair  condition  true  help  simon  find  required  pair  multiple  required  pair  find  contains  second  contains  space  separated  print  required  pair  maximum  value  following  print  value  optimal  pair  increasing  order
660/F __label__data  structures  __label__binary  search  __label__geometry  limak  old  brown  bear  often  go  bowling  friend  today  feel  really  good  try  beat  record  rolling  ball  get  score  maybe  negative  point  score  roll  multiplied  score  summed  roll  score  total  score  total  score  roll  limak  made  roll  got  score  want  maximize  total  score  came  interesting  idea  say  roll  warm  focused  last  roll  formally  cancel  prefix  suffix  sequence  allowed  cancel  roll  cancel  none  total  score  calculated  non  canceled  roll  non  canceled  roll  ha  score  multiplied  second  ha  score  multiplied  till  last  non  canceled  roll  maximum  total  score  limak  get  contains  single  total  roll  made  limak  second  contains  score  limak  roll  print  maximum  possible  total  score  cancelling  roll
119/C __label__dp  another  education  system  reform  ha  carried  berland  recently  innovation  follows  academic  year  consists  day  day  pupil  study  exactly  subject  besides  subject  studied  day  lesson  subject  pupil  get  home  task  contains  le  exercise  besides  subject  ha  special  attribute  complexity  school  make  timetable  considering  following  condition  satisfied  timetable  subject  order  complexity  strict  increasing  day  except  task  either  time  exercise  compared  previous  day  formally  let  call  home  task  exercise  day  either  must  true  total  exercise  home  task  maximal  possible  limitation  separately  set  school  turned  many  case  reach  berland  minister  education  famous  love  half  measure  value  exceed  happened  berland  school  nevertheless  school  principal  still  work  timetable  next  academic  year  contains  represent  day  academic  year  subject  parameter  correspondingly  following  contains  description  subject  ii  limitation  exercise  subject  complexity  subject  correspondingly  distinct  subject  complexity  subject  numbered  please  use  lld  specificator  read  write  bit  preferred  use  cin  stream  specificator  valid  solution  exists  print  single  word  without  quote  otherwise  word  yes  without  quote  next  timetable  satisfies  condition  positive  subject  study  day  home  task  exercise  given  subject  timetable  exactly  subject
641/A __label__implementation  little  artem  found  grasshopper  brought  house  constructed  jumping  area  area  look  like  strip  cell  cell  contains  direction  next  jump  length  jump  grasshopper  start  cell  follows  instruction  written  cell  grasshopper  stop  immediately  jump  strip  artem  want  find  ever  happen  input  contains  single  length  strip  next  contains  string  length  consists  character  provide  direction  jump  corresponding  cell  next  contains  length  jump  cell  print  infinite  without  quote  grasshopper  continue  jump  forever  otherwise  print  finite  without  quote
687/B __label__math  __label__number  theory  today  pari  arya  playing  game  called  remainder  pari  chooses  positive  tell  arya  arya  find  value  ancient  pari  ha  tell  arya  arya  want  given  ancient  value  tell  arya  ha  winning  strategy  independent  value  formally  true  arya  understand  value  positive  note  mean  remainder  dividing  input  contains  k  ancient  value  chosen  pari  second  contains  print  yes  without  quote  arya  ha  winning  strategy  independent  value  without  quote  otherwise
439/E __label__math  __label__dp  today  devu  birthday  celebrating  occasion  bought  sweet  nearby  market  ha  invited  friend  would  like  distribute  sweet  nice  guy  occasion  great  want  friend  sad  would  ensure  give  least  sweet  friend  want  celebrate  unique  style  would  like  ensure  following  condition  distribution  sweet  assume  ha  distributed  sweet  friend  ith  friend  given  sweet  want  make  sure  positive  divide  every  please  find  way  distribute  sweet  friend  required  way  note  order  distribution  important  example  distinct  distribution  answer  could  large  output  answer  modulo  make  problem  interesting  given  query  query  contains  pair  query  please  output  required  way  modulo  contains  representing  query  next  contains  space  space  separated  query  output  single  corresponding  answer  query
952/C __label__implementation  everybody  know  spaghetti  sort  decided  implement  analog  sorting  algorithm  survey  pantry  realize  spaghetti  type  pasta  ravioli  going  let  stop  come  following  algorithm  array  build  stack  ravioli  image  show  stack  arrange  stack  row  order  corresponding  appear  input  array  find  tallest  several  stack  maximal  height  use  leftmost  remove  add  height  end  output  array  shift  stack  row  gap  repeat  procedure  stack  removed  happy  algorithm  try  input  realize  always  produce  right  sorted  array  turn  stack  ravioli  next  step  process  differ  height  top  ravioli  taller  stack  slide  top  lower  stack  given  input  array  figure  whether  described  algorithm  sort  correctly  input  contains  single  size  array  second  input  contains  space  separated  element  array  output  yes  array  sorted  using  described  procedure
869/C __label__math  __label__dp  playing  duty  ally  justice  nii  chan  ally  justice  onii  chan  hand  joined  everywhere  speed  faster  thought  time  fire  sister  karen  tsukihi  heading  somewhere  never  reached  water  surrounded  island  cluster  island  conveniently  coloured  red  blue  purple  cluster  consist  distinct  island  respectively  bridge  built  possibly  none  island  bridge  bidirectionally  connects  different  island  ha  length  island  colour  either  reached  bridge  shortest  distance  least  apparently  order  prevent  oddity  spreading  quickly  inside  cluster  fire  sister  ready  unknown  like  test  courage  figure  different  way  build  bridge  constraint  give  answer  modulo  way  considered  different  pair  island  exist  bridge  input  contains  space  separated  island  red  blue  purple  cluster  respectively  output  containing  different  way  build  bridge  modulo
626/F __label__dp  student  class  working  group  project  student  divide  group  student  group  alone  work  independent  piece  discus  result  together  take  student  minute  finish  independent  piece  student  work  different  pace  frustrating  faster  student  stressful  slower  particular  imbalance  group  defined  maximum  group  minus  minimum  group  note  group  containing  single  student  ha  imbalance  many  way  student  divide  group  total  imbalance  group  division  considered  distinct  exists  pair  student  work  group  division  different  group  contains  space  separated  student  maximum  total  imbalance  allowed  respectively  second  contains  space  separated  time  take  student  complete  independent  piece  work  print  single  way  student  form  group  answer  large  print  value  modulo
120/B __label__implementation  team  quiz  game  called  popular  berland  game  centered  team  competing  team  expert  versus  team  audience  person  audience  asks  question  expert  allowed  minute  brainstorming  finding  right  answer  question  take  answer  typical  question  general  knowledge  common  logic  question  sent  audience  envelops  lain  circle  round  table  envelop  marked  name  asker  town  question  positioned  separate  sector  centre  table  spinning  arrow  thus  table  rather  resembles  roulette  table  ball  spinning  arrow  instead  host  set  spinning  arrow  choose  question  expert  arrow  stop  spinning  question  pointing  chosen  arrow  point  question  ha  already  asked  host  chooses  next  unanswered  question  clockwise  direction  task  determine  next  asked  question  arrow  point  sector  contains  positive  sector  table  sector  arrow  pointing  second  contains  question  sector  ha  already  asked  question  sector  asked  sector  given  clockwise  order  sector  follows  print  single  sector  containing  question  expert  asked  guaranteed  answer  exists  question  already  asked
518/F __label__dp  __label__implementation  __label__brute  force  __label__binary  search  certain  meeting  ruling  party  minister  pavel  suggested  improve  sewer  system  create  new  pipe  city  city  n  rectangular  squared  field  square  field  either  empty  pipe  occupied  pipe  square  empty  square  denoted  character  occupied  square  denoted  character  pipe  must  meet  following  criterion  pipe  polyline  width  pipe  go  empty  square  pipe  start  edge  field  corner  square  pipe  end  edge  field  corner  square  pipe  ha  turn  degree  border  square  field  must  share  exactly  square  pipe  pipe  look  like  single  segment  end  point  pipe  must  lie  distinct  edge  field  non  border  square  pipe  exacly  side  adjacent  square  belong  pipe  border  square  pipe  exactly  side  adjacent  cell  belongs  pipe  sample  allowed  piping  route  sample  forbidden  piping  route  sample  pipe  represented  character  asked  write  program  calculates  distinct  way  make  exactly  pipe  city  way  make  pipe  considered  distinct  distinct  least  square  input  contains  height  width  berland  map  next  contains  character  map  city  square  map  marked  character  square  empty  pipe  square  map  marked  character  square  full  pipe  output  print  single  distinct  way  create  pipe
382/B __label__math  __label__binary  search  arthur  alexander  buster  today  got  competition  arthur  took  group  alexander  took  arthur  alexander  use  distinct  approach  bustings  alexander  regular  guy  second  subtracts  word  performs  assignment  arthur  sophisticated  guy  second  arthur  performs  complex  operation  described  follows  b  perform  assignment  perform  consecutive  assignment  got  determine  alexander  get  ahead  arthur  guy  start  performing  operation  time  assume  alexander  got  ahead  arthur  c  contains  print  single  minimum  time  second  alexander  need  get  ahead  arthur  prove  described  situation  always  occurs  problem  limit
407/C __label__math  __label__implementation  __label__brute  force  got  array  consisting  moreover  query  query  described  query  mean  add  element  lii  record  mean  binomial  coefficient  combination  element  group  element  need  fulfil  consecutively  query  print  final  array  contains  second  contains  initial  array  next  query  format  element  segment  add  ii  print  value  element  query  value  rather  large  print  modulo
731/B __label__greedy  __label__constructive  algorithms  programming  competition  season  ha  already  started  time  train  icpc  sereja  coach  team  year  know  get  ready  training  session  enough  prepare  problem  editorial  training  session  last  several  hour  team  become  hungry  thus  sereja  order  pizza  eat  right  end  competition  team  plan  train  time  consecutive  day  training  session  sereja  order  exactly  pizza  team  present  day  already  know  team  day  type  discount  sereja  favourite  pizzeria  discount  work  buy  pizza  day  second  coupon  allows  buy  pizza  consecutive  day  pizza  total  sereja  order  really  lot  pizza  place  golden  client  use  unlimited  discount  coupon  type  day  sereja  want  order  exactly  pizza  day  using  discount  coupon  note  never  buy  pizza  need  particular  day  help  determine  whether  buy  proper  amount  pizza  day  allowed  use  coupon  discount  note  prohibited  active  coupon  end  day  input  contains  single  training  session  second  contains  team  present  day  way  order  pizza  using  coupon  discount  buy  extra  pizza  day  print  yes  without  quote  output  otherwise  print  without  quote
1141/F1 __label__greedy  problem  given  edition  differ  exclusively  constraint  given  array  block  sequence  contiguous  consecutive  element  thus  block  defined  pair  index  find  set  block  intersect  disjoint  formally  pair  block  either  block  sum  element  formally  block  set  maximum  formally  doe  exist  set  block  satisfying  requirement  picture  corresponds  example  blue  box  illustrate  block  write  program  find  set  block  contains  length  given  array  second  contains  sequence  element  print  following  block  per  print  pair  index  bound  block  print  block  order  multiple  answer  print
630/E __label__math  developing  tool  creation  location  map  turn  based  fight  new  game  petya  faced  following  problem  field  map  consists  hexagonal  cell  since  location  size  going  big  game  designer  want  tool  quick  filling  field  part  identical  enemy  unit  action  look  like  following  game  designer  select  rectangular  area  map  cell  whose  center  belongs  selected  rectangle  filled  enemy  unit  formally  game  designer  selected  cell  coordinate  x  cell  center  coordinate  x  filled  orthogonal  coordinate  system  set  cell  side  parallel  axis  hexagon  center  coordinate  cell  center  coordinate  cell  center  coordinate  guaranteed  difference  divisible  working  problem  petya  decided  painting  selected  unit  want  output  unit  painted  map  help  implement  counting  unit  painting  input  contains  coordinate  center  cell  output  cell  filled
566/B __label__greedy  __label__constructive  algorithms  large  software  company  develops  social  network  analyst  found  holiday  major  sporting  event  significant  event  user  begin  enter  network  frequently  resulting  great  load  increase  infrastructure  part  task  assume  social  network  process  running  server  server  absolutely  identical  machine  ha  volume  ram  process  take  ram  server  time  need  maintaining  viability  server  take  megabyte  ram  thus  server  different  process  social  network  server  running  exactly  process  moment  peak  load  sometimes  necessary  replicate  existing  process  creating  new  process  instead  old  formally  set  replication  rule  n  ha  form  ai  server  mean  instead  old  process  running  server  appear  new  copy  process  running  server  new  replicated  process  server  equal  even  server  original  process  wa  equal  implementation  rule  ai  process  server  destroyed  appears  process  server  appears  process  server  set  rule  destroying  original  process  server  creating  application  replicated  process  besides  server  exactly  process  rule  applied  consecutively  therefore  amount  ram  server  imposes  limitation  procedure  application  rule  according  set  rule  determine  order  want  apply  rule  given  time  memory  server  contained  process  old  new  together  tell  impossible  input  contains  server  social  network  next  rule  replicating  process  n  form  describes  rule  ai  guaranteed  server  occurs  time  set  time  set  unites  required  order  performing  rule  doe  exist  print  without  quote
1148/A __label__greedy  let  call  string  good  consists  type  letter  every  consecutive  letter  distinct  example  baba  aba  good  string  abb  bad  string  string  string  string  want  choose  subset  string  concatenate  arbitrarily  order  length  longest  good  string  obtain  way  contains  positive  string  respectively  print  single  maximum  possible  length  good  string  obtain
1117/D __label__math  __label__dp  reziba  ha  many  magic  gem  magic  gem  split  normal  gem  amount  space  magic  normal  gem  take  unit  normal  gem  split  reziba  want  choose  set  magic  gem  split  total  space  occupied  resulting  set  gem  unit  magic  gem  chosen  split  take  unit  space  since  split  gem  magic  gem  split  take  unit  many  different  configuration  resulting  set  gem  reziba  total  amount  space  taken  unit  print  answer  modulo  configuration  considered  different  magic  gem  reziba  take  form  differs  index  gem  reziba  ha  split  differ  input  contains  single  consisting  print  total  configuration  resulting  set  gem  given  total  amount  space  taken  unit  print  answer  modulo
1084/A __label__implementation  __label__brute  force  fair  nut  life  story  house  people  live  floor  house  every  person  us  elevator  twice  day  get  floor  life  ground  floor  get  floor  floor  life  come  back  home  evening  wa  decided  elevator  used  stay  floor  chosen  person  need  get  floor  floor  elevator  follows  simple  algorithm  move  floor  initially  stay  floor  take  passenger  move  floor  floor  let  passenger  equal  elevator  open  close  door  still  come  floor  floor  move  floor  back  elevator  never  transpose  person  always  go  back  floor  transposing  next  passenger  elevator  spends  unit  electricity  move  neighboring  floor  moving  floor  floor  requires  unit  electricity  task  help  nut  find  minimum  electricity  unit  would  enough  day  choosing  optimal  floor  forget  elevator  initially  stay  floor  contains  floor  second  contains  people  floor  single  print  answer  problem  minimum  electricity  unit
793/B __label__implementation  __label__dfs  __label__graphs  woken  alarm  clock  igor  financial  analyst  hurried  work  ate  breakfast  sat  car  sadly  opened  gps  navigator  found  road  bankopolis  city  life  closed  due  road  work  moreover  igor  ha  problem  steering  wheel  make  turn  way  office  bank  bankopolis  look  like  grid  row  column  igor  find  way  home  bank  ha  turn  cell  road  work  determine  impossible  work  home  turn  change  movement  direction  igor  car  move  left  right  upwards  downwards  initially  igor  choose  direction  igor  still  sleepy  help  contains  row  column  grid  next  contains  character  denoting  corresponding  row  grid  following  character  occur  empty  cell  cell  road  work  cell  igor  home  located  cell  igor  office  located  guaranteed  appear  exactly  print  yes  path  igor  home  igor  office  turn  otherwise
1209/G2 __label__data  structures  harder  version  problem  version  q  sequence  called  nice  element  arranged  block  like  formally  element  equal  everything  must  equal  let  define  difficulty  sequence  minimum  possible  element  change  get  nice  sequence  change  least  element  value  value  must  change  element  value  well  example  allowed  change  second  need  leave  untouched  change  value  given  sequence  update  update  form  change  update  independent  change  stay  future  print  difficulty  initial  sequence  sequence  every  update  contains  length  sequence  update  second  contains  initial  sequence  following  contains  position  new  value  position  print  answer  initial  sequence  answer  every  update
1045/G __label__data  structures  last  mission  mdcs  ha  successfully  shipped  robot  mar  start  exploring  system  initialization  required  arranged  every  robot  described  position  radius  sight  since  intelligent  robot  talk  see  radius  sight  inclusive  robot  see  robot  range  walk  talk  anybody  robot  similar  similar  mean  absolute  difference  help  calculate  many  pair  robot  going  talk  timely  update  software  avoid  potential  quarrel  contains  next  position  radius  sight  every  robot  respectively  output  contains  solution  problem
416/A __label__implementation  __label__greedy  show  called  guess  gathering  popularity  whole  berland  old  young  watching  show  rule  simple  host  think  participant  guess  asking  question  host  type  acceptable  question  true  strictly  larger  true  strictly  smaller  true  larger  equal  true  smaller  equal  question  host  answer  truthfully  yes  given  sequence  question  answer  find  value  meet  criterion  answer  value  print  impossible  input  contains  single  question  answer  next  question  answer  format  like  sign  answer  sign  type  query  second  type  query  third  type  query  fourth  type  query  value  meet  inequation  answer  english  letter  yes  consequtive  element  separated  single  space  print  answer  query  correct  printed  must  meet  inequation  many  answer  print  value  exist  print  word  impossible  without  quote
809/D __label__dp  __label__data  structures  leha  noora  decided  trip  baltic  state  know  previous  problem  leha  ha  lost  car  parking  restaurant  unfortunately  request  watchman  helped  hacker  find  car  friend  decided  hitchhiking  total  intended  visit  town  turned  sight  town  open  visitor  day  leha  proposed  choose  town  day  visit  town  interval  noora  choses  subsequence  town  id  dk  friend  going  visit  strictly  increasing  idi  di  date  friend  visit  strictly  increasing  xidi  idi  true  please  help  leha  noora  choosing  town  subsequence  town  id  dk  friend  visit  maximal  town  assume  leha  noora  start  trip  day  contains  single  denoting  town  leha  noora  intended  visit  subsequent  contains  ii  denoting  sight  town  open  visitor  day  print  single  denoting  maximal  town  leha  noora  visit
78/C __label__dp  __label__number  theory  beaver  timur  marsel  play  following  game  log  exactly  meter  length  beaver  move  turn  move  beaver  chooses  log  gnaws  equal  part  length  expressed  le  meter  resulting  part  log  gnawed  future  beaver  beaver  make  move  loses  thus  beaver  win  timur  make  move  player  play  optimal  way  determine  winner  contains  print  timur  timur  win  marsel  marsel  win  print  everything  without  quote
1141/E __label__math  superhero  fight  monster  battle  consists  round  last  exactly  minute  round  end  next  round  start  immediately  repeated  round  ha  scenario  described  sequence  element  mean  monster  hit  point  change  value  minute  round  formally  minute  round  monster  minute  change  monster  initial  mean  battle  monster  ha  hit  point  print  minute  monster  dy  monster  dy  le  equal  print  battle  continues  infinitely  contains  second  contains  sequence  value  change  monster  minute  round  print  superhero  kill  monster  battle  last  infinitely  otherwise  print  positive  minute  monster  dead
545/B __label__greedy  little  susie  love  string  today  calculates  distance  susie  small  girl  string  digit  us  definition  hamming  distance  define  distance  string  length  consisting  digit  position  equal  besides  everything  else  susie  love  symmetry  want  find  string  length  string  length  distance  wa  equal  distance  time  susie  bed  help  find  string  state  impossible  contains  string  length  second  contains  string  length  length  string  range  guaranteed  string  digit  print  string  length  consisting  digit  meet  problem  statement  string  exist  print  single  impossible  without  quote
771/E __label__dp  __label__greedy  limak  ha  grid  consists  row  column  cell  row  contains  positive  negative  non  empty  rectangle  cell  called  nice  sum  cell  equal  limak  want  choose  nice  rectangle  give  friend  gift  chosen  rectangle  share  cell  maximum  possible  nice  rectangle  limak  choose  input  contains  column  grid  next  grid  contains  print  denoting  maximum  possible  cell  disjoint  nice  rectangle
803/G __label__data  structures  given  array  consisting  positive  query  array  type  query  index  l  set  find  minimum  l  decided  problem  easy  array  given  compressed  form  array  consisting  element  input  query  equal  concatenation  array  size  contains  second  contains  element  array  third  contains  follow  representing  query  query  given  either  set  element  segment  till  including  border  find  minimum  element  segment  till  query  type  print  answer  query  minimum  corresponding  segment
1248/B __label__math  __label__greedy  __label__sortings  gardener  alexey  teach  competitive  programming  high  school  student  congratulate  alexey  teacher  day  student  gifted  collection  wooden  stick  every  stick  ha  length  alexey  want  grow  tree  tree  look  like  polyline  plane  consisting  stick  polyline  start  point  constructing  polyline  alexey  attach  stick  arbitrary  order  stick  must  either  vertical  horizontal  parallel  axis  allowed  consecutive  stick  aligned  simultaneously  horizontally  simultaneously  vertically  see  image  clarification  alexey  want  make  polyline  way  end  far  possible  please  help  grow  tree  way  note  polyline  defining  form  tree  self  intersection  self  touch  proved  optimal  answer  doe  self  intersection  self  touch  contains  stick  alexey  got  present  second  contains  length  stick  print  square  largest  possible  distance  tree  end
487/B __label__dp  __label__data  structures  __label__binary  search  alexandra  ha  paper  strip  let  call  left  right  alexandra  want  split  piece  possibly  piece  strip  must  satisfy  piece  least  difference  maximal  minimal  piece  please  help  alexandra  find  minimal  piece  meeting  condition  contains  space  separated  second  contains  separated  space  output  minimal  strip  piece
681/A __label__implementation  codeforces  user  handle  color  depends  rating  red  rating  greater  equal  orange  rating  le  greater  equal  etc  time  participant  take  part  rated  contest  rating  changed  depending  performance  anton  want  color  handle  become  red  considers  performance  rated  contest  good  outscored  participant  whose  handle  wa  colored  red  contest  rating  ha  increased  anton  ha  written  program  analysis  contest  result  determines  whether  performed  good  able  input  contains  single  participant  anton  ha  outscored  contest  next  describe  participant  result  consists  participant  handle  namei  beforei  afteri  eforei  fteri  participant  rating  contest  respectively  handle  non  empty  string  consisting  character  might  lowercase  uppercase  english  letter  digit  character  character  guaranteed  handle  distinct  print  yes  quote  clarity  anton  ha  performed  good  contest  quote  clarity  otherwise
1186/A __label__implementation  vus  cossack  hold  programming  competition  people  participate  decided  award  pen  notebook  known  vus  ha  exactly  pen  notebook  determine  whether  cossack  reward  participant  giving  least  pen  least  notebook  contains  k  participant  pen  notebook  respectively  print  yes  possible  reward  participant  otherwise  print
431/B __label__implementation  __label__brute  force  many  student  live  dormitory  dormitory  whole  new  world  funny  amusement  possibility  doe  drawback  shower  multiple  student  wish  shower  morning  every  morning  people  front  dormitory  shower  door  soon  shower  open  person  enters  shower  person  leaf  shower  next  person  enters  shower  process  continues  everybody  ha  shower  shower  take  time  student  talk  wait  moment  time  student  talk  pair  man  current  moment  talk  let  look  process  detail  let  people  let  assume  initially  look  person  stand  beginning  shower  open  talk  talk  talk  anyone  enters  shower  ha  shower  talk  talk  enters  shower  ha  shower  talk  talk  anyone  enters  shower  talk  enters  shower  enters  shower  know  student  talk  student  happiness  increase  gij  student  happiness  increase  gji  task  find  initial  order  student  total  happiness  student  maximum  end  please  note  pair  student  talk  several  time  example  student  talk  wait  shower  open  ha  shower  input  consists  contains  space  separated  show  gij  ij  guaranteed  gii  assume  student  numbered  print  single  maximum  possible  total  happiness  student
338/E __label__data  structures  manao  solving  problem  following  statement  came  solution  produce  correct  answer  slow  given  pseudocode  solution  function  getanswer  calculates  answer  problem  getanswer  len  answer  len  answer  answer  len  return  answer  len  len  index  index  len  return  len  index  mem  index  mem  return  return  task  help  manao  optimize  algorithm  contains  space  separated  len  en  second  contains  len  space  separated  len  third  contains  space  separated  print  single  answer  manao  problem
1251/C __label__greedy  given  huge  consisting  digit  inclusive  leading  swap  digit  adjacent  neighboring  position  swapping  digit  different  parity  different  remainder  divided  example  get  following  single  operation  swap  second  digit  swap  second  third  digit  swap  fifth  sixth  digit  swap  sixth  seventh  digit  swap  seventh  eighth  digit  note  swap  digit  position  position  adjacent  swap  digit  position  digit  parity  perform  possibly  operation  find  minimum  obtain  note  resulting  leading  contains  test  case  input  test  case  contains  length  inclusive  guaranteed  sum  value  doe  exceed  test  case  print  minimum  obtain
1157/C1 __label__greedy  difference  problem  value  input  problem  distinct  condition  false  problem  given  sequence  consisting  distinct  value  appears  sequence  exactly  making  sequence  move  move  must  take  either  leftmost  element  sequence  rightmost  element  sequence  write  remove  sequence  task  write  strictly  increasing  sequence  sequence  take  longest  length  sequence  element  example  sequence  answer  take  sequence  becomes  take  rightmost  element  sequence  becomes  take  sequence  becomes  take  sequence  becomes  obtained  increasing  sequence  input  contains  element  second  input  contains  element  pairwise  distinct  output  print  maximum  element  strictly  increasing  sequence  obtain
371/C __label__brute  force  __label__binary  search  polycarpus  love  hamburger  much  especially  adores  hamburger  make  hand  polycarpus  think  decent  ingredient  make  hamburger  bread  sausage  cheese  writes  recipe  favorite  hamburger  polycarpus  string  letter  bread  sausage  cheese  ingredient  recipe  bottom  top  example  recipe  scbs  represents  hamburger  ingredient  bottom  top  bread  sausage  cheese  bread  sausage  polycarpus  ha  piece  bread  piece  sausage  piece  cheese  kitchen  besides  shop  nearby  ha  ingredient  price  ruble  piece  bread  piece  sausage  piece  cheese  polycarpus  ha  ruble  ready  shop  maximum  hamburger  cook  assume  polycarpus  break  slice  piece  bread  sausage  cheese  besides  shop  ha  unlimited  piece  ingredient  input  contains  non  empty  string  describes  recipe  hamburger  polycarpus  length  string  exceed  string  contains  letter  uppercase  english  uppercase  english  uppercase  english  second  contains  b  c  piece  bread  sausage  cheese  polycarpus  kitchen  third  contains  b  c  price  piece  bread  sausage  cheese  shop  finally  fourth  contains  ruble  polycarpus  ha  please  write  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  print  maximum  hamburger  polycarpus  make  make  hamburger  print
1042/F __label__greedy  __label__data  structures  __label__sortings  __label__dfs  __label__graphs  __label__trees  given  undirected  tree  consisting  vertex  vertex  called  leaf  ha  exactly  vertex  adjacent  distance  pair  vertex  edge  shortest  path  let  call  set  leaf  beautiful  maximum  distance  pair  leaf  le  equal  want  split  leaf  non  intersecting  beautiful  set  minimal  set  split  contains  vertex  tree  maximum  distance  pair  leaf  beautiful  set  next  contains  description  edge  guaranteed  given  edge  form  tree  print  single  minimal  beautiful  set  split
1114/D __label__dp  given  colored  square  row  numbered  left  right  square  initially  ha  color  let  say  square  belong  connected  component  satisfying  word  square  segment  color  example  ha  connected  component  ha  connected  component  game  flood  fill  played  given  follows  start  game  pick  starting  square  counted  turn  game  turn  change  color  connected  component  containing  starting  square  color  find  minimum  turn  needed  entire  changed  single  color  contains  single  square  second  contains  initial  color  square  print  single  minimum  turn  needed
741/E __label__data  structures  know  girl  arpa  land  youe  got  idea  anyone  know  arpa  normal  man  well  sorry  explain  mehrdad  interested  reason  asked  sipa  best  biology  scientist  arpa  land  help  sipa  ha  dna  editor  sipa  put  arpa  dna  editor  dna  editor  showed  arpa  dna  string  consisting  lowercase  english  letter  sipa  ha  another  dna  consisting  lowercase  english  letter  belongs  normal  man  option  change  arpa  dna  numbered  put  character  put  put  mehrdad  want  choose  interesting  option  arpa  dna  option  dna  interesting  lexicographically  smaller  mehrdad  asked  sipa  question  given  interesting  option  consider  option  l  several  interesting  option  mehrdad  want  know  smallest  since  sipa  biology  scientist  programmer  help  contains  string  arpa  dna  dna  normal  man  mehrdad  question  string  consist  small  english  letter  next  describe  mehrdad  question  print  interesting  option  satisfy  condition  question  option  satisfying  condition  question  print
925/F __label__binary  search  vova  ha  recently  learned  circulaton  graph  recall  definition  let  directed  graph  circulation  collection  non  negative  real  vertex  following  conservation  condition  hold  set  edge  end  vertex  set  edge  start  vertex  word  vertex  total  incoming  flow  equal  total  outcoming  flow  let  circulation  circulation  edge  condition  hold  edge  non  negative  real  denoting  lower  upper  bound  value  circulation  edge  vova  stop  thinking  application  new  topic  right  think  following  natural  question  let  graph  fixed  value  linear  function  real  variable  aet  cet  note  edge  let  chosen  random  uniform  distribution  segment  probability  existence  circulation  graph  contains  next  describes  edge  graph  format  startpoint  endpoint  edge  remaining  describe  linear  function  upper  lower  bound  circulation  guaranteed  edge  following  condition  hold  print  single  real  probability  existence  circulation  graph  given  chosen  uniformly  random  segment  answer  considered  correct  absolute  difference  jury  answer  greater
717/I __label__geometry  cowboy  beblop  funny  little  boy  like  sitting  computer  somehow  obtained  elastic  hoop  shape  polygon  necessarily  convex  since  gravity  spaceship  hoop  standing  still  air  since  hoop  elastic  cowboy  beblop  stretch  rotate  translate  shorten  edge  much  want  hoop  given  vertex  well  position  vertex  defined  coordinate  vertex  given  order  connected  stertex  connected  nd  connected  rd  etc  last  vertex  connected  hoop  connected  impossible  pull  infinity  different  direction  manipulating  edge  without  edge  vertex  intersect  point  like  link  chain  connected  polygon  edge  intersect  overlap  make  thing  easier  say  polygon  well  connected  edge  polygon  cross  area  polygon  different  direction  upper  lower  side  plane  defined  polygon  different  time  cowboy  beblop  fascinated  hoop  ha  obtained  would  like  know  whether  well  connected  since  busy  playing  dog  zwei  like  figure  promised  sweet  help  input  contains  denotes  edge  polygon  next  coordinate  vertex  manner  mentioned  next  contains  denoting  edge  second  polygon  followed  containing  coordinate  second  polygon  vertex  guaranteed  polygon  simple  self  intersection  general  obtained  polygonal  intersect  assume  consecutive  point  polygon  lie  output  word  yes  depending  whether  given  polygon  well  connected
355/B __label__implementation  __label__greedy  vasya  often  us  public  transport  transport  city  type  trolley  bus  city  ha  bus  trolley  bus  numbered  trolley  numbered  public  transport  free  type  ticket  ticket  ride  bus  trolley  cost  burles  ticket  unlimited  ride  bus  trolley  cost  burles  ticket  unlimited  ride  bus  trolley  cost  burles  ticket  unlimited  ride  bus  trolley  cost  burles  vasya  know  sure  ride  going  make  transport  going  use  asked  help  find  minimum  sum  burles  spend  ticket  contains  cost  ticket  second  contains  bus  trolley  vasya  going  use  third  contains  time  vasya  going  use  bus  fourth  contains  time  vasya  going  use  trolley  print  single  minimum  sum  burles  vasya  spend  ticket
535/C __label__math  __label__greedy  __label__binary  search  karafs  kind  vegetable  shape  rectangle  tavaspolis  people  love  karafs  use  karafs  almost  kind  food  tavas  crazy  karafs  karafs  ha  positive  height  tavas  ha  infinite  based  sequence  karafses  height  karafs  given  let  define  bite  operation  decreasing  height  distinct  eaten  karafses  karafs  considered  eaten  height  becomes  saddas  asks  query  query  give  find  largest  l  sequence  eaten  performing  bite  time  print  input  contains  next  information  query  contains  query  query  print  answer  single
617/C __label__implementation  flowerbed  ha  many  flower  fountain  adjust  water  pressure  set  value  r  r  giving  distance  water  spread  second  fountain  respectively  set  flower  watered  flower  distance  flower  fountain  exceed  distance  second  fountain  exceed  flower  watered  fountain  need  decrease  amount  water  need  set  flower  watered  r  minimum  possible  find  minimum  value  input  contains  flower  coordinate  second  fountain  next  follow  contains  coordinate  flower  guaranteed  point  input  distinct  print  minimum  possible  value  r  note  problem  optimal  answer  always
764/A __label__math  __label__implementation  __label__brute  force  comrade  dujikov  busy  choosing  artist  timofey  birthday  recieving  call  taymyr  ilium  alpinist  ilium  alpinist  call  every  minute  minute  artist  come  comrade  every  minute  minute  day  minute  long  day  consists  minute  many  artist  killed  artist  room  ilium  call  consider  call  talk  artist  take  exactly  minute  string  contains  print  single  minimum  artist  killed  artist  room  ilium  call
1080/F __label__data  structures  __label__sortings  important  day  katya  ha  test  programming  class  always  wa  given  interesting  problem  solved  fast  solve  problem  given  ordered  segment  set  segment  represented  pair  set  arbitrary  segment  even  possible  segment  equal  given  query  represented  segment  find  whether  true  set  contains  least  segment  lie  entirely  segment  x  find  answer  query  note  need  solve  problem  online  get  new  query  print  answer  previous  query  contains  set  query  segment  respectively  next  contains  limit  segment  index  set  segment  belongs  next  contains  description  query  query  print  yes  new
370/D __label__implementation  __label__greedy  __label__constructive  algorithms  __label__brute  force  innocentius  ha  problem  computer  monitor  ha  broken  pixel  dead  always  black  consequence  innocentius  play  usual  computer  game  recently  playing  following  game  younger  brother  polycarpus  innocentius  touch  typing  program  paint  white  square  pixel  wide  frame  black  screen  monitor  broken  pixel  white  remain  black  polycarpus  look  program  displayed  screen  guess  position  size  frame  innocentius  ha  painted  polycarpus  like  game  innocentius  persuaded  brother  play  game  good  imagination  attention  help  polycarpus  automatize  part  gaming  process  write  code  find  possible  square  frame  frame  width  pixel  frame  beyond  border  screen  white  pixel  monitor  located  frame  frame  satisfy  previous  condition  required  frame  must  smallest  size  formally  square  frame  represented  pixel  solid  square  square  border  fully  surrounded  pixel  square  example  frame  size  consists  pixel  size  contains  pixel  frame  reduced  single  pixel  contains  resolution  monitor  pair  next  exactly  character  state  monitor  pixel  moment  game  character  period  ascii  code  corresponds  black  pixel  character  lowercase  english  letter  corresponds  white  pixel  guaranteed  least  pixel  monitor  white  print  monitor  screen  represent  sought  frame  character  plus  character  pixel  ha  become  white  game  changed  print  multiple  possible  way  position  frame  minimum  size  print
851/B __label__math  __label__geometry  arpa  taking  geometry  exam  last  problem  exam  given  point  find  point  angle  rotate  page  around  point  angle  new  position  old  position  new  position  old  position  arpa  doubting  problem  ha  solution  exists  point  angle  satisfying  condition  help  arpa  determine  question  ha  solution  contains  guaranteed  point  distinct  print  yes  problem  ha  solution  otherwise
711/C __label__dp  coder  chris  baboon  ha  arrived  udayland  walked  park  tree  grow  decided  naughty  color  tree  park  tree  numbered  left  right  initially  tree  ha  color  coder  chris  baboon  recognizes  different  color  mean  tree  uncolored  coder  chris  baboon  decides  color  uncolored  tree  tree  color  color  coloring  tree  color  requires  exactly  litre  paint  friend  define  beauty  coloring  tree  minimum  contiguous  group  group  contains  subsegment  tree  split  tree  group  contains  tree  color  example  color  tree  left  right  beauty  coloring  since  partition  tree  contiguous  group  color  coder  chris  baboon  want  color  uncolored  tree  beauty  coloring  exactly  need  help  determine  minimum  amount  paint  litre  needed  finish  job  please  note  friend  color  tree  already  colored  contains  tree  color  beauty  resulting  coloring  respectively  second  contains  initial  color  tree  equal  tree  uncolored  otherwise  tree  ha  color  follow  contains  denotes  amount  litre  friend  need  color  tree  color  specified  even  initially  colored  tree  tree  still  colored  print  single  minimum  amount  paint  needed  color  tree  valid  tree  coloring  beauty  print
670/B __label__implementation  late  autumn  evening  robot  gathered  cheerful  company  friend  robot  ha  unique  identifier  moment  robot  decided  play  game  snowball  rule  game  robot  stand  row  robot  say  identifier  second  robot  say  identifier  robot  say  identifier  third  robot  say  identifier  robot  say  identifier  second  robot  say  process  continues  left  right  robot  say  identifier  task  determine  identifier  pronounced  contains  positive  second  contains  sequence  id  dn  di  identifier  roborts  guaranteed  identifier  different  print  pronounced  identifier  assume  numeration  start
401/A __label__math  __label__implementation  vanya  love  playing  even  ha  special  set  card  play  card  ha  single  card  positive  negative  even  equal  limit  card  exceed  absolute  value  natasha  like  vanya  spends  long  time  playing  hid  card  vanya  became  sad  started  looking  card  found  vanya  love  balance  want  sum  found  card  equal  hand  got  tired  looking  card  help  boy  say  minimum  card  doe  need  find  make  sum  equal  assume  initially  vanya  infinitely  many  card  contains  found  card  maximum  absolute  value  card  second  contains  space  separated  found  card  guaranteed  exceed  absolute  value  print  single  answer  problem
397/A __label__implementation  old  friend  alexey  ha  finally  entered  university  city  berland  capital  alexey  expected  father  get  place  live  father  said  wa  high  time  alexey  practice  financial  independence  alexey  living  dorm  dorm  ha  exactly  straight  dryer  centimeter  long  rope  hang  clothes  dryer  ha  got  coordinate  system  installed  leftmost  end  dryer  ha  coordinate  opposite  end  ha  coordinate  overall  university  ha  student  dean  office  allows  student  use  segment  dryer  dean  office  action  contradictory  part  dryer  belong  multiple  student  alexey  like  someone  touch  clothes  want  make  impossible  someone  clothes  touch  alexey  wonder  total  length  part  dryer  use  way  clothes  others  student  drying  help  note  alexey  respected  student  ha  contains  positive  contains  endpoint  corresponding  segment  student  single  print  single  equal  sum  length  part  dryer  inside  alexey  segment  outside  segment
1027/E __label__math  __label__dp  given  square  board  consisting  row  column  tile  colored  either  white  black  let  call  coloring  beautiful  pair  adjacent  row  either  different  every  position  condition  held  column  well  let  call  coloring  suitable  beautiful  rectangle  single  color  consisting  least  tile  task  count  suitable  coloring  board  given  size  since  answer  large  print  modulo  single  contains  row  column  board  maximum  tile  inside  rectangle  single  color  respectively  print  single  suitable  coloring  board  given  size  modulo
313/C __label__implementation  __label__greedy  __label__sortings  __label__constructive  algorithms  ilya  good  natured  lion  like  math  mathematical  object  favourite  matrix  faced  complicated  matrix  problem  need  solve  got  square  n  n  sized  matrix  need  arrange  matrix  put  single  individual  cell  beauty  resulting  matrix  maximum  beauty  n  n  sized  matrix  obtained  following  algorithm  find  maximum  element  matrix  let  denote  beauty  matrix  equal  otherwise  matrix  split  non  intersecting  n  sized  submatrices  beauty  matrix  equal  sum  beauty  described  submatrices  see  algorithm  recursive  help  ilya  solve  problem  print  resulting  maximum  beauty  matrix  contains  n  next  contains  need  arrange  n  n  sized  matrix  single  print  maximum  value  beauty  described  matrix
432/C __label__greedy  __label__sortings  array  containing  distinct  task  sort  array  increasing  order  following  operation  need  apply  multiple  time  choose  index  prime  swap  element  position  word  allowed  apply  following  sequence  assignment  tmp  mp  tmp  temporary  variable  need  minimize  used  operation  need  make  sure  operation  contains  next  contains  distinct  print  n  used  operation  next  print  operation  operation  must  printed  prime
962/A __label__implementation  polycarp  ha  created  training  plan  prepare  programming  contest  train  day  day  numbered  beginning  day  polycarp  necessarily  solve  problem  evening  polycarp  plan  celebrate  equator  celebrate  evening  day  beginning  training  day  inclusive  solve  half  problem  determine  index  day  polycarp  celebrate  equator  contains  single  day  prepare  programming  contest  second  contains  sequence  equal  problem  polycarp  solve  day  print  index  day  polycarp  celebrate  equator
482/D __label__dp  __label__trees  rooted  tree  consisting  vertex  let  inclusive  root  tree  vertex  direct  parent  vertex  say  vertex  child  direct  parent  initially  painted  vertex  red  color  like  repaint  vertex  tree  perform  painting  use  function  paint  call  root  tree  argument  pseudocode  function  count  global  variable  rnd  function  used  paint  code  return  equiprobably  paint  count  even  paint  white  color  else  paint  black  color  count  count  rnd  child  array  vertex  child  ascending  order  else  child  array  vertex  child  descending  order  child  child  iterating  child  array  rnd  paint  child  calling  paint  recursively  result  function  vertex  change  color  white  black  remain  red  task  determine  distinct  possible  coloring  vertex  tree  assume  coloring  possible  nonzero  probability  get  coloring  single  call  paint  assume  coloring  different  pair  vertex  painted  different  color  coloring  since  required  large  find  remainder  division  contains  single  vertex  tree  second  contains  parent  vertex  print  single  answer  problem  modulo
626/E __label__math  __label__binary  search  define  simple  skewness  collection  collection  mean  minus  median  given  list  necessarily  distinct  find  non  empty  subset  repetition  maximum  simple  skewness  mean  collection  average  element  median  collection  middle  element  element  sorted  average  middle  element  ha  even  size  input  contains  single  element  list  second  contains  ith  element  list  print  single  size  subset
513/B2 __label__math  given  permutation  let  define  following  sum  find  lexicographically  permutation  length  set  permutation  maximum  possible  value  single  input  contains  ntn  cntn  permutation  length  maximum  possible  value  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  forming  required  permutation
452/A __label__implementation  __label__brute  force  __label__strings  solving  crossword  problem  ipsc  solved  clue  except  doe  eevee  evolve  pokemons  quick  googling  helped  find  eevee  evolve  different  pokemons  vaporeon  jolteon  flareon  espeon  umbreon  leafeon  glaceon  sylveon  know  length  word  crossword  already  know  letter  designer  crossword  made  sure  answer  unambiguous  assume  exactly  pokemon  eevee  evolves  fit  length  letter  given  task  find  contains  length  string  next  contains  string  consisting  character  either  lower  case  english  letter  indicating  known  letter  dot  character  indicating  empty  cell  crossword  print  name  pokemon  eevee  evolve  match  pattern  input  use  lower  case  letter  print  name  particular  capitalize  letter
1230/B __label__implementation  __label__greedy  ania  ha  large  decimal  representation  ha  length  leading  ania  allowed  change  digit  want  way  still  leading  minimal  possible  ania  finish  contains  digit  decimal  representation  maximum  allowed  changed  digit  second  contains  guaranteed  ha  exactly  digit  leading  output  minimal  possible  value  ania  end  note  resulting  digit
621/C __label__math  __label__number  theory  shark  grow  flower  wet  shark  sitting  around  table  shark  neighbour  shark  neighbour  shark  grow  flower  shark  value  random  equiprobably  chosen  range  wet  shark  ha  favourite  prime  really  like  pair  neighbouring  shark  product  si  divisible  wet  shark  becomes  happy  give  dollar  shark  end  day  shark  sum  money  wet  shark  granted  find  expectation  value  input  contains  space  separated  shark  wet  shark  favourite  prime  guaranteed  prime  following  contains  information  shark  space  separated  ii  range  flower  shark  produce  remember  chosen  equiprobably  inclusive  print  single  real  expected  dollar  shark  receive  total  answer  considered  correct  absolute  relative  error  doe  exceed
70/D __label__data  structures  __label__geometry  walrus  professor  plato  asked  programming  student  perform  following  practical  task  student  implement  data  structure  would  support  convex  hull  set  point  input  program  query  type  add  point  coordinate  set  note  case  convex  hull  could  changed  could  remained  say  whether  point  coordinate  belongs  area  limited  convex  hull  including  border  student  coped  task  contains  follow  following  way  query  type  coordinate  point  least  query  type  guaranteed  query  type  follow  point  given  query  form  non  degenerative  triangle  point  added  distinct  query  second  type  print  string  containing  yes  point  lie  inside  convex  hull  border  otherwise  print
365/A __label__implementation  let  call  good  contains  digit  exceeding  got  array  containing  find  many  good  count  every  time  occurs  array  contains  following  contains  without  leading  print  single  good
740/A __label__implementation  __label__brute  force  little  girl  alyona  shop  buy  copybook  school  study  subject  want  equal  copybook  subject  type  copybook  pack  shop  possible  buy  copybook  ruble  pack  copybook  ruble  pack  copybook  ruble  alyona  already  ha  copybook  minimum  amount  ruble  pay  buy  copybook  divisible  infinitely  many  pack  type  shop  alyona  buy  pack  different  type  purchase  contains  print  minimum  amount  ruble  pay  buy  copybook  divisible
924/F __label__dp  call  positive  beautiful  possible  split  multiset  digit  decimal  representation  subset  difference  sum  digit  subset  sum  digit  subset  le  equal  digit  belong  exactly  subset  split  query  query  described  mean  asked  many  inclusive  beautiful  contains  single  indicating  query  next  describes  query  containing  query  print  single  answer  query
88/B __label__implementation  vasya  learns  type  ha  unusual  keyboard  disposal  rectangular  ha  row  key  containing  key  row  besides  key  type  key  lowercase  latin  letter  key  work  like  shift  key  standard  keyboard  make  lowercase  letter  uppercase  vasya  press  key  hand  press  key  euclidean  distance  center  key  doe  exceed  key  considered  square  side  equal  empty  space  neighbouring  key  vasya  lazy  boy  try  type  hand  eats  chip  possible  symbol  typed  hand  distance  closest  shift  key  strictly  larger  case  use  hand  typed  symbol  vasya  return  hand  back  chip  given  vasya  keyboard  text  count  minimum  time  vasya  use  hand  contains  next  description  keyboard  key  contains  description  exactly  key  without  space  letter  key  marked  corresponding  lowercase  letter  shift  key  marked  symbol  follow  length  text  last  contains  text  consists  symbol  uppercase  lowercase  latin  letter  vasya  type  text  print  minimum  time  use  hand  otherwise  print  without  quote
1181/A __label__math  __label__greedy  soon  chunga  changa  island  wa  discovered  started  acquire  form  civilization  even  market  economy  new  currency  arose  colloquially  called  chizhik  ha  pay  chizhiks  buy  coconut  sasha  masha  buy  coconut  sold  price  chizhiks  per  coconut  sasha  ha  chizhiks  masha  ha  chizhiks  girl  buy  many  coconut  using  money  way  girl  buy  non  negative  coconut  girl  discussed  plan  found  total  coconut  buy  increase  decrease  give  several  chizhiks  girl  chizhiks  split  part  girl  exchange  chizhiks  consider  following  example  suppose  sasha  ha  chizhiks  masha  ha  chizhiks  price  coconut  chizhiks  girl  exchange  chizhiks  buy  coconut  example  masha  give  sasha  chizhik  sasha  chizhiks  masha  chizhiks  girl  buy  coconut  easy  live  island  sasha  mash  want  exchange  chizhiks  way  buy  maximum  possible  coconut  nobody  want  debt  possible  way  buy  maximum  possible  coconut  find  way  minimizes  chizhiks  girl  give  important  person  giving  chizhiks  contains  chizhics  sasha  ha  chizhics  masha  ha  price  coconut  print  maximum  possible  coconut  girl  buy  minimum  chizhiks  girl  ha  give
991/F __label__math  __label__implementation  __label__greedy  __label__brute  force  vasya  regular  participant  programming  contest  already  experienced  finding  important  sentence  long  statement  course  constraint  important  factorization  le  easier  le  sometimes  hard  understand  glance  could  shortened  example  instead  could  write  instead  instead  vasya  decided  concise  notation  follow  several  rule  notation  consist  operation  addition  multiplication  exponentiation  particular  use  brace  forbidden  use  several  exponentiation  operation  row  forbidden  example  writing  unacceptable  value  resulting  expression  equal  initial  notation  consist  minimal  amount  symbol  given  find  equivalent  concise  notation  contains  single  output  concise  notation  several  concise  notation  output
1149/B __label__dp  __label__implementation  __label__strings  archaeological  research  middle  east  found  trace  ancient  religion  religion  second  religion  third  religion  compiled  information  evolution  belief  wonder  follower  religion  could  coexist  peace  word  universe  long  word  containing  lowercase  english  character  moment  time  religion  belief  could  described  word  consisting  lowercase  english  character  religion  coexist  peace  description  form  disjoint  subsequence  word  universe  formally  paint  character  word  universe  color  character  painted  color  description  religion  constructed  word  universe  removing  character  painted  color  religion  evolve  beginning  religion  description  empty  every  either  character  appended  end  description  single  religion  last  character  dropped  description  change  determine  religion  could  coexist  peace  input  contains  length  word  universe  religion  evolution  respectively  following  contains  word  universe  string  length  consisting  lowercase  english  character  following  describes  single  evolution  following  format  append  character  end  religion  description  remove  last  character  religion  description  assume  pattern  non  empty  assume  religion  description  longer  character  write  yes  religion  could  coexist  peace  evolution  otherwise
552/B __label__math  __label__implementation  vanya  got  important  task  enumerate  book  library  label  book  book  assigned  naturally  distinct  book  assigned  distinct  vanya  want  know  many  digit  write  label  book  contains  book  library  print  digit  needed  book
1200/A __label__implementation  __label__data  structures  __label__brute  force  amugae  ha  hotel  consisting  room  room  numbered  left  right  hotel  ha  entrance  left  end  another  right  end  customer  arrives  hotel  left  entrance  assigned  empty  room  closest  left  entrance  similarly  customer  arrives  hotel  right  entrance  assigned  empty  room  closest  right  entrance  day  amugae  lost  room  assignment  list  thankfully  amugae  memory  perfect  remembers  customer  customer  arrived  entrance  left  hotel  initially  hotel  wa  empty  write  program  recovers  room  assignment  list  amugae  memory  consists  event  amugae  memory  second  consists  string  length  describing  event  chronological  order  character  represents  customer  arrives  left  entrance  customer  arrives  right  entrance  customer  room  respectively  leaf  guaranteed  least  empty  room  customer  arrives  customer  room  given  room  initially  empty  output  hotel  room  assignment  status  room  room  represent  empty  room  occupied  room  without  space
917/D __label__math  __label__dp  __label__trees  share  psychic  connection  upside  monster  everything  monster  know  know  suddenly  started  drawing  page  page  non  stop  joyce  mom  chief  hopper  put  drawing  together  realized  labeled  tree  tree  connected  acyclic  graph  tree  ha  vertex  joyce  hopper  know  mean  investigating  tree  similar  tree  going  investigate  labeled  tree  vertex  share  exactly  edge  tree  labeled  tree  different  pair  vertex  edge  tree  hopper  joyce  want  know  much  work  asked  tell  labeled  tree  vertex  share  exactly  edge  tree  answer  could  large  asked  tell  answer  modulo  input  contains  single  size  tree  next  edge  tree  contains  v  endpoint  edge  guaranteed  given  graph  tree  print  labeled  tree  vertex  share  exactly  edge  tree  modulo
959/A __label__math  mahmoud  ehab  play  game  called  even  odd  game  ehab  chooses  favorite  take  turn  starting  mahmoud  player  turn  ha  choose  subtract  mahmoud  turn  ha  even  ehab  turn  ha  odd  current  player  choose  satisfying  condition  loses  determine  winner  play  optimally  contains  beginning  game  output  mahmoud  without  quote  mahmoud  win  ehab  without  quote  otherwise
1015/D __label__greedy  __label__constructive  algorithms  house  row  numbered  order  left  right  initially  house  perform  move  house  move  current  house  house  stay  move  new  house  differs  current  house  house  house  total  distance  walked  increase  unit  distance  absolute  value  possible  visit  house  multiple  time  visit  house  sequence  goal  walk  exactly  unit  distance  total  impossible  print  otherwise  print  yes  way  remember  exactly  move  input  contains  house  move  total  distance  want  walk  perform  move  total  walking  distance  equal  print
910/B __label__implementation  __label__greedy  petya  ha  equal  wooden  bar  length  want  make  frame  equal  door  frame  ha  vertical  left  right  side  length  top  side  length  solid  continuous  without  break  piece  bar  needed  side  determine  minimal  wooden  bar  needed  make  frame  door  petya  cut  wooden  bar  part  side  door  solid  piece  wooden  bar  whole  wooden  bar  contains  single  length  wooden  bar  second  contains  single  length  vertical  left  right  side  door  frame  third  contains  single  length  upper  side  door  frame  print  minimal  wooden  bar  length  needed  make  frame  door
1118/F2 __label__dp  __label__dfs  __label__trees  given  undirected  tree  vertex  vertex  colored  color  uncolored  guaranteed  tree  contains  least  vertex  color  might  uncolored  vertex  choose  subset  exactly  edge  remove  tree  tree  fall  apart  connected  component  let  call  subset  edge  nice  none  resulting  component  vertex  different  color  many  nice  subset  edge  given  tree  subset  considered  different  edge  present  subset  absent  answer  large  print  modulo  contains  vertex  tree  color  respectively  second  contains  color  vertex  mean  vertex  uncolored  value  mean  vertex  colored  color  next  contains  edge  tree  guaranteed  given  edge  form  tree  guaranteed  tree  contains  least  vertex  color  might  uncolored  vertex  print  single  nice  subset  edge  given  tree  subset  considered  different  edge  present  subset  absent
825/B __label__implementation  __label__brute  force  alice  bob  play  row  game  playing  field  size  turn  put  either  cross  nought  time  alice  put  cross  bob  put  nought  current  match  made  turn  alice  turn  wonder  put  cross  empty  cell  win  immediately  alice  win  cross  field  form  length  smaller  horizontal  vertical  diagonal  given  matrix  character  capital  latin  letter  cross  letter  nought  empty  cell  cell  equal  cell  least  type  least  empty  cell  guaranteed  current  arrangement  nobody  ha  still  print  yes  possible  alice  win  turn  putting  cross  empty  cell  otherwise  print
677/C __label__implementation  __label__strings  walking  street  vanya  saw  label  hide  seek  programmer  used  bitwise  word  represented  base  got  new  word  vanya  think  string  want  know  pair  word  length  length  bitwise  equal  large  output  modulo  represent  string  numeral  system  base  vanya  us  following  rule  digit  correspond  letter  correspond  letter  correspond  letter  correspond  letter  correspond  input  contains  single  word  consisting  digit  lowercase  uppercase  english  letter  character  print  single  possible  pair  word  bitwise  equal  string  modulo
917/C __label__dp  know  dart  kind  creature  upside  world  simplicity  call  kind  pollywog  dart  pollywog  playing  game  stone  row  numbered  left  right  pollywog  sitting  stone  time  initially  pollywog  sitting  stone  pollywog  stone  dart  friend  want  end  last  stone  second  leftmost  pollywog  jump  right  pollywog  jump  stone  specifically  pollywog  jump  stone  stone  pollywog  jump  occupied  stone  jumping  distance  take  amount  energy  pollywog  stone  special  time  landing  special  stone  take  amount  energy  addition  energy  jump  pollywog  could  negative  case  mean  pollywog  absorbs  amount  energy  pollywog  want  spend  little  energy  possible  value  could  negative  pollywog  asked  help  tell  total  change  energy  case  move  optimally  input  contains  k  pollywog  maximum  length  jump  stone  special  stone  next  contains  separated  space  energetic  cost  jump  next  description  special  stone  contains  distinct  print  minimum  amount  energy  need  output
1223/F __label__dp  __label__data  structures  let  look  following  process  initially  empty  stack  array  length  trying  push  array  element  stack  order  moreover  stack  empty  element  top  stack  equal  current  element  push  current  element  top  stack  otherwise  push  current  element  stack  moreover  pop  top  element  stack  process  stack  remains  empty  array  considered  stack  exterminable  sample  stack  exterminable  array  let  consider  changing  stack  detail  top  stack  highlighted  pushing  stack  turn  pushing  stack  turn  pushing  stack  turn  pushing  stack  turn  pushing  stack  turn  pushing  stack  turn  pushing  stack  turn  pushing  stack  empty  given  array  calculate  subarrays  stack  exterminable  note  answer  independent  query  contains  query  query  contains  length  array  second  query  contains  element  guaranteed  sum  query  doe  exceed  test  case  print  single  stack  exterminable  subarrays  array
730/C __label__dfs  __label__binary  search  new  trade  empire  rising  berland  bulmart  emerging  trade  giant  decided  dominate  market  shovel  almost  every  city  berland  ha  bulmart  store  city  even  several  problem  moment  sale  let  say  little  estimate  people  even  say  shovel  retail  market  small  big  company  make  profit  company  management  belief  future  market  seek  new  way  increase  income  city  berland  connected  directional  road  road  equal  length  happen  impossible  reach  city  another  city  using  road  road  connects  city  pair  city  connected  road  bulmart  store  berland  described  city  store  located  city  store  several  shovel  store  price  single  shovel  store  burles  latest  idea  bulmart  management  create  program  help  customer  get  shovel  fast  possible  affordable  budget  formally  program  ha  find  minimum  amount  time  needed  deliver  shovel  customer  city  total  cost  burles  delivery  time  adjacent  city  equal  shovel  delivered  several  city  delivery  time  equal  arrival  time  last  package  delivery  free  charge  program  need  find  answer  query  query  ha  processed  independently  others  query  doe  change  shovel  store  next  query  contains  next  contains  meaning  road  connects  city  e  e  next  contains  single  total  bulmart  store  berland  next  contains  describing  store  next  contains  single  query  next  contains  describing  query  j  j  j  output  print  answer  query  minimum  amount  time  needed  deliver  shovel  customer  city  spending  burles  print  solution  query
958/F2 __label__binary  search  unrest  galactic  senate  several  thousand  solar  system  declared  intention  leave  republic  master  heidi  need  select  jedi  knight  peacekeeping  mission  throughout  galaxy  well  known  success  peacekeeping  mission  depends  color  lightsabers  jedi  mission  heidi  ha  jedi  knight  standing  front  lightsaber  possible  color  know  mission  effective  need  select  contiguous  interval  knight  exactly  knight  lightsabers  color  knight  lightsabers  second  color  knight  lightsabers  color  since  last  time  ha  learned  always  possible  select  interval  therefore  decided  ask  jedi  knight  indefinite  unpaid  vacation  leave  near  certain  pit  tatooine  know  mean  help  heidi  decide  minimum  jedi  knight  need  let  able  select  desired  interval  subsequence  remaining  knight  input  contains  second  contains  range  representing  color  lightsabers  subsequent  jedi  knight  third  contains  desired  count  jedi  knight  lightsabers  color  output  minimum  jedi  knight  need  removed  sequence  remains  interval  prescribed  count  lightsaber  color  possible  output
557/A __label__math  __label__implementation  __label__greedy  soon  school  olympiad  informatics  held  berland  schoolchildren  participate  meeting  jury  olympiad  wa  decided  participant  depending  result  get  diploma  second  third  degree  thus  student  receive  exactly  diploma  decided  must  given  least  min  max  diploma  degree  least  min  max  diploma  second  degree  least  min  max  diploma  third  degree  discussion  wa  decided  choose  option  distributing  diploma  satisfying  limitation  maximizes  participant  receive  diploma  degree  option  select  maximizes  participant  receive  diploma  second  degree  multiple  option  select  option  maximizes  diploma  third  degree  choosing  best  option  distributing  certificate  wa  entrusted  ilya  best  programmer  berland  found  important  thing  task  choose  best  option  distributing  diploma  based  described  limitation  guaranteed  described  limitation  way  choose  option  distributing  diploma  participant  olympiad  receive  diploma  degree  input  contains  single  schoolchildren  participate  olympiad  next  input  contains  min  max  ax  minimum  maximum  limit  diploma  degree  distributed  third  input  contains  min  max  ax  minimum  maximum  limit  diploma  second  degree  distributed  next  input  contains  min  max  ax  minimum  maximum  limit  diploma  third  degree  distributed  guaranteed  min  ax  ax  ax  output  print  showing  many  diploma  second  third  degree  given  student  optimal  variant  distributing  diploma
620/D __label__binary  search  professor  gukiz  ha  array  professor  want  make  sum  element  array  close  possible  sum  element  array  want  minimize  value  operation  professor  swap  element  array  element  array  example  array  array  professor  swap  element  array  element  array  get  new  array  new  array  professor  want  make  swap  find  minimal  value  sequence  swap  lead  value  professor  make  swap  new  swap  make  new  array  contains  element  array  second  contains  element  array  third  contains  element  array  fourth  contains  j  element  array  print  minimal  value  got  swap
1162/B __label__greedy  __label__brute  force  given  nm  matrix  containing  sequence  strictly  increasing  next  greater  previous  row  strictly  increasing  left  right  strictly  increasing  column  strictly  increasing  top  bottom  strictly  increasing  matrix  increasing  row  strictly  increasing  column  strictly  increasing  example  matrix  increasing  individual  row  column  strictly  increasing  hand  matrix  increasing  row  strictly  increasing  let  position  row  top  column  left  matrix  denoted  operation  choose  swap  located  matrix  second  matrix  word  swap  different  matrix  located  corresponding  position  would  like  make  matrix  increasing  performing  operation  possibly  none  determine  possible  print  possible  otherwise  print  impossible  contains  dimension  matrix  next  contains  located  position  matrix  next  contains  located  position  second  matrix  print  string  impossible  possible
1188/A2 __label__implementation  __label__dfs  __label__trees  __label__constructive  algorithms  note  second  problem  similar  problem  hack  problem  solve  hack  previous  problem  solve  problem  given  tree  node  beginning  written  edge  operation  choose  distinct  leaf  add  value  written  edge  simple  path  note  previous  subtask  wa  allowed  real  ha  example  picture  see  result  applying  operation  graph  adding  path  adding  path  given  configuration  nonnegative  pairwise  different  even  written  edge  given  configuration  determine  possible  achieve  operation  possible  output  sequence  operation  lead  given  configuration  constraint  operation  listed  output  format  section  leave  node  tree  degree  simple  path  path  node  twice  contains  single  node  tree  next  contains  val  al  meaning  edge  node  val  written  guaranteed  edge  form  tree  guaranteed  val  pairwise  different  even  sequence  operation  lead  given  configuration  output
501/C __label__greedy  __label__data  structures  __label__sortings  __label__trees  __label__constructive  algorithms  let  define  forest  non  directed  acyclic  graph  without  loop  parallel  edge  day  misha  played  forest  consisting  vertex  vertex  wrote  degreev  vertex  adjacent  vertex  second  xor  sum  vertex  adjacent  adjacent  vertex  wrote  next  day  misha  remember  graph  initially  misha  ha  value  degreev  left  though  help  find  edge  edge  initial  graph  guaranteed  exists  forest  corresponds  written  misha  contains  vertex  graph  next  contains  degreei  egreei  separated  space  print  edge  graph
1195/B __label__math  __label__brute  force  __label__binary  search  evening  dinner  si  student  gather  together  play  game  sport  mafia  tournament  alya  put  candy  box  serve  prize  winner  performs  action  action  performed  put  single  candy  box  remaining  move  choose  option  option  case  box  contains  least  candy  take  exactly  candy  eat  way  candy  box  decreased  second  option  put  candy  box  case  alya  put  candy  put  previous  time  thus  box  empty  use  second  option  example  possible  sequence  alya  action  look  follows  put  candy  box  put  candy  box  eat  candy  box  eat  candy  box  put  candy  box  eat  candy  box  put  candy  box  eat  candy  box  put  candy  box  way  perform  action  candy  end  alya  eat  candy  total  know  total  action  candy  end  need  find  total  sweet  alya  ate  move  option  guaranteed  given  answer  always  exists  please  note  action  option  alya  take  eats  exactly  candy  contains  total  move  candy  box  end  guaranteed  given  answer  exists  print  single  candy  alya  ate  please  note  problem  multiple  possible  answer  answer  unique  input  data
496/D __label__binary  search  petya  gena  love  playing  table  tennis  single  match  played  according  following  rule  match  consists  multiple  set  set  consists  multiple  serf  serve  player  player  score  point  soon  player  score  point  win  set  next  set  start  score  player  set  soon  player  win  total  set  win  match  match  positive  spice  petya  gena  choose  new  every  match  besides  sake  history  keep  record  match  serve  write  winner  serve  winner  recorded  chronological  order  record  set  soon  player  score  point  match  soon  player  win  set  petya  gena  found  record  old  match  unfortunately  sequence  serf  record  divided  set  given  match  lost  player  wonder  value  might  determine  possible  option  contains  single  length  sequence  game  second  contains  space  separated  serve  wa  petya  serve  wa  gena  guaranteed  least  option  corresponds  given  record  print  single  option
476/D __label__math  __label__greedy  __label__constructive  algorithms  dreamoon  like  play  set  defined  largest  positive  divide  let  set  exactly  distinct  greater  define  rank  pair  distinct  element  given  dreamoon  want  make  set  rank  using  used  different  set  course  leave  without  use  calculate  minimum  make  possible  print  possible  solution  single  input  contains  space  separated  print  single  minimal  possible
1073/B __label__math  __label__implementation  vasya  ha  got  book  numbered  arranged  stack  topmost  book  ha  next  book  bottom  stack  ha  distinct  vasya  want  move  book  backpack  step  step  want  move  book  backpack  book  stack  take  book  book  book  put  backpack  otherwise  doe  nothing  begin  next  step  example  book  arranged  order  book  topmost  vasya  move  book  order  step  move  book  second  step  nothing  since  book  already  backpack  third  step  book  book  note  distinct  help  vasya  tell  book  put  backpack  step  contains  book  stack  second  contains  denoting  stack  book  third  contains  denoting  step  vasya  going  perform  distinct  go  print  equal  book  vasya  move  backpack  step
437/D __label__sortings  course  child  like  walking  zoo  zoo  ha  area  numbered  area  contains  animal  road  zoo  road  connects  distinct  area  naturally  zoo  connected  reach  area  zoo  area  using  road  child  smart  imagine  child  want  area  area  firstly  considers  simple  route  route  child  writes  equal  minimum  animal  route  area  let  denote  largest  written  finally  child  chooses  route  writes  value  child  ha  visited  zoo  think  question  average  value  pair  p  answer  question  contains  second  contains  follow  contains  xii  denoting  road  area  road  bidirectional  pair  area  connected  road  output  real  value
61/E __label__data  structures  __label__trees  roman  attacked  time  much  persian  shapur  ready  defeat  say  lion  never  afraid  hundred  sheep  nevertheless  shapur  ha  find  weakness  roman  army  defeat  give  army  weakness  shapur  opinion  weakness  army  equal  triplet  power  man  standing  position  roman  army  ha  special  trait  power  people  distinct  help  shapur  find  weak  roman  input  contains  single  men  roman  army  next  contains  different  positive  power  men  roman  army  single  weakness  roman  army
928/B __label__dp  time  recall  good  old  friend  everything  come  together  luckily  social  network  store  message  history  making  easy  know  argued  year  ago  formal  message  history  sequence  message  ordered  time  sent  numbered  total  message  chat  message  might  link  earlier  message  reply  opening  message  getting  link  dialogue  shown  way  previous  message  message  next  message  visible  respect  message  case  le  message  somewhere  shown  digging  deep  message  history  always  read  visible  message  link  current  message  continue  reading  manner  determine  message  read  start  message  calculate  independently  start  message  initial  configuration  previous  next  message  message  read  multiple  time  considered  contains  total  amount  message  previous  next  message  visible  second  feature  sequence  denotes  message  link  destination  link  message  listed  chronological  order  guaranteed  link  message  go  message  strictly  le  print  denoting  distinct  message  read  starting  message  traversing  link  possible
1163/F __label__data  structures  __label__graphs  city  capypaland  kuro  shiro  resides  town  numbered  bidirectional  road  numbered  connecting  road  connects  town  since  traveling  town  quite  difficult  taxi  industry  really  popular  survive  harsh  competition  taxi  company  ha  find  distinctive  trait  customer  kuro  owner  taxi  company  ha  decided  introduce  new  fee  model  taxi  brand  fee  ride  calculated  based  trip  length  sum  price  road  traveled  price  road  ha  decided  kuro  price  road  hence  fee  taxi  ride  traveling  road  kuro  indecisive  person  ha  drafted  plan  change  road  price  plan  based  original  price  except  single  road  price  changed  note  plan  independent  shiro  regular  customer  kuro  taxi  brand  since  us  taxi  travel  town  town  every  day  since  regular  customer  kuro  decided  show  plan  publishing  public  shiro  want  know  lowest  fee  must  pay  travel  town  town  kuro  plan  contains  town  road  plan  kuro  ha  drafted  respectively  next  contains  endpoint  original  price  road  guaranteed  least  way  travel  town  town  using  bidirectional  road  next  contains  index  road  kuro  ha  planned  change  new  price  respectively  print  lowest  fee  shiro  must  pay  get  town  town  plan
605/C __label__geometry  mikhail  freelancer  dream  thing  become  cool  programmer  buy  flat  moscow  become  cool  programmer  need  least  experience  point  desired  flat  moscow  cost  dollar  mikhail  determined  follow  dream  registered  freelance  site  ha  suggestion  work  distinct  project  mikhail  ha  already  evaluated  participation  project  increase  experience  per  day  bring  dollar  per  day  freelance  work  implies  flexible  working  hour  mikhail  free  stop  working  project  time  start  working  another  project  receives  respective  share  experience  money  mikhail  trying  become  cool  programmer  able  work  project  moment  time  find  real  value  equal  minimum  day  mikhail  need  make  dream  come  true  example  suppose  mikhail  suggested  work  project  order  achieve  aim  mikhail  ha  work  day  third  project  indeed  b  input  contains  project  required  experience  money  next  contains  daily  increase  experience  daily  income  working  project  print  real  value  minimum  day  mikhail  need  get  required  amount  experience  money  answer  considered  correct  absolute  relative  error  doe  exceed
624/A __label__math  luke  skywalker  got  locked  rubbish  shredder  press  r  already  working  rescue  luke  need  stay  alive  long  possible  simplicity  assume  everything  happens  straight  press  initially  coordinate  move  towards  speed  respectively  luke  ha  width  able  choose  position  press  luke  dy  soon  distance  press  le  width  task  determine  long  luke  stay  alive  input  contains  luke  width  initial  position  second  press  speed  second  press  respectively  print  single  real  value  maximum  period  time  luke  stay  alive  answer  considered  correct  absolute  relative  error  doe  exceed
606/A __label__implementation  carl  beginner  magician  ha  blue  violet  orange  magic  sphere  move  transform  sphere  color  sphere  color  make  spell  ha  never  seen  need  least  blue  violet  orange  sphere  get  possible  multiple  action  input  contains  blue  violet  orange  sphere  magician  disposal  second  input  contains  blue  violet  orange  sphere  need  get  wizard  able  obtain  required  sphere  print  yes  otherwise  print
859/E __label__dfs  __label__graphs  __label__trees  new  set  desk  arrived  time  thing  getting  quite  cramped  office  put  charge  creating  new  seating  chart  engineer  desk  numbered  sent  survey  engineering  team  asking  engineer  desk  currently  sit  desk  would  like  sit  current  desk  engineer  must  either  remain  sit  move  desired  seat  indicated  survey  engineer  currently  sit  desk  engineer  sit  desk  new  seating  arrangement  many  seating  arrangement  create  meet  specified  requirement  answer  large  compute  modulo  begin  containing  engineer  follow  containing  exactly  contains  current  desk  engineer  desk  engineer  want  move  desk  numbered  guaranteed  engineer  sit  desk  print  possible  assignment  modulo
1092/A __label__implementation  given  task  construct  string  length  least  letter  latin  alphabet  string  letter  second  letter  except  maximize  minimal  frequency  letter  frequency  letter  occurrence  letter  string  several  possible  answer  print  answer  independent  query  input  contains  query  next  query  per  contains  length  string  query  character  query  print  print  answer  query  string  satisfying  condition  problem  statement  constraint  query
1097/F __label__number  theory  alex  decided  try  luck  show  went  quiz  named  word  perfectly  answering  question  pseudonym  commonly  referred  internet  nick  famous  inventor  name  unit  magnetic  field  strength  nikola  tesla  rock  band  performs  remind  nickelback  decided  apply  little  bit  difficult  show  multiset  rule  show  follows  multisets  numbered  initially  empty  event  happen  possible  type  set  multiset  singleton  set  multiset  union  multiset  example  set  multiset  product  multiset  product  ab  multisets  defined  gcd  gcd  gcd  greatest  common  divisor  example  participant  asked  many  time  occurs  multiset  quiz  turned  hard  past  participant  give  answer  modulo  note  described  necessarily  different  event  type  sum  product  computed  assignment  performed  alex  confused  complicated  rule  show  help  answer  request  type  contains  multisets  event  following  describes  next  event  format  given  statement  guaranteed  always  hold  guaranteed  least  event  type  print  string  consists  digit  ha  length  equal  event  type  digit  string  equal  answer  query  type
894/A __label__dp  __label__brute  force  qaq  word  denote  expression  cry  imagine  eye  tear  mouth  diamond  ha  given  bort  string  consisting  uppercase  english  letter  length  great  qaq  string  diamond  cute  illustration  http  twitter  com  nekoyaliu  bort  want  know  many  subsequence  qaq  string  diamond  ha  given  note  letter  qaq  consecutive  order  letter  exact  contains  string  length  guaranteed  string  contains  uppercase  english  letter  print  single  subsequence  qaq  string
802/N __label__graphs  __label__binary  search  marmot  need  prepare  problem  hc  day  problem  prepared  ha  printed  preparation  problem  day  per  day  cost  chf  printing  problem  day  per  day  cost  chf  course  problem  printed  ha  prepared  day  fine  minimum  cost  preparation  printing  input  contains  space  separated  second  contains  space  separated  preparation  cost  third  contains  space  separated  printing  cost  output  minimum  cost  preparation  printing  problem  minimum  possible  sum  ai  ik  j  j  jk  k  k  ikk
1144/C __label__sortings  __label__constructive  algorithms  sequence  existed  initially  wa  strictly  increasing  strictly  decreasing  strictly  increasing  sequence  sequence  strictly  decreasing  sequence  sequence  note  empty  sequence  sequence  consisting  element  considered  increasing  decreasing  merged  sequence  sequence  got  shuffled  example  possible  resulting  sequence  increasing  sequence  decreasing  sequence  sequence  shuffled  sequence  given  input  task  find  suitable  initial  sequence  strictly  increasing  strictly  decreasing  note  empty  sequence  sequence  consisting  element  considered  increasing  decreasing  contradiction  input  impossible  split  given  sequence  increasing  decreasing  sequence  print  input  contains  element  second  input  contains  element  contradiction  input  impossible  split  given  sequence  increasing  decreasing  sequence  print
607/A __label__dp  __label__binary  search  beacon  located  distinct  position  beacon  ha  position  power  level  beacon  activated  destroys  beacon  left  direction  decreasing  coordinate  distance  inclusive  beacon  destroyed  saitama  activate  beacon  time  right  left  beacon  destroyed  activated  saitama  want  genos  add  beacon  strictly  right  existing  beacon  position  power  level  least  possible  beacon  destroyed  note  genos  placement  beacon  mean  beacon  activated  help  genos  finding  minimum  beacon  could  destroyed  input  contains  single  initial  beacon  next  contains  position  power  level  beacon  respectively  beacon  position  aij  print  single  minimum  beacon  could  destroyed  exactly  beacon  added
707/E __label__data  structures  like  child  alesha  love  new  year  celebration  celebration  whole  family  dress  fir  tree  like  child  alesha  like  play  garland  chain  consisting  lightbulb  alesha  us  grid  field  sized  n  playing  row  field  numbered  top  bottom  column  numbered  left  right  alesha  ha  garland  place  field  doe  way  lightbulb  garland  lie  center  cell  field  cell  contains  lightbulb  course  lightbulb  neighbour  garland  appears  cell  neighbouring  side  example  garland  placing  garland  turned  turned  moment  garland  turned  lightbulb  turned  applies  garland  turned  lightbulb  whole  garland  set  unique  thus  turned  brings  alesha  pleasure  described  value  turned  lightbulb  bring  alesha  pleasure  alesha  turn  garland  want  know  sum  pleasure  value  lightbulb  placed  center  cell  rectangular  part  field  bring  initially  garland  turned  alesha  still  little  add  big  extremely  asks  help  input  contains  field  row  field  column  garland  placed  field  respectively  next  contains  garland  set  description  following  format  single  garland  description  contains  single  len  en  lightbulb  garland  next  len  contains  coordinate  cell  containing  lightbullb  pleasure  value  alesha  get  turned  lightbulb  given  order  forming  chain  garland  guaranteed  neighbouring  lightbulb  placed  cell  neighbouring  side  next  contains  single  event  alesha  game  next  describes  event  chronological  order  describes  event  following  format  switch  alesha  turn  garland  turned  turn  turned  guaranteed  ask  alesha  want  know  sum  pleasure  value  lightbulb  placed  rectangular  part  field  top  left  cell  part  ha  coordinate  right  bottom  cell  ha  coordinate  guaranteed  event  type  input  input  please  note  input  quite  large  careful  using  input  way  particular  recommended  use  cin  code  class  scanner  code  java  ask  operation  print  sum  alesha  want  know  separate  print  answer  chronological  order
362/A __label__math  __label__greedy  boy  petya  love  chess  much  even  came  chess  piece  semiknight  semiknight  move  direction  square  forward  square  right  square  forward  square  left  square  backward  right  square  backward  left  naturally  semiknight  move  beyond  limit  chessboard  petya  put  semiknights  standard  chessboard  petya  simultaneously  move  semiknights  square  rather  large  move  semiknights  meet  end  square  meeting  semiknights  move  possible  meet  petya  wonder  sequence  move  semiknights  meet  petya  considers  square  bad  suit  meeting  semiknights  move  square  meeting  square  count  petya  prepared  multiple  chess  board  help  petya  find  whether  semiknights  meet  good  square  board  please  see  test  case  analysis  contains  board  board  described  matrix  character  consisting  row  column  matrix  consists  character  representing  empty  good  square  bad  square  semiknight  position  correspondingly  guaranteed  matrix  contains  exactly  semiknights  semiknight  square  considered  good  meeting  test  separated  empty  test  print  single  answer  problem  yes  semiknights  meet  otherwise
522/D __label__data  structures  given  sequence  query  jj  query  need  print  minimum  distance  pair  element  x  index  element  lie  range  lj  j  value  element  equal  text  understands  distance  input  contains  pair  length  sequence  query  correspondingly  second  contains  sequence  next  query  per  query  given  pair  jj  index  query  range  limit  print  answer  query  valid  match  query  please  print  answer  query
868/D __label__dp  __label__implementation  __label__brute  force  __label__strings  given  string  consisting  character  operation  performed  concatenate  existing  string  new  operation  concatenation  saisbi  saved  new  string  operation  numbered  starting  operation  need  find  maximum  positive  possible  string  consisting  length  string  substring  new  string  print  contains  single  string  next  string  per  total  length  string  greater  next  contains  single  operation  follow  contains  abd  string  concatenated  form  print  answer  question  corresponding  operation
588/B __label__math  duff  love  lovely  positive  called  lovely  positive  divisor  malek  ha  store  store  ha  divisor  positive  ha  birthday  present  malek  want  give  lovely  store  want  big  possible  malek  always  issue  math  asked  help  please  tell  biggest  lovely  store  input  contains  print  answer
387/B __label__greedy  __label__brute  force  george  decided  prepare  codesecrof  round  ha  prepared  problem  round  let  problem  george  estimate  problem  complexity  make  round  good  need  put  least  problem  besides  need  least  problem  complexity  exactly  least  complexity  exactly  least  complexity  exactly  course  round  problem  complexity  george  ha  poor  imagination  easier  make  already  prepared  problem  simpler  come  new  prepare  george  magnificent  simplifying  problem  simplify  already  prepared  problem  complexity  positive  complexity  c  changing  limit  input  data  nothing  simple  george  understood  even  simplifies  problem  run  problem  good  round  decided  find  minimum  problem  need  come  addition  prepared  order  make  good  round  note  george  come  new  problem  complexity  contains  minimal  problem  good  round  problem  george  prepared  second  contains  space  separated  n  requirement  complexity  problem  good  round  third  contains  space  separated  complexity  problem  prepared  george  print  single  answer  problem
1182/C __label__greedy  __label__data  structures  __label__strings  given  word  consists  lowercase  alphabet  letter  word  contains  least  vowel  going  choose  given  word  make  many  beautiful  lyric  possible  lyric  consists  consists  word  separated  whitespace  lyric  beautiful  satisfies  condition  vowel  word  vowel  word  second  vowel  second  word  vowel  second  word  second  last  vowel  last  vowel  second  note  consonant  vowel  letter  vowel  note  never  vowel  example  beautiful  lyric  hello  hellooowww  whatsup  yowowowow  beautiful  lyric  vowel  hello  whatsup  vowel  hellooowww  yowowowow  keep  mind  vowel  last  vowel  example  beautiful  lyric  hey  man  iam  mcdic  beautiful  lyric  hey  iam  vowel  last  vowel  different  second  many  beautiful  lyric  write  given  word  note  use  word  time  given  example  word  given  time  use  time  contains  single  word  next  contains  string  consisting  lowercase  alphabet  letter  word  guaranteed  sum  total  word  length  equal  le  word  contains  least  vowel  print  maximum  possible  beautiful  lyric
54/E __label__geometry  winter  evening  hedgehog  wa  relaxing  home  cozy  armchair  clicking  channel  stumbled  issue  topshop  hedgehog  wa  change  channel  sudden  wa  stopped  advertisement  new  wondrous  invention  actually  vacuum  cleaner  wa  advertised  wa  called  marvellous  vacuum  even  need  human  operate  clean  vacuum  cleaner  move  around  flat  move  direction  hit  obstacle  automatically  chooses  new  direction  sooner  later  vacuum  cleaner  travel  room  clean  remembered  much  time  hedgehog  spends  every  time  cleaning  surely  le  half  day  got  eager  buy  wonder  hedgehog  quickly  understood  cleaner  ha  least  weak  point  clean  well  room  corner  often  able  reach  corner  due  shape  estimate  serious  drawback  practice  hedgehog  asked  write  corresponding  program  given  cleaner  shape  top  view  consider  case  vacuum  cleaner  represented  convex  polygon  room  infinitely  large  rectangle  consider  corner  room  want  find  rotation  vacuum  cleaner  pushed  corner  leave  minimum  possible  area  corner  uncovered  contains  represents  vertex  vacuum  cleaner  polygon  follow  containing  coordinate  vertex  polygon  coordinate  absolute  value  exceed  guaranteed  given  polygon  nondegenerate  convex  point  lie  polygon  vertex  given  clockwise  counter  clockwise  direction  print  minimum  possible  uncovered  area  answer  accepted  absolute  relative  error  correct  answer
413/A __label__implementation  long  ago  company  bought  company  consequently  development  field  multicore  processor  laboratory  testing  processor  testing  go  step  step  processor  get  instruction  temperature  measured  head  engineer  keeping  report  record  work  processor  writes  minimum  maximum  measured  temperature  notebook  assistant  write  temperature  notebook  unknown  reason  recorded  next  day  engineer  assistant  filed  report  temperature  chief  engineer  doubt  assistant  wrote  everything  correctly  naturally  chief  engineer  doubt  note  asked  help  given  min  max  list  temperature  determine  whether  upgrade  set  temperature  set  temperature  add  temperature  minimum  temperature  wa  min  maximum  wa  max  contains  ax  ax  second  contains  space  separated  temperature  reported  assistant  note  reported  temperature  temperature  want  add  equal  temperature  data  consistent  print  correct  without  quote  otherwise  print  incorrect  without  quote
734/C __label__dp  __label__greedy  __label__binary  search  anton  playing  interesting  computer  game  stuck  level  pas  next  level  ha  prepare  potion  anton  ha  special  kettle  prepare  potion  second  know  spell  type  faster  process  preparing  potion  spell  type  speed  preparation  time  potion  spell  type  cost  manapoints  change  preparation  time  potion  instead  spell  type  immediately  prepare  potion  spell  cost  manapoints  instantly  create  potion  anton  use  spell  type  spell  second  type  total  manapoints  spent  exceed  consider  spell  used  instantly  right  anton  start  prepare  potion  anton  want  get  next  level  fast  possible  interested  minimum  time  need  spent  order  prepare  least  potion  input  contains  potion  anton  ha  make  spell  type  spell  second  type  second  input  contains  initial  second  required  prepare  potion  manapoints  anton  use  third  contains  second  take  prepare  potion  spell  type  used  fourth  contains  manapoints  use  spell  type  fifth  potion  immediately  created  spell  second  type  used  guaranteed  decreasing  cij  sixth  contains  manapoints  required  use  spell  second  type  guaranteed  decreasing  dij  print  minimum  time  ha  spent  order  prepare  potion
801/A __label__brute  force  tonio  ha  keyboard  letter  day  ha  typed  string  letter  really  like  string  appears  wish  change  letter  string  change  maximize  occurrence  string  compute  maximum  time  appear  substring  letter  right  letter  resulting  string  string  consisting  uppercase  english  letter  length  le  greater  output  single  maximum  time  appear  substring  given  string  changing  character
913/C __label__dp  __label__greedy  new  year  party  new  year  party  without  lemonade  usual  expecting  lot  guest  buying  lemonade  ha  already  become  pleasant  necessity  favorite  store  sell  lemonade  bottle  different  volume  different  cost  single  bottle  type  ha  volume  liter  cost  rouble  bottle  type  store  considered  infinite  want  buy  least  liter  lemonade  many  rouble  spend  contains  type  bottle  store  required  amount  lemonade  liter  respectively  second  contains  cost  bottle  different  type  output  single  smallest  rouble  pay  order  buy  least  liter  lemonade
794/A __label__implementation  __label__brute  force  robber  ha  attempted  rob  bank  failed  complete  task  managed  open  safe  oleg  bank  client  love  money  decides  take  advantage  failed  robbery  steal  money  safe  many  safe  arranged  safe  left  called  safe  banknote  left  safe  total  banknote  safe  oleg  safe  security  guard  guard  safe  guard  left  oleg  guard  guard  safe  right  oleg  guard  lazy  move  every  second  oleg  either  take  banknote  current  safe  move  neighboring  safe  visit  safe  guarded  security  guard  time  becaues  might  charged  stealing  determine  maximum  amount  banknote  oleg  gather  input  contains  space  separated  denoting  position  oleg  security  guard  second  security  guard  respectively  next  input  contains  single  denoting  banknote  next  input  contains  space  separated  denoting  banknote  located  safe  note  guaranteed  distinct  output  single  maximum  banknote  oleg  take
1039/D __label__dp  __label__data  structures  __label__trees  tree  undirected  graph  exactly  simple  path  pair  vertex  call  set  simple  path  valid  vertex  tree  belongs  path  including  endpoint  path  consists  exactly  vertex  given  tree  vertex  inclusive  find  maximum  possible  size  valid  set  simple  path  input  contains  single  vertex  tree  following  describe  tree  contains  endpoint  corresponding  edge  guaranteed  given  graph  tree  output  maximum  possible  path  valid  set  path
70/C __label__data  structures  __label__sortings  __label__binary  search  walrusland  public  transport  ticket  characterized  series  ticket  series  let  series  represented  ticket  ticket  described  ordered  pair  walrus  believe  ticket  lucky  ev  ev  function  rev  revers  written  decimal  system  leading  disappear  example  rev  rev  public  transport  management  committee  want  release  series  containing  ticket  least  lucky  ticket  released  total  released  ticket  minimum  series  numbered  inclusive  ticket  series  numbered  inclusive  transport  committee  release  maxx  series  maxy  ticket  series  contains  maxx  maxy  axx  axy  print  single  space  separated  several  possible  variant  print  exist  print  single
1252/D __label__dp  __label__data  structures  __label__trees  __label__strings  grid  containing  row  numbered  top  bottom  column  numbered  left  right  uppercase  character  character  row  column  denoted  string  containing  uppercase  character  string  want  find  occurrence  string  grid  occurrence  string  grid  counted  constructed  starting  cell  grid  going  right  time  going  time  occurrence  different  set  cell  used  construct  string  different  formally  string  would  like  count  tuples  begin  containing  c  representing  size  grid  string  respectively  next  contains  uppercase  character  representing  grid  character  next  contains  string  containing  uppercase  character  length  string  positive  sum  length  string  combined  query  order  input  output  representing  occurrence  string  grid
86/B __label__math  __label__greedy  __label__constructive  algorithms  physicist  woll  like  play  relaxing  game  search  theory  everything  game  interface  consists  rectangular  n  playing  field  dashboard  initially  cell  playing  field  filled  others  empty  dashboard  contains  image  various  connected  mean  connectivity  side  figure  cell  rotation  reflection  player  copy  figure  dashboard  place  anywhere  still  empty  cell  playing  field  course  figure  used  many  time  needed  woll  aim  fill  whole  field  way  empty  cell  left  fun  every  initially  empty  cell  filled  exactly  cell  figure  every  figure  entirely  inside  board  picture  black  cell  stand  initially  filled  cell  field  colour  region  represent  figure  contains  height  width  field  correspondingly  next  symbol  represent  field  natural  way  character  corresponding  cell  filled  empty  chance  win  game  output  without  quote  otherwise  output  filling  field  figure  following  format  figure  represented  digit  figure  touch  side  represented  distinct  digit  every  initially  filled  cell  represented
391/C1 __label__brute  force  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  decided  pursue  fighter  career  decided  begin  ongoing  tournament  manao  joined  contestant  tournament  numbered  already  obtained  amount  tournament  point  namely  fighter  point  manao  going  engage  single  fight  contestant  manao  fight  end  either  win  loss  win  grant  manao  point  loss  grant  manao  opponent  point  manao  estimated  amount  effort  need  invest  win  contestant  losing  fight  cost  effort  manao  finish  fight  ranklist  determined  best  rank  worst  contestant  ranked  descending  order  tournament  point  contestant  point  manao  ranked  better  match  worse  otherwise  exact  mechanism  breaking  tie  fighter  relevant  manao  objective  rank  better  determine  minimum  total  amount  effort  need  invest  order  fulfill  goal  possible  contains  pair  following  contains  separated  single  space  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  subproblem  point  constraint  hold  print  single  single  minimum  amount  effort  manao  need  use  rank  top  amount  effort  earn  manao  rank  output
1065/D __label__dp  __label__dfs  stumbled  upon  new  kind  chess  puzzle  chessboard  given  necesserily  still  nn  square  ha  written  pairwise  distinct  square  row  ha  written  chess  set  piece  knight  bishop  rook  put  square  choose  want  reach  square  possibly  passing  square  process  square  reach  square  step  allowed  either  make  valid  move  current  piece  replace  piece  square  visited  arbitrary  time  knight  move  square  square  away  horizontally  square  vertically  square  vertically  square  horizontally  bishop  move  diagonally  rook  move  horizontally  vertically  move  performed  different  square  piece  currently  standing  want  minimize  step  whole  traversal  path  step  want  choose  lowest  piece  replacement  path  take  satisfy  condition  contains  single  size  chessboard  next  contains  written  square  row  board  guaranteed  pairwise  distinct  step  best  answer  replacement  move
573/B __label__math  __label__dp  __label__data  structures  __label__binary  search  limak  little  bear  love  play  today  playing  destroying  block  tower  built  tower  row  tower  made  identical  block  clarification  see  picture  sample  limak  repeat  following  operation  till  everything  destroyed  block  called  internal  ha  neighbor  ha  side  top  left  right  adjacent  block  floor  otherwise  block  boundary  operation  limak  destroys  boundary  block  paw  fast  destroys  block  time  limak  ready  start  task  count  many  operation  take  destroy  tower  contains  single  second  contains  space  separated  size  tower  print  operation  needed  destroy  tower
730/I __label__dp  __label__greedy  student  berland  state  university  every  student  ha  skill  measured  programming  skill  sport  skill  announced  olympiad  programming  sport  held  soon  berland  state  university  choose  team  take  part  programming  track  take  part  sport  track  exactly  student  programming  team  exactly  student  sport  team  student  member  team  university  management  considers  strength  university  olympiad  equal  sum  value  programming  team  strength  sport  team  strength  strength  team  sum  skill  member  corresponding  area  strength  programming  team  sum  strength  sport  team  sum  corresponding  team  member  help  berland  state  university  compose  team  maximize  total  strength  university  olympiad  contains  positive  student  size  programming  team  size  sport  team  second  contains  positive  programming  skill  student  third  contains  positive  sport  skill  student  print  maximum  strength  university  olympiad  second  print  member  programming  team  third  print  member  sport  team
1167/G __label__brute  force  __label__geometry  got  bored  decided  take  guess  would  inception  production  budget  film  terribly  low  scene  remembered  wa  feature  whole  city  bending  onto  feel  like  require  high  cgi  expense  luckily  came  similar  looking  scene  wa  tiny  bit  cheaper  make  firstly  forget  hard  expensive  city  represented  infinite  make  easier  course  secondly  city  look  natural  building  building  square  building  numbered  ascending  order  position  lower  corner  building  point  distance  neighbouring  building  exceed  really  condition  make  city  look  sparse  distance  neighbouring  building  calculated  lower  right  corner  building  lower  left  corner  building  finally  curvature  bend  really  hard  simulate  let  bend  coordinate  performed  following  algorithm  take  ray  building  ray  start  turning  ray  building  counter  clockwise  around  point  angle  building  touch  either  another  building  part  stop  bending  implementing  building  crushing  worth  money  let  call  angle  ray  final  state  terminal  angle  thing  left  decide  point  best  start  bending  around  fortunately  already  chosen  candidate  perform  bending  please  help  calculate  terminal  angle  bend  list  candidate  contains  building  maximum  distance  pair  neighbouring  building  respectively  second  contains  coordinate  left  corner  corresponding  building  ascending  order  third  contains  single  candidate  fourth  contains  coordinate  bend  need  calculate  terminal  angle  ascending  order  print  bend  print  terminal  angle  radian
549/B __label__greedy  __label__dfs  __label__graphs  __label__constructive  algorithms  looksery  company  consisting  staff  member  planning  another  big  party  every  employee  ha  phone  phone  friend  phone  book  everyone  come  party  sends  message  contact  cool  time  everyone  trying  spend  much  time  fun  possible  send  message  everyone  without  special  thinking  moreover  person  even  sends  message  igor  max  looksery  developer  started  dispute  many  message  person  get  igor  indicates  indicates  many  message  view  employee  going  take  igor  guess  correctly  least  win  otherwise  max  win  support  max  debate  need  given  contact  list  employee  determine  whether  situation  igor  loses  specifically  need  determine  employee  come  party  visitor  send  message  contact  employee  received  message  different  igor  stated  contains  single  employee  company  looksery  next  description  contact  list  employee  contains  string  length  consisting  digit  specifying  contact  list  employee  character  string  equal  employee  employee  contact  list  otherwise  guaranteed  character  always  equal  last  contains  space  separated  represents  message  employee  get  according  igor  print  single  employee  come  party  igor  loses  dispute
1004/E __label__dp  __label__greedy  __label__data  structures  __label__trees  __label__binary  search  sonya  like  ice  cream  much  eats  even  programming  competition  girl  decided  want  open  ice  cream  shop  sonya  life  city  junction  street  street  way  connect  junction  possible  travel  junction  using  street  city  hall  allows  opening  shop  junction  girl  open  shop  middle  street  sonya  ha  exactly  friend  trust  open  shop  friend  ha  work  allow  anybody  eat  ice  cream  paying  since  sonya  doe  want  skip  important  competition  work  shop  personally  sonya  want  ice  cream  shop  form  simple  path  length  located  different  junction  street  girl  take  care  potential  buyer  want  minimize  maximum  distance  junction  nearest  ice  cream  shop  distance  junction  equal  sum  street  length  need  pas  get  junction  junction  sonya  want  minimize  max  min  maxamin  da  take  value  possible  junction  junction  sonya  shop  located  distance  junction  sonya  sure  find  optimal  shop  location  asking  help  open  shop  form  simple  path  maximum  distance  junction  nearest  shop  would  minimal  contains  junction  friend  respectively  next  contains  junction  connected  street  length  street  guaranteed  pair  junction  connected  street  guaranteed  get  junction  print  minimal  possible  maximum  distance  need  pas  get  junction  nearest  ice  cream  shop  sonya  shop  must  form  simple  path  shop  must
387/C __label__implementation  __label__greedy  george  cat  really  like  play  like  play  array  positive  game  george  modifies  array  using  special  change  let  mark  george  current  array  record  denotes  current  length  array  change  sequence  action  choose  distinct  index  bij  get  oncat  concat  obtained  adding  end  decimal  record  example  concat  concat  add  end  array  length  array  increase  remove  array  index  length  array  decrease  element  array  become  numbered  current  length  array  george  played  long  time  array  received  array  array  consisting  exactly  george  want  know  maximum  element  array  could  originally  help  find  note  originally  array  could  positive  input  contains  single  guaranteed  leading  print  maximum  element  array  could  originally
570/A __label__implementation  country  byalechinsk  running  election  involving  candidate  country  consists  city  know  many  people  city  voted  candidate  electoral  system  country  pretty  unusual  stage  election  vote  counted  city  assumed  city  candidate  got  highest  vote  city  several  candidate  got  maximum  vote  winner  smaller  index  second  stage  election  winner  determined  principle  city  winner  election  candidate  maximum  city  got  maximum  city  winner  smaller  index  determine  win  election  input  contains  candidate  city  respectively  next  contains  non  negative  aij  ij  denotes  vote  candidate  city  guaranteed  total  people  city  doe  exceed  print  single  index  candidate  election  candidate  indexed  starting
662/C __label__math  __label__dp  __label__brute  force  given  table  consisting  row  column  cell  table  contains  either  move  allowed  pick  row  column  invert  value  replace  vice  versa  minimum  cell  value  get  applying  operation  input  contains  row  column  respectively  follows  description  row  ha  length  contains  digit  output  single  minimum  possible  get  applying  sequence  operation
362/B __label__implementation  __label__sortings  little  boy  petya  love  stair  much  bored  simple  going  love  jumping  several  stair  time  stand  stair  either  jump  next  jump  stair  time  stair  dirty  petya  want  step  petya  stair  staircase  consisting  stair  know  dirty  stair  staircase  help  petya  find  jump  entire  staircase  reach  last  stair  without  touching  dirty  stair  ha  note  anyway  petya  step  last  stair  last  stair  dirty  petya  choose  path  clean  step  contains  stair  staircase  dirty  stair  correspondingly  second  contains  different  space  separated  dirty  stair  arbitrary  order  print  yes  petya  reach  stair  stepping  clean  stair  otherwise  print
494/E __label__data  structures  last  hour  hamed  malek  spent  time  playing  sharti  exhausted  finish  last  round  asked  help  determine  winner  round  sharti  played  n  board  cell  colored  white  others  colored  black  row  board  numbered  top  bottom  using  column  board  numbered  left  right  using  cell  located  intersection  row  column  denoted  player  alternatively  take  turn  turn  player  must  choose  square  side  length  lower  right  cell  painted  white  color  cell  square  inversed  white  cell  become  black  vice  versa  player  perform  move  turn  loses  know  hamed  malek  clever  would  played  best  move  turn  knowing  fact  hamed  take  turn  given  initial  board  described  input  must  determine  winner  problem  initial  board  specified  set  rectangle  cell  lie  inside  least  rectangle  colored  white  rest  colored  black  input  space  spereated  follow  denoting  size  board  rectangle  maximum  size  turn  square  game  respectively  next  space  seperated  ii  ii  given  meaning  rectangle  determining  initial  board  rectangle  upper  left  cell  lower  right  cell  hamed  win  print  hamed  otherwise  print  malek  without  quote
58/A __label__greedy  __label__strings  vasya  ha  recently  learned  type  log  internet  immediately  entered  chat  room  decided  say  hello  everybody  vasya  typed  word  considered  vasya  managed  say  hello  several  letter  deleted  typed  word  resulted  word  hello  example  vasya  type  word  ahhellllloou  considered  said  hello  type  hlelo  considered  vasya  got  misunderstood  manage  say  hello  determine  whether  vasya  managed  say  hello  given  word  contains  word  vasya  typed  word  consisits  small  latin  letter  length  le  letter  vasya  managed  say  hello  print  yes  otherwise  print
526/A __label__implementation  __label__brute  force  problem  meet  simplified  model  game  king  thief  new  zeptolab  game  called  king  thief  aim  reach  chest  gold  controlling  character  avoiding  trap  obstacle  way  interesting  feature  game  design  level  available  player  let  consider  following  simple  design  level  dungeon  consists  segment  located  vertical  level  segment  either  platform  character  stand  pit  trap  make  player  lose  fall  segment  length  platform  scheme  level  represented  pit  represented  thing  affect  speedrun  characteristic  level  possibility  perform  series  consecutive  jump  length  formally  character  platform  make  sequence  jump  platform  course  segment  exactly  platform  pit  let  call  level  good  perform  sequence  jump  length  word  must  sequence  consisting  platform  interval  consecutive  platform  length  given  scheme  level  check  good  contains  segment  level  next  contains  scheme  level  represented  string  character  level  good  print  word  yes  without  quote  otherwise  print  word  without  quote
101/E __label__dp  little  gerald  coach  mike  play  interesting  game  beginning  game  pile  consisting  candy  pile  consisting  stone  gerald  mike  move  turn  mike  go  move  mike  check  many  candy  stone  gerald  ha  eaten  let  gerald  eat  candy  stone  mike  award  gerald  prize  point  gerald  move  either  eats  candy  pile  candy  stone  pile  stone  mike  see  gerald  ha  eaten  everything  apart  candy  stone  award  point  last  time  game  end  gerald  allowed  eat  candy  allowed  eat  stone  tell  gerald  play  get  largest  possible  point  required  find  possible  optimal  playing  strategy  gerald  contains  second  contains  third  contains  value  calculated  remainder  division  sum  print  maximal  point  gerald  earn  print  second  sting  consisting  character  either  character  gerald  move  eating  candy  eat  stone
641/B __label__implementation  little  artem  like  electronics  spend  lot  time  making  different  schema  looking  novelty  nearest  electronics  store  new  control  element  wa  delivered  store  recently  artem  immediately  bought  element  store  information  matrix  size  n  input  element  row  column  get  signal  signal  come  input  corresponding  row  row  cyclically  shift  left  element  row  becomes  last  element  second  element  becomes  signal  come  input  corresponding  column  column  shift  cyclically  top  element  column  becomes  last  element  second  element  becomes  row  numbered  top  bottom  column  numbered  left  right  artem  want  carefully  study  element  using  purpose  going  set  experiment  consisting  turn  turn  either  sends  signal  input  check  stored  position  matrix  artem  ha  completed  experiment  ha  written  result  ha  lost  chip  help  artem  find  initial  matrix  match  experiment  result  guaranteed  experiment  data  consistent  mean  least  valid  matrix  exists  input  contains  dimension  matrix  turn  experiment  respectively  next  turn  description  per  description  start  defines  type  operation  operation  second  type  follows  operation  third  type  given  operation  type  mean  signal  come  input  corresponding  row  shift  cyclically  operation  second  type  mean  column  shift  cyclically  finally  operation  third  type  mean  moment  time  cell  located  row  column  store  value  print  description  valid  initial  matrix  containing  output  exceed  absolute  value
702/F __label__data  structures  big  consignment  shirt  go  sale  shop  beginning  spring  type  shirt  sale  shirt  type  ha  parameter  price  type  shirt  quality  type  shirt  assumed  unlimited  shirt  type  go  sale  shop  general  quality  concerned  price  predicted  customer  come  shop  next  month  customer  get  ready  spend  buying  shirt  customer  strategy  customer  want  buy  maximum  possible  highest  quality  shirt  buy  maximum  possible  highest  quality  shirt  residuary  shirt  time  several  quality  shirt  customer  buy  cheaper  customer  like  shirt  customer  buy  shirt  type  determine  shirt  customer  buy  use  described  strategy  customer  act  independently  purchase  doe  affect  purchase  another  contains  positive  shirt  type  following  contains  price  quality  type  shirt  next  contains  positive  customer  next  contains  positive  j  equal  sum  customer  get  ready  spend  shirt  input  data  sequence  equal  shirt  customer  buy
791/A __label__implementation  bear  limak  want  become  largest  bear  least  become  larger  brother  bob  right  limak  bob  weigh  respectively  guaranteed  limak  weight  smaller  equal  brother  weight  limak  eats  lot  weight  tripled  every  year  bob  weight  doubled  every  year  many  full  year  limak  become  strictly  larger  strictly  heavier  bob  input  contains  weight  limak  weight  bob  respectively  print  denoting  year  limak  become  strictly  larger  bob
763/C __label__math  __label__implementation  __label__brute  force  __label__number  theory  little  timofey  like  lot  unfortunately  young  work  big  doe  operation  modulo  favorite  prime  timofey  like  look  arithmetical  progression  everywhere  birthday  present  wa  sequence  distinct  timofey  want  know  whether  rearrange  element  sequence  arithmetical  progression  modulo  arithmetical  progression  modulo  length  element  difference  sequence  taken  modulo  contains  prime  timofey  favorite  prime  module  length  sequence  second  contains  distinct  element  sequence  print  possible  rearrange  element  sequence  arithmetical  progression  modulo
670/D2 __label__implementation  __label__binary  search  term  problem  previous  exception  increased  restriction  contains  positive  ingredient  gram  magic  powder  second  contains  sequence  equal  gram  ingredient  needed  bake  cookie  third  contains  sequence  equal  gram  ingredient  apollinaria  ha  print  maximum  cooky  apollinaria  able  bake  using  ingredient  ha  magic  powder
311/C __label__data  structures  __label__graphs  __label__brute  force  rainbow  built  cell  row  numbered  left  right  cell  treasure  call  cell  treasure  cell  treasure  cell  cell  value  treasure  dollar  freda  went  cell  cell  forward  return  cell  mean  freda  wa  able  reach  st  cell  rainbow  gave  freda  operation  operation  following  type  add  another  method  cell  forward  moment  example  initially  ha  method  moment  ha  method  reach  cell  form  non  negative  reduce  value  treasure  treasure  cell  dollar  word  apply  assignment  ask  value  valuable  treasure  cell  freda  reach  freda  reach  cell  treasure  consider  value  valuable  treasure  equal  nothing  otherwise  take  valuable  treasure  away  several  treasure  cell  valuable  treasure  take  treasure  cell  minimum  necessarily  minimum  cell  total  cell  treasure  decreased  programmer  asked  freda  write  program  answer  query  input  contains  next  contains  mean  treasure  cell  cell  cost  treasure  cell  dollar  distinct  next  following  format  operation  type  operation  type  operation  type  operation  type  guaranteed  moment  treasure  cell  ha  positive  value  guaranteed  operation  correct  operation  decrease  value  taken  tresure  please  use  lld  specifier  read  bit  preferred  use  cin  cout  stream  specifier  operation  type  output  indicates  value  dollar  valuable  treasure  treasure  cell  freda  reach  treasure  output
986/D __label__math  working  analyst  company  working  new  system  big  data  storage  system  store  different  object  object  unique  create  system  choose  parameter  system  parameter  object  system  array  hold  every  developer  say  production  cost  proportional  asked  choose  parameter  system  able  assign  unique  id  different  object  production  cost  minimized  note  use  available  id  input  positive  length  decimal  representation  greater  doe  leading  print  minimal  value
93/B __label__greedy  student  love  celebrate  holiday  especially  holiday  day  end  exam  despite  fact  igor  unlike  groupmates  failed  pas  programming  test  decided  invite  cafe  could  drink  bottle  fresh  cow  milk  entered  cafe  friend  found  different  kind  milk  menu  ordered  bottle  bottle  kind  know  volume  milk  bottle  equal  bottle  brought  decided  pour  milk  evenly  cup  got  cup  punishment  passing  test  igor  wa  appointed  person  pour  milk  protested  wa  afraid  mix  something  suggested  distribute  drink  milk  bottle  wa  different  cup  friend  agreed  suddenly  faced  following  problem  actually  way  help  write  program  help  distribute  milk  cup  drink  quickly  possible  note  due  igor  perfectly  accurate  eye  unswerving  hand  pour  fractional  amount  milk  bottle  cup  input  data  file  contains  stand  ordered  bottle  stand  volume  stand  friend  company  print  yes  possible  pour  milk  milk  bottle  wa  different  cup  solution  print
1157/C2 __label__greedy  difference  problem  value  input  problem  distinct  condition  false  problem  given  sequence  consisting  making  sequence  move  move  must  take  either  leftmost  element  sequence  rightmost  element  sequence  write  remove  sequence  task  write  strictly  increasing  sequence  sequence  take  longest  length  sequence  element  example  sequence  answer  take  sequence  becomes  take  rightmost  element  sequence  becomes  take  sequence  becomes  take  sequence  becomes  obtained  increasing  sequence  input  contains  element  second  input  contains  element  output  print  maximum  element  strictly  increasing  sequence  obtain
1100/A __label__implementation  morning  roman  woke  opened  browser  opened  tab  numbered  kind  tab  information  required  test  social  network  site  roman  decided  many  tab  open  want  close  decided  accomplish  closing  every  tab  decide  whether  want  study  test  chat  social  network  formally  roman  choose  tab  let  close  tab  satisfy  following  condition  positive  negative  example  roman  chooses  close  tab  closing  tab  roman  calculate  amount  remaining  tab  information  test  let  denote  amount  remaining  social  network  tab  help  roman  calculate  maximal  absolute  value  difference  value  would  easy  decide  next  contains  n  amount  tab  opened  currently  distance  tab  closed  second  consists  equal  either  denotes  type  tab  equal  tab  contains  information  test  equal  social  network  tab  output  single  maximum  absolute  difference  amount  remaining  tab  different  type
396/D __label__math  given  permutation  calculate  total  inversion  permutation  lexicographically  exceed  given  large  print  modulo  contains  single  length  permutation  second  contains  distinct  print  single  answer  problem  modulo
1249/A __label__math  coach  group  consisting  student  student  ha  programming  skill  student  distinct  programming  skill  want  divide  team  way  student  belong  team  skill  pair  student  team  difference  strictly  greater  team  minimum  possible  answer  independent  query  input  contains  query  query  follow  query  contains  student  query  second  query  contains  distinct  programming  skill  student  query  print  answer  minimum  team  form  student  belong  team  skill  pair  student  team  ha  difference  strictly  greater
1148/G __label__math  __label__graphs  __label__constructive  algorithms  __label__number  theory  consider  undirected  graph  vertex  value  vertex  vertex  connected  edge  gcd  gcd  denotes  greatest  common  divisor  gcd  consider  set  vertex  let  call  vertex  set  fair  connected  edge  vertex  set  need  find  set  vertex  given  vertex  fair  vertex  fair  show  set  always  exists  contains  vertex  parameter  second  contains  value  vertex  print  exactly  distinct  index  vertex  chosen  set  order
627/A __label__math  __label__dp  positive  sum  bitwise  xor  many  possible  value  ordered  pair  input  contains  sum  bitwise  xor  pair  positive  respectively  print  single  solution  given  condition  solution  exist  print
575/G __label__dfs  people  bubbleland  like  drink  beer  little  know  beer  good  strong  every  time  drink  speed  go  time  slower  drank  birko  life  city  beergrade  want  city  beerburg  given  road  map  bubbleland  need  find  fastest  way  start  journey  beergrade  speed  come  new  city  always  try  glass  local  beer  divide  speed  question  minimal  time  reach  beerburg  several  path  minimal  time  pick  ha  least  road  still  path  pick  guaranteed  least  path  beergrade  beerburg  input  contains  city  bubbleland  road  country  city  enumerated  city  beergrade  city  beerburg  following  contains  len  indicate  bidirectional  road  city  length  len  en  road  city  output  minimal  time  needed  beergrade  beerburg
735/E __label__dp  __label__trees  ostap  already  settled  rio  janiero  suburb  started  grow  tree  garden  recall  tree  connected  undirected  acyclic  graph  ostap  tree  ha  vertex  want  paint  vertex  tree  black  vertex  least  black  vertex  distance  distance  vertex  tree  minimum  possible  edge  path  way  paint  tree  large  ostap  want  compute  modulo  way  paint  tree  considered  different  exists  vertex  painted  black  way  painted  input  contains  vertex  ostap  tree  maximum  allowed  distance  nearest  black  vertex  miss  unusual  constraint  next  index  vertex  connected  edge  guaranteed  given  graph  tree  print  remainder  division  way  paint  tree
756/C __label__data  structures  nikita  ha  stack  stack  problem  data  structure  support  operation  operation  push  put  top  stack  operation  pop  deletes  top  stack  last  added  stack  empty  operation  pop  doe  nothing  nikita  made  operation  stack  forgot  nikita  want  remember  remembers  step  remembers  operation  made  word  remembers  operation  order  permutation  step  nikita  want  know  top  stack  performing  operation  already  remembered  corresponding  order  help  contains  operation  nikita  made  next  operation  nikita  remembers  start  index  operation  remembers  step  type  operation  equal  operation  pop  operation  push  operation  push  contains  added  stack  guaranteed  present  exactly  print  equal  top  stack  performing  operation  nikita  remembered  step  stack  empty  performing  operation  print
954/I __label__math  suppose  string  length  equal  perform  following  operation  time  choose  different  character  replace  every  occurence  string  let  denote  distance  string  minimum  operation  required  make  string  equal  example  abcd  ddcb  distance  replace  every  occurence  becomes  bbcd  replace  every  occurence  string  become  ddcd  given  string  every  substring  consisting  character  determine  distance  substring  contains  string  second  string  string  consist  lowercase  latin  letter  print  must  equal  distance  substring  beginning  index  length  string
1068/A __label__math  ivan  collecting  coin  different  collectible  coin  ivan  ha  celebrating  birthday  soon  freinds  decided  gift  coin  agreed  term  everyone  must  gift  many  coin  others  coin  given  ivan  must  different  le  coin  gift  altogether  must  new  ivan  collection  friend  know  coin  ivan  already  got  collection  want  spend  money  want  buy  minimum  quantity  coin  satisfy  term  irrespective  ivan  collection  help  find  minimum  coin  define  possible  meet  term  input  contains  quantity  different  coin  ivan  friend  size  ivan  collection  quantity  coin  must  new  ivan  collection  print  minimal  coin  friend  gift  satisfy  condition  impossible  satisfy  condition  print  without  quote
20/B __label__math  given  equation  ax  task  find  distinct  root  equation  print  ascending  order  contains  coefficient  equal  case  infinite  root  count  print  case  root  print  case  print  root  root  following  ascending  order  print  root  least  digit  decimal  point
807/A __label__implementation  __label__sortings  rated  ultimate  question  competitive  programming  codeforces  everything  answer  another  codeforces  round  ha  conducted  participant  point  participant  top  bottom  standing  rating  round  known  known  least  participant  rating  ha  changed  round  wa  rated  sure  known  round  wa  rated  participant  lower  rating  took  better  place  standing  participant  higher  rating  least  round  participant  rating  ha  changed  problem  make  assumption  rating  system  determine  current  round  rated  unrated  impossible  determine  whether  rated  contains  single  round  participant  next  contains  rating  participant  round  respectively  participant  listed  order  top  bottom  standing  round  rated  sure  print  rated  round  unrated  sure  print  unrated  impossible  determine  whether  round  rated  print  maybe
859/G __label__math  evenly  spaced  point  marked  around  edge  circle  written  point  choose  positive  real  repeatedly  select  set  point  evenly  spaced  either  increase  point  set  decrease  point  set  would  like  eventually  end  equal  possible  set  point  considered  evenly  spaced  diametrically  opposed  set  point  considered  evenly  spaced  form  regular  polygon  input  contains  point  along  circle  following  contains  string  exactly  digit  indicating  initially  present  point  clockwise  order  print  yes  without  quote  sequence  operation  result  otherwise  without  quote
818/A __label__math  __label__implementation  student  taken  part  olympiad  time  award  student  receive  diploma  wiil  get  certificate  others  receive  anything  student  diploma  certificate  called  winner  rule  counting  diploma  certificate  certificate  must  exactly  time  greater  diploma  winner  must  greater  half  student  greater  half  possible  winner  identify  maximum  possible  winner  according  rule  case  calculate  student  diploma  student  certificate  student  winner  input  contains  student  ratio  certificate  diploma  output  student  diploma  student  certificate  student  winner  case  winner  maximum  possible
587/B __label__dp  duff  wa  resting  beach  accidentally  found  strange  array  consisting  positive  array  wa  strange  wa  extremely  long  wa  another  maybe  shorter  array  build  formula  mod  mod  denoted  remainder  dividing  duff  curious  want  know  subsequence  like  bi  ix  bijij  subsequence  non  decreasing  since  large  want  know  modulo  duff  programmer  malek  unavailable  moment  asked  help  please  tell  input  contains  n  second  contains  space  separated  print  answer  modulo
771/A __label__dfs  __label__graphs  bear  limak  examines  social  network  main  functionality  member  become  friend  talk  share  funny  picture  member  numbered  pair  member  friend  course  member  friend  let  denote  member  friend  limak  think  network  reasonable  following  condition  satisfied  every  distinct  member  example  alan  bob  friend  bob  ciri  friend  alan  ciri  friend  well  help  limak  check  network  reasonable  print  yes  accordingly  without  quote  input  member  pair  member  friend  next  contains  distinct  ii  member  friend  pair  member  appear  input  given  network  reasonable  print  yes  single  without  quote  otherwise  print  single  without  quote
411/B __label__implementation  research  center  ha  developed  new  multi  core  processor  processor  consists  core  ha  cell  cache  memory  consider  work  processor  cycle  core  processor  get  instruction  either  nothing  memory  cell  core  write  information  cell  receiving  command  core  executes  immediately  sometimes  happens  cycle  multiple  core  try  write  information  single  cell  unfortunately  developer  foresee  possibility  resolving  conflict  core  case  deadlock  core  corresponding  memory  cell  locked  forever  locked  core  ignores  command  core  future  able  record  information  locked  cell  core  try  write  information  locked  cell  immediately  locked  development  team  want  explore  deadlock  situation  therefore  need  program  simulate  processor  given  set  instruction  core  cycle  lucky  interesting  work  entrusted  according  instruction  cycle  define  core  cycle  become  locked  believed  initially  core  memory  cell  locked  contains  follow  describing  instruction  contains  xi  im  ij  xij  instruction  must  executed  core  cycle  xij  equal  corresponding  instruction  nothing  xij  corresponding  instruction  write  information  memory  cell  xij  assume  core  numbered  work  cycle  numbered  memory  cell  numbered  print  print  equal  core  locked  equal  cycle  core  locked
557/C __label__math  __label__dp  __label__greedy  __label__data  structures  __label__sortings  __label__brute  force  arthur  ha  bought  beautiful  big  table  new  flat  came  home  arthur  noticed  new  table  unstable  total  table  arthur  bought  ha  leg  length  leg  arthur  decided  make  table  stable  remove  leg  arthur  determined  amount  energy  spends  remove  leg  table  leg  assumed  stable  half  leg  maximum  length  example  make  table  leg  stable  need  make  sure  ha  least  leg  maximum  length  table  leg  always  stable  table  leg  stable  length  task  help  arthur  count  minimum  energy  unit  arthur  spend  making  table  stable  input  contains  initial  leg  table  arthur  bought  second  input  contains  sequence  equal  length  leg  table  third  input  contains  sequence  energy  unit  arthur  spends  removing  leg  table  print  single  minimum  energy  unit  arthur  need  spend  order  make  table  stable
1028/C __label__implementation  __label__sortings  __label__geometry  given  rectangle  plane  coordinate  bottom  left  upper  right  point  given  rectangle  common  point  point  belongs  rectangle  point  strictly  inside  rectangle  belongs  boundary  find  point  coordinate  belongs  least  given  rectangle  contains  single  given  rectangle  next  contains  coordinate  bottom  left  upper  right  corner  rectangle  print  coordinate  point  belongs  least  given  rectangle
955/C __label__math  __label__binary  search  __label__number  theory  given  query  form  query  find  l  exist  contains  query  next  contains  output  answer  query
1194/G __label__dp  let  call  fraction  good  exists  least  another  fraction  digit  denoting  contained  decimal  representation  digit  denoting  contained  decimal  representation  example  good  fraction  given  please  calculate  good  fraction  answer  really  large  print  modulo  input  contains  print  good  fraction  answer  really  large  print  modulo
549/E __label__math  __label__geometry  berlanders  like  eat  cone  hard  day  misha  square  sasha  circle  local  authority  berland  control  point  cone  trade  misha  ha  point  sasha  since  subordinate  constantly  conflict  decided  build  fence  form  circle  point  trade  businessman  strictly  inside  circle  point  strictly  outside  matter  gentleman  trade  point  inside  circle  determine  whether  build  fence  contains  misha  sasha  trade  point  respectively  next  contains  pair  space  separated  x  coordinate  misha  trade  point  next  contains  pair  space  separated  x  coordinate  sasha  trade  point  guaranteed  point  distinct  output  either  word  yes  without  quote  case  possible  build  fence  word  case
1146/A __label__implementation  __label__strings  alice  ha  string  really  like  letter  call  string  good  strictly  half  character  string  example  aaabb  axaa  good  string  baca  awwwa  empty  string  alice  erase  character  string  would  like  know  longest  string  remaining  erasing  character  possibly  get  good  string  guaranteed  string  ha  least  answer  always  exists  contains  string  consisting  lowercase  english  letter  guaranteed  least  print  single  length  longest  good  string  alice  get  erasing  character
1073/F __label__dp  __label__greedy  __label__dfs  __label__trees  given  undirected  unweighted  tree  consisting  vertex  undirected  tree  connected  undirected  graph  edge  task  choose  pair  vertex  tree  chosen  vertex  distinct  way  neither  belong  simple  path  vice  versa  neither  belong  simple  path  guaranteed  possible  choose  pair  given  tree  possible  way  choose  pair  choose  maximum  common  vertex  path  pair  choose  maximum  total  length  path  guaranteed  answer  least  common  vertex  exists  given  tree  length  path  edge  simple  path  path  visit  vertex  contains  vertex  tree  next  describes  edge  tree  edge  denoted  label  vertex  connects  guaranteed  given  edge  form  tree  guaranteed  answer  least  common  vertex  exists  given  tree  print  pair  vertex  satisfying  condition  described  problem  statement
780/G __label__dp  __label__data  structures  andryusha  ha  found  perplexing  arcade  machine  machine  vertically  adjusted  board  divided  square  cell  board  ha  column  numbered  left  right  row  numbered  bottom  top  barrier  board  row  barrier  total  occupied  cell  row  andryusha  recollects  well  barrier  share  row  furthermore  row  completely  occupied  barrier  least  cell  row  free  player  throw  marble  column  machine  marble  fall  downwards  encounter  barrier  fall  bottom  board  marble  disappears  encounter  barrier  replaced  marble  immediately  left  right  barrier  situation  barrier  edge  board  marble  appear  next  barrier  side  opposite  edge  marble  occupy  place  board  without  obstructing  movement  ultimately  marble  bound  fall  bottom  machine  example  marble  barrier  interaction  peculiarly  sometimes  marble  barrier  free  cell  barrier  fact  alive  frightened  marble  wa  coming  high  altitude  specifically  marble  fall  towards  barrier  relative  height  started  fall  strictly  higher  barrier  evades  marble  marble  thrown  top  board  considered  appear  height  andryusha  remembers  thrown  marble  column  help  find  total  marble  came  bottom  machine  since  answer  large  print  modulo  contains  row  column  barrier  machine  respectively  next  describe  barrier  containts  ii  row  index  leftmost  rightmost  column  index  barrier  largest  relative  fall  height  barrier  doe  evade  falling  marble  guaranteed  row  ha  least  free  cell  distinct  print  answer  problem  modulo
1153/C __label__greedy  __label__strings  serval  soon  said  goodbye  japari  kindergarten  began  life  japari  primary  school  favorite  math  class  teacher  taught  following  interesting  definition  parenthesis  sequence  string  containing  character  correct  parenthesis  sequence  parenthesis  sequence  transformed  correct  arithmetic  expression  inserting  character  original  character  sequence  example  parenthesis  sequence  correct  resulting  expression  note  empty  string  correct  parenthesis  sequence  definition  define  length  string  strict  prefix  string  string  note  empty  string  whole  string  strict  prefix  string  definition  learned  definition  come  new  problem  writes  string  containing  character  going  replace  independently  make  strict  prefix  new  sequence  correct  parenthesis  sequence  new  sequence  correct  parenthesis  sequence  primary  school  student  problem  hard  solve  best  friend  help  replace  question  mark  many  solution  acceptable  contains  single  length  string  second  contains  string  containing  single  contains  string  representing  answer
399/A __label__implementation  user  ainta  making  web  site  time  going  make  navigation  page  site  page  numbered  assume  somebody  page  navigation  look  like  someone  click  button  redirected  page  someone  click  button  redirected  page  course  someone  click  redirected  corresponding  page  condition  navigation  page  navigation  button  must  printed  page  navigation  button  must  printed  page  smaller  greater  must  printed  see  example  navigation  make  program  print  navigation  contains  print  proper  navigation  follow  format  output  test  sample
51/C __label__greedy  __label__binary  search  new  vasjuki  village  stretched  along  motorway  every  house  characterized  shift  relative  fixed  point  coordinate  village  consists  house  house  located  point  coordinate  tele  cellular  communication  provider  planned  locate  base  station  provide  every  house  village  cellular  communication  base  station  power  located  point  provides  communication  house  segment  including  boundary  simplify  integration  simply  mix  anything  station  planned  posse  equal  power  minimal  value  enough  provide  house  village  cellular  communication  contains  represents  house  village  second  contains  coordinate  house  sequence  possible  house  located  point  coordinate  given  arbitrary  order  print  required  minimal  power  second  print  possible  coordinate  base  station  location  print  coordinate  digit  decimal  point  position  station  inclusively  accepted  base  station  matching  coordinate  many  solution  print
710/D __label__math  given  arithmetic  progression  k  l  find  l  k  l  contains  print  desired
1118/A __label__math  polycarp  want  cook  soup  need  buy  exactly  liter  water  type  water  bottle  nearby  shop  liter  bottle  liter  bottle  infinitely  many  bottle  type  shop  bottle  type  cost  burles  bottle  second  type  cost  burles  correspondingly  polycarp  want  spend  money  possible  task  find  minimum  amount  money  burles  polycarp  need  buy  exactly  liter  water  nearby  shop  bottle  type  cost  burles  bottle  second  type  cost  burles  answer  independent  query  input  contains  query  next  query  query  given  space  separated  many  liter  polycarp  need  query  cost  burles  bottle  type  query  cost  burles  bottle  second  type  query  respectively  print  equal  minimum  amount  money  burles  polycarp  need  buy  exactly  liter  water  nearby  shop  bottle  type  cost  burles  bottle  second  type  cost  burles
586/B __label__implementation  little  boy  laurenty  ha  playing  favourite  game  nota  quite  hungry  boy  want  make  sausage  cheese  sandwich  need  buy  sausage  cheese  town  laurenty  life  large  house  located  row  house  row  laurenty  life  last  house  second  row  shop  town  placed  house  row  second  row  separated  main  avenue  city  adjacent  house  row  separated  street  crosswalk  street  avenue  ha  traffic  light  order  cross  street  need  press  button  traffic  light  wait  green  light  cross  street  different  traffic  light  different  waiting  time  traffic  light  crosswalk  house  row  house  row  ha  waiting  time  equal  aij  traffic  light  crossing  house  row  house  another  row  waiting  time  equal  city  crossing  boy  want  get  store  buy  product  back  main  avenue  city  wide  enough  boy  want  cross  exactly  way  store  exactly  way  back  home  boy  would  get  bored  walk  way  want  way  home  different  way  store  least  crossing  figure  sample  help  laurenty  determine  minimum  total  time  need  wait  crossroad  input  contains  house  row  next  contains  space  separated  value  aij  ij  last  contains  space  separated  j  print  single  least  total  time  laurenty  need  wait  crossroad  given  cross  avenue  way  store  way  back  home
467/E __label__dp  __label__greedy  __label__data  structures  read  problem  probably  think  alex  genius  person  true  day  came  following  task  given  sequence  find  longest  sequence  satisfies  following  condition  b  k  k  valid  b  k  k  valid  sequence  subsequence  necessarily  contiguous  subsequence  finally  alex  given  complicated  task  george  george  gave  help  george  cope  task  contains  single  next  contains  print  single  maximal  possible  length  required  sequence  second  print  required  sequence
1080/C __label__implementation  recently  masha  wa  presented  chessboard  height  width  row  chessboard  numbered  bottom  top  column  numbered  left  right  therefore  cell  specified  coordinate  column  row  mix  let  call  rectangle  coordinate  rectangle  lower  left  point  ha  coordinate  upper  right  chessboard  painted  black  white  follows  example  chessboard  masha  wa  happy  gift  therefore  invited  friend  maxim  denis  show  guy  decided  make  treat  bought  white  black  paint  old  board  deteriorates  repainted  came  masha  something  unpleasant  happened  maxim  went  threshold  spilled  white  paint  rectangle  denis  spilled  black  paint  rectangle  spill  paint  color  color  onto  certain  rectangle  mean  cell  belong  given  rectangle  become  color  cell  dyeing  superimposed  cell  spilled  white  paint  black  color  black  masha  wa  shocked  drove  away  guest  decided  find  spoiled  gift  wa  need  know  cell  white  black  color  help  find  contains  single  test  case  described  following  format  contains  size  board  second  contains  coordinate  rectangle  white  paint  wa  spilled  third  contains  coordinate  rectangle  black  paint  wa  spilled  output  contains  white  black  cell  spilling  paint  respectively
1181/B __label__implementation  __label__greedy  __label__strings  dima  worked  day  wrote  long  paper  strip  favorite  consisting  digit  unfortunately  strip  turned  long  fit  dima  bookshelf  solve  issue  dima  decided  split  strip  non  empty  part  contains  positive  without  leading  compute  sum  write  new  strip  dima  want  resulting  small  possible  increase  chance  sum  fit  bookshelf  help  dima  decide  minimum  sum  obtain  contains  single  length  dima  favorite  second  contains  positive  initially  written  strip  dima  favorite  consists  exactly  digit  doe  leading  dima  guarantee  least  valid  way  split  strip  print  single  smallest  dima  obtain
755/E __label__graphs  __label__constructive  algorithms  polandball  ha  undirected  simple  graph  consisting  vertex  unfortunately  ha  edge  graph  sad  polandball  wanted  make  happier  adding  red  edge  add  white  edge  every  remaining  place  therefore  final  graph  clique  color  white  red  colorfulness  graph  value  min  diameter  red  subgraph  diameter  white  subgraph  diameter  graph  largest  value  shortest  path  pair  vertex  equal  graph  connected  consider  diameter  polandball  want  final  graph  neat  possible  want  final  colorfulness  equal  help  find  graph  satisfies  polandball  request  input  contains  representing  graph  size  sought  colorfulness  impossible  find  suitable  graph  print
888/A __label__implementation  __label__brute  force  given  array  element  array  local  minimum  iff  strictly  le  neighbour  element  called  local  maximum  iff  strictly  greater  neighbour  since  neighbour  neither  local  minimum  local  maximum  element  called  local  extremum  iff  either  local  maximum  local  minimum  task  calculate  local  extremum  given  array  contains  element  array  second  contains  element  array  print  local  extremum  given  array
623/E __label__math  __label__dp  let  define  transformation  sequence  bitwise  operation  vasya  consequently  applies  transformation  sequence  length  consisting  inclusive  want  know  many  sequence  property  transformation  strictly  increasing  sequence  help  calculate  modulo  input  contains  print  single  answer  problem  modulo
896/C __label__data  structures  willem  matter  seems  something  wrong  seniorious  look  seniorious  made  linking  special  talisman  particular  order  year  carillon  bad  condition  willem  decides  examine  thoroughly  seniorious  ha  piece  talisman  willem  put  order  maintain  willem  need  perform  operation  type  operation  l  assign  l  assign  print  smallest  index  range  element  position  element  l  taken  sorted  array  non  decreasing  guaranteed  print  sum  power  l  modulo  contains  eed  max  eed  max  initial  value  operation  generated  using  following  pseudo  code  def  rnd  ret  seed  seed  seed  mod  return  ret  rnd  mod  vmax  rnd  mod  rnd  mod  rnd  mod  swap  rnd  mod  else  rnd  mod  vmax  rnd  mod  vmax  type  operation  mentioned  legend  operation  type  output  containing  answer
967/B __label__math  __label__sortings  arkady  want  water  flower  unfortunately  ha  poor  watering  system  wa  designed  flower  look  like  pipe  hole  arkady  use  water  flow  hole  arkady  block  hole  pour  liter  water  pipe  water  flow  non  blocked  hole  proportionally  size  word  sum  size  non  blocked  hole  hole  blocked  liter  water  flow  minimum  hole  arkady  block  make  least  liter  water  flow  hole  contains  hole  volume  water  arkady  pour  system  volume  want  get  hole  second  contains  size  hole  print  single  hole  arkady  block
1067/C __label__constructive  algorithms  ivan  place  knight  infinite  chessboard  initially  knight  free  cell  attack  least  knight  place  new  knight  cell  ivan  repeat  free  cell  prove  process  finite  prove  position  end  doe  depend  order  new  knight  placed  ivan  asked  find  initial  placement  exactly  knight  end  least  knight  input  contains  knight  initial  placement  print  coordinate  knight  hold  word  knight  different  cell
637/C __label__implementation  __label__constructive  algorithms  __label__brute  force  new  year  special  offer  sudislavl  bar  offered  promo  code  promo  code  consists  exactly  digit  give  right  free  cocktail  bar  mosquito  shelter  course  promocodes  differ  mosquito  shelter  open  partying  sudislavl  usually  begin  early  many  problem  arise  type  promotional  code  without  error  necessary  calculate  maximum  promotional  code  could  uniquely  identified  wa  typed  error  mean  promotional  code  must  entered  exactly  mistake  problem  considered  entering  wrong  example  value  contains  error  relative  promocode  regardless  error  entered  value  consists  exactly  digit  output  contains  promocodes  next  contains  single  promocode  consisting  exactly  digit  guaranteed  promocodes  distinct  promocodes  start  digit  print  maximum  naturally  exceeding  length  promocode  promocode  uniquely  identified  typed  mistake
893/F __label__data  structures  __label__trees  given  rooted  tree  consisting  vertex  vertex  ha  written  written  vertex  let  denote  distance  vertex  tree  edge  shortest  path  let  denote  blocked  subtree  vertex  set  vertex  condition  met  ancestor  every  vertex  ancestor  given  query  tree  query  represented  answer  query  minimum  value  vertex  belongs  blocked  subtree  write  program  would  process  query  quickly  note  query  given  modified  way  contains  vertex  tree  index  root  respectively  second  contains  written  vertex  follow  containing  representing  edge  vertex  guaranteed  edge  form  tree  next  contains  query  process  follow  containing  used  restore  query  query  restored  follows  let  last  answer  previous  query  ast  od  ast  od  print  ha  equal  answer  query
468/B __label__greedy  __label__dfs  little  ha  distinct  want  divide  set  following  condition  must  satisfied  belongs  set  must  belong  set  belongs  set  must  belong  set  help  little  divide  set  determine  impossible  contains  space  separated  next  contains  space  separated  distinct  way  divide  set  print  yes  print  equal  either  describing  division  equal  belongs  set  otherwise  belongs  set
1107/D __label__math  __label__dp  __label__implementation  __label__number  theory  given  binary  matrix  size  nn  let  denote  compression  given  matrix  matrix  size  every  condition  met  obviously  compression  possible  divide  condition  enough  example  following  matrix  size  doe  compression  given  matrix  find  maximum  compression  matrix  possible  note  input  given  compressed  form  even  though  compressed  better  use  fast  input  contains  row  column  matrix  guaranteed  divisible  representation  matrix  follows  next  contains  digit  hexadecimal  represented  either  digit  uppercase  latin  letter  binary  representation  denotes  next  element  matrix  corresponding  row  example  given  corresponding  element  corresponding  element  element  separated  whitespaces  print  maximum  compression  given  matrix  possible
595/B __label__math  __label__binary  search  pasha  ha  recently  bought  new  phone  jpager  started  adding  friend  phone  phone  consists  exactly  digit  pasha  ha  sequence  length  divisible  let  split  phone  block  length  block  formed  digit  phone  position  second  block  formed  digit  phone  position  pasha  considers  phone  good  block  start  digit  divisible  represented  represent  block  length  let  write  sequence  calculated  result  expression  c  k  k  pasha  asks  calculate  good  phone  length  given  big  print  modulo  input  contains  length  phone  length  block  respectively  guaranteed  divisible  second  input  contains  space  separated  positive  sequence  k  third  input  contains  space  separated  positive  sequence  print  single  good  phone  length  modulo
908/G __label__math  __label__dp  let  denote  represents  digit  sorted  order  example  given  compute  modulo  input  print  single  answer  question
1032/C __label__dp  __label__constructive  algorithms  little  paul  want  learn  play  piano  already  ha  melody  want  start  simplicity  represented  melody  sequence  key  closer  right  end  piano  keyboard  paul  clever  know  essential  thing  properly  assign  finger  note  going  play  chooses  inconvenient  fingering  waste  lot  time  trying  learn  play  melody  finger  probably  succeed  let  denote  finger  hand  call  fingering  sequence  finger  fingering  convenient  following  hold  otherwise  paul  need  take  hand  keyboard  play  note  using  finger  twice  row  dumb  please  note  please  provide  convenient  fingering  find  none  contains  single  denoting  note  second  contains  denoting  position  note  keyboard  convenient  fingering  print  otherwise  print  denoting  convenient  fingering  separated  space
817/D __label__data  structures  __label__sortings  given  array  consisting  element  imbalance  value  subsegment  array  difference  maximum  minimum  element  segment  imbalance  value  array  sum  imbalance  value  subsegments  array  example  imbalance  value  array  different  subsegments  array  index  index  imbalance  value  index  index  imbalance  value  index  index  imbalance  value  index  index  imbalance  value  index  index  imbalance  value  index  index  imbalance  value  determine  imbalance  value  array  contains  size  array  second  contains  element  array  print  imbalance  value
1148/E __label__math  __label__greedy  __label__sortings  __label__constructive  algorithms  stone  arranged  axis  initially  stone  located  coordinate  stone  single  place  perform  operation  following  type  take  stone  index  choose  replace  coordinate  replace  coordinate  word  draw  stone  closer  want  move  stone  located  position  order  stone  important  want  multiset  stone  resulting  position  multiset  detect  whether  possible  move  stone  way  yes  construct  way  need  minimize  move  contains  single  stone  second  contains  initial  position  stone  second  contains  target  position  stone  impossible  move  stone  way  print
538/B __label__dp  __label__implementation  __label__greedy  __label__constructive  algorithms  called  quasibinary  decimal  representation  contains  digit  example  quasibinary  given  positive  represent  sum  minimum  quasibinary  contains  single  print  single  minimum  representation  sum  quasibinary
1117/A __label__math  __label__implementation  given  array  find  subsegment  maximum  arithmetic  mean  floating  point  without  rounding  many  subsegments  find  longest  contains  single  length  array  second  contains  array  print  single  length  longest  subsegment  maximum  possible  arithmetic  mean
121/A __label__implementation  petya  love  lucky  everybody  know  lucky  positive  whose  decimal  representation  contains  lucky  digit  example  lucky  let  next  minimum  lucky  larger  equal  petya  interested  value  expression  next  ext  ext  ext  help  solve  problem  single  contains  left  right  interval  limit  single  print  sum  next  ext  ext  ext
1007/C __label__binary  search  interactive  problem  vasya  vitya  play  game  vasya  thought  vitya  try  guess  round  tell  vasya  vitya  win  else  vasya  must  say  phrase  le  le  greater  greater  vasya  lie  multiple  phrase  true  choose  example  vasya  thought  answer  phrase  query  answer  phrase  phrase  query  help  vitya  win  round  contains  single  upper  limit  need  read  make  query
398/D __label__data  structures  user  ainta  decided  make  new  instant  messenger  called  aintalk  aintalk  user  chat  people  user  ainta  made  prototype  function  implement  thing  login  user  logins  aintalk  becomes  online  logout  user  logouts  becomes  offline  addfriend  user  user  become  friend  mean  talk  friendship  bidirectional  delfriend  unfriend  user  user  mean  talk  countonlinefriends  function  return  friend  user  online  moment  messenger  tested  user  numbered  register  method  mean  beginning  user  online  user  friend  user  ainta  going  make  function  making  messenger  public  want  know  whether  correct  help  ainta  verify  code  contains  space  separated  user  pair  friend  query  second  contains  online  user  beginning  third  contains  space  separated  id  online  user  guaranteed  value  distinct  next  contains  space  separated  aii  id  user  friend  beginning  guaranteed  multiple  friendship  given  input  note  friendship  bidirectional  next  describe  query  format  call  online  guaranteed  user  wa  offline  function  call  call  offline  guaranteed  user  wa  online  function  call  u  call  addfriend  guaranteed  user  friend  function  call  u  call  delfriend  guaranteed  user  friend  function  call  call  countonlinefriends  print  result  single  countonlinefriends  query  print  required  answer  single
394/A __label__implementation  __label__brute  force  new  student  come  specialized  educational  scientific  centre  sesc  need  start  many  thing  beginning  sometimes  teacher  say  always  unfairly  even  count  teacher  decided  teach  arithmetic  start  best  way  teach  student  add  subtract  right  using  counting  stick  new  task  expression  counting  stick  expression  type  stick  sign  stick  sign  stick  sign  consists  crossed  stick  vertical  horizontal  sign  consists  horizontal  stick  expression  arithmetically  correct  got  expression  look  like  given  counting  stick  task  shift  stick  shift  nothing  expression  became  arithmetically  correct  note  remove  stick  expression  shift  stick  sign  really  fabulous  arithmetic  help  single  contains  initial  expression  guaranteed  expression  look  like  way  shift  stick  expression  becomes  correct  print  single  impossible  without  quote  way  print  resulting  expression  follow  format  output  test  sample  print  extra  space  character
808/A __label__implementation  apart  lot  holiday  throughout  year  resident  berland  whole  lucky  year  year  considered  lucky  ha  non  digit  year  lucky  given  current  year  berland  task  find  long  resident  berland  wait  till  next  lucky  year  contains  current  year  berland  output  amount  year  current  year  next  lucky
1044/A __label__binary  search  chessboard  width  height  row  numbered  bottom  top  column  numbered  left  right  therefore  cell  chessboard  assign  coordinate  column  row  every  day  fight  black  white  piece  board  today  black  price  rook  survived  wa  driven  lower  left  corner  cell  coordinate  still  happy  victory  ha  time  celebrate  order  rook  need  home  namely  upper  side  field  cell  row  everything  would  fine  treacherous  white  figure  put  spell  place  field  end  game  type  spell  vertical  defined  spell  create  infinite  blocking  column  horizontal  defined  spell  create  blocking  segment  pass  top  side  cell  row  column  inclusive  peculiarity  spell  impossible  certain  pair  spell  common  point  note  horizontal  spell  common  point  vertical  spell  example  chessboard  let  recall  rook  chess  piece  move  move  point  row  column  initial  position  task  rook  move  cell  cell  condition  blocking  blocking  segment  cell  better  understanding  look  sample  fortunately  rook  remove  spell  ha  put  tremendous  effort  therefore  want  remove  minimum  possible  spell  way  return  home  find  contains  vertical  horizontal  spell  following  contains  description  vertical  spell  create  blocking  column  following  contains  describe  horizontal  spell  create  blocking  segment  pass  top  side  cell  row  column  inclusive  guaranteed  spell  different  well  fact  pair  horizontal  spell  true  segment  describe  common  point  single  print  minimum  spell  rook  need  remove  get  cell  least  cell  row
1239/C __label__implementation  __label__greedy  __label__data  structures  seat  train  car  exactly  passenger  occupying  every  seat  seat  numbered  left  right  trip  long  passenger  become  hungry  moment  time  take  boiled  water  noodle  person  seat  decide  boiled  water  minute  tank  boiled  water  located  left  seat  case  many  passenger  boiled  water  simultaneously  form  queue  since  passenger  using  tank  particular  moment  time  passenger  us  tank  exactly  minute  assume  time  take  passenger  seat  tank  negligibly  small  nobody  like  stand  queue  passenger  occupying  seat  want  boiled  water  take  look  seat  case  least  seat  empty  assumes  people  standing  queue  right  would  better  seating  time  moment  observes  seat  smaller  busy  tank  unspoken  rule  case  moment  several  people  tank  leftmost  seating  seat  smallest  tank  others  wait  next  moment  goal  find  passenger  receive  boiled  water  noodle  contains  people  amount  time  person  us  tank  second  contains  moment  corresponding  passenger  boiled  water  print  time  moment  passenger  seat  receive  boiled  water
754/B __label__implementation  __label__brute  force  ilya  experienced  player  tic  tac  toe  field  always  start  play  played  lot  game  today  friend  arseny  friend  became  tired  finish  last  game  wa  ilya  turn  game  left  determine  whether  ilya  could  game  making  single  turn  rule  tic  tac  toe  field  follows  turn  field  cell  empty  player  take  turn  placing  sign  empty  cell  player  place  second  player  place  player  place  go  another  go  second  winner  player  get  sign  row  next  horizontal  vertical  diagonal  tic  tac  toe  position  given  contains  character  character  empty  cell  lowercase  english  letter  lowercase  english  letter  guaranteed  position  reachable  playing  tic  tac  toe  ilya  turn  particular  mean  game  finished  possible  cell  empty  mean  friend  left  without  making  single  turn  print  single  yes  case  ilya  could  making  single  turn  otherwise
1148/F __label__constructive  algorithms  given  object  object  ha  property  price  guaranteed  sum  price  initially  non  want  select  positive  object  modified  object  modified  using  following  procedure  consider  binary  notation  compute  bitwise  contains  odd  replace  otherwise  nothing  object  need  find  modification  done  sum  price  change  sign  wa  negative  become  positive  vice  versa  allowed  become  absolute  value  sum  arbitrary  contains  single  object  next  contains  price  object  mask  guaranteed  sum  initially  non  print  modify  object  described  sign  sum  change  sign
412/A __label__implementation  __label__greedy  company  ha  recently  bought  high  rise  building  centre  moscow  main  office  time  decorate  new  office  thing  write  company  slogan  main  entrance  building  slogan  company  consists  character  decorator  hung  large  banner  meter  wide  meter  high  divided  equal  square  character  slogan  must  square  leftmost  poster  second  character  must  second  square  course  programmer  want  write  slogan  poster  large  heavy  ladder  wa  put  exactly  opposite  square  poster  draw  character  slogan  poster  need  climb  ladder  standing  front  square  poster  action  along  climbing  ladder  take  hour  painter  painter  allowed  draw  character  adjacent  square  ladder  front  square  uncomfortable  position  ladder  make  character  untidy  besides  programmer  move  ladder  hour  move  ladder  either  meter  right  meter  left  drawing  character  moving  ladder  tiring  programmer  want  finish  job  little  time  possible  develop  optimal  poster  painting  plan  contains  character  slogan  initial  position  ladder  correspondingly  next  contains  slogan  character  written  without  space  character  slogan  either  large  english  letter  digit  character  print  action  programmer  need  make  print
556/B __label__implementation  __label__brute  force  andrewid  android  galaxy  famous  detective  investigating  case  fraud  make  fake  copy  famous  stolp  gear  puzzle  famous  rubik  cube  wa  important  component  button  similar  gear  gear  ha  teeth  containing  counter  clockwise  order  push  button  gear  rotates  clockwise  second  gear  rotates  counter  clockwise  third  gear  rotates  clockwise  besides  gear  ha  exactly  active  tooth  gear  turn  new  active  tooth  following  current  active  tooth  according  direction  rotation  example  active  tooth  containing  clockwise  rotation  make  tooth  active  counter  clockwise  rotating  make  tooth  active  andrewid  remembers  real  puzzle  ha  following  property  push  button  multiple  time  way  end  active  teeth  gear  last  form  sequence  write  program  determines  whether  given  puzzle  real  fake  contains  gear  second  contains  digit  sequence  active  teeth  active  tooth  gear  contains  single  print  yes  without  quote  given  stolp  gear  puzzle  real  without  quote  otherwise
1033/E __label__dfs  __label__graphs  __label__constructive  algorithms  __label__binary  search  bob  ha  simple  undirected  connected  graph  without  self  loop  multiple  edge  want  learn  whether  graph  bipartite  paint  vertex  graph  color  edge  connecting  vertex  color  good  programming  asked  alice  help  doe  want  disclose  graph  alice  agreed  alice  ask  question  graph  question  alice  ask  following  sends  subset  vertex  original  graph  bob  answer  edge  endpoint  since  want  alice  learn  much  graph  allows  ask  question  furthermore  suspect  alice  might  introduce  false  message  communication  channel  alice  finally  tell  whether  graph  bipartite  need  provide  proof  either  partition  cycle  odd  length  task  help  alice  construct  query  find  whether  graph  bipartite  contains  single  vertex  bob  graph  read  vertex  bob  graph
975/A __label__implementation  __label__strings  aramic  language  word  represent  object  word  aramic  special  property  word  root  doe  letter  root  permutation  represent  object  root  word  word  contains  letter  appear  way  letter  appears  example  root  aaaa  aaa  root  aabb  bab  baabb  word  aramic  represents  object  root  ancient  script  aramic  different  object  mentioned  script  contains  word  script  second  contains  word  script  length  string  doe  exceed  guaranteed  character  string  small  latin  letter  output  different  object  mentioned  given  ancient  aramic  script
386/B __label__implementation  __label__brute  force  __label__binary  search  everyone  love  freebie  especially  student  well  known  night  exam  student  open  window  open  student  record  book  shout  loudly  time  fly  freebie  fly  flown  freebie  help  pas  upcoming  exam  night  exam  mathematical  analysis  student  living  dormitory  shouted  treasured  word  student  made  sacrament  time  second  elapsed  since  beginning  night  known  freebie  capricious  willful  lady  night  freebie  wa  near  dormitory  second  therefore  student  sacrament  time  differ  freebie  visit  least  since  student  optimist  really  want  know  maximal  student  visited  freebie  input  contains  student  shouted  fly  freebie  fly  second  contains  positive  last  contains  time  interval  freebie  wa  near  dormitory  print  single  largest  people  pas  exam  tomorrow  freebie  visit
1107/C __label__greedy  __label__sortings  playing  new  famous  fighting  game  kortal  mombat  xii  perform  brutality  opponent  character  playing  game  new  generation  console  gamepad  button  button  ha  single  lowercase  latin  letter  written  letter  button  pairwise  distinct  given  sequence  hit  hit  deal  unit  damage  opponent  character  perform  hit  press  button  gamepad  hit  numbered  know  press  button  time  row  break  cherish  gamepad  want  break  button  perform  brutality  land  hit  given  sequence  allowed  skip  changing  initial  order  sequence  prohibited  total  damage  dealt  sum  hit  skipped  note  skip  hit  counter  consecutive  press  button  reset  task  skip  hit  deal  maximum  possible  total  damage  opponent  character  break  gamepad  button  input  contains  hit  maximum  time  push  button  row  second  input  contains  damage  hit  third  input  contains  string  consisting  exactly  lowercase  latin  letter  sequence  hit  character  letter  button  need  press  perform  corresponding  hit  print  dmg  maximum  possible  damage  opponent  character  deal  without  breaking  gamepad  button
478/B __label__math  __label__greedy  __label__constructive  algorithms  participant  competition  split  team  manner  team  ha  least  participant  competition  pair  participant  team  became  friend  task  write  program  find  minimum  maximum  pair  friend  could  formed  end  competition  input  contains  separated  single  space  participant  team  respectively  output  kmin  kmax  minimum  possible  pair  friend  maximum  possible  pair  friend  respectively
546/E __label__math  __label__graphs  country  city  bidirectional  road  city  ha  army  army  city  consists  soldier  soldier  roam  roaming  soldier  ha  either  stay  city  neighboring  city  moving  along  road  check  possible  roaming  exactly  soldier  city  input  consists  next  contains  next  contains  follow  consists  p  denoting  undirected  road  city  guaranteed  road  pair  city  condition  met  output  single  word
1208/A __label__math  cengiz  recently  learned  fibonacci  studying  different  algorithm  find  getting  bored  reading  came  new  type  named  xorinacci  defined  follows  denotes  bitwise  xor  operation  given  calculate  answer  independent  test  case  input  contains  independent  test  case  input  contains  single  test  case  following  contains  space  separated  respectively  test  case  output
1039/C __label__math  __label__sortings  __label__dfs  __label__graphs  metropolis  computer  network  consists  server  ha  encryption  key  range  assigned  let  encryption  key  assigned  server  additionally  pair  server  directly  connected  via  data  communication  channel  encryption  algorithm  specific  data  communication  channel  considered  safe  server  connects  distinct  encryption  key  initial  assignment  encryption  key  guaranteed  keep  data  communication  channel  safe  informed  new  virus  actively  spreading  internet  capable  change  encryption  key  server  infects  specifically  virus  body  contains  unknown  aforementioned  range  server  infected  encryption  key  change  denotes  bitwise  xor  operation  sadly  know  neither  server  metropolis  going  infected  dangerous  virus  decided  count  situation  data  communication  channel  remain  safe  formally  speaking  need  find  pair  possibly  empty  subset  set  server  range  server  chosen  subset  none  others  infected  virus  containing  data  communication  channel  remain  safe  since  quite  big  asked  find  remainder  modulo  input  contains  server  pair  server  directly  connected  data  communication  channel  parameter  defines  range  possible  value  encryption  key  next  contains  encryption  key  used  server  next  denoting  server  connected  data  communication  channel  guaranteed  pair  server  appears  list  output  single  safe  infection  subset  server  virus  parameter  modulo
965/D __label__greedy  __label__binary  search  lot  frog  want  cross  river  river  unit  width  frog  jump  unit  long  frog  jump  length  shorter  jump  longer  hopefully  stone  river  help  stone  located  distance  bank  stone  distance  unit  bank  frog  currently  stone  used  frog  drowns  water  maximum  frog  cross  river  given  jump  stone  contains  width  river  maximum  length  frog  jump  second  contains  stone  distance  bank  frog  currently  print  single  maximum  frog  cross  river
1217/E __label__math  __label__implementation  __label__greedy  __label__data  structures  let  define  balanced  multiset  following  way  write  sum  element  multiset  decimal  representation  position  check  multiset  includes  least  element  digit  element  digit  sum  position  hold  every  position  multiset  balanced  otherwise  unbalanced  example  multiset  balanced  multiset  unbalanced  red  digit  mark  element  position  element  digit  sum  sum  multiset  every  position  ha  digit  required  sum  second  multiset  second  last  digit  appear  thus  making  multiset  unbalanced  given  array  consisting  asked  perform  query  query  type  replace  value  find  unbalanced  subset  multiset  minimum  sum  report  unbalanced  subset  exists  note  empty  multiset  balanced  query  second  type  print  lowest  sum  unbalanced  subset  print  unbalanced  subset  exists  contains  element  array  query  respectively  second  contains  following  contains  query  type  replace  value  find  unbalanced  subset  multiset  lowest  sum  report  unbalanced  subset  exists  guaranteed  least  query  second  type  query  second  type  print  lowest  sum  unbalanced  subset  print  unbalanced  subset  exists
761/F __label__dp  __label__implementation  __label__data  structures  __label__brute  force  dasha  decided  rest  solving  problem  began  look  photo  previous  competition  let  call  photo  matrix  size  n  consists  lowercase  english  letter  photo  especially  interested  received  photo  template  painting  rectangular  area  certain  color  let  call  photo  special  formally  special  photo  received  photo  template  replacing  character  rectangle  upper  left  corner  cell  coordinate  lower  right  corner  cell  coordinate  symbol  dasha  asks  find  special  photo  total  distance  special  photo  minimum  calculate  distance  determine  distance  photo  sum  distance  corresponding  letter  distance  letter  difference  module  position  alphabet  example  distance  letter  equal  letter  alphabet  letter  contains  string  photo  template  column  special  photo  interesting  dasha  next  contains  string  length  consists  little  latin  character  description  photo  template  next  contains  description  special  photo  following  format  ii  ii  coordinate  upper  left  corner  rectangle  description  lower  right  corner  little  latin  letter  replaces  photo  template  described  rectangle  print  minimum  total  distance  found  special  photo  special  photo
1077/A __label__math  frog  currently  point  coordinate  axis  jump  following  algorithm  jump  unit  right  second  jump  unit  left  third  jump  unit  right  fourth  jump  unit  left  formally  frog  ha  jumped  even  time  current  jump  jump  current  position  position  otherwise  jump  current  position  position  task  calculate  position  frog  jump  thing  watching  different  frog  answer  independent  query  input  contains  query  next  query  query  per  query  described  space  separated  length  type  jump  jump  respectively  print  answer  query
679/C __label__implementation  __label__dfs  grid  row  column  cell  either  empty  denoted  blocked  denoted  empty  cell  directly  connected  share  side  cell  located  row  column  connected  exists  sequence  empty  cell  start  finish  consecutive  cell  sequence  directly  connected  connected  component  set  empty  cell  cell  component  connected  cell  set  connected  cell  set  friend  limak  big  grizzly  bear  able  destroy  obstacle  range  precisely  choose  square  size  k  grid  limak  transform  blocked  cell  empty  ask  limak  help  chosen  square  must  completely  inside  grid  possible  limak  change  anything  cell  empty  anyway  like  big  connected  component  limak  help  maximum  possible  size  biggest  connected  component  grid  input  contains  size  grid  limak  range  respectively  next  contains  string  character  denoting  row  grid  character  denoting  empty  cell  blocked  respectively  print  maximum  possible  size  cell  biggest  connected  component  using  limak  help
70/A __label__math  fangy  collect  cooky  decided  take  box  put  cooky  way  take  square  k  size  divided  block  size  paint  main  diagonal  together  cell  lie  painted  area  equal  area  occupied  cookie  size  fangy  ha  box  square  base  n  n  divided  block  size  box  cooky  overlap  turned  rotated  see  cooky  size  respectively  figure  stack  cooky  little  walrus  us  following  algorithm  take  repository  largest  cookie  fit  place  box  put  everything  could  perfect  ala  repository  little  walrus  ha  infinitely  many  cooky  size  larger  cooky  size  therefore  empty  cell  remain  box  fangy  want  know  many  empty  cell  left  end  contains  single  print  single  equal  empty  cell  box  answer  printed  modulo
164/D __label__brute  force  __label__binary  search  given  point  plane  need  delete  exactly  diameter  set  remaining  point  small  possible  diameter  set  point  maximum  pairwise  distance  point  set  diameter  point  set  equal  input  contains  pair  point  plane  point  delete  correspondingly  next  describe  point  per  description  consists  pair  coordinate  point  given  point  coincide  print  different  space  separated  point  delete  point  numbered  order  given  input  print  order  multiple  solution  print
721/A __label__implementation  recently  adaltik  discovered  japanese  crossword  japanese  crossword  picture  represented  table  sized  square  square  colored  white  black  left  row  top  column  encrypting  corresponding  row  column  represents  many  group  black  square  corresponding  row  column  represents  consecutive  black  square  corresponding  group  find  detailed  explanation  wikipedia  http  wikipedia  org  wiki  japanesecrossword  adaltik  decided  general  case  japanese  crossword  complicated  drew  row  consisting  square  japanese  crossword  sized  want  encrypt  way  japanese  crossword  example  encrypting  single  row  japanese  crossword  help  adaltik  find  encrypting  row  drew  input  contains  single  length  row  second  input  contains  single  string  consisting  character  corresponds  black  square  white  square  row  adaltik  drew  single  encrypting  row  group  black  square  row
455/C __label__dp  __label__dfs  __label__trees  andrew  play  game  called  civilization  dima  help  game  ha  city  bidirectional  road  city  numbered  pair  city  either  single  unique  path  path  path  sequence  distinct  city  road  contiguous  city  length  described  path  equal  assume  city  lie  region  path  connecting  city  game  event  type  take  place  andrew  asks  dima  length  longest  path  region  city  lie  andrew  asks  dima  merge  region  city  lie  region  city  lie  city  lie  region  merging  needed  otherwise  need  merge  region  follows  choose  city  region  city  second  region  connect  road  minimize  length  longest  path  resulting  region  multiple  way  allowed  choose  dima  find  hard  execute  andrew  query  asks  help  help  dima  contains  city  road  already  query  correspondingly  following  contains  aii  represent  road  city  road  city  following  contains  event  following  format  request  andrew  give  dima  find  length  maximum  path  region  contains  city  request  andrew  give  dima  merge  region  contains  city  region  contains  city  note  equal  event  type  print  answer  separate
1027/F __label__dfs  __label__graphs  __label__binary  search  polycarp  study  berland  state  university  soon  take  exam  ha  pas  exactly  exam  exam  known  day  day  opportunity  pas  exam  day  second  opportunity  pas  exam  polycarp  pas  exam  day  exam  polycarp  chooses  day  pas  exam  ha  pas  exam  polycarp  want  pas  exam  soon  possible  print  minimum  index  day  polycarp  pas  exam  print  pas  exam  input  contains  exam  next  day  passing  exam  day  second  passing  exam  polycarp  pas  exam  print  otherwise  print  minimum  index  day  polycarp
715/B __label__graphs  __label__constructive  algorithms  __label__binary  search  coder  ha  drawn  undirected  graph  vertex  numbered  edge  edge  graph  weighted  weight  positive  next  day  coder  realized  weight  erased  want  reassign  positive  weight  edge  weight  erased  length  shortest  path  vertex  resulting  graph  exactly  help  contains  vertex  edge  desired  length  shortest  path  starting  vertex  ending  vertex  respectively  describing  edge  graph  follow  contains  ii  denote  endpoint  edge  denotes  weight  equal  weight  corresponding  edge  wa  erased  guaranteed  edge  pair  vertex  print  without  quote  possible  assign  weight  required  way
379/C __label__greedy  __label__sortings  well  known  internet  resource  site  let  call  ha  come  new  year  adventure  specifically  decided  give  rating  visitor  user  site  user  know  rating  value  want  get  new  year  present  know  user  want  get  least  rating  unit  present  site  administered  creative  thrifty  people  hand  want  give  distinct  rating  hand  total  sum  rating  present  must  small  possible  help  site  cope  challenging  task  rating  distribution  find  optimal  distribution  contains  user  site  next  contains  sequence  print  sequence  mean  user  get  rating  present  printed  sequence  must  meet  problem  condition
549/F __label__data  structures  yura  ha  team  developer  list  task  numbered  yura  going  choose  task  done  week  due  strange  looksery  habit  chosen  task  segment  consecutive  containing  le  sequence  form  every  task  ha  associated  denoting  many  man  hour  required  complete  task  developer  self  confident  actually  afraid  difficult  task  knowing  yura  decided  pick  hardest  task  take  biggest  man  hour  completed  several  hardest  task  difficulty  level  chooses  arbitrary  complete  task  chosen  developer  left  task  done  every  developer  spend  amount  hour  task  done  whole  assignment  exactly  man  hour  spent  task  last  least  problem  developer  get  angry  work  another  developer  set  task  considered  good  possible  find  distribution  work  allows  complete  task  every  developer  working  amount  time  amount  work  performed  yura  matter  worker  well  example  let  suppose  yura  chosen  task  following  difficulty  ha  developer  disposal  take  hardest  fourth  task  finish  developer  left  task  difficulty  spends  hour  task  hour  third  second  developer  spends  hour  second  task  third  developer  spends  hour  third  task  done  since  every  developer  worked  exactly  hour  every  task  ha  worked  required  amount  time  another  example  task  required  hour  instead  completed  would  impossible  assign  task  way  described  besides  work  yura  fond  problem  solving  wonder  many  pair  exists  segment  good  yura  ha  already  solved  problem  ha  time  write  code  please  help  yura  implement  solution  problem  input  contains  positive  task  list  developer  yura  disposal  second  contains  output  single  pair  satisfying  condition  statement
1131/E __label__dp  __label__greedy  __label__strings  roman  denis  trip  programming  competition  since  trip  wa  long  soon  got  bored  hence  decided  came  something  roman  invented  pizza  recipe  denis  invented  string  multiplication  according  denis  result  multiplication  product  string  length  string  denotes  symbol  string  denotes  string  concatenation  example  product  string  abc  string  deadebdecde  product  string  string  zazbz  note  unlike  multiplication  product  string  necessarily  equal  product  roman  wa  jealous  denis  since  invented  cool  operation  hence  decided  invent  something  string  related  since  roman  beauty  lover  decided  define  beauty  string  length  longest  substring  consisting  letter  example  beauty  string  xayyaaabca  equal  since  substring  aaa  beauty  string  qwerqwer  equal  since  neighboring  symbol  different  order  entertain  roman  denis  wrote  string  paper  asked  calculate  beauty  string  denotes  multiplication  string  roman  fully  realized  denis  multiplication  work  asked  help  denis  know  roman  impressionable  guarantee  beauty  resulting  string  contains  single  string  wroted  denis  next  non  empty  string  consisting  lowercase  english  letter  guaranteed  total  length  string  beauty  resulting  product  print  exactly  beauty  product  string
718/E __label__graphs  today  matvey  birthday  never  know  ask  present  friend  gave  string  length  string  consists  english  letter  question  come  mind  might  ever  need  string  matvey  special  boy  instantly  found  string  used  build  undirected  graph  vertex  correspond  position  string  edge  distinct  position  least  following  condition  hold  neighbouring  position  equal  character  matvey  decided  find  diameter  graph  diameter  maximum  distance  length  shortest  path  pair  vertex  matvey  want  find  pair  vertex  distance  equal  diameter  graph  cool  experienced  programmer  managed  solve  problem  fast  input  contains  single  length  string  second  contains  string  guaranteed  consists  letter  english  alphabet  print  diameter  graph  pair  position  distance  equal  diameter
603/D __label__math  __label__geometry  kevin  sun  ruminating  origin  cow  standing  origin  cartesian  plane  notice  plane  representable  equation  form  observes  parallel  pas  point  triple  kevin  considers  triangle  formed  call  triangle  original  circumcircle  triangle  pass  origin  since  kevin  belief  circle  bovine  life  tied  directly  triangle  want  know  original  triangle  formed  unordered  triple  distinct  recall  circumcircle  triangle  circle  pass  vertex  triangle  input  contains  single  next  describe  contains  space  separated  representing  equation  aix  iy  print  single  triple  form  original  triangle
1210/D __label__graphs  konrad  human  relation  consultant  working  voltmodder  large  electrical  equipment  producer  today  ha  tasked  evaluating  level  happiness  company  people  working  voltmodder  numbered  employee  earns  different  amount  money  company  initially  person  earns  ruble  per  day  following  day  salary  revised  end  day  employee  start  earning  ruble  per  day  become  best  paid  person  company  employee  keep  new  salary  get  revised  pair  people  like  creates  great  psychological  danger  company  formally  people  dislike  earns  money  employee  brag  dangerous  triple  triple  employee  brag  turn  brag  dislike  dislike  beginning  day  konrad  need  evaluate  dangerous  triple  company  help  contains  employee  company  pair  people  like  following  contains  denoting  employee  hate  dislike  dislike  relationship  mentioned  exactly  next  contains  salary  revision  following  contains  single  denoting  end  day  employee  earn  output  dangerous  triple  company  beginning  day
682/D __label__dp  __label__strings  returned  forest  alyona  started  reading  book  noticed  string  length  respectively  usual  reading  bored  alyona  decided  pay  attention  string  considered  similar  alyona  ha  favourite  positive  small  doe  exceed  girl  want  choose  disjoint  non  empty  substring  string  string  appear  disjoint  substring  string  order  string  interested  length  maximum  possible  variant  formally  alyona  want  find  sequence  non  empty  string  satisfying  following  condition  represented  concatenation  p  p  akpkak  sequence  arbitrary  string  possibly  empty  represented  concatenation  b  p  b  p  bkpkbk  sequence  arbitrary  string  possibly  empty  sum  length  string  sequence  maximum  possible  please  help  alyona  solve  complicated  problem  find  least  sum  length  string  desired  sequence  substring  string  subsequence  consecutive  character  string  input  given  length  string  length  string  alyona  favourite  respectively  second  input  contains  string  consisting  lowercase  english  letter  third  input  contains  string  consisting  lowercase  english  letter  print  non  negative  sum  length  string  desired  sequence
1133/A __label__implementation  polycarp  going  participate  contest  start  end  guaranteed  contest  last  even  minute  modulo  guaranteed  entire  contest  held  single  day  finally  guaranteed  contest  last  least  minute  polycarp  want  know  time  midpoint  contest  example  contest  last  answer  contest  last  answer  input  contains  format  second  input  contains  format  guaranteed  guaranteed  contest  last  even  minute  modulo  guaranteed  entire  contest  held  single  day  finally  guaranteed  contest  last  least  minute  print  corresponding  midpoint  contest  format  print  exactly  digit  prepend  leading  needed  separate
855/G __label__dp  __label__dfs  __label__graphs  __label__trees  destroying  voldemort  horcruxes  harry  voldemort  final  battle  cast  spell  wand  spell  collide  battle  scene  hogwarts  represented  form  tree  total  place  hogwarts  joined  using  undirected  road  ron  wa  viewing  battle  harry  voldemort  wondered  many  triplet  place  harry  standing  place  voldemort  standing  place  spell  collide  place  possible  triplet  distinct  exist  path  pas  road  due  battle  havoc  new  path  added  time  tell  ron  answer  addition  formally  given  tree  vertex  edge  new  edge  added  node  tree  addition  need  tell  triplet  distinct  exist  path  another  path  edge  common  contains  place  hogwarts  next  contains  space  separated  indicating  road  place  guaranteed  given  road  form  connected  tree  next  contains  single  new  edge  added  next  contains  space  separated  representing  new  road  added  note  possible  newly  added  road  connects  place  connected  road  newly  added  road  connect  place  print  value  triplet  change  occurred
590/D __label__dp  top  secret  military  base  command  colonel  zuev  expecting  inspection  ministry  defence  according  charter  top  secret  military  base  must  include  top  secret  troop  well  tell  exactly  top  secret  troop  end  problem  zuev  base  missing  top  secret  troop  reason  colonel  decided  deal  problem  immediately  ordered  single  soldier  base  entrusted  zuev  know  loquacity  soldier  left  equal  zuev  want  form  top  secret  troop  using  leftmost  soldier  thus  want  total  loquacity  small  possible  troop  remain  top  secret  achieve  going  choose  pair  consecutive  soldier  swap  intends  time  note  soldier  participant  swap  time  problem  turned  unusual  colonel  zuev  asked  help  determine  minimum  total  loquacity  soldier  achieved  performing  swap  consecutive  soldier  input  contains  positive  soldier  size  top  secret  troop  formed  maximum  possible  swap  operation  consecutive  pair  soldier  respectively  second  input  contains  value  loquacity  soldier  order  follow  left  right  print  single  minimum  possible  total  loquacity  top  secret  troop
703/A __label__implementation  mishka  little  polar  bear  known  little  bear  love  spending  free  time  playing  dice  chocolate  wonderful  sunny  morning  walking  around  block  ice  mishka  met  friend  chris  started  playing  game  rule  game  simple  round  defined  every  round  player  throw  cubical  dice  distinct  written  face  player  whose  value  throwing  dice  greater  win  round  case  player  dice  value  equal  winner  average  player  round  winner  game  case  player  round  result  game  draw  mishka  still  little  count  win  loss  asked  watch  game  determine  result  please  help  input  contains  single  game  round  next  contains  round  description  contains  pair  value  dice  upper  face  mishka  chris  throw  round  respectively  mishka  winner  game  print  mishka  without  quote
958/E1 __label__math  __label__greedy  __label__brute  force  __label__geometry  rebel  fleet  afraid  empire  might  want  strike  back  princess  heidi  need  know  possible  assign  rebel  spaceship  guard  base  every  base  ha  exactly  guardian  spaceship  ha  exactly  assigned  base  word  assignment  perfect  matching  since  know  reckless  pilot  want  sure  straight  path  base  assigned  spaceship  intersect  galaxy  plane  risk  collision  contains  space  separated  contains  space  separated  denoting  coordinate  rebel  spaceship  following  format  denoting  position  base  guaranteed  point  coincide  point  possible  connect  rebel  spaceship  base  satisfy  constraint  output  yes  otherwise  output  without  quote
1185/A __label__math  polycarp  decided  relax  weekend  visited  performance  famous  ropewalker  agafon  boniface  konrad  rope  straight  infinite  direction  beginning  performance  agafon  boniface  konrad  located  position  respectively  end  performance  distance  pair  ropewalker  wa  least  ropewalker  walk  rope  second  ropewalker  change  position  every  ropewalker  change  position  exactly  shift  left  right  direction  rope  agafon  boniface  konrad  move  time  move  moment  ropewalker  position  time  walk  past  find  minimum  duration  second  performance  word  find  minimum  second  needed  distance  pair  ropewalker  greater  equal  ropewalker  walk  negative  coordinate  due  rope  infinite  side  input  contains  possible  ropewalker  position  beginning  performance  output  minimum  duration  second  performance
379/F __label__data  structures  __label__trees  programmer  new  year  tree  traditional  fur  tree  though  tree  vertex  vertex  degree  ha  connected  leaf  new  year  programmer  usually  fun  decided  fun  well  adding  vertex  tree  adding  operation  look  follows  choose  leaf  tree  let  mark  vertex  tree  moment  variable  vertex  added  tree  get  new  edge  vertex  vertex  task  model  process  adding  vertex  tree  adding  operation  print  diameter  current  tree  come  let  solve  new  year  problem  contains  operation  next  contains  operation  adding  leaf  vertex  variable  represents  vertex  current  tree  guaranteed  given  operation  correct  print  diameter  current  tree  operation
637/B __label__data  structures  __label__sortings  __label__constructive  algorithms  __label__binary  search  polycarp  big  lover  killing  time  social  network  page  chatlist  favourite  network  made  message  sent  friend  friend  chat  rise  top  page  relative  order  chat  change  wa  chat  friend  new  chat  simply  inserted  top  list  assuming  chat  list  initially  empty  given  sequence  polycaprus  message  make  list  chat  message  processed  assume  friend  wrote  message  polycarpus  contains  polycarpus  message  next  enlist  message  recipient  order  message  sent  name  participant  non  empty  sequence  lowercase  english  letter  length  print  recipient  polycarp  talked  order  chat  top  bottom
732/C __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  __label__binary  search  vasiliy  spent  vacation  sanatorium  came  back  found  completely  forgot  detail  vacation  every  day  wa  breakfast  dinner  supper  dining  room  sanatorium  course  order  thing  vasiliy  ha  card  dining  room  contaning  note  many  time  breakfast  dinner  supper  thus  card  contains  vasiliy  could  sometimes  missed  meal  example  could  breakfast  supper  dinner  probably  day  dining  room  vasiliy  remember  wa  time  day  arrived  sanatorium  breakfast  dinner  supper  supper  time  left  breakfast  dinner  supper  supper  considers  option  vasiliy  arrived  sanatorium  wa  time  left  please  note  possible  vasiliy  left  sanatorium  day  arrived  according  note  card  help  vasiliy  determine  minimum  meal  dining  room  could  missed  count  missed  meal  arrival  day  vasiliy  arrival  meal  departure  day  left  contains  breakfast  dinner  supper  vasiliy  vacation  sanatorium  print  single  minimum  possible  meal  vasiliy  could  missed  vacation
632/E __label__math  __label__dp  thief  made  way  shop  usual  ha  lucky  knapsack  knapsack  object  kind  product  shop  infinite  product  kind  cost  product  kind  thief  greedy  take  exactly  product  possible  kind  take  several  product  kind  find  possible  total  cost  product  thief  nick  knapsack  contains  kind  product  product  thief  take  second  contains  cost  product  kind  print  possible  total  cost  stolen  product  separated  space  printed  ascending  order
359/B __label__math  __label__dp  __label__constructive  algorithms  permutation  ordered  group  n  consisting  distinct  positive  define  length  permutation  n  simon  ha  positive  non  negative  k  help  find  permutation  length  meet  equation  contains  k  print  n  required  permutation  guaranteed  solution  exists  multiple  solution  print
1223/A __label__math  let  denote  correct  match  equation  denote  cme  equation  greater  example  equation  cme  equation  match  want  assemble  cme  using  match  unfortunately  possible  assemble  cme  using  match  buy  extra  match  assemble  cme  example  buy  match  assemble  buy  match  assemble  calculate  minimum  match  buy  assembling  cme  note  answer  independent  query  contains  query  query  contains  match  test  case  print  single  minimum  match  buy  assembling  cme
1201/A __label__implementation  __label__strings  class  student  wrote  multiple  choice  test  student  class  test  question  possible  answer  exactly  correct  answer  question  correct  answer  question  worth  point  incorrect  answer  graded  point  student  remember  answer  gave  exam  know  correct  answer  optimistic  want  know  maximum  possible  total  score  student  class  contains  student  class  question  test  next  contains  string  describing  answer  student  character  represents  student  answer  question  last  contains  point  correct  answer  every  question  print  single  maximum  possible  total  score  class
190/B __label__geometry  berland  war  eternal  enemy  flatland  vasya  accountant  wa  assigned  fulfil  duty  nation  right  situation  berland  dismal  city  surrounded  army  flatlanders  stand  border  circle  circle  center  surrounded  city  moment  point  flatland  ring  begin  move  quickly  direction  city  strategy  flatlanders  usually  follow  besiege  city  berlanders  sure  repel  enemy  attack  learn  exact  time  attack  start  need  construct  radar  would  register  movement  distance  thus  install  radar  point  least  point  enemy  ring  detecting  range  distance  radar  immediately  inform  enemy  attack  due  newest  technology  place  radar  point  without  problem  problem  berlanders  time  make  radar  besides  larger  detection  radius  radar  cost  vasya  task  task  find  minimum  possible  detection  radius  radar  word  task  find  minimum  radius  r  radar  radius  installed  point  register  start  movement  flatland  ring  point  problem  consider  city  material  point  attacking  enemy  ring  circle  center  city  radar  detection  range  disk  including  border  center  point  radar  placed  input  file  consist  represents  city  flatland  ring  surround  space  separated  city  coordinate  distance  city  flatlanders  correspondingly  guaranteed  city  located  different  point  print  single  real  minimum  detection  radius  described  radar  answer  considered  correct  absolute  relative  error  doe  exceed
1167/F __label__math  __label__data  structures  __label__sortings  given  array  pairwise  distinct  let  define  function  follows  let  define  array  sort  array  increasing  order  result  function  calculate  mod  total  sum  subsegments  modulo  contains  length  array  second  contains  array  print  total  sum  subsegments  modulo
706/C __label__dp  __label__strings  vasiliy  fond  solving  different  task  today  found  able  solve  asks  help  vasiliy  given  string  consisting  lowercase  english  letter  want  sorted  lexicographical  order  dictionary  allowed  swap  operation  allowed  reverse  character  becomes  last  second  becomes  last  reverse  string  vasiliy  ha  spent  unit  energy  interested  minimum  amount  energy  ha  spent  order  string  sorted  lexicographical  order  string  lexicographically  smaller  string  shorter  prefix  none  prefix  position  differ  character  smaller  character  purpose  problem  equal  string  nearby  break  condition  sequence  sorted  lexicographically  input  contains  single  string  second  contains  equal  amount  energy  vasiliy  ha  spent  order  reverse  string  follow  containing  string  consisting  lowercase  english  letter  total  length  string  exceed  impossible  reverse  string  located  lexicographical  order  print  otherwise  print  minimum  total  amount  energy  vasiliy  ha  spent
1065/A __label__math  __label__implementation  special  offer  vasya  favourite  supermarket  customer  buy  chocolate  bar  take  additional  bar  free  special  offer  used  time  vasya  currently  ha  rouble  want  get  many  chocolate  bar  free  chocolate  bar  cost  rouble  help  vasya  calculate  maximum  possible  chocolate  bar  get  contains  testcases  next  contains  rouble  vasya  ha  chocolate  bar  buy  use  special  offer  bar  get  free  cost  bar  respectively  print  maximum  possible  chocolate  bar  vasya  get  test
900/A __label__implementation  __label__geometry  distinct  point  plane  none  lie  axis  check  point  removal  remaining  point  located  side  axis  contains  single  positive  following  coordinate  point  contains  single  xi  point  coincide  print  yes  point  otherwise
567/D __label__greedy  __label__data  structures  __label__sortings  __label__binary  search  alice  bob  love  playing  dimensional  battle  ship  play  field  form  consisting  square  cell  table  beginning  game  alice  put  ship  field  without  telling  position  bob  ship  look  rectangle  occupies  sequence  consecutive  square  field  ship  intersect  even  touch  bob  make  sequence  shot  name  cell  field  alice  either  say  cell  empty  miss  cell  belongs  ship  hit  problem  alice  like  cheat  responds  bob  move  miss  help  bob  catch  alice  cheating  find  bob  move  sure  alice  cheated  input  contains  size  field  ship  size  ship  guaranteed  put  ship  size  field  ship  intersect  touch  second  contains  bob  move  third  contains  distinct  cell  bob  made  shot  cell  numbered  left  right  print  single  bob  move  sure  alice  lied  bob  move  numbered  order  made  sought  move  exist  print
822/D __label__math  __label__dp  __label__greedy  __label__brute  force  __label__number  theory  pavlopolis  university  noora  study  wa  decided  hold  beauty  contest  miss  pavlopolis  university  let  describe  process  choosing  beautiful  girl  university  detail  contest  held  several  stage  suppose  exactly  girl  participate  competition  initially  participant  divided  equal  group  participant  group  furthermore  chosen  arbitrarily  every  stage  different  group  jury  contest  compare  beauty  girl  format  way  group  consists  girl  comparison  occur  group  beautiful  participant  selected  selected  girl  enter  next  stage  competition  thus  girl  divided  group  participant  group  exactly  participant  enter  next  stage  contest  continues  exactly  girl  left  miss  pavlopolis  university  jury  contest  tedious  task  would  like  divide  girl  group  stage  total  pairwise  comparison  girl  possible  let  minimal  total  comparison  made  select  beautiful  participant  admit  girl  stage  organizer  competition  insane  give  noora  ask  poor  girl  calculate  value  following  expression  since  value  expression  quite  large  organizer  ask  calculate  modulo  noora  calculate  value  expression  organizer  promise  help  beauty  contest  poor  girl  strong  mathematics  turned  help  leha  turned  single  contains  print  single  value  expression  modulo
581/E __label__dp  __label__greedy  motorist  kojiro  spent  year  saving  favorite  car  brand  furrari  finally  kojiro  dream  came  true  kojiro  want  get  girlfriend  johanna  show  car  kojiro  want  get  girlfriend  along  coordinate  simplicity  assume  kojiro  point  coordinate  johanna  point  point  coordinate  gas  station  every  gas  station  fill  type  fuel  regular  premium  super  thus  gas  station  characterized  pair  gas  type  position  liter  fuel  enough  drive  exactly  value  doe  depend  type  fuel  fuel  type  differ  quality  according  research  affect  lifetime  vehicle  motor  furrari  tank  hold  exactly  liter  fuel  regardless  type  fuel  moment  departure  point  kojiro  tank  completely  filled  fuel  super  gas  station  kojiro  fill  tank  amount  fuel  course  point  time  amount  fuel  tank  liter  note  tank  simultaneously  different  type  fuel  car  move  left  right  extend  lifetime  engine  kojiro  seek  primarily  minimize  amount  fuel  type  regular  several  strategy  using  minimum  amount  fuel  type  regular  necessary  travel  minimize  amount  used  fuel  type  premium  write  program  possible  position  start  minimize  firstly  amount  used  fuel  type  regular  secondly  amount  used  fuel  type  premium  input  contains  positive  coordinate  point  johanna  capacity  furrari  tank  gas  station  starting  point  next  representing  type  gas  station  represents  regular  premium  super  position  coordinate  gas  station  gas  station  necessarily  follow  order  left  right  last  contains  start  position  necessarily  follow  order  left  right  point  coordinate  contains  gas  station  possible  point  point  coincide  gas  station  print  exactly  minimum  amount  gas  type  regular  type  premium  kojiro  start  point  need  minimize  value  multiple  way  need  minimize  second  value
883/L __label__data  structures  berland  taxi  new  taxi  company  car  started  operating  capital  berland  recently  capital  ha  house  straight  numbered  leftmost  rightmost  distance  neighboring  house  help  company  schedule  taxi  ride  come  throughout  day  according  following  rule  car  available  picking  passenger  initially  car  located  next  house  time  car  speed  take  exactly  minute  car  travel  neighboring  house  request  taxi  ride  come  time  asking  passenger  picked  house  dropped  house  request  taxi  ride  given  increasing  order  distinct  request  taxi  ride  received  time  berland  taxi  operator  assigns  car  follows  car  currently  available  operator  assigns  car  closest  pick  spot  needle  say  car  already  ride  passenger  available  ride  passenger  dropped  corresponding  destination  several  car  operator  pick  ha  waiting  since  became  available  several  car  operator  pick  ha  lowest  car  get  assigned  taxi  ride  request  driver  immediately  start  driving  current  position  house  car  reach  house  passenger  immediately  picked  driver  start  driving  house  house  reached  passenger  get  dropped  car  becomes  available  new  ride  staying  next  house  allowed  multiple  car  located  next  house  point  time  waiting  ride  request  passing  available  car  time  request  taxi  ride  come  passenger  wait  car  become  available  car  becomes  available  operator  immediately  assign  taxi  ride  request  multiple  car  become  available  passenger  waiting  operator  pick  car  according  rule  described  operator  process  taxi  ride  request  multiple  passenger  waiting  car  become  available  operator  move  processing  ride  request  car  get  assigned  ride  request  task  write  program  process  given  list  taxi  ride  request  request  find  car  get  assigned  long  passenger  wait  car  arrive  note  already  car  located  house  corresponding  wait  time  input  contains  house  car  taxi  ride  request  second  contains  initial  position  car  house  car  located  initially  allowed  car  located  next  house  following  information  ride  request  ride  request  represented  j  j  j  ajj  time  minute  request  made  house  passenger  need  picked  house  passenger  need  dropped  taxi  ride  request  given  increasing  order  distinct  print  answer  ride  request  car  assigned  operator  passenger  wait  time
1153/F __label__math  __label__dp  getting  closer  closer  mathematician  serval  becomes  university  student  math  major  japari  university  calculus  class  teacher  taught  calculate  expected  length  random  subsegment  given  segment  left  bonus  problem  homework  award  garage  kit  ioi  bonus  extend  problem  general  case  follows  given  segment  length  randomly  choose  segment  choosing  point  maybe  non  coordinate  given  segment  equiprobably  interval  point  form  segment  given  random  segment  another  endpoint  chosen  segment  split  segment  interval  task  calculate  expected  total  length  interval  covered  least  segment  random  segment  find  answer  modulo  contains  space  separated  positive  output  expected  total  length  interval  covered  least  segment  random  segment  modulo
923/D __label__implementation  __label__constructive  algorithms  __label__strings  alice  ha  string  consisting  character  bob  use  following  transition  substring  string  order  time  aaa  empty  string  note  substring  consecutive  character  given  query  determine  whether  possible  obtain  target  string  source  contains  string  second  contains  string  string  consists  uppercase  english  letter  third  contains  query  following  describe  query  contains  space  separated  represent  query  possible  create  applying  transition  finite  amount  time  substring  begin  index  indexed  end  index  particular  whole  string  guaranteed  print  string  character  character  answer  query  positive  otherwise
633/A __label__math  __label__brute  force  __label__number  theory  dante  engaged  fight  savior  fight  sword  need  break  shield  ha  gun  ebony  ivory  able  perform  non  negative  shot  every  bullet  hit  shield  ebony  deal  unit  damage  ivory  deal  unit  damage  order  break  shield  dante  ha  deal  exactly  unit  damage  find  possible  input  contains  unit  damage  dealt  ebony  gun  ivory  gun  total  damage  required  break  shield  respectively  print  yes  without  quote  dante  deal  exactly  damage  shield  without  quote  otherwise
1089/J __label__implementation  __label__greedy  international  coding  procedure  company  icpc  writes  code  jedi  script  programming  language  doe  get  compiled  delivered  execution  source  form  source  comment  extra  whitespace  including  trailing  leading  space  non  essential  feature  make  quite  large  contribute  semantics  code  process  minification  performed  source  file  delivery  execution  compress  source  preserving  semantics  hired  icpc  write  minifier  icpc  fortunately  icpc  adheres  strict  programming  practice  source  quite  restricted  grammar  work  algorithm  use  floating  point  string  every  source  contains  sequence  contains  token  separated  space  part  start  hash  character  code  including  hash  character  treated  comment  ignored  end  parsed  sequence  token  left  right  repeatedly  skipping  space  finding  longest  possible  token  starting  current  parsing  position  thus  transforming  source  code  sequence  token  possible  token  listed  reserved  token  kind  operator  separator  literal  reserved  word  name  library  function  preserved  minification  process  reserved  token  fixed  string  non  space  ascii  character  hash  character  code  reserved  token  given  input  minification  process  token  consists  sequence  digit  digit  character  inclusive  word  token  consists  sequence  character  following  set  lowercase  letter  uppercase  letter  digit  underscore  code  dollar  sign  code  word  doe  start  digit  note  parsing  longest  sequence  character  satisfies  either  word  definition  appears  list  reserved  token  considered  reserved  token  instead  minification  process  word  renamed  systematic  fashion  using  following  algorithm  take  list  word  consist  lowercase  letter  ordered  length  lexicographically  excluding  reserved  token  since  considered  word  target  word  list  rename  word  encountered  input  token  sequence  word  target  word  list  occurrence  word  input  token  sequence  rename  second  new  word  encountered  input  token  sequence  second  word  target  word  list  goal  minification  process  convert  given  source  shortest  possible  counting  space  still  par  sequence  token  correspondingly  renamed  word  using  parsing  rule  input  contains  single  reserved  token  second  input  contains  list  reserved  token  separated  space  without  repetition  list  reserved  token  least  character  long  contains  character  ascii  code  exclamation  mark  tilde  inclusive  exception  hash  character  code  third  input  contains  single  input  source  code  next  input  source  source  character  long  counting  leading  trailing  space  contains  character  ascii  code  space  tilde  inclusive  source  code  valid  fully  par  sequence  token  write  output  single  result  minification  process  input  source  code  output  source  shall  parse  sequence  token  input  source  correspondingly  renamed  word  shall  minimum  possible  space  needed  multiple  way  insert  minimum  possible  space  output  use  way
1140/A __label__implementation  ivan  recently  bought  detective  book  book  interesting  page  book  introduces  sort  mystery  explained  later  page  contains  mystery  explained  page  ivan  want  read  whole  book  day  read  page  read  earlier  continues  read  following  page  mystery  read  explained  clear  ivan  stop  doe  exist  page  ivan  already  ha  read  read  page  close  book  continues  read  following  day  next  page  many  day  take  read  whole  book  contains  single  page  book  second  contains  page  contains  explanation  mystery  page  print  day  take  read  whole  book
193/D __label__data  structures  nick  ha  permutation  consisting  segment  l  set  element  satisfying  l  nick  call  pair  segment  good  element  sorted  ascending  order  form  arithmetic  progression  difference  sorted  ascending  order  element  form  task  find  distinct  pair  good  segment  given  permutation  pair  segment  considered  distinct  set  element  contained  pair  segment  distinct  example  segment  represented  pair  segment  l  pair  consist  set  element  considered  identical  see  note  accompanying  sample  test  clarification  contains  permutation  size  second  contains  space  separated  distinct  print  single  good  pair  segment  permutation
568/A __label__math  __label__implementation  __label__brute  force  __label__number  theory  rikhail  mubinchik  belief  current  definition  prime  obsolete  complex  unpredictable  palindromic  another  matter  aesthetically  pleasing  ha  remarkable  property  help  rikhail  convince  scientific  community  let  remind  called  prime  larger  divisible  positive  rikhail  call  palindromic  positive  decimal  representation  without  leading  palindrome  read  left  right  right  left  problem  prime  many  let  introduce  following  notation  prime  larger  rub  palindromic  larger  rikhail  want  prove  lot  prime  palindromic  asked  solve  following  problem  given  value  coefficient  find  maximum  rub  input  consists  positive  numerator  denominator  fraction  value  maximum  exists  print  otherwise  print  palindromic  tree  better  splay  tree  without  quote
660/C __label__dp  __label__binary  search  given  array  element  element  either  let  denote  length  longest  subsegment  consecutive  element  consisting  change  maximize  contains  element  parameter  second  contains  element  print  non  negative  maximal  value  change
959/F __label__math  __label__dp  ehab  ha  array  like  bitwise  xor  operation  like  bother  mahmoud  came  problem  gave  mahmoud  query  gave  mahmoud  asked  find  subsequence  element  array  bitwise  xor  sum  help  mahmoud  answer  query  subsequence  element  neighboring  contains  element  array  query  next  contains  element  array  next  contains  representing  query  query  output  answer  modulo  newline
963/B __label__dp  __label__greedy  __label__dfs  __label__trees  __label__constructive  algorithms  given  tree  graph  vertex  edge  possible  reach  vertex  vertex  using  edge  vertex  destroyed  vertex  ha  even  degree  destroy  vertex  edge  connected  deleted  destroy  vertex  given  tree  determine  impossible  contains  vertex  tree  second  contains  pi  edge  vertex  guaranteed  given  graph  tree  possible  destroy  vertex  print  yes  without  quote  otherwise  print  without  quote
1228/A __label__implementation  __label__brute  force  find  satisfies  condition  l  digit  different  multiple  answer  print  contains  answer  exists  print  otherwise  print
903/C __label__greedy  mishka  ha  got  empty  box  every  box  cube  side  length  mishka  put  box  another  box  following  condition  met  box  put  another  box  box  box  box  smaller  box  mishka  put  box  arbitrary  time  want  minimize  visible  box  box  called  visible  iff  put  another  box  help  mishka  determine  minimum  possible  visible  box  contains  box  mishka  ha  got  second  contains  side  length  box  print  minimum  possible  visible  box
92/B __label__greedy  little  walrus  fangy  love  math  much  bored  play  performing  operation  fangy  take  positive  want  get  equal  fangy  repeat  following  action  odd  add  otherwise  divide  fangy  know  positive  process  end  finite  time  many  action  fangy  perform  get  contains  positive  binary  system  guaranteed  digit  different  digit  doe  exceed  print  required  action
931/C __label__math  __label__implementation  anya  kirill  physic  laboratory  work  task  measure  value  time  compute  average  value  lower  error  kirill  ha  already  made  measurement  ha  got  following  value  important  value  close  namely  difference  maximum  value  minimum  value  anya  doe  want  make  measurement  copy  value  kirill  work  error  measurement  random  value  coincidence  noted  teacher  anya  want  write  value  work  following  condition  met  average  value  equal  average  value  anya  measurement  bound  kirill  measurement  maximum  value  anya  value  greater  maximum  value  kirill  value  minimum  value  anya  value  le  minimum  value  kirill  value  equal  measurement  anya  work  kirill  work  small  possible  option  previous  condition  met  formally  teacher  go  anya  value  equal  value  kirill  work  strike  strike  anya  value  equal  value  kirill  work  equal  measurement  total  strike  value  anya  work  help  anya  write  set  measurement  condition  met  contains  single  numeber  measurement  made  kirill  second  contains  sequence  measurement  made  kirill  guaranteed  difference  maximum  minimum  value  value  doe  exceed  print  minimum  possible  equal  measurement
1154/G __label__math  __label__greedy  __label__brute  force  __label__number  theory  given  array  consisting  problem  find  pair  index  lcm  minimum  possible  lcm  least  common  multiple  minimum  positive  divisor  input  contains  element  second  input  contains  element  print  value  lcm  minimum  valid  pair  multiple  answer  print
958/D1 __label__math  rebel  fleet  run  consists  ship  currently  gathered  around  single  planet  second  ago  vastly  powerful  empire  fleet  ha  appeared  solar  system  rebel  need  escape  hyperspace  order  spread  fleet  captain  ship  ha  independently  come  coordinate  ship  jump  obsolete  navigation  system  used  rebel  coordinate  given  value  arithmetic  expression  form  plan  future  resistance  movement  princess  heidi  need  know  ship  many  ship  going  end  coordinate  jump  hope  input  contains  single  ship  next  describe  jump  coordinate  given  arithmetic  expression  expression  ha  form  namely  consists  opening  parenthesis  positive  decimal  digit  plus  sign  positive  decimal  digit  closing  parenthesis  slash  positive  decimal  digit  print  single  consisting  space  separated  equal  ship  whose  coordinate  equal  ship  including  ship
999/B __label__implementation  string  length  encrypted  following  algorithm  iterate  divisor  decreasing  order  divisor  reverse  substring  substring  start  position  end  position  example  algorithm  applied  string  codeforces  lead  following  change  codeforces  secrofedoc  orcesfedoc  rocesfedoc  rocesfedoc  obviously  last  reverse  operation  change  string  given  encrypted  string  task  decrypt  string  find  string  algorithm  result  string  proven  string  always  exists  unique  input  consists  single  length  string  second  input  consists  string  length  consists  lowercase  latin  letter  print  string  algorithm  result
371/D __label__implementation  __label__data  structures  __label__trees  system  vessel  arranged  shown  figure  assume  vessel  numbered  order  highest  lowest  volume  vessel  liter  initially  vessel  empty  vessel  water  poured  water  overflow  vessel  go  liquid  overflow  vessel  spill  floor  task  simulate  pouring  water  vessel  need  handle  type  query  add  liter  water  vessel  print  liter  water  vessel  reply  second  request  assume  water  poured  point  ha  already  overflown  vessel  contains  vessel  second  contains  vessel  capacity  vessel  capacity  necessarily  increase  top  vessel  bottom  see  second  sample  third  contains  query  next  contains  description  query  query  type  represented  query  second  type  represented  query  print  single  liter  water  corresponding  vessel
1162/A __label__implementation  planning  build  housing  street  spot  available  street  build  house  spot  labeled  left  right  spot  build  house  height  spot  house  ha  height  gain  dollar  city  ha  zoning  restriction  restriction  say  tallest  house  spot  inclusive  must  would  like  build  house  maximize  profit  determine  maximum  profit  possible  contains  spot  maximum  height  restriction  next  contains  left  right  limit  inclusive  restriction  maximum  possible  height  range  print  single  maximum  profit  make
978/G __label__implementation  __label__greedy  __label__sortings  petya  study  university  current  academic  year  finish  special  day  petya  need  pas  exam  special  day  special  day  problem  numbered  value  exam  day  question  exam  published  day  exam  day  petya  need  prepare  exam  exam  petya  prepare  day  inclusive  type  activity  petya  day  spend  day  nothing  taking  rest  spend  day  passing  exactly  exam  spend  day  preparing  exactly  exam  pas  prepare  multiple  exam  day  mix  activity  day  preparing  exam  day  allowed  break  preparation  exam  alternate  preparation  different  exam  consecutive  day  preparation  exam  required  done  consecutive  day  find  schedule  petya  prepare  exam  pas  report  impossible  contains  day  exam  following  contains  day  question  exam  given  day  exam  day  petya  need  prepare  exam  guaranteed  exam  different  day  question  different  exam  given  day  possible  day  exam  question  exam  given  petya  prepare  pas  exam  print  case  positive  answer  print
1215/B __label__dp  __label__implementation  given  sequence  consisting  non  calculate  following  value  pair  index  negative  pair  index  positive  contains  element  sequence  second  contains  element  sequence  print  subsegments  negative  product  subsegments  positive  product  respectively
1155/B __label__implementation  __label__greedy  telephone  sequence  exactly  digit  digit  vasya  petya  playing  game  initially  string  length  odd  consisting  digit  vasya  make  move  player  alternate  turn  move  player  must  choose  character  erase  current  string  example  current  string  player  move  game  end  length  string  becomes  resulting  string  telephone  vasya  win  otherwise  petya  win  determine  vasya  ha  winning  strategy  vasya  win  game  matter  character  petya  chooses  move  contains  odd  length  string  second  contains  string  consisting  decimal  digit  vasya  ha  strategy  guarantee  victory  print  yes
489/D __label__dfs  __label__graphs  __label__brute  force  tomash  keep  wandering  getting  lost  walking  along  street  berland  surprise  home  town  pair  intersection  exactly  way  walk  intersection  capital  berland  different  tomash  ha  noticed  even  simple  case  ambiguity  confuse  see  group  distinct  intersection  path  call  group  damn  rhombus  note  pair  directly  connected  road  schematically  damn  rhombus  shown  figure  road  intersection  make  rhombus  appealing  tomash  intersection  remain  damn  rhombus  given  capital  berland  ha  intersection  road  road  unidirectional  known  advance  find  damn  rhombus  city  rhombus  compared  order  intersection  matter  input  contains  pair  intersection  road  respectively  next  list  road  per  road  given  pair  aii  intersection  go  intersection  lead  pair  intersection  road  direction  guaranteed  get  intersection  print  required  damn  rhombus
365/B __label__implementation  array  segment  good  let  define  len  len  length  segment  segment  longer  segment  len  en  task  find  good  segment  maximum  length  array  note  segment  length  always  good  contains  single  element  array  second  contains  print  length  longest  good  segment  array
368/A __label__implementation  sereja  owns  restaurant  people  restaurant  hall  ha  coat  rack  hook  restaurant  visitor  use  hook  hang  clothes  using  hook  cost  ruble  person  hang  clothes  hook  tonight  sereja  expects  guest  restaurant  naturally  guest  want  hang  clothes  available  hook  minimum  price  multiple  hook  chooses  moment  guest  arrives  rack  ha  available  hook  sereja  must  pay  ruble  fine  guest  help  sereja  find  profit  ruble  possibly  negative  get  tonight  assume  guest  arrive  hook  rack  available  guest  come  different  time  nobody  besides  guest  visiting  sereja  restaurant  tonight  contains  next  contains  third  contains  single  print  single  answer  problem
598/A __label__math  problem  calculate  sum  take  power  minus  sum  example  sum  equal  respectively  calculate  answer  value  input  contains  single  value  processed  next  contains  single  print  requested  sum  given  input
1063/A __label__constructive  algorithms  __label__strings  non  empty  string  called  palindrome  read  left  right  right  left  example  abcba  abba  palindrome  abab  string  called  substring  another  string  obtained  string  dropping  possibly  character  beginning  end  example  abc  substring  string  abc  let  define  palindromic  count  string  substring  palindrome  example  palindromic  count  string  aaa  substring  palindrome  palindromic  count  string  abc  substring  length  palindrome  given  string  arbitrarily  rearrange  character  goal  obtain  string  maximum  possible  value  palindromic  count  contains  length  string  second  contains  string  consists  exactly  lowercase  character  latin  alphabet  print  string  consists  set  character  character  appears  exactly  time  string  moreover  maximum  possible  value  palindromic  count  string  string
402/A __label__math  __label__greedy  nut  lot  box  box  wonderful  feature  put  x  divisor  spacial  bar  divide  box  get  box  divided  section  minimalist  therefore  hand  dividing  box  section  hand  putting  nut  section  box  minimum  box  use  want  put  nut  box  divisor  please  note  need  minimize  used  box  section  minimize  used  divisor  contains  space  separated  maximum  section  box  nut  divisor  capacity  section  box  print  single  answer  problem
446/B __label__greedy  __label__data  structures  __label__brute  force  know  dzy  love  playing  game  day  dzy  decided  play  n  matrix  precise  decided  modify  matrix  exactly  operation  modification  following  pick  row  matrix  decrease  element  row  operation  brings  dzy  value  pleasure  equal  sum  element  row  decreasing  pick  column  matrix  decrease  element  column  operation  brings  dzy  value  pleasure  equal  sum  element  column  decreasing  dzy  want  know  largest  total  value  pleasure  could  get  performing  exactly  modification  please  help  calculate  value  contains  space  separated  follow  contains  representing  aij  ij  element  current  row  matrix  output  single  maximum  possible  total  pleasure  value  dzy  could  get
394/B __label__math  teacher  think  make  lot  progress  even  allowed  use  decimal  notation  instead  counting  stick  test  teacher  promised  show  beautiful  problem  left  paper  teacher  office  teacher  remembers  beautiful  wa  strictly  positive  leading  length  exactly  decimal  digit  move  last  digit  beginning  grows  exactly  time  besides  teacher  sure  beautiful  minimal  possible  teacher  office  near  teacher  young  passed  test  deserved  right  see  beautiful  help  restore  justice  find  beautiful  single  contains  teacher  made  mistake  exist  print  single  impossible  without  quote  otherwise  print  beautiful  without  leading
474/C __label__brute  force  __label__geometry  captain  marmot  want  prepare  huge  important  battle  enemy  captain  snake  battle  ha  regiment  consisting  mole  initially  mole  n  placed  position  cartesian  plane  captain  marmot  want  move  mole  make  regiment  compact  possible  mole  ha  home  placed  position  moving  mole  time  mean  rotating  position  point  degree  counter  clockwise  around  home  point  regiment  compact  position  point  mole  form  square  non  area  help  captain  marmot  find  regiment  minimal  move  required  make  regiment  compact  possible  contains  regiment  next  print  standard  output  regiment  made  compact  minimal  required  move  otherwise  print  without  quote
812/E __label__trees  sagheer  playing  game  best  friend  soliman  brought  tree  node  numbered  rooted  node  node  ha  apple  tree  ha  special  property  length  path  root  leaf  parity  path  even  length  path  odd  length  sagheer  soliman  take  turn  play  soliman  make  move  player  make  move  loses  move  current  player  pick  single  node  take  non  empty  subset  apple  following  thing  eat  apple  node  leaf  move  apple  child  node  non  leaf  soliman  come  start  playing  sagheer  make  exactly  change  tree  pick  different  node  swap  apple  apple  help  sagheer  count  way  make  swap  choose  win  game  player  play  optimally  considered  pair  node  apple  tree  second  apple  node  tree  third  parent  node  tree  node  ha  parent  node  root  tree  guaranteed  input  describes  valid  tree  length  path  root  leaf  parity  single  print  different  pair  node  u  start  playing  swapping  apple  node  sagheer  win  game  considered  pair
1189/C __label__math  __label__dp  __label__implementation  __label__data  structures  consider  sequence  digit  length  perform  following  operation  replace  pair  mod  every  get  candy  result  get  sequence  length  le  formally  partition  sequence  length  pair  consisting  pair  consists  second  second  third  fourth  last  pair  consists  every  pair  sum  least  get  candy  replace  every  pair  remainder  division  sum  change  order  perform  operation  resulting  array  becomes  length  let  denote  candy  get  process  example  starting  sequence  operation  sequence  becomes  mod  mod  mod  mod  get  candy  second  operation  sequence  becomes  mod  mod  get  candy  final  operation  sequence  becomes  mod  therefore  got  candy  total  given  sequence  digit  length  answer  query  form  query  output  guaranteed  form  nonnegative  contains  single  length  sequence  second  contains  digit  third  contains  single  query  next  contains  query  guaranteed  nonnegative  power  output  output  single  answer  query
965/B __label__implementation  arkady  playing  battleship  rule  game  really  important  field  nn  cell  exactly  decker  field  ship  cell  long  oriented  either  horizontally  vertically  arkady  know  located  cell  arkady  know  definitely  empty  part  ship  consider  possible  location  ship  find  cell  belongs  maximum  possible  different  location  ship  contains  size  field  size  ship  next  field  contains  character  either  denotes  definitely  empty  cell  denotes  cell  belong  ship  output  row  column  cell  belongs  maximum  possible  different  location  ship
464/A __label__greedy  __label__strings  paul  hate  palindrome  assumes  string  tolerable  character  letter  english  alphabet  palindrome  contiguous  substring  length  paul  ha  found  tolerable  string  length  help  find  lexicographically  next  tolerable  string  length  else  state  string  doe  exist  contains  space  separated  second  contains  string  consisting  small  english  letter  guaranteed  string  tolerable  according  definition  lexicographically  next  tolerable  string  length  exists  print  otherwise  print  without  quote
433/B __label__dp  __label__implementation  __label__sortings  kuriyama  mirai  ha  killed  many  monster  got  many  namely  stone  stone  cost  stone  kuriyama  mirai  want  know  something  stone  ask  kind  question  tell  tell  let  cost  cheapest  stone  cost  place  arrange  stone  cost  non  decreasing  order  time  tell  tell  every  question  give  correct  answer  kuriyama  mirai  say  fuyukai  desu  become  unhappy  contains  second  contains  cost  stone  third  contains  kuriyama  mirai  question  follow  contains  type  ype  describing  question  type  equal  output  answer  question  else  output  answer  second  print  must  answer  kuriyama  mirai  question  print  answer  question  order  input
557/B __label__math  __label__implementation  __label__sortings  __label__constructive  algorithms  pasha  decided  invite  friend  tea  party  occasion  ha  large  teapot  capacity  milliliter  tea  cup  cup  pasha  friend  cup  hold  milliliter  water  turned  pasha  friend  exactly  boy  exactly  girl  going  come  tea  party  please  everyone  pasha  decided  pour  water  tea  follows  pasha  boil  teapot  exactly  pouring  milliliter  water  pasha  pours  amount  water  girl  pasha  pours  amount  water  boy  girl  get  milliliter  water  boy  get  milliliter  water  word  boy  get  time  water  girl  doe  pasha  kind  polite  want  maximize  total  amount  water  pours  friend  task  help  determine  optimum  distribution  cup  pasha  friend  input  contains  pasha  friend  boy  equal  pasha  friend  girl  capacity  pasha  teapot  milliliter  second  input  contains  sequence  n  capacity  pasha  tea  cup  milliliter  print  single  real  maximum  total  amount  water  milliliter  pasha  pour  friend  without  violating  given  condition  answer  considered  correct  absolute  relative  error  exceed
720/D __label__dp  __label__data  structures  __label__sortings  little  girl  masha  like  winter  sport  today  planning  take  part  slalom  skiing  track  represented  grid  composed  n  square  rectangular  obstacle  track  composed  grid  square  masha  must  get  square  square  move  square  adjacent  square  either  right  upwards  square  occupied  obstacle  allowed  move  square  see  obstacle  actually  passed  way  either  right  masha  path  left  masha  like  try  way  thing  would  like  know  many  way  pas  track  way  considered  different  obstacle  right  path  way  left  path  way  help  masha  find  way  pas  track  way  quite  big  masha  would  like  know  modulo  picture  show  different  way  pas  track  sample  test  input  data  contains  positive  size  track  obstacle  following  positive  coordinate  bottom  left  top  right  square  obstacle  guaranteed  obstacle  square  obstacle  overlap  touch  output  way  pas  track  modulo
439/D __label__sortings  __label__binary  search  devu  brother  love  lot  super  geek  like  play  array  given  array  father  array  given  devu  brother  devu  really  naughty  kid  want  minimum  value  array  least  much  maximum  value  brother  array  help  devu  achieving  condition  perform  multiple  operation  array  single  operation  allowed  decrease  increase  element  array  note  allowed  apply  operation  index  array  multiple  time  need  find  minimum  operation  required  satisfy  devu  condition  brother  play  peacefully  without  fighting  contains  space  separated  second  space  separated  representing  content  array  third  space  separated  representing  content  array  need  output  single  representing  minimum  operation  needed  satisfy  devu  condition
405/C __label__math  __label__implementation  little  chris  huge  fan  linear  algebra  time  ha  given  homework  unusual  square  square  matrix  dot  product  vector  size  sum  product  corresponding  component  vector  unusual  square  n  square  matrix  defined  sum  dot  product  dot  product  row  vector  column  vector  matrix  fortunately  chris  ha  work  mean  operation  addition  multiplication  calculated  modulo  fact  matrix  binary  element  either  example  consider  following  matrix  unusual  square  equal  much  homework  chris  ha  process  query  query  following  given  row  index  flip  value  row  given  column  index  flip  value  column  find  unusual  square  flip  bit  value  mean  change  change  change  given  initial  matrix  output  answer  query  third  type  solve  chris  homework  input  contains  row  column  matrix  next  describe  matrix  contains  space  separated  bit  describes  row  aij  ij  element  intersection  row  column  next  input  contains  query  next  describes  single  query  following  flip  value  row  flip  value  column  output  unusual  square  note  since  size  input  output  could  large  use  slow  output  technique  language  example  use  input  output  stream  cin  cout  let  rd  type  query  input  output  single  string  length  symbol  value  unusual  square  query  rd  type  appears  input
1101/C __label__sortings  segment  divide  segment  non  empty  group  way  pair  segment  different  group  least  common  point  say  impossible  segment  belong  exactly  group  optimize  testing  process  given  multitest  contains  query  query  contains  description  set  segment  query  independent  query  contains  single  segment  guaranteed  query  doe  exceed  next  contains  per  segment  query  print  segment  order  input  equal  segment  belongs  group  otherwise
706/A __label__implementation  __label__brute  force  __label__geometry  vasiliy  life  point  coordinate  plane  hurrying  work  want  get  house  soon  possible  new  app  suggested  available  beru  taxi  nearby  taxi  located  point  move  speed  consider  driver  move  directly  vasiliy  maximum  possible  speed  compute  minimum  time  vasiliy  get  beru  taxi  car  input  contains  coordinate  vasiliy  home  second  contains  single  available  beru  taxi  car  nearby  following  contains  coordinate  car  speed  allowed  several  car  located  point  car  located  exactly  point  vasiliy  life  print  single  real  value  minimum  time  vasiliy  need  get  beru  taxi  car  answer  considered  correct  absolute  relative  error  doe  exceed
605/A __label__greedy  __label__constructive  algorithms  infinitely  long  railway  ha  train  consisting  car  numbered  car  distinct  positioned  arbitrary  order  david  blaine  want  sort  railway  car  order  increasing  move  make  car  disappear  place  teleport  either  beginning  train  end  train  desire  minimum  action  david  blaine  need  perform  order  sort  train  input  contains  car  train  second  contains  pij  sequence  car  train  print  single  minimum  action  needed  sort  railway  car
611/H __label__graphs  __label__constructive  algorithms  tree  connected  undirected  graph  edge  denotes  vertex  vertex  numbered  limak  little  polar  bear  bear  family  prepares  new  year  tree  every  year  year  ago  tree  wa  awesome  usually  thus  decided  prepare  tree  next  year  limak  wa  responsible  remembering  tree  would  hard  remember  whole  tree  limak  decided  describe  notebook  instead  took  pen  wrote  index  vertex  connected  edge  new  year  around  corner  limak  asked  reconstruct  tree  course  problem  wa  little  bear  year  ago  know  digit  alphabet  replaced  digit  question  mark  character  knew  mean  vertex  index  note  know  digit  least  know  leading  limak  want  disappoint  everyone  please  take  note  reconstruct  new  year  tree  find  tree  matching  limak  record  print  edge  order  possible  limak  made  mistake  suitable  tree  case  print  without  quote  contains  single  vertex  next  contains  space  separated  non  empty  string  consisting  question  mark  string  ha  character  digit  tree  matching  limak  record  print  without  quote
1249/B2 __label__math  __label__dfs  difference  easy  hard  version  constraint  kid  reading  unique  book  end  day  kid  give  book  kid  case  kid  give  book  guaranteed  value  distinct  permutation  sequence  change  day  day  fixed  example  end  day  book  kid  belong  kid  kid  belong  kid  end  second  day  book  kid  belong  kid  kid  belong  kid  task  determine  day  book  child  returned  back  time  every  consider  following  example  book  kid  passed  following  kid  day  belong  kid  day  belong  kid  day  belong  kid  day  belong  kid  fourth  day  book  kid  return  owner  book  fourth  kid  return  time  exactly  day  answer  independent  query  input  contains  query  query  follow  query  contains  kid  query  second  query  contains  distinct  permutation  kid  get  book  kid  guaranteed  sum  query  doe  exceed  query  print  answer  day  book  child  returned  back  time  query
883/C __label__binary  search  millisecond  left  start  well  known  online  programming  contest  codehorses  round  polycarp  need  download  compiler  take  part  contest  size  file  byte  polycarp  internet  tariff  allows  download  data  rate  byte  per  millisecond  tariff  already  prepaid  use  doe  incur  expense  polycarp  addition  internet  service  provider  offer  additional  package  download  byte  rate  byte  per  millisecond  paying  burles  package  download  byte  rate  byte  per  millisecond  paying  burles  package  polycarp  buy  package  many  time  buying  package  price  prepaid  usage  package  bought  replaces  regular  tariff  package  data  limit  completely  used  package  consumed  polycarp  immediately  buy  new  package  switch  regular  tariff  without  loosing  time  package  use  polycarp  buy  another  package  switch  back  regular  internet  tariff  find  minimum  amount  money  polycarp  ha  spend  download  byte  file  millisecond  note  technical  reason  polycarp  download  byte  using  regular  tariff  package  downloading  mode  downloaded  byte  mean  polycarp  download  byte  partially  using  regular  tariff  package  contains  size  file  download  byte  maximal  time  download  file  millisecond  millisecond  download  byte  using  regular  internet  tariff  second  contains  description  additional  package  contains  maximal  size  downloaded  data  byte  time  download  byte  millisecond  price  package  burles  third  contains  description  second  additional  package  contains  maximal  size  downloaded  data  byte  time  download  byte  millisecond  price  package  burles  polycarp  buy  package  many  time  package  bought  replaces  regular  tariff  package  data  limit  completely  used  package  use  polycarp  buy  another  package  switch  back  regular  internet  tariff  print  minimum  amount  money  polycarp  need  pay  download  compiler  millisecond  solution  print
1197/B __label__implementation  __label__greedy  pillar  aligned  row  numbered  initially  pillar  contains  exactly  disk  pillar  contains  disk  radius  move  disk  pillar  another  take  disk  pillar  place  top  pillar  condition  met  pillar  pillar  formally  mean  pillar  contains  exactly  disk  either  pillar  contains  disk  topmost  disk  pillar  ha  radius  strictly  greater  radius  disk  move  place  disk  pillar  already  ha  disk  put  new  disk  top  previously  placed  disk  new  disk  used  check  third  condition  try  place  another  disk  pillar  take  disk  place  pillar  time  provided  every  time  aforementioned  condition  met  wonder  possible  place  disk  pillar  simultaneously  contains  pillar  second  contains  radius  disk  initially  placed  pillar  distinct  print  yes  possible  place  disk  pillar  simultaneously  otherwise  print  letter  case  yes  yes  yes  recognized  positive  answer  recognized  negative  answer
1067/B __label__dfs  __label__graphs  someone  give  strange  birthday  present  ivan  hedgehog  connected  undirected  graph  vertex  ha  degree  least  call  center  vertex  ha  degree  ivan  thought  hedgehog  boring  decided  make  multihedgehog  let  define  multihedgehog  follows  multihedgehog  hedgehog  ha  vertex  degree  least  vertex  degree  multihedgehog  multihedgehog  following  change  ha  made  vertex  degree  let  neighbor  remove  vertex  create  new  hedgehog  center  vertex  connect  vertex  edge  new  hedgehog  differ  initial  gift  thereby  multihedgehog  tree  ivan  made  multihedgehog  sure  make  mistake  asked  check  tree  indeed  multihedgehog  input  contains  vertex  hedgehog  parameter  next  contains  index  vertex  connected  edge  guaranteed  given  graph  tree  print  yes  without  quote  given  graph  multihedgehog  without  quote  otherwise
295/A __label__implementation  __label__data  structures  greg  ha  array  operation  operation  look  ii  apply  operation  array  mean  increase  array  element  value  greg  wrote  query  piece  paper  query  ha  following  form  ii  mean  apply  operation  array  greg  wondering  array  query  executed  help  greg  contains  second  contains  initial  array  next  operation  operation  written  ii  next  query  query  written  ii  separated  single  space  single  print  array  executing  query  separate  printed  space
1163/B2 __label__implementation  __label__data  structures  problem  previous  ha  larger  constraint  shiro  moved  new  house  want  invite  friend  house  play  monopoly  house  small  invite  friend  time  day  since  day  shiro  moved  new  house  exactly  cat  coming  shiro  house  cat  coming  day  ha  ribbon  color  shiro  want  know  largest  consider  streak  day  possible  remove  exactly  day  streak  every  ribbon  color  ha  appeared  remaining  occurrence  example  consider  following  sequence  make  streak  since  remove  leftmost  ribbon  color  appear  exactly  twice  prefix  day  note  form  streak  since  must  remove  exactly  day  since  shiro  cat  good  counting  need  help  finding  longest  streak  contains  single  total  day  second  contains  color  ribbon  cat  wear  print  single  largest  possible  streak  day
1099/B __label__math  __label__constructive  algorithms  __label__binary  search  little  sofia  fourth  grade  today  geometry  lesson  learned  segment  square  way  home  decided  draw  square  snow  side  length  simplicity  assume  sofia  life  plane  draw  segment  length  parallel  coordinate  ax  vertex  point  order  draw  segment  sofia  proceeds  follows  want  draw  vertical  segment  coordinate  end  sofia  look  already  drawn  segment  coordinate  end  segment  exists  sofia  quickly  draw  new  segment  using  old  guideline  segment  sofia  ha  take  ruler  measure  new  segment  long  time  thing  happens  sofia  want  draw  horizontal  segment  check  existence  segment  coordinate  differing  coordinate  example  sofia  need  draw  square  draw  segment  using  ruler  draw  remaining  segment  using  guide  sofia  need  draw  square  draw  segment  using  ruler  draw  remaining  segment  using  guide  sofia  hurry  want  minimize  segment  draw  ruler  without  guide  help  find  minimum  input  contains  single  square  sofia  want  draw  print  single  minimum  segment  sofia  draw  ruler  without  guide  order  draw  square  manner  described
1037/B __label__greedy  given  array  guaranteed  odd  operation  either  increase  decrease  single  element  calculate  minimum  operation  required  make  median  array  equal  median  array  odd  length  value  element  located  middle  position  array  sorted  example  median  array  equal  since  sort  array  get  located  middle  position  contains  length  array  required  value  median  second  contains  element  array  guaranteed  odd  single  output  minimum  operation  make  median  equal
785/A __label__implementation  __label__strings  anton  favourite  geometric  figure  regular  polyhedron  note  kind  regular  polyhedron  tetrahedron  tetrahedron  ha  triangular  face  cube  cube  ha  square  face  octahedron  octahedron  ha  triangular  face  dodecahedron  dodecahedron  ha  pentagonal  face  icosahedron  icosahedron  ha  triangular  face  kind  polyhedron  shown  picture  anton  ha  collection  polyhedron  day  decided  know  many  face  polyhedron  total  help  anton  find  input  contains  single  polyhedron  anton  collection  following  input  contains  string  name  polyhedron  anton  collection  string  look  like  tetrahedron  without  quote  polyhedron  anton  collection  tetrahedron  cube  without  quote  polyhedron  anton  collection  cube  octahedron  without  quote  polyhedron  anton  collection  octahedron  dodecahedron  without  quote  polyhedron  anton  collection  dodecahedron  icosahedron  without  quote  polyhedron  anton  collection  icosahedron  output  total  face  polyhedron  anton  collection
883/M __label__math  __label__greedy  polycarp  take  part  quadcopter  competition  according  rule  flying  robot  start  race  point  field  around  flag  close  cycle  returning  back  starting  point  polycarp  know  coordinate  starting  point  coordinate  point  flag  situated  polycarp  quadcopter  fly  parallel  side  field  tick  changing  exactly  coordinate  mean  tick  quadcopter  fly  point  point  thus  quadcopter  path  closed  cycle  starting  finishing  containing  point  strictly  inside  picture  corresponds  example  starting  finishing  point  flag  minimal  length  quadcopter  path  contains  coordinate  quadcopter  starting  finishing  point  second  contains  coordinate  flag  guaranteed  quadcopter  starting  point  flag  coincide  print  length  minimal  path  quadcopter  surround  flag  return  back
865/C __label__dp  __label__binary  search  trying  set  record  favorite  video  game  game  consists  level  must  completed  sequentially  order  beat  game  usually  complete  level  fast  possible  sometimes  finish  level  slower  specifically  complete  level  either  second  second  percent  chance  completing  second  completing  level  decide  either  continue  game  play  next  level  reset  game  start  level  decision  action  instant  goal  complete  level  sequentially  total  second  want  minimize  expected  amount  time  playing  achieving  goal  continue  reset  optimally  much  total  time  expect  spend  playing  input  contains  level  second  want  complete  game  respectively  follow  ith  contains  fast  time  level  slow  time  level  probability  percentage  completing  level  fast  time  print  total  expected  time  answer  must  correct  absolute  relative  error
573/C __label__dfs  __label__trees  __label__constructive  algorithms  limak  little  bear  learns  draw  people  usually  start  house  fence  flower  would  bear  limak  life  forest  decides  draw  tree  recall  tree  connected  graph  consisting  vertex  edge  limak  chose  tree  vertex  ha  infinite  strip  paper  parallel  row  dot  little  bear  want  assign  vertex  tree  distinct  dot  paper  edge  would  intersect  endpoint  drawn  tree  must  planar  see  correct  drawing  sample  test  possible  limak  draw  chosen  tree  contains  single  next  description  tree  contains  space  separated  ii  denoting  edge  vertex  guaranteed  given  description  form  tree  print  yes  without  quote  limak  draw  chosen  tree  otherwise  print  without  quote
1180/B __label__implementation  __label__greedy  nick  received  awesome  array  gift  birthday  mother  wa  already  going  explore  various  property  unpacking  wa  disappointed  lot  product  element  seemed  large  enough  wa  ready  throw  array  mother  reassured  told  array  would  spoiled  following  operation  choose  index  example  change  array  array  applying  operation  element  index  kolya  immediately  understood  sometimes  possible  increase  product  array  lot  ha  decided  want  get  array  maximal  possible  product  using  operation  element  possibly  time  many  want  forbidden  operation  several  time  index  help  kolya  print  array  maximal  possible  product  element  received  using  operation  order  multiple  answer  print  contains  array  second  contains  element  array  print  element  array  maximal  possible  product  element  received  using  operation  order  given  array
1216/D __label__math  type  sword  theater  basement  used  play  moreover  exactly  sword  type  people  broken  theater  basement  ha  taken  exactly  sword  single  type  note  different  people  might  taken  different  type  sword  note  value  unknown  next  morning  director  theater  discovers  loss  count  sword  exactly  sword  type  left  untouched  director  ha  clue  initial  sword  type  basement  people  broken  basement  many  sword  taken  example  possible  situation  people  took  sword  type  people  took  sword  third  type  note  know  value  beforehand  know  value  thus  seek  help  determine  minimum  people  could  broken  theater  basement  sword  ha  taken  input  contains  type  sword  second  input  contains  sequence  equal  sword  type  remained  basement  theft  guaranteed  exists  least  pair  index  print  minimum  people  could  broken  basement  sword  ha  taken
1133/F1 __label__graphs  given  undirected  unweighted  connected  graph  consisting  vertex  edge  guaranteed  self  loop  multiple  edge  given  graph  task  find  spanning  tree  graph  maximum  degree  vertex  maximum  possible  recall  degree  vertex  edge  incident  contains  n  vertex  edge  respectively  following  denote  edge  edge  represented  pair  index  vertex  connected  edge  loop  multiple  edge  given  graph  pair  pair  list  edge  pair  condition  satisfied  print  describing  edge  spanning  tree  maximum  degree  vertex  maximum  possible  make  sure  edge  printed  spanning  tree  form  subset  input  edge  order  matter  edge  considered  edge
750/E __label__dp  __label__data  structures  string  called  nice  string  occurs  subsequence  string  occur  subsequence  example  string  nice  string  nice  ugliness  string  minimum  possible  character  remove  order  obtain  nice  string  impossible  make  string  nice  removing  character  ugliness  limak  ha  string  length  character  indexed  asks  query  query  compute  print  ugliness  substring  continuous  subsequence  starting  index  ending  index  inclusive  input  contains  length  string  query  respectively  second  contains  string  length  every  character  digit  next  contains  ii  describing  substring  query  query  print  ugliness  given  substring
1107/E __label__dp  vasya  ha  string  length  consisting  digit  ha  array  length  vasya  performs  following  operation  string  becomes  empty  choose  consecutive  substring  equal  character  erase  string  glue  together  remaining  part  empty  example  era  substring  string  get  string  vasya  get  point  erasing  substring  length  vasya  want  maximize  total  point  help  contains  length  string  second  contains  string  consisting  digit  third  contains  point  erasing  substring  length  print  maximum  total  point  vasya  get
785/C __label__math  __label__binary  search  anton  like  listen  fairy  tale  especially  danik  anton  best  friend  tell  right  danik  tell  anton  fairy  tale  upon  time  lived  emperor  wa  rich  much  grain  day  ordered  build  huge  barn  put  grain  best  builder  building  barn  day  night  overlooked  remained  little  hole  barn  every  day  sparrow  came  flew  sparrow  took  grain  flew  away  formally  following  take  place  fairy  tale  beginning  day  barn  capacity  grain  wa  full  every  day  starting  day  following  happens  grain  brought  barn  grain  fit  barn  barn  becomes  full  grain  fit  brought  back  problem  assume  grain  fit  barn  taken  account  sparrow  come  eat  grain  day  sparrow  come  day  sparrow  come  second  day  sparrow  come  every  sparrow  eats  grain  barn  empty  sparrow  eats  nothing  anton  tired  listening  danik  describes  every  sparrow  eats  grain  barn  anton  know  fairy  tale  end  asked  determine  end  day  barn  become  empty  time  help  anton  write  program  determine  day  input  contains  capacity  barn  grain  brought  every  day  output  day  barn  become  empty  time  day  numbered  starting
534/E __label__implementation  __label__greedy  __label__constructive  algorithms  berland  bus  travel  along  main  street  capital  street  begin  main  square  look  like  long  segment  bus  stop  located  along  street  located  distance  central  square  distance  distinct  stop  numbered  order  increasing  distance  square  bus  start  journey  stop  pass  stop  reach  stop  turn  around  go  opposite  direction  stop  passing  intermediate  stop  reverse  order  start  move  towards  stop  day  bus  run  non  stop  route  bus  equipped  berland  local  positioning  system  bus  pass  stop  system  note  key  feature  system  respond  query  distance  covered  bus  part  path  pair  stop  special  module  system  take  input  information  set  stop  segment  path  stop  occurs  set  many  time  bus  drove  past  module  return  length  traveled  segment  path  impossible  determine  length  uniquely  operation  module  complicated  fact  stop  occur  request  order  visited  non  decreasing  order  example  stop  part  bus  path  start  bus  stop  end  stop  pass  stop  follows  request  segment  path  form  bus  segment  path  stop  stop  ha  time  drive  past  stop  consider  segment  end  second  visit  stop  way  request  form  repeat  berland  programmer  achievement  implement  function  contains  stop  second  contains  distance  stop  central  square  second  increasing  order  third  contains  stop  bus  visited  segment  path  fourth  contains  sorted  list  stop  visited  bus  segment  path  stop  occurs  many  time  wa  visited  bus  guaranteed  query  corresponds  segment  path  single  please  print  distance  covered  bus  impossible  determine  unambiguously  print
151/B __label__implementation  __label__strings  winter  damn  freezing  cold  nvodsk  group  friend  prefers  take  taxi  order  pizza  call  girl  phone  city  consist  pair  digit  example  friend  ha  phonebook  size  phone  know  taxi  consist  identical  digit  example  pizza  delivery  necessarily  decreasing  sequence  different  digit  example  girl  given  friend  phone  book  calculate  friend  best  interested  thing  ha  maximal  phone  type  phone  book  person  contains  time  count  twice  taken  consideration  time  occurs  phone  book  contains  friend  follow  data  block  describe  friend  phone  book  block  presented  following  form  go  contains  string  namei  phone  phone  book  friend  name  friend  name  non  empty  sequence  uppercase  lowercase  latin  letter  containing  character  next  arbitrary  digit  print  phrase  want  call  taxi  call  print  name  friend  whose  phone  book  maximal  taxi  phone
1033/F __label__math  __label__brute  force  alice  ha  computer  operates  bit  computer  ha  register  value  current  content  register  given  array  computer  us  called  gate  manipulate  data  gate  take  register  input  calculates  function  value  stored  register  note  use  register  input  gate  assembled  bit  gate  type  bit  gate  xor  xor  denoted  respectively  bit  gate  take  bit  input  output  given  input  bit  given  build  gate  take  bit  gate  assembles  array  gate  take  bit  input  gate  split  bit  feed  bit  input  bit  gate  assembles  resulting  bit  form  output  word  instance  bit  computer  might  gate  axoa  xor  input  return  xor  finally  given  description  gate  gate  goal  report  register  pair  gate  output  word  find  ordered  pair  function  computed  gate  contains  word  size  variable  gate  second  contains  value  variable  stored  register  next  contains  string  description  single  gate  character  print  ordered  pair  variable  gate  return
1249/D2 __label__greedy  __label__data  structures  __label__sortings  difference  easy  hard  version  constraint  given  segment  coordinate  axis  segment  intersect  lie  inside  even  coincide  segment  cover  point  point  called  bad  covered  strictly  segment  task  remove  minimum  segment  bad  point  input  contains  segment  maximum  segment  point  covered  next  segment  contains  endpoint  segment  print  minimum  segment  need  remove  bad  point
559/D __label__geometry  gerald  got  tired  playing  board  game  usual  sided  die  bought  toy  called  randomizer  function  follows  randomizer  ha  coordinate  plane  strictly  convex  polygon  painted  polygon  called  basic  polygon  shake  randomizer  draw  nondegenerate  non  area  convex  polygon  vertex  vertex  basic  polygon  result  roll  precisely  result  shaking  considered  point  coordinate  strictly  inside  point  border  considered  selected  polygon  gerald  wondering  expected  result  shaking  randomizer  shaking  randomizer  considers  possible  non  degenerate  convex  polygon  vertex  vertex  basic  polygon  let  assume  version  polygon  randomizer  chooses  probability  input  contains  single  vertex  basic  polygon  next  coordinate  vertex  basic  polygon  coordinate  vertex  polygon  vertex  given  counter  clockwise  order  print  sought  expected  value  absolute  relative  error
845/A __label__implementation  __label__sortings  berland  annual  chess  tournament  coming  organizer  gathered  chess  player  divided  team  people  team  sponsored  beroil  second  team  sponsored  bermobile  obviously  organizer  guarantee  win  team  beroil  thus  organizer  divide  player  team  people  way  team  always  win  every  chess  player  ha  rating  known  chess  player  greater  rating  always  win  player  lower  rating  rating  equal  player  win  team  assignment  come  drawing  form  pair  opponent  pair  player  team  player  second  team  every  chess  player  exactly  pair  every  pair  play  drawing  totally  random  possible  divide  player  team  people  player  team  every  pair  win  regardless  result  drawing  contains  second  contains  n  possible  divide  player  team  people  player  team  every  pair  win  regardless  result  drawing  print  yes  otherwise  print
732/A __label__math  __label__implementation  __label__constructive  algorithms  __label__brute  force  polycarp  urgently  need  shovel  come  shop  chooses  appropriate  shovel  policarp  chooses  sold  burles  assume  unlimited  shovel  shop  pocket  polycarp  ha  unlimited  burle  coin  exactly  coin  burles  minimum  shovel  polycarp  ha  buy  pay  purchase  without  change  obvious  pay  shovel  without  change  paying  requied  amount  burle  coin  using  coin  burles  perhaps  buy  fewer  shovel  pay  without  change  note  polycarp  buy  least  shovel  single  input  contains  price  shovel  denomination  coin  polycarp  pocket  different  burle  coin  remember  ha  unlimited  coin  denomination  polycarp  ha  enough  money  buy  shovel  print  required  minimum  shovel  polycarp  ha  buy  pay  without  change
235/C __label__data  structures  __label__strings  day  ago  wjmzbmr  learned  answer  query  many  time  doe  string  occur  string  quickly  preprocessing  string  want  make  harder  want  ask  many  consecutive  substring  cyclical  isomorphic  given  string  given  string  string  string  find  many  consecutive  substring  cyclical  isomorphic  string  called  cyclical  isomorphic  rotate  string  get  rotate  mean  take  consecutive  char  maybe  none  beginning  string  put  back  end  string  order  example  string  abcde  rotated  string  deabc  take  character  abc  beginning  put  end  contains  non  empty  string  length  string  greater  character  second  contains  query  follow  contains  string  string  query  total  length  le  equal  character  problem  string  consist  lowercase  english  letter  query  print  single  show  many  consecutive  substring  cyclical  isomorphic  print  answer  query  order  given  input
1078/E __label__constructive  algorithms  everyone  know  computer  become  faster  faster  recently  berland  scientist  built  machine  move  back  time  specifically  work  follows  ha  infinite  grid  robot  stand  cell  cell  grid  either  empty  machine  ha  program  consists  instruction  handled  instruction  represented  exactly  symbol  letter  digit  take  exactly  unit  time  say  second  performed  except  last  type  operation  described  robot  place  cell  currently  cell  empty  operation  previous  replaced  anyway  robot  era  cell  robot  go  cell  left  right  robot  stay  unit  time  let  cell  robot  empty  otherwise  let  digit  cell  digit  cell  digit  machine  travel  second  back  time  note  change  instruction  order  change  position  robot  grid  unit  time  ago  consider  instruction  equivalent  ctrl  pressed  time  example  let  board  completely  empty  program  sr  let  robot  initially  moment  command  nothing  moment  command  moment  command  cell  contains  moment  command  travel  moment  back  moment  moment  command  board  clear  follow  instruction  cell  ha  rewritten  history  consequence  third  instruction  never  happened  berland  scientist  want  use  machine  practice  example  want  able  add  assume  initial  state  machine  follows  positive  written  binary  grid  way  right  bit  cell  left  right  highest  bit  lowest  bit  positive  written  binary  grid  way  right  bit  cell  left  right  highest  bit  lowest  bit  cell  empty  robot  consider  state  always  past  manage  travel  negative  moment  board  wa  always  described  robot  wa  eternity  asked  write  program  robot  stand  non  empty  cell  read  starting  cell  robot  moving  right  empty  cell  binary  highest  bit  lowest  bit  note  restriction  cell  particular  digit  left  robot  instruction  test  given  pair  program  must  work  pair  since  machine  memory  big  program  must  consist  instruction  contains  standing  testcases  next  consists  positive  decimal  output  consisting  symbol  eslrudt  standing  program
1142/D __label__dp  traveling  around  world  noticed  many  shop  owner  raise  price  inadequate  value  see  foreigner  define  inadequate  follows  inadequate  x  inadequate  required  inadequate  condition  let  sort  inadequate  let  order  inadequate  last  digit  strictly  le  reminder  division  denotes  rounded  thus  increasing  order  inadequate  give  remainder  divided  inadequate  inadequate  several  inadequate  since  fourth  inadequate  inadequate  inadequate  since  inadequate  inadequate  since  inadequate  none  inadequate  wrote  price  seen  trip  unfortunately  got  concatenated  large  digit  string  lost  bound  neighboring  interested  substring  resulting  string  form  inadequate  substring  appears  different  position  appearance  counted  separately  contains  string  consisting  digit  guaranteed  digit  print  substring  form  inadequate
521/E __label__dfs  __label__graphs  organizing  cycling  race  street  city  city  contains  junction  pair  connected  road  road  move  direction  road  connect  pair  intersection  road  connects  intersection  want  race  open  professional  athlete  beginner  cyclist  organize  race  nomination  easy  moderate  difficult  participant  choose  suitable  nomination  nomination  must  choose  route  chain  junction  consecutively  connected  road  route  must  meet  following  condition  route  start  intersection  finish  intersection  place  start  finish  avoid  collision  route  common  junction  except  common  start  finish  along  road  irrespective  driving  direction  road  route  route  must  pas  twice  intersection  visit  road  twice  irrespective  driving  direction  road  second  time  visit  preparing  competition  begin  need  determine  route  race  quickly  possible  length  route  important  important  given  requirement  met  contains  intersection  road  respectively  following  intersection  connected  road  intersection  numbered  starting  guaranteed  pair  intersection  connected  road  road  connects  intersection  please  note  guaranteed  get  junction  using  road  possible  create  route  print  yes  next  print  description  route  format  intersection  route  order  follow  route  must  meet  requirement  specified  statement
131/A __label__implementation  __label__strings  need  cap  lock  cap  lock  computer  keyboard  key  pressing  set  input  mode  typed  letter  capital  default  pressed  accident  lead  accident  like  passage  let  consider  word  ha  typed  cap  lock  key  accidentally  switched  either  contains  uppercase  letter  letter  except  uppercase  case  automatically  change  case  letter  example  case  letter  form  word  hello  http  changed  write  program  applies  rule  mentioned  rule  applied  program  leave  word  unchanged  input  data  contains  word  consisting  uppercase  lowercase  latin  letter  word  length  character  inclusive  print  result  given  word  processing
1118/C __label__implementation  __label__constructive  algorithms  let  call  square  matrix  value  cell  palindromic  change  order  row  reversed  change  order  column  reversed  example  following  matrix  palindromic  following  matrix  palindromic  change  order  row  reversed  following  matrix  palindromic  change  order  column  reversed  given  put  matrix  row  column  used  exactly  cell  contains  exactly  resulting  matrix  palindromic  multiple  answer  print  solution  print  contains  second  contains  put  matrix  row  column  possible  put  matrix  row  column  used  exactly  cell  contains  exactly  resulting  matrix  palindromic  print  yes  print  space  separated  resulting  matrix
343/C __label__greedy  __label__binary  search  mad  scientist  mike  doe  use  slow  hard  disk  modification  hard  drive  ha  different  head  read  data  parallel  viewed  side  mike  hard  drive  endless  array  track  track  array  numbered  left  right  starting  initial  state  reading  head  track  reading  head  hard  drive  firmware  move  head  exactly  track  right  left  leave  current  track  operation  head  movement  doe  affect  movement  head  head  change  relative  order  multiple  reading  head  track  track  considered  read  least  head  ha  visited  track  particular  track  numbered  read  beginning  operation  mike  need  read  data  distinct  track  determine  minimum  time  hard  drive  firmware  need  move  head  read  given  track  note  arbitrary  track  read  input  contains  space  separated  disk  head  track  read  accordingly  second  contains  distinct  ascending  order  initial  position  head  third  contains  distinct  ascending  order  track  read  please  use  lld  specifier  read  write  bit  recommended  use  cin  cout  stream  specifier  print  single  minimum  time  required  second  read  needed  track
1147/D __label__dfs  __label__graphs  given  string  consisting  character  character  guaranteed  let  character  count  way  choose  pair  satisfies  following  written  without  leading  base  representation  palindrome  base  representation  bitwise  xor  match  pattern  say  match  length  every  character  equal  character  character  compute  count  modulo  contains  single  string  consists  character  guaranteed  character  print  single  count  pair  satisfy  condition  modulo
876/B __label__math  __label__implementation  __label__number  theory  given  multiset  select  exactly  way  difference  divisible  tell  impossible  repeated  original  multiset  multiset  selected  occurrence  multiset  selected  exceed  occurrence  original  multiset  contains  multiset  select  required  divisor  pair  selected  second  contains  multiset  possible  select  desired  way  output  without  quote
540/C __label__dfs  play  computer  game  character  stand  level  multilevel  ice  cave  order  move  forward  need  descend  level  lower  way  fall  ice  level  cave  rectangular  square  grid  row  column  cell  consists  either  intact  cracked  ice  cell  move  cell  side  adjacent  due  limitation  game  engine  make  jump  place  jump  cell  move  cell  cracked  ice  character  fall  move  cell  intact  ice  ice  cell  becomes  cracked  let  row  top  bottom  column  left  right  let  denote  cell  intersection  row  column  staying  cell  cell  cracked  fallen  higher  level  need  fall  cell  since  exit  next  level  contains  row  column  cave  description  next  describes  initial  state  level  cave  consists  character  intact  ice  cracked  ice  next  contains  initial  coordinate  guaranteed  description  cave  contains  character  cell  ice  starting  cell  initially  cracked  next  contains  coordinate  cell  need  fall  final  cell  coincide  starting  reach  destination  print  yes  otherwise  print
938/A __label__implementation  victor  try  write  text  editor  word  correction  included  rule  word  correction  really  strange  victor  think  word  contains  consecutive  vowel  kinda  weird  need  replaced  word  corrector  work  way  long  consecutive  vowel  word  deletes  vowel  word  another  vowel  right  consecutive  vowel  word  considered  correct  given  word  predict  become  correction  problem  letter  considered  vowel  contains  letter  word  correction  second  contains  string  consisting  exactly  lowercase  latin  letter  word  correction  output  word  correction
938/G __label__data  structures  __label__graphs  given  undirected  connected  graph  weighted  edge  length  path  vertex  bitwise  xor  weight  edge  belonging  path  edge  traversed  included  bitwise  xor  time  type  query  process  add  edge  connecting  vertex  vertex  weight  guaranteed  edge  connecting  query  remove  edge  connecting  vertex  vertex  guaranteed  wa  edge  graph  graph  stay  connected  query  calculate  length  shortest  path  possibly  non  simple  vertex  vertex  print  answer  query  type  contains  vertex  edge  graph  respectively  follow  denoting  edge  graph  contains  pair  listed  initial  graph  connected  follows  containing  query  process  follow  denoting  query  following  form  add  edge  connecting  vertex  vertex  weight  guaranteed  edge  connecting  query  remove  edge  connecting  vertex  vertex  guaranteed  wa  edge  graph  graph  stay  connected  query  calculate  length  shortest  path  possibly  non  simple  vertex  vertex  guaranteed  least  query  ha  type  print  answer  query  type  order  appear  input
901/D __label__dfs  __label__graphs  __label__constructive  algorithms  given  connected  undirected  graph  vertex  edge  vertex  enumerated  given  inclusive  guaranteed  parity  equal  parity  degree  vertex  degree  vertex  edge  connected  write  weight  inclusive  edge  way  vertex  sum  weight  edge  connected  vertex  equal  determine  impossible  contains  vertex  edge  next  contains  required  sum  weight  edge  connected  vertex  guaranteed  parity  equal  parity  degree  vertex  next  describe  edge  graph  contains  aii  meaning  edge  connects  vertex  guaranteed  given  graph  connected  doe  loop  multiple  edge  solution  print
1220/D __label__math  __label__number  theory  boy  dima  gave  julian  birthday  present  set  consisting  positive  know  julian  hate  set  enjoys  bipartite  graph  anything  else  julian  wa  almost  upset  friend  alex  said  build  undirected  graph  using  set  way  let  vertex  connect  edge  belongs  unfortunately  julian  like  graph  wa  built  using  alex  decided  rectify  situation  want  erase  form  graph  built  using  new  set  bipartite  difficulty  task  graph  alex  ha  work  ha  infinite  vertex  edge  impossible  solve  task  alone  alex  asks  help  write  program  era  subset  minimum  size  graph  constructed  new  set  bipartite  recall  graph  bipartite  vertex  divided  disjoint  set  every  edge  connects  vertex  different  set  contains  size  second  contains  unique  print  single  erased  element  second  print  value  erased  element
776/A __label__implementation  __label__brute  force  __label__strings  beloved  detective  sherlock  currently  trying  catch  serial  killer  kill  person  day  using  power  deduction  came  know  killer  ha  strategy  selecting  next  victim  killer  start  potential  victim  day  selects  kill  selected  victim  replaces  new  person  repeat  procedure  day  way  day  ha  potential  victim  choose  sherlock  know  initial  potential  victim  know  murder  happened  particular  day  new  person  replaced  victim  need  help  get  pair  potential  victim  day  sherlock  observe  pattern  input  contains  name  length  exceed  initial  potential  victim  next  contains  day  next  contains  name  length  exceed  person  murdered  day  second  replaced  person  input  format  consistent  person  murdered  guaranteed  potential  victim  time  name  guaranteed  distinct  consists  lowercase  english  letter  output  person  killer  selects  murder  person  next  victim  selected  name  printed  order
1167/C __label__dfs  __label__graphs  social  network  user  communicating  group  friend  let  analyze  process  distributing  news  user  initially  user  receives  news  source  sends  news  friend  user  friend  least  group  belong  group  friend  continue  sending  news  friend  process  end  pair  friend  know  news  another  know  user  determine  user  know  news  initially  user  start  distributing  contains  user  group  friend  respectively  follow  describing  group  friend  begin  user  group  distinct  follow  denoting  user  belonging  group  guaranteed  print  equal  user  know  news  user  start  distributing
638/A __label__math  __label__constructive  algorithms  main  street  berland  straight  house  built  along  even  house  located  side  street  house  odd  side  street  numbered  order  beginning  street  end  picture  left  right  house  even  side  street  numbered  order  end  street  beginning  picture  right  left  corresponding  house  even  odd  strictly  opposite  house  opposite  house  house  opposite  house  house  opposite  house  vasya  need  get  house  quickly  possible  start  driving  beginning  street  drive  car  house  get  beginning  street  house  spends  exactly  second  spends  exactly  second  drive  distance  neighbouring  house  vasya  park  side  road  distance  beginning  street  house  stand  opposite  another  considered  task  find  minimum  time  vasya  need  reach  house  input  contains  house  street  house  vasya  need  reach  correspondingly  guaranteed  even  print  single  minimum  time  vasya  need  get  beginning  street  house
914/C __label__dp  __label__brute  force  travelling  salesman  spends  lot  time  travelling  tends  get  bored  pas  time  like  perform  operation  operation  take  positive  reduce  bit  set  binary  representation  example  true  ha  bit  set  reduced  operation  call  special  minimum  operation  reduce  want  find  many  special  exist  greater  please  help  travelling  salesman  reach  destination  since  answer  large  output  modulo  contains  second  contains  note  given  binary  representation  without  leading  output  single  special  greater  modulo
559/B __label__sortings  __label__strings  today  lecture  string  gerald  learned  new  definition  string  equivalency  string  equal  length  called  equivalent  case  equal  split  string  half  size  string  half  size  following  correct  equivalent  equivalent  equivalent  equivalent  home  task  teacher  gave  string  student  asked  determine  equivalent  gerald  ha  already  completed  home  task  turn  input  string  given  teacher  ha  length  consists  lowercase  english  letter  string  length  print  yes  without  quote  string  equivalent  without  quote  otherwise
1142/C __label__geometry  recently  vasya  learned  given  point  different  coordinate  draw  exactly  parabola  equation  type  real  let  call  parabola  shaped  vasya  drew  several  distinct  point  coordinate  plane  drew  shaped  parabola  pair  point  different  coordinate  picture  became  somewhat  messy  vasya  still  want  count  many  parabola  drawn  drawn  point  inside  internal  area  help  vasya  internal  area  shaped  parabola  part  plane  lie  strictly  parabola  axis  directed  upwards  contains  single  point  next  describe  point  contains  coordinate  point  guaranteed  point  distinct  coordinate  exceed  absolute  value  print  single  shaped  parabola  pas  least  given  point  given  point  inside  internal  area  excluding  parabola
514/A __label__implementation  __label__greedy  luke  skywalker  gave  chewbacca  chewbacca  good  love  inverting  digit  inverting  digit  mean  replacing  digit  help  chewbacca  transform  initial  minimum  possible  positive  inverting  possibly  digit  decimal  representation  final  start  contains  single  luke  skywalker  gave  chewbacca  print  minimum  possible  positive  chewbacca  obtain  inverting  digit  leading
784/F __label__implementation  developing  new  feature  website  sell  airline  ticket  able  sort  ticket  price  already  extracted  ticket  price  last  step  done  given  array  sort  non  descending  order  input  consists  single  space  separated  size  array  following  element  array  output  space  separated  element  sorted  array
457/F __label__dp  __label__greedy  __label__trees  pieguy  piegirl  playing  game  rooted  binary  tree  ha  property  node  either  leaf  ha  exactly  child  leaf  ha  associated  turn  player  choose  leaf  share  immediate  parent  remove  associate  either  value  parent  became  leaf  player  decides  value  associate  game  end  node  wa  root  tree  left  pieguy  go  goal  maximize  value  associated  root  game  end  piegirl  want  minimize  value  assuming  player  playing  optimally  associated  root  game  end  contains  single  test  case  test  case  follow  test  case  begin  empty  followed  single  followed  describing  node  tree  either  contains  non  negative  indicating  leaf  node  value  associated  followed  indicating  non  leaf  node  child  node  numbered  root  always  node  test  case  print  associated  root  game  end
753/B __label__implementation  __label__constructive  algorithms  __label__brute  force  problem  little  bit  unusual  implement  interaction  testing  system  mean  make  query  get  response  online  mode  please  sure  use  stream  flushing  operation  query  output  order  leave  part  output  buffer  example  got  use  fflush  stdout  function  java  call  system  flush  pascal  flush  output  bull  cow  known  cow  bull  pig  bull  bull  cleots  old  code  breaking  paper  pencil  game  player  predating  similar  commercially  marketed  board  game  mastermind  sheet  paper  player  think  secret  string  string  consists  digit  ha  length  digit  string  must  different  equal  digit  allowed  second  player  try  guess  opponent  string  every  guess  player  give  match  matching  digit  right  position  bull  different  position  cow  thus  response  pair  bull  cow  try  equal  digit  formally  let  secret  string  second  player  trying  guess  string  bull  position  cow  digit  contains  position  contains  example  secret  string  opponent  try  answer  bull  cow  bull  cow  secret  string  opponent  try  answer  bull  cow  problem  guess  string  system  ha  chosen  know  chosen  string  consists  distinct  digit  make  query  testing  system  query  output  single  digit  string  answer  query  bull  cow  system  response  equal  mean  interaction  problem  program  must  terminate  possible  reason  program  either  guessed  made  invalid  action  example  printed  letter  instead  digit  program  allowed  query  hack  solution  participant  providing  digit  string  containing  distinct  digit  secret  string  read  answer  query  program  must  use  standard  input  program  receive  pair  non  negative  input  pair  per  pair  bull  second  cow  string  string  printed  program  system  response  equal  solution  terminate  testing  system  let  program  read  pair  input  program  display  corresponding  system  query  output  print  value  single  executes  operation  flush  program  must  use  standard  output  print  query
557/E __label__dp  __label__data  structures  __label__graphs  __label__trees  __label__strings  tomorrow  ann  take  hardest  exam  programming  get  excellent  mark  last  theoretical  class  teacher  introduced  notion  half  palindrome  string  half  palindrome  odd  position  following  condition  held  length  string  position  indexed  example  string  abaa  abbbaa  half  palindrome  string  bba  aaabaa  ann  know  exam  get  string  consisting  letter  get  excellent  mark  ha  find  lexicographical  order  string  substring  half  palyndromes  note  substring  order  considered  many  time  many  time  occurs  teacher  guarantee  given  exceed  substring  given  string  half  palindrome  cope  problem  input  contains  string  consisting  character  length  string  second  contains  positive  lexicographical  requested  string  half  palindrome  substring  given  string  string  numbered  starting  guaranteed  exceed  substring  given  string  half  palindrome  print  substring  given  string  lexicographical  order  substring  given  string  half  palindrome
886/E __label__math  __label__dp  day  petya  wa  solving  interesting  problem  although  used  many  optimization  technique  solution  still  got  time  limit  exceeded  verdict  petya  conducted  thorough  analysis  program  found  function  finding  maximum  element  array  positive  wa  slow  desperate  petya  decided  use  somewhat  unexpected  optimization  using  parameter  function  contains  following  code  int  fastmax  int  int  int  int  offset  int  offset  else  offset  offset  offset  return  return  way  function  iteratively  check  array  element  storing  intermediate  maximum  consecutive  iteration  maximum  ha  changed  returned  answer  petya  interested  fault  rate  function  asked  find  permutation  return  value  function  permutation  equal  since  could  big  output  answer  modulo  contains  separated  space  length  permutation  parameter  output  answer  problem  modulo
777/D __label__implementation  __label__greedy  __label__strings  __label__binary  search  vasya  administrator  public  page  organization  mouse  keyboard  everyday  duty  publish  news  world  competitive  programming  news  creates  list  hashtags  make  searching  particular  topic  comfortable  purpose  problem  define  hashtag  string  consisting  lowercase  english  letter  exactly  symbol  located  beginning  string  length  hashtag  defined  symbol  without  symbol  head  administrator  page  told  vasya  hashtags  lexicographical  order  take  look  note  section  definition  vasya  lazy  want  actually  change  order  hashtags  already  published  news  instead  decided  delete  suffix  consecutive  character  end  string  hashtags  allowed  delete  character  even  whole  string  except  symbol  vasya  want  pick  way  delete  suffix  total  deleted  symbol  minimum  possible  several  optimal  solution  fine  input  contains  single  hashtags  edited  next  contains  exactly  hashtag  positive  length  guaranteed  total  length  hashtags  total  length  string  except  character  exceed  print  resulting  hashtags  optimal  solution
369/E __label__data  structures  __label__binary  search  valera  love  segment  ha  recently  come  interesting  problem  axis  coordinate  ha  segment  segment  start  position  end  position  mark  task  process  query  consists  cnti  set  cnti  coordinate  point  located  axis  answer  query  segment  contains  least  point  query  segment  contains  point  l  valera  found  solution  problem  difficult  asked  help  help  valera  contains  segment  axis  coordinate  query  next  description  segment  contains  positive  ii  border  segment  next  description  query  per  start  cnti  nti  point  query  contains  cnti  distinct  positive  cnti  cnti  coordinate  point  query  guaranteed  total  point  query  exceed  print  non  negative  response  query
1156/F __label__math  __label__dp  bag  contains  card  written  card  card  playing  following  game  turn  choose  remove  random  card  bag  card  still  left  inside  bag  chosen  equiprobably  nothing  else  happens  turn  next  turn  removing  card  let  compare  card  wa  removed  previous  turn  let  possible  outcome  game  end  lose  game  end  win  game  continues  card  left  bag  lose  card  returned  bag  remove  calculate  probability  winning  game  shown  form  non  negative  output  value  mod  contains  card  bag  second  live  contains  written  card  print  probability  winning  game  modulo
758/F __label__math  __label__brute  force  __label__number  theory  given  find  distinct  geometrical  progression  contains  distinct  le  greater  word  progression  following  must  hold  li  aij  geometrical  progression  geometrical  progression  sequence  term  found  multiplying  previous  fixed  non  called  common  ratio  note  task  non  example  progression  common  ratio  progression  considered  different  aii  cotains  print  answer  problem
1012/E __label__math  given  array  positive  perform  following  operation  time  select  several  distinct  index  move  standing  position  position  position  position  position  position  word  operation  cyclically  shift  element  example  array  choose  index  resulting  array  would  become  goal  make  array  sorted  non  decreasing  order  minimum  operation  additional  constraint  sum  cycle  length  operation  le  equal  impossible  sort  array  satisfying  constraint  solution  report  well  input  contains  element  array  upper  bound  sum  cycle  length  next  contains  lements  array  impossible  sort  array  using  cycle  total  length  exceeding  print  single  quote  clarity
1187/C __label__implementation  __label__greedy  __label__constructive  algorithms  vasya  ha  array  know  array  told  fact  array  fact  triple  mean  subbarray  sorted  non  decreasing  order  subbarray  sorted  non  decreasing  order  subarray  sorted  least  pair  consecutive  element  subarray  former  greater  latter  example  could  give  fact  subarray  sorted  subarray  sorted  subarray  sorted  know  array  find  array  satisfies  given  fact  contains  next  contains  subbarray  sorted  otherwise  subbarray  sorted  array  satisfies  fact  print  letter  case
1196/D2 __label__dp  __label__implementation  __label__data  structures  difference  easy  hard  version  size  input  given  string  consisting  character  character  given  task  change  minimum  character  initial  string  change  string  length  substring  substring  infinite  string  rgbrgbrgb  string  substring  string  exists  positive  example  string  gbrg  substring  infinite  string  rgbrgbrgb  rgr  ggg  answer  independent  query  input  contains  query  query  follow  query  contains  length  string  length  substring  second  query  contains  string  consisting  character  guaranteed  sum  query  doe  exceed  query  print  minimum  character  need  change  initial  string  changing  substring  length  substring  infinite  string  rgbrgbrgb
1172/D __label__constructive  algorithms  nauuo  girl  love  playing  game  related  portal  day  wa  playing  game  follows  nn  grid  row  numbered  top  bottom  column  numbered  left  right  denote  cell  intersection  row  column  portal  pair  door  travel  another  without  changing  direction  formally  walk  cell  door  teleport  cell  door  portal  walk  next  cell  facing  original  direction  door  single  cell  next  cell  nearest  cell  direction  facing  example  facing  bottom  next  cell  walk  cell  without  door  must  walk  next  cell  without  changing  direction  next  cell  doe  exist  must  exit  grid  set  possibly  portal  grid  walk  facing  right  eventually  exit  grid  walk  facing  bottom  exit  grid  guaranteed  permutation  element  permutation  element  sequence  every  appears  exactly  got  confused  playing  game  help  find  solution  contains  single  side  length  grid  second  contains  walk  facing  right  exit  grid  guaranteed  permutation  element  third  contains  walk  facing  bottom  exit  grid  guaranteed  permutation  element  impossible  satisfy  rule  print
520/B __label__math  __label__implementation  __label__greedy  __label__dfs  __label__graphs  vasya  ha  found  strange  device  front  panel  device  red  button  blue  button  display  showing  positive  clicking  red  button  device  multiplies  displayed  clicking  blue  button  device  subtracts  display  point  stop  positive  device  break  display  show  arbitrarily  large  initially  display  show  bob  want  get  display  minimum  click  ha  make  order  achieve  result  input  contains  distinct  separated  space  print  single  minimum  time  need  push  button  required  get
1084/C __label__dp  __label__implementation  fair  nut  found  string  string  consists  lowercase  latin  letter  nut  curious  guy  want  find  strictly  increasing  sequence  nut  upset  know  find  help  calculated  modulo  contains  string  consisting  lowercase  latin  letter  single  print  answer  problem  sequence  modulo
1096/E __label__math  __label__dp  hasan  love  playing  game  ha  recently  discovered  game  called  topscore  soccer  like  game  player  penalty  shoot  winner  score  case  tie  top  scorer  declared  winner  randomly  equal  probability  finished  game  waiting  result  tiny  problem  judge  lost  paper  score  fortunately  calculated  sum  score  get  lost  player  remembered  lower  bound  much  scored  information  bound  private  hasan  got  know  bound  according  available  data  know  score  least  sum  score  thus  final  state  game  represented  form  sequence  player  score  hasan  player  state  considered  different  exists  position  value  differs  state  hasan  know  exact  score  know  exact  score  well  considers  final  state  equally  probable  achieve  help  hasan  find  probability  winning  shown  form  non  negative  report  value  mod  contains  player  sum  score  player  hasan  score  respectively  print  single  probability  hasan  winning
993/C __label__brute  force  __label__geometry  small  spaceship  surrounded  group  enemy  larger  spaceship  space  dimensional  plane  group  enemy  spaceship  positioned  way  coordinate  coordinate  equal  second  group  positioned  way  coordinate  coordinate  equal  spaceship  group  simultaneously  shoot  laser  shot  infinite  ray  destroys  spaceship  touch  towards  small  spaceship  time  small  spaceship  able  avoid  laser  shot  want  position  location  necessarily  coordinate  ray  shot  would  destroy  many  enemy  spaceship  possible  find  largest  spaceship  destroyed  way  assuming  enemy  spaceship  avoid  laser  shot  contains  enemy  spaceship  enemy  spaceship  respectively  second  contains  coordinate  spaceship  group  third  contains  coordinate  spaceship  second  group  coordinate  guaranteed  unique  even  group  print  single  largest  enemy  spaceship  destroyed
886/C __label__implementation  __label__greedy  __label__trees  brave  explorer  petya  decided  explore  paris  catacomb  since  petya  really  experienced  exploration  walking  catacomb  catacomb  consist  several  room  bidirectional  passage  pair  passage  connect  room  since  passage  built  different  depth  intersect  every  minute  petya  arbitrary  chooses  passage  room  currently  reach  room  end  passage  exactly  minute  enters  room  minute  make  note  logbook  petya  ha  visited  room  writes  minute  wa  room  last  time  otherwise  petya  writes  arbitrary  non  negative  strictly  le  current  minute  initially  petya  wa  room  minute  write  point  wandering  petya  got  tired  threw  logbook  went  home  vasya  found  logbook  curious  minimum  possible  room  paris  catacomb  according  petya  logbook  contains  single  note  petya  logbook  second  contains  non  negative  note  logbook  print  single  minimum  possible  room  paris  catacomb
670/E __label__data  structures  __label__strings  recently  polycarp  started  develop  text  editor  work  correct  bracket  sequence  abbreviated  cbs  note  bracket  sequence  correct  possible  get  correct  mathematical  expression  adding  example  sequence  correct  bracket  cbs  ha  pair  example  st  bracket  paired  th  bracket  paired  bracket  paired  th  bracket  paired  th  th  bracket  paired  th  th  bracket  paired  th  th  bracket  paired  th  th  bracket  paired  st  polycarp  editor  currently  support  operation  use  cbs  cursor  editor  take  whole  position  bracket  position  bracket  operation  supported  move  cursor  position  left  move  cursor  position  right  delete  bracket  cursor  located  delete  bracket  paired  bracket  delete  substring  bracket  cursor  located  paired  operation  cursor  move  nearest  bracket  right  course  non  deleted  bracket  suffix  cbs  wa  deleted  cursor  move  nearest  bracket  left  course  non  deleted  picture  illustrated  several  usage  operation  incorrect  operation  shift  cursor  end  cbs  delete  whole  cbs  etc  supported  polycarp  editor  polycarp  proud  development  implement  functionality  editor  contains  positive  bracket  correct  bracket  sequence  operation  initial  position  cursor  position  sequence  numbered  left  right  starting  guaranteed  even  followed  string  character  forming  correct  bracket  sequence  follow  string  character  sequence  operation  operation  carried  last  guaranteed  given  operation  never  move  cursor  outside  bracket  sequence  well  fact  operation  bracket  sequence  non  empty  print  correct  bracket  sequence  obtained  result  applying  operation  initial  sequence
884/A __label__implementation  recently  luba  bought  interesting  book  know  take  second  read  book  luba  want  finish  reading  fast  ha  work  next  day  second  luba  ha  spend  working  day  free  time  remains  spend  reading  help  luba  determine  minimum  day  finish  reading  guaranteed  answer  exceed  remember  second  day  contains  day  time  required  read  book  second  contains  time  luba  ha  spend  work  day  print  minimum  day  luba  finish  reading  book
995/B __label__math  __label__implementation  __label__greedy  allen  hosting  formal  dinner  party  people  come  event  pair  couple  night  fun  allen  want  everyone  final  picture  people  allen  like  ordering  allen  prefers  pair  occupies  adjacent  position  make  picture  aesthetic  help  allen  find  minimum  swap  adjacent  position  must  perform  make  couple  occupies  adjacent  position  contains  single  pair  people  second  contains  appears  exactly  twice  mean  people  form  couple  output  single  representing  minimum  adjacent  swap  needed  people  pair  occupies  adjacent  position
382/C __label__implementation  __label__sortings  everybody  know  arithmetic  progression  let  remind  case  arithmetic  progression  sequence  length  following  condition  fulfills  example  sequence  arithmetic  progression  sequence  alexander  ha  card  containing  arthur  want  give  alexander  exactly  card  could  use  resulting  card  make  arithmetic  progression  alexander  ha  use  card  arthur  ha  already  bought  card  written  help  print  write  card  described  condition  fulfilled  contains  card  next  contains  sequence  alexander  card  positive  exceed  arthur  write  infinitely  many  distinct  card  print  single
311/B __label__dp  __label__data  structures  zxr  owner  large  farm  feed  cute  cat  employ  feeder  straight  road  farm  hill  along  road  numbered  left  right  distance  hill  meter  feeder  live  hill  day  cat  went  play  cat  went  trip  hill  finished  trip  time  waited  hill  feeder  feeder  must  take  cat  feeder  go  straightly  hill  without  waiting  hill  take  waiting  cat  hill  away  feeder  walk  speed  meter  per  unit  time  strong  enough  take  many  cat  want  example  suppose  hill  cat  finished  trip  time  hill  feeder  leaf  hill  time  time  take  cat  leaf  hill  time  take  feeder  leaf  hill  time  cat  wait  time  unit  feeder  leaf  hill  time  cat  wait  time  unit  task  schedule  time  leaving  hill  feeder  sum  waiting  time  cat  minimized  input  contains  second  contains  positive  next  contains  output  minimum  sum  waiting  time  cat
983/A __label__math  __label__implementation  given  several  query  query  consists  need  answer  whether  result  notation  base  finite  fraction  fraction  notation  base  finite  contains  finite  numeral  decimal  point  possible  fraction  ha  numeral  decimal  point  contains  single  query  next  query  per  contains  given  notation  base  question  separate  print  finite  fraction  finite  infinite  otherwise
500/E __label__dp  __label__data  structures  celebrating  new  year  many  people  post  video  falling  domino  list  http  www  youtube  com  resultssearchquery  new  year  domino  user  ainta  life  world  going  post  video  well  domino  cartesian  plane  domino  represented  segment  parallel  axis  whose  length  lower  point  domino  axis  let  denote  coordinate  domino  domino  placed  another  hold  user  ainta  want  take  video  falling  domino  make  domino  fall  push  single  domino  right  domino  fall  drawing  circle  shaped  orbit  segment  totally  overlap  axis  domino  touch  domino  falling  domino  fall  towards  right  following  procedure  domino  touch  domino  segment  representing  intersects  see  picture  push  leftmost  domino  right  fall  touching  domino  result  domino  fall  towards  right  domino  affected  pushing  leftmost  domino  eventually  fall  touched  domino  time  picture  example  falling  domino  red  circle  denotes  touch  domino  user  ainta  ha  plan  posting  video  start  pushing  domino  last  domino  fall  sometimes  could  impossible  achieve  plan  ha  lengthen  domino  cost  dollar  increase  length  single  domino  user  ainta  want  know  plan  minimum  cost  needed  achieve  plan  processed  independently  domino  length  increased  plan  affect  length  plan  set  domino  fall  except  domino  domino  matter  initial  push  domino  contains  domino  next  describe  domino  contains  space  separated  coordinate  length  domino  guaranteed  next  contains  plan  next  describe  plan  contains  space  separated  j  j  mean  plan  push  domino  shoot  video  domino  fall  plan  print  containing  minimum  cost  needed  achieve  cost  needed  print
994/A __label__implementation  locked  room  door  ha  keypad  key  corresponding  digit  escape  room  need  enter  correct  code  sequence  digit  key  keypad  fingerprint  believe  correct  code  longest  necessarily  contiguous  subsequence  sequence  contains  digit  fingerprint  corresponding  key  find  code  contains  representing  digit  sequence  key  keypad  fingerprint  next  contains  distinct  space  separated  representing  sequence  next  contains  distinct  space  separated  key  fingerprint  single  print  space  separated  sequence  representing  code  resulting  sequence  empty  printing  nothing  printing  single  break  acceptable
940/D __label__implementation  __label__binary  search  tried  solitary  confinement  waterboarding  listening  beaver  avail  need  something  extreme  little  alena  got  array  birthday  present  array  length  obtained  array  length  l  using  following  procedure  otherwise  given  array  length  find  l  applying  algorithm  described  yield  array  equal  guaranteed  answer  exists  input  contains  single  length  second  input  contains  space  separated  element  third  input  contains  string  character  consisting  element  note  separated  space  output  conforming  requirement  described
1185/G2 __label__dp  difference  easy  hard  version  constraint  polycarp  love  listen  music  never  leaf  player  even  way  home  university  polycarp  overcomes  distance  university  house  exactly  minute  player  polycarp  store  song  characterized  parameter  length  song  minute  genre  polycarp  want  create  playlist  listen  music  time  way  university  home  time  arrival  home  playlist  polycarp  never  interrupt  song  always  listens  beginning  end  thus  started  listening  song  would  spend  exactly  minute  listening  polycarp  doe  like  song  genre  play  row  successively  adjacently  song  playlist  repeated  help  polycarpus  count  different  sequence  song  order  matter  total  duration  exactly  consecutive  song  genre  song  playlist  different  input  contains  song  player  required  total  duration  respectively  next  description  song  contains  duration  song  genre  respectively  output  different  sequence  song  total  length  exactly  consecutive  song  genre  song  playlist  different  since  answer  huge  output  modulo  remainder  dividing  quantity
627/C __label__greedy  __label__data  structures  johnny  drive  truck  must  deliver  package  hometown  district  center  hometown  located  point  district  center  located  point  johnny  truck  ha  gas  tank  hold  exactly  liter  tank  initially  full  drive  truck  consumes  exactly  liter  per  unit  distance  traveled  moreover  gas  station  located  various  point  along  way  district  center  station  located  point  sell  unlimited  amount  fuel  price  dollar  per  liter  find  minimum  cost  johnny  must  pay  fuel  successfully  complete  delivery  input  contains  space  separated  total  distance  district  center  volume  gas  tank  gas  station  respectively  next  contains  position  cost  gas  gas  station  guaranteed  position  gas  station  distinct  print  single  minimum  cost  complete  delivery  way  complete  delivery  print
753/C __label__constructive  algorithms  __label__brute  force  difference  previous  problem  constraint  request  problem  program  guess  answer  request  problem  little  bit  unusual  implement  interaction  testing  system  mean  make  query  get  response  online  mode  please  sure  use  stream  flushing  operation  query  output  order  leave  part  output  buffer  example  got  use  fflush  stdout  function  java  call  system  flush  pascal  flush  output  bull  cow  known  cow  bull  pig  bull  bull  cleots  old  code  breaking  paper  pencil  game  player  predating  similar  commercially  marketed  board  game  mastermind  sheet  paper  player  think  secret  string  string  consists  digit  ha  length  digit  string  must  different  equal  digit  allowed  second  player  try  guess  opponent  string  every  guess  player  give  match  matching  digit  right  position  bull  different  position  cow  thus  response  pair  bull  cow  try  equal  digit  formally  let  secret  string  second  player  trying  guess  string  bull  position  cow  digit  contains  position  contains  example  secret  string  opponent  try  answer  bull  cow  bull  cow  secret  string  opponent  try  answer  bull  cow  problem  guess  string  system  ha  chosen  know  chosen  string  consists  distinct  digit  make  query  testing  system  query  output  single  digit  string  answer  query  bull  cow  system  response  equal  mean  interaction  problem  program  must  terminate  possible  reason  program  either  guessed  made  invalid  action  example  printed  letter  instead  digit  program  allowed  query  hack  solution  participant  providing  digit  string  containing  distinct  digit  secret  string  read  answer  query  program  must  use  standard  input  program  receive  pair  non  negative  input  pair  per  pair  bull  second  cow  string  string  printed  program  system  response  equal  solution  terminate  testing  system  let  program  read  pair  input  program  display  corresponding  system  query  output  print  value  single  executes  operation  flush  program  must  use  standard  output  print  query
819/C __label__number  theory  mister  ha  house  middle  giant  plain  field  attracted  alien  life  convenience  alien  specified  cartesian  coordinate  system  field  way  mister  house  ha  coordinate  sent  beacon  field  something  went  wrong  beacon  wa  completely  destroyed  landed  position  coordinate  respectively  shut  mister  wa  interested  device  decided  take  home  came  beacon  placed  lifted  carried  beacon  home  choosing  shortest  path  came  beacon  placed  carried  home  choosing  shortest  path  beacon  wa  lifted  navigation  system  beacon  wa  activated  partially  destroyed  navigation  system  started  work  following  way  time  moment  survived  beacon  point  coordinate  system  try  find  location  third  beacon  succeeds  point  coordinate  area  triangle  formed  survived  beacon  point  equal  case  system  sends  packet  information  beacon  position  alien  otherwise  compute  many  packet  information  system  sent  mister  wa  moving  beacon  contains  test  case  next  describe  test  case  every  test  case  described  follows  note  parameter  given  product  factor  test  case  contains  space  separated  n  second  contains  space  separated  third  contains  space  separated  note  hack  test  allowed  print  per  answer  test
548/B __label__dp  __label__implementation  __label__greedy  __label__brute  force  mike  bear  playing  game  fun  mike  judge  bear  except  mike  standing  n  grid  exactly  bear  cell  denote  bear  standing  column  row  mike  hand  ear  since  judge  bear  standing  grid  ha  hand  either  mouth  eye  play  round  round  mike  chooses  bear  tell  change  state  hand  mouth  put  hand  eye  put  hand  mouth  otherwise  mike  want  know  score  bear  score  bear  maximum  row  consecutive  bear  hand  eye  row  since  bear  lazy  mike  asked  help  round  tell  score  bear  changing  state  bear  selected  round  input  contains  next  grid  description  separated  space  either  mouth  eye  next  information  round  contains  row  column  bear  changing  state  round  print  current  score  bear
73/F __label__brute  force  __label__geometry  vasya  play  plane  tank  tank  game  keep  trying  finish  pedalny  like  need  drive  straight  point  point  plane  unfortunately  plane  enemy  tank  shall  regard  tank  point  initial  moment  time  pedalny  point  enemy  tank  would  happy  destroy  immediately  initially  turret  tuned  direction  specifically  tank  know  initial  rotation  turret  angle  radian  relative  axis  counterclockwise  direction  maximum  speed  rotation  turret  radian  per  second  point  time  tank  turret  aimed  precisely  tank  pedalny  enemy  fire  never  miss  pedalny  endure  shot  gun  reloading  take  much  time  assume  every  enemy  produce  shot  task  determine  minimum  speed  pedalny  must  get  point  believed  pedalny  able  instantly  develop  speed  shot  reduce  speed  change  coordinate  tank  contains  coordinate  point  meter  point  coincide  second  given  enemy  tank  following  coordinate  corresponding  tank  parameter  digit  decimal  point  coordinate  absolute  value  exceed  enemy  tank  rotate  turret  clockwise  well  counterclockwise  direction  angular  speed  guaranteed  enemy  tank  need  least  second  aim  point  segment  enemy  tank  posistioned  closer  meter  last  given  print  single  absolute  relative  error  minimum  required  speed  pedalny  meter  per  second
461/A __label__greedy  __label__sortings  appleman  toastman  play  game  initially  appleman  give  group  toastman  start  complete  following  task  time  toastman  get  group  sum  add  sum  score  give  group  appleman  time  appleman  get  group  consisting  single  throw  group  time  appleman  get  group  consisting  split  group  non  empty  group  way  give  toastman  guy  complete  task  look  score  value  maximum  possible  value  score  get  contains  single  second  contains  initial  group  given  toastman  print  single  largest  possible  score
510/C __label__sortings  __label__dfs  __label__graphs  fox  ciel  going  publish  paper  focs  fox  operated  computer  system  pronounce  fox  heard  rumor  author  list  paper  always  sorted  lexicographical  order  checking  example  found  sometimes  true  paper  author  name  sorted  lexicographical  order  normal  sense  wa  always  true  modification  order  letter  alphabet  order  author  becomes  lexicographical  want  know  exists  order  letter  latin  alphabet  name  paper  submitting  following  lexicographical  order  find  order  lexicographical  order  defined  following  way  compare  find  leftmost  position  differing  character  sii  position  prefix  vice  versa  shortest  string  le  otherwise  compare  character  according  order  alphabet  contains  name  following  string  namei  namei  name  name  contains  lowercase  latin  letter  name  different  exists  order  letter  given  name  sorted  lexicographically  output  order  permutation  character  output  letter  modified  alphabet  second
985/D __label__math  __label__constructive  algorithms  __label__binary  search  going  beach  idea  build  greatest  sand  castle  ever  head  beach  dimensional  could  imagined  decribed  spot  pile  sand  pillar  spot  numbered  infinity  left  right  obviously  enough  sand  beach  brought  pack  sand  let  height  sand  pillar  spot  sand  pack  spent  split  sand  pack  multiple  pillar  sand  single  fence  height  equal  height  pillar  sand  pack  left  spot  prevent  sand  going  finally  ended  following  condition  building  castle  h  sand  leftmost  spot  fence  large  difference  height  neighboring  pillar  lead  sand  fall  higher  lower  really  want  happen  want  spend  sand  brought  infinite  spot  build  always  possible  come  valid  castle  structure  though  want  castle  compact  possible  task  calculate  minimum  spot  occupy  aforementioned  condition  hold  contains  sand  pack  height  fence  respectively  print  minimum  spot  occupy  castle  building  condition  hold
725/E __label__greedy  __label__brute  force  alfred  want  buy  toy  moose  cost  dollar  store  give  change  must  give  store  exactly  dollar  le  ha  coin  make  dollar  coin  follows  following  algorithm  let  set  coin  used  initially  empty  alfred  repeatedly  add  highest  valued  coin  ha  total  value  coin  adding  coin  exceed  coin  value  coin  still  le  give  go  home  note  alfred  never  remove  coin  adding  programmer  might  aware  alfred  algorithm  fail  even  set  coin  value  exactly  example  alfred  ha  coin  worth  coin  worth  coin  worth  moose  cost  alfred  add  coin  give  since  adding  coin  would  cause  value  coin  exceed  course  alfred  could  instead  combine  coin  coin  coin  reach  total  bob  tried  convince  alfred  algorithm  wa  flawed  alfred  believe  bob  want  give  alfred  coin  addition  alfred  already  ha  alfred  algorithm  fails  bob  give  alfred  coin  denomination  subject  constraint  coin  must  worth  positive  dollar  multiple  coin  single  denomination  would  like  minimize  total  value  coin  give  alfred  please  find  minimum  value  solution  print  greed  good  assume  answer  exists  positive  word  alfred  algorithm  work  bob  give  coin  contains  price  alfred  want  pay  second  contains  coin  alfred  initially  ha  follow  containing  single  representing  value  alfred  coin  solution  print  minimum  possible  total  value  coin  solution  otherwise  print  greed  good  without  quote
1095/F __label__greedy  __label__graphs  given  undirected  graph  consisting  vertex  written  vertex  vertex  initially  edge  graph  add  edge  graph  pay  cost  adding  edge  vertex  coin  special  offer  denoted  mean  add  edge  connecting  vertex  pay  coin  use  special  offer  pair  vertex  ha  special  offer  associated  still  connect  vertex  paying  coin  minimum  coin  spend  make  graph  connected  recall  graph  connected  possible  get  vertex  vertex  using  edge  belonging  graph  contains  vertex  graph  special  offer  respectively  second  contains  written  vertex  follow  containing  denoting  special  offer  add  edge  connecting  vertex  vertex  edge  cost  coin  print  minimum  coin  pay  make  graph  connected
977/A __label__implementation  little  girl  tanya  learning  decrease  doe  wrong  consisting  digit  tanya  subtracts  following  algorithm  last  digit  non  decrease  last  digit  divide  remove  last  digit  given  tanya  subtract  time  task  print  result  subtraction  guaranteed  result  positive  input  contains  tanya  subtract  subtraction  correspondingly  print  result  decreasing  time
405/A __label__implementation  __label__greedy  __label__sortings  little  chris  bored  physic  lesson  easy  ha  built  toy  box  keep  occupied  box  special  since  ha  ability  change  gravity  column  toy  cube  box  arranged  column  contains  cube  gravity  box  pulling  cube  downwards  chris  switch  gravity  begin  pull  cube  right  side  box  figure  show  initial  final  configuration  cube  box  cube  changed  position  highlighted  orange  given  initial  configuration  toy  cube  box  find  amount  cube  column  gravity  switch  input  contains  column  box  next  contains  space  separated  denotes  cube  column  output  separated  space  amount  cube  column  gravity  switch
1043/F __label__math  __label__dp  __label__number  theory  janusz  businessman  owns  company  januszex  produce  game  teenager  last  hit  januszex  wa  cool  person  game  make  player  given  sequence  allowed  select  subset  score  equal  greatest  common  divisor  selected  element  goal  take  little  element  possible  getting  score  janusz  wonder  given  sequence  much  element  player  choose  contains  sequence  second  contains  subset  given  sequence  gcd  equal  output
439/B __label__implementation  __label__sortings  devu  dumb  guy  learning  curve  slow  supposed  teach  subject  ith  subject  ha  chapter  teach  supposed  teach  chapter  subject  continuously  let  say  initial  per  chapter  learning  power  subject  hour  word  learn  chapter  particular  subject  hour  well  devu  complete  dumb  good  thing  teach  subject  time  required  teach  chapter  next  subject  require  exactly  hour  le  previously  required  see  example  understand  clearly  note  per  chapter  learning  power  le  hour  teach  subject  possible  order  find  minimum  amount  time  hour  devu  take  understand  subject  free  enjoying  task  rather  teaching  dumb  guy  please  careful  answer  might  fit  bit  data  type  space  separated  next  space  separated  output  single  representing  answer  problem
76/C __label__math  __label__dp  scientist  planet  olympia  conducting  experiment  mutation  primitive  organism  genome  organism  planet  represented  string  capital  english  letter  pair  type  gene  assigned  risk  disease  occurence  organism  provided  gene  type  adjacent  genome  based  index  gene  index  second  gene  gene  ha  index  ha  index  example  stand  risk  fragment  risk  disease  occurence  organism  equal  sum  risk  pair  adjacent  gene  genome  scientist  already  obtained  base  organism  new  organism  obtained  mutation  organism  mutation  involves  removal  gene  particular  type  removal  increase  total  risk  disease  occurence  additionally  type  gene  scientist  determined  increasement  total  risk  disease  occurence  provided  removal  gene  type  index  example  stand  value  additional  total  risk  increasement  case  removing  gene  scientist  want  find  different  organism  obtained  given  total  risk  disease  occurence  greater  use  process  mutation  described  organism  considered  different  string  representing  genome  different  genome  least  gene  input  contains  length  genome  base  organism  maximal  index  gene  type  genome  maximal  allowable  risk  disease  occurence  second  contains  genome  given  organism  string  capital  english  letter  length  third  contains  additional  risk  value  disease  occurence  provided  removing  gene  type  following  element  given  matrix  contains  stand  risk  disease  occurence  pair  gene  corresponds  letter  second  corresponds  letter  given  matrix  necessarily  symmetrical  input  non  negative  except  greater  guaranteed  maximal  possible  risk  organism  obtained  given  organism  strictly  smaller  output  organism  obtained  base  total  risk  disease  occurence  greater
659/C __label__implementation  __label__greedy  berland  recently  new  collection  toy  went  sale  collection  consists  type  toy  numbered  toy  new  collection  type  cost  bourles  tania  ha  managed  collect  different  type  toy  new  collection  today  tanya  birthday  mother  decided  spend  bourles  gift  daughter  tanya  choose  several  different  type  toy  new  collection  gift  course  doe  want  get  type  toy  already  ha  tanya  want  many  distinct  type  toy  collection  possible  result  new  collection  diverse  tanya  little  asks  help  contains  type  toy  tanya  already  ha  bourles  mom  willing  spend  buying  new  toy  next  contains  distinct  type  toy  tanya  already  ha  print  single  different  type  toy  tanya  choose  different  type  toy  collection  maximum  possible  course  total  cost  selected  toy  exceed
505/A __label__implementation  __label__brute  force  __label__strings  kitayuta  ha  kindly  given  string  consisting  lowercase  english  letter  asked  insert  exactly  lowercase  english  letter  make  palindrome  palindrome  string  read  forward  backward  example  noon  testset  palindrome  test  kitayuta  choose  lowercase  english  letter  insert  position  possibly  beginning  end  insert  letter  even  given  string  already  palindrome  possible  insert  lowercase  english  letter  resulting  string  palindrome  print  string  insertion  otherwise  print  without  quote  case  sensitive  case  palindrome  obtained  allowed  print  input  contains  string  character  lowercase  english  letter  possible  turn  palindrome  inserting  lowercase  english  letter  print  resulting  string  single  otherwise  print  without  quote  case  sensitive  case  solution  accepted
574/B __label__dfs  __label__graphs  __label__brute  force  know  story  musketeer  anyway  learn  origin  richelimakieu  cardinal  city  bearis  tired  dealing  crime  need  brave  warrior  help  fight  bad  guy  warrior  richelimakieu  want  choose  become  musketeer  easy  important  condition  musketeer  must  know  cooperate  efficiently  well  known  could  betrayed  old  friend  musketeer  recognition  warrior  know  excluding  musketeer  help  richelimakieu  find  possible  choose  musketeer  knowing  minimum  possible  sum  recognition  contains  space  separated  respectively  warrior  pair  warrior  knowing  following  contains  space  separated  aii  warrior  know  pair  warrior  listed  richelimakieu  choose  musketeer  print  minimum  possible  sum  recognition  otherwise  print  without  quote
786/C __label__data  structures  rick  morty  want  find  pbh  alone  need  meeseeks  generated  meeseeks  standing  numbered  ha  color  meeseeks  color  rick  morty  gathering  army  want  divide  meeseeks  squad  want  squad  colorful  squad  meeseeks  different  color  squad  continuous  subarray  meeseeks  meaning  meeseeks  meeseeks  squad  meeseeks  squad  squad  need  presidio  building  presidio  need  money  want  total  squad  minimized  rick  morty  finalized  exact  value  order  choose  inclusive  need  know  minimum  presidio  needed  input  contains  single  meeseeks  second  contains  separated  space  color  meeseeks  order  standing  input  print  separated  space  minimum  presidio  needed  value
702/A __label__dp  __label__implementation  __label__greedy  given  array  consisting  task  find  maximum  length  increasing  subarray  given  array  subarray  sequence  consecutive  element  array  subarray  called  increasing  element  subarray  strictly  greater  previous  contains  single  positive  second  contains  positive  print  maximum  length  increasing  subarray  given  array
958/C3 __label__dp  __label__data  structures  heidi  code  away  breaking  encryption  death  star  plan  screen  presenting  description  next  code  look  almost  like  previous  though  would  thought  evil  empire  engineer  would  fill  small  screen  several  million  digit  ridiculous  think  anyone  would  read  heidi  given  sequence  need  find  encryption  key  let  sequence  positive  define  score  sum  element  modulo  heidi  given  sequence  consists  given  goal  split  part  part  contains  least  element  part  consists  contiguous  element  part  overlap  total  sum  score  part  minimized  maximized  output  sum  encryption  code  input  contains  space  separated  k  element  part  split  modulo  computing  score  respectively  second  contains  space  separated  element  interval  output  described  problem  statement
1117/G __label__data  structures  given  permutation  answer  query  query  pair  calculate  let  denote  position  maximum  subsegment  otherwise  contains  size  permutation  query  second  contains  pairwise  distinct  permutation  third  contains  part  query  fourth  contains  second  part  query  guaranteed  query  print  value  corresponding  query
91/C __label__graphs  ski  base  planned  built  walrusland  recently  project  still  constructing  phase  large  land  lot  wa  chosen  construction  contains  ski  junction  numbered  initially  junction  connected  way  constructing  process  bidirectional  ski  road  built  road  built  another  road  built  road  road  connects  junction  track  route  following  property  route  closed  begin  end  junction  route  contains  least  road  route  road  visit  junction  time  let  consider  ski  base  non  empty  set  road  divided  track  exactly  track  went  along  road  chosen  set  besides  track  consist  road  chosen  set  ski  base  connected  ski  base  considered  different  consist  different  road  set  building  new  road  walrusland  government  want  know  variant  choosing  ski  base  based  subset  already  built  road  government  asks  help  solve  given  problem  contains  represent  junction  road  correspondingly  follows  description  road  order  built  road  described  pair  ii  connected  junction  could  road  pair  junction  print  represent  way  build  ski  base  end  construction  road  printed  modulo
360/B __label__dp  __label__binary  search  levko  ha  array  consists  like  array  levko  think  beauty  array  directly  depends  value  calculated  formula  le  value  beautiful  array  time  change  world  levko  going  change  array  better  exact  levko  want  change  value  array  element  allowed  replace  value  course  change  make  array  beautiful  possible  help  levko  calculate  minimum  reach  contains  second  contains  space  separated  single  minimum  value  levko  get
87/E __label__geometry  long  time  ago  somewhere  depth  america  existed  powerful  tribe  governed  great  leader  pinnie  wooh  tribe  conquered  maya  city  pinnie  wooh  grew  concerned  control  conquered  territory  appealed  priest  supreme  god  mogohu  rea  help  priest  conveyed  god  control  city  put  idol  mogohu  rea  create  religious  field  city  idol  powerful  easily  drive  people  around  mad  unless  balanced  exactly  sacrifice  altar  placed  city  balance  idol  altar  placed  center  mass  system  point  coincided  idol  counting  center  mass  consider  altar  mass  pinnie  wooh  thinking  put  idol  ha  list  hill  suitable  put  idol  help  identify  put  idol  without  risking  fry  brain  city  population  religious  field  city  ha  shape  convex  polygon  vertex  lie  straight  city  intersect  altar  attached  city  special  ceremony  besides  must  situated  city  territory  possibly  border  thus  several  altar  city  territory  exactly  attached  city  altar  idol  hill  point  plane  coincide  hill  taken  consideration  independently  altar  location  different  hill  different  follow  description  city  divided  empty  description  following  format  contains  represent  polygon  vertex  next  coordinate  polygon  vertex  counterclockwise  order  city  description  follows  represents  hill  next  coordinate  hill  coordinate  input  data  exceed  absolute  value  hill  print  single  yes  without  quote  without  quote  depending  whether  sacrifice  altar  put  balance  idol
555/B __label__greedy  __label__data  structures  __label__sortings  andrewid  android  galaxy  famous  detective  chasing  criminal  hiding  planet  oxa  planet  almost  fully  covered  water  dry  land  archipelago  narrow  island  located  row  comfort  let  represent  non  intersecting  segment  straight  island  ha  coordinate  besides  reach  goal  andrewid  need  place  bridge  pair  adjacent  island  bridge  length  placed  islads  coordinate  lii  detective  wa  supplied  bridge  bridge  used  help  determine  whether  bridge  got  enough  connect  pair  adjacent  island  contains  island  bridge  next  ii  coordinate  island  endpoint  last  contains  length  bridge  andrewid  got  impossible  place  bridge  pair  adjacent  island  required  manner  print  single  without  quote  otherwise  print  yes  without  quote  second  print  mean  island  must  used  bridge
513/E2 __label__dp  given  array  length  let  pick  non  overlapping  non  empty  subarrays  initial  array  let  sum  subarray  order  left  right  compute  maximum  value  following  expression  subarray  contiguous  part  array  input  contains  second  contains  element  array  absolute  value  element  exceed  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  single  maximum  possible  value
294/C __label__number  theory  light  aligned  row  light  numbered  left  right  initially  light  switched  shaass  want  switch  light  step  switch  light  light  switched  moment  least  adjacent  light  already  switched  know  initial  state  light  wondering  many  different  way  exist  switch  light  please  find  required  way  modulo  input  contains  light  sequence  light  initially  switched  second  contains  distinct  inclusive  denoting  index  light  initially  switched  output  print  different  possible  way  switch  light  modulo
518/E __label__math  __label__implementation  __label__greedy  bracket  sequence  arthur  took  theory  ha  got  new  favorite  sequence  length  consisting  exceeding  sequence  following  property  write  sum  segment  consisting  consecutive  element  form  strictly  increasing  sequence  example  following  sample  sequence  look  follows  mean  sequence  meet  described  property  obviously  sequence  sum  element  somebody  say  replaced  arthur  sequence  question  mark  replaced  replaced  exactly  question  mark  need  restore  sequence  meet  required  property  minimize  sum  absolute  value  contains  showing  many  arthur  sequence  length  segment  respectively  next  contains  space  separated  element  element  arthur  sequence  wa  replaced  question  mark  otherwise  element  arthur  sequence  arthur  wrong  point  sequence  could  fit  given  information  print  single  string  incorrect  sequence  without  quote
580/E __label__data  structures  __label__strings  day  kefa  parrot  wa  walking  street  wa  way  home  restaurant  saw  something  glittering  road  came  nearer  understood  wa  watch  decided  take  pawnbroker  earn  money  pawnbroker  said  watch  contains  serial  represented  string  digit  quality  check  pass  higher  value  watch  check  defined  positive  watch  pas  check  substring  serial  ha  period  sometimes  pawnbroker  get  distracted  kefa  change  substring  serial  digit  order  increase  profit  watch  seller  ha  lot  thing  begin  kefa  messing  gave  task  write  program  determines  value  watch  let  remind  called  period  string  si  input  contains  positive  length  serial  change  made  kefa  quality  check  second  contains  serial  consisting  digit  follow  containing  either  check  change  change  given  mean  kefa  changed  digit  check  given  check  single  print  yes  watch  passed  otherwise  print
121/D __label__implementation  __label__binary  search  petya  love  lucky  everybody  know  lucky  positive  whose  decimal  representation  contains  lucky  digit  example  lucky  petya  ha  segment  move  petya  take  segment  let  segment  replace  segment  word  move  petya  shift  segment  left  right  unit  distance  petya  call  full  belongs  segment  full  condition  lii  fulfilled  petya  make  move  count  quantity  full  lucky  find  maximal  quantity  get  contains  segment  maximum  move  next  pair  ii  please  use  lld  specificator  read  write  bit  preferred  use  specificator  print  single  single  answer  problem
1015/B __label__implementation  given  string  string  length  consist  lowercase  latin  letter  character  string  numbered  successively  perform  following  move  time  possibly  swap  adjacent  neighboring  character  swap  apply  move  string  move  applied  string  another  task  obtain  string  string  find  way  move  minimize  move  find  sequence  move  length  le  transform  input  contains  length  string  second  input  contains  string  consisting  lowercase  latin  letter  third  input  contains  string  consisting  lowercase  latin  letter  impossible  obtain  string  using  move  print
1042/C __label__math  __label__greedy  __label__constructive  algorithms  given  array  consisting  perform  following  operation  choose  position  write  value  cell  remove  cell  choose  position  remove  cell  operation  performed  point  time  necessarily  beginning  element  decrease  operation  indexing  position  stay  deleted  used  later  operation  task  perform  exactly  operation  array  way  remains  array  maximum  possible  rather  large  instead  printing  need  print  sequence  operation  lead  maximum  read  output  format  understand  exactly  need  print  contains  single  element  array  second  contains  element  array  print  possible  operation
1114/C __label__math  __label__implementation  __label__brute  force  __label__number  theory  called  loveoeuf  precise  literally  mean  egg  french  example  denoting  score  game  tennis  aki  fond  especially  trailing  example  ha  trailing  aki  think  trailing  digit  ha  prettier  aki  belief  trailing  static  depends  base  radix  represented  thus  considers  scenario  base  since  used  become  quite  bizarre  asks  help  calculate  beauty  given  decimal  notation  task  calculate  trailing  digit  ary  base  radix  representation  factorial  input  contains  print  trailing  digit  ary  representation
507/A __label__implementation  __label__greedy  __label__sortings  amr  young  coder  like  music  lot  always  wanted  learn  play  music  wa  busy  coding  got  idea  amr  ha  instrument  take  day  learn  instrument  busy  amr  dedicated  day  learn  play  maximum  possible  instrument  amr  asked  help  distribute  free  day  instrument  achieve  goal  contains  instrument  day  respectively  second  contains  representing  day  required  learn  instrument  output  representing  maximum  instrument  amr  learn
975/D __label__math  __label__geometry  ghost  live  harmony  peace  travel  space  without  purpose  scare  whoever  stand  way  ghost  universe  move  oxy  plane  ha  velocity  doe  change  time  speed  axis  axis  ghost  ha  experience  value  represent  many  ghost  tried  scare  past  ghost  scare  cartesian  point  moment  time  ghost  move  constant  speed  moment  time  scaring  relief  experience  ghost  kind  never  increase  tameem  red  giant  took  picture  cartesian  plane  certain  moment  time  magically  ghost  aligned  form  compute  experience  index  ghost  kind  indefinite  future  task  today  note  tameem  took  picture  already  greater  many  ghost  scared  another  moment  contains  ghost  universe  parameter  straight  next  contains  current  coordinate  ghost  guaranteed  ghost  share  initial  position  word  guaranteed  output  experience  index  ghost  kind  indefinite  future
575/C __label__brute  force  note  unusual  memory  limit  problem  people  working  mdcs  microsoft  development  center  serbia  like  partying  usually  night  club  friday  saturday  people  working  mdcs  club  city  unfortunately  microsoft  employee  night  club  level  coolness  go  infinitely  high  party  club  owner  never  let  microsoft  employee  enter  club  week  sure  organizing  night  life  microsoft  employee  statistic  much  every  employee  like  friday  saturday  party  club  need  match  people  club  maximizing  overall  sum  happiness  happy  much  like  club  half  people  clubbing  friday  half  saturday  contains  employee  mdcs  n  matrix  follows  element  row  column  represents  much  person  like  club  friday  party  another  n  matrix  follows  element  row  column  represents  much  person  like  club  saturday  party  even  level  likeness  value  output  single  maximum  sum  happiness  possible
471/D __label__strings  polar  bear  menshykov  uslada  zoo  petersburg  elephant  horace  zoo  kiev  got  hold  lot  wooden  cube  somewhere  started  making  cube  tower  placing  cube  top  defined  multiple  tower  standing  wall  wall  consist  tower  different  height  horace  wa  finish  making  wall  called  wall  elephant  wall  consists  tower  bear  finished  making  wall  give  name  wall  consists  tower  horace  looked  bear  tower  wondered  many  part  wall  see  elephant  see  elephant  segment  contiguous  tower  height  tower  segment  match  sequence  height  tower  horace  wall  order  see  many  elephant  possible  horace  raise  lower  wall  even  lower  wall  ground  level  see  picture  sample  clarification  task  count  segment  horace  see  elephant  contains  tower  bear  elephant  wall  correspondingly  second  contains  height  tower  bear  wall  third  contains  height  tower  elephant  wall  print  segment  bear  wall  horace  see  elephant
772/D __label__dp  given  denote  list  let  function  take  non  empty  list  function  output  another  follows  padded  leading  length  maximum  length  construct  string  character  minimum  character  padded  input  output  representing  string  interpreted  base  example  define  function  denotes  subsequence  word  sum  square  sum  element  nonempty  subsequence  evaluate  plugged  modulo  multiplied  last  multiplication  modded  would  like  compute  reduce  output  size  print  value  denotes  bitwise  xor  operator  contains  size  list  next  contains  space  separated  element  list  output  single  answer  problem
593/B __label__sortings  __label__geometry  teacher  gave  anton  large  geometry  homework  usual  participated  regular  round  codeforces  task  wa  given  set  defined  equation  wa  necessary  determine  whether  least  point  intersection  lay  strictly  inside  strip  word  true  point  belongs  point  belongs  point  lie  inside  strip  bounded  leave  anton  trouble  write  program  solves  given  task  input  contains  task  given  anton  second  contains  defining  strip  inside  need  find  point  intersection  least  following  description  guaranteed  pairwise  distinct  true  either  kij  bij  print  yes  without  quote  least  intersection  distinct  located  strictly  inside  strip  otherwise  print  without  quote
573/A __label__math  __label__implementation  __label__number  theory  limak  old  brown  bear  often  play  poker  friend  today  went  casino  player  including  limak  right  bid  table  ha  bid  size  dollar  player  double  bid  time  triple  bid  time  casino  ha  great  jackpot  making  bid  equal  possible  limak  friend  win  jackpot  input  contains  player  second  contains  bid  player  print  yes  without  quote  player  make  bid  become  equal  otherwise
1005/A __label__implementation  little  girl  tanya  climb  stair  inside  multi  storey  building  every  time  tanya  climb  stairway  start  counting  step  step  stairway  speaks  every  aloud  example  climb  stairway  contains  step  second  contains  step  pronounce  given  pronounced  tanya  many  stairway  climb  output  step  stairway  given  sequence  valid  sequence  tanya  could  pronounced  climbing  stairway  contains  total  pronounced  tanya  second  contains  tanya  pronounced  climbing  stair  order  last  pronounced  passing  stairway  step  pronounce  order  given  sequence  valid  sequence  tanya  could  pronounced  climbing  stairway  output  stairway  tanya  climbed  second  output  step  stairway  climbed  write  correct  order  passage  stairway
567/F __label__dp  king  berland  berl  ha  recently  died  hail  berl  sign  highest  achievement  deceased  king  new  king  decided  build  mausoleum  berl  body  main  square  capital  mausoleum  constructed  block  ha  shape  cuboid  block  ha  bottom  base  meter  square  block  exactly  height  meter  exactly  height  meter  exactly  height  meter  block  arranged  row  without  spacing  course  every  arrangement  block  ha  form  mausoleum  order  make  given  arrangement  form  mausoleum  necessary  pas  along  mausoleum  end  height  block  non  decreasing  increasing  remained  non  increasing  decrease  remained  unchanged  possible  area  omitted  example  following  sequence  block  height  meet  requirement  suddenly  requirement  appeared  requirement  ha  form  signi  height  block  signi  possible  sign  equal  le  le  equal  equal  thus  additional  requirement  given  pair  index  n  sign  signi  find  possible  way  rearrange  block  requirement  shape  mausoleum  see  paragraph  additional  requirement  met  input  contains  pair  block  additional  requirement  next  listed  additional  requirement  per  format  signi  n  sign  list  possible  sign  print  sought  way
662/D __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  international  abbreviation  olympiad  take  place  annually  starting  year  competition  receives  abbreviation  form  iao  stand  consequent  last  digit  current  year  organizer  always  pick  abbreviation  non  empty  string  ha  never  used  valid  abbreviation  choose  shortest  announce  abbreviation  year  competition  example  olympiad  year  respectively  received  abbreviation  iao  iao  iao  competition  received  abbreviation  iao  iao  ha  already  used  given  list  abbreviation  determine  year  stand  input  contains  single  abbreviation  process  follow  containing  single  abbreviation  guaranteed  abbreviation  contains  digit  abbreviation  given  input  find  year  corresponding  olympiad
453/D __label__dp  element  harmony  supernatural  artifact  representing  subjective  aspect  harmony  arguably  powerful  force  equestria  inside  element  harmony  seen  complete  graph  vertex  labeled  power  equal  energy  element  harmony  constant  movement  according  ancient  book  energy  vertex  time  equal  transformation  coefficient  array  binary  representation  xor  given  transformation  coefficient  energy  distribution  time  help  twilight  sparkle  predict  energy  distribution  time  answer  quite  large  output  modulo  contains  following  contains  next  contains  output  must  single  modulo
1132/F __label__dp  given  string  length  consisting  lowercase  latin  letter  apply  operation  string  operation  delete  contiguous  substring  string  letter  substring  delete  equal  example  deleting  substring  bbbb  string  abbbbaccdd  get  string  aaccdd  calculate  minimum  operation  delete  whole  string  contains  length  string  second  contains  string  consisting  lowercase  latin  letter  output  single  minimal  operation  delete  string
492/E __label__math  vanya  decided  walk  field  size  n  cell  field  contains  apple  tree  apple  tree  cell  coordinate  vanya  move  towards  vector  mean  vanya  cell  second  cell  following  condition  satisfied  vector  largest  divide  vanya  end  path  reach  square  ha  already  visited  vanya  wonder  square  field  start  path  see  many  apple  tree  possible  contains  x  size  field  apple  tree  vector  vanya  movement  next  coordinate  apple  cell  multiple  apple  tree  print  space  separated  coordinate  cell  start  path  several  answer  allowed  print
366/C __label__dp  dima  inna  seryozha  gathered  room  right  someone  got  cheer  seryozha  inspire  walk  inna  decided  cook  something  dima  seryozha  fruit  fridge  fruit  ha  parameter  taste  calorie  inna  decided  make  fruit  salad  want  take  fruit  fridge  inna  follows  certain  principle  chooses  fruit  total  taste  total  calorie  ratio  chosen  fruit  must  equal  word  taste  chosen  fruit  calorie  inna  chosen  fruit  thinking  maximum  taste  chosen  fruit  strictly  follows  principle  help  inna  solve  culinary  problem  happiness  young  couple  hand  inna  love  dima  much  want  make  salad  least  fruit  input  contains  second  input  contains  fruit  taste  third  input  contains  fruit  calorie  fruit  ha  taste  calorie  way  inna  choose  fruit  salad  print  single  otherwise  print  single  maximum  possible  sum  taste  value  chosen  fruit
651/A __label__math  __label__dp  __label__implementation  __label__greedy  friend  going  play  console  joystick  charger  initially  joystick  charged  percent  second  charged  percent  connect  charger  joystick  beginning  minute  minute  joystick  either  discharge  percent  connected  charger  charge  percent  connected  charger  game  continues  joystick  positive  charge  hence  beginning  minute  joystick  charged  percent  ha  connected  charger  otherwise  game  stop  joystick  completely  discharge  charge  turn  game  stop  determine  maximum  minute  game  last  prohibited  pause  game  moment  joystick  enabled  allowed  joystick  charged  percent  input  contains  positive  initial  charge  level  second  joystick  respectively  output  maximum  minute  game  last  game  continues  joystick  discharged
513/G3 __label__dp  given  permutation  perform  operation  following  type  choose  uniformly  random  index  l  reverse  order  element  task  find  expected  value  inversion  resulting  permutation  input  contains  next  contains  given  permutation  different  range  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  answer  absolute  relative  error
472/E __label__implementation  __label__constructive  algorithms  way  create  task  learn  game  pick  game  focus  part  mechanic  game  might  good  task  let  try  puzzle  dragon  wa  popular  game  japan  focus  puzzle  part  game  tile  matching  puzzle  picture  wikipedia  page  http  wikipedia  org  wiki  puzzle  dragon  n  board  consists  orb  game  following  move  beginning  move  touch  cell  board  move  finger  adjacent  cell  cell  boundary  ha  adjacent  cell  move  finger  current  cell  adjacent  cell  time  time  move  finger  cell  another  cell  orb  cell  swap  word  whatever  move  make  orb  cell  touching  never  change  goal  achieve  kind  pattern  orb  cancelled  monster  attack  enemy  care  detail  instead  give  initial  board  input  target  board  output  goal  determine  whether  way  reach  target  single  move  contains  next  contains  description  initial  board  denotes  type  orb  located  row  column  board  next  target  board  format  note  initial  board  target  board  different  solution  output
534/B __label__math  __label__dp  __label__greedy  board  computer  polycarp  car  measured  car  speed  beginning  section  path  equal  meter  per  second  end  meter  per  second  know  section  route  took  exactly  second  pas  assuming  second  speed  constant  second  speed  change  meter  per  second  absolute  value  difference  speed  adjacent  second  doe  exceed  absolute  value  find  maximum  possible  length  path  section  meter  contains  speed  meter  per  second  beginning  segment  end  segment  respectively  second  contains  time  car  move  along  segment  second  maximum  value  speed  change  adjacent  second  guaranteed  way  complete  segment  speed  second  equal  speed  last  second  equal  absolute  value  difference  speed  adjacent  second  exceed  print  maximum  possible  length  path  segment  meter
628/C __label__greedy  limak  little  polar  bear  like  nice  string  string  length  consisting  lowercase  english  letter  distance  letter  defined  difference  position  alphabet  example  distance  nice  string  defined  sum  distance  corresponding  letter  example  limak  give  nice  string  challenge  find  nice  string  find  satisfying  given  condition  print  impossible  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  get  scanf  printf  instead  getline  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  second  contains  string  length  consisting  lowercase  english  letter  string  satisfying  given  condition  print  without  quote
946/D __label__dp  ivan  student  berland  state  university  bsu  day  berland  week  day  ivan  might  class  university  working  hour  berland  day  lesson  university  last  exactly  hour  day  ivan  lesson  hour  last  lesson  hour  spends  hour  university  day  lesson  day  ivan  stay  home  therefore  spends  hour  university  ivan  like  spend  lot  time  university  ha  decided  skip  lesson  skip  lesson  week  deciding  lesson  skip  attend  every  day  ivan  enter  university  right  start  lesson  doe  skip  leave  end  last  lesson  decides  attend  ivan  skip  lesson  day  university  day  given  ivan  timetable  determine  minimum  hour  ha  spend  university  week  skip  lesson  contains  day  berland  week  working  hour  day  lesson  ivan  skip  respectively  follow  containing  binary  string  character  character  ivan  ha  lesson  day  hour  lesson  print  minimum  hour  ivan  ha  spend  university  week  skip  lesson
1044/D __label__data  structures  array  indexed  initially  know  know  value  task  process  query  type  informed  bitwise  xor  subarray  end  inclusive  equal  bitwise  xor  operator  case  received  update  contradicts  past  update  case  ignore  contradicting  update  current  update  asked  output  bitwise  xor  subarray  end  inclusive  still  impossible  know  value  considering  past  update  output  note  query  encoded  need  write  online  solution  contains  single  query  next  describes  query  contains  type  query  given  query  encoded  following  way  let  last  answer  last  query  second  type  answered  initially  last  last  answer  wa  set  last  follow  meaning  got  update  following  ast  ast  ast  swap  mean  got  update  bitwise  xor  subarray  equal  notice  need  ignore  update  contradict  previous  update  follow  meaning  got  query  following  ast  ast  swap  given  query  need  print  bitwise  xor  subarray  impossible  know  print  forget  change  value  last  guaranteed  least  query  second  type  every  query  second  type  output  bitwise  xor  given  subarray  still  impossible  know
809/E __label__math  __label__trees  __label__number  theory  tired  boring  date  leha  noora  decided  play  game  leha  found  tree  vertex  numbered  remind  tree  undirected  graph  without  cycle  vertex  tree  ha  written  quite  accident  turned  value  written  vertex  distinct  natural  game  go  following  way  noora  chooses  vertex  tree  uniformly  random  pass  move  leha  leha  turn  chooses  uniformly  random  vertex  remaining  vertex  tree  v  could  guess  variant  choosing  vertex  player  player  calculate  value  function  au  chosen  vertex  euler  totient  function  shortest  distance  vertex  tree  soon  game  became  boring  noora  leha  decided  defuse  situation  calculate  expected  value  function  variant  choosing  vertex  hoping  least  somehow  surprise  girl  leha  asks  help  calculating  expected  value  let  value  representable  form  irreducible  fraction  surprise  noora  want  name  value  help  leha  input  contains  vertex  tree  second  contains  different  separated  space  denoting  value  written  tree  vertex  next  contains  describing  next  edge  tree  guaranteed  set  edge  describes  tree  single  print  equal  modulo
818/E __label__data  structures  __label__binary  search  __label__number  theory  vova  try  play  computer  card  game  rule  deck  creation  game  simple  vova  given  existing  deck  card  magic  order  card  deck  fixed  card  ha  written  written  card  deck  receiving  deck  magic  vova  remove  possibly  card  top  deck  possibly  card  bottom  deck  rest  deck  new  deck  vova  ha  leave  least  card  deck  removing  card  vova  new  deck  actually  contains  card  original  deck  vova  new  deck  considered  valid  iff  product  written  card  new  deck  divisible  vova  received  deck  possibly  valid  wonder  many  way  choose  deck  get  removing  card  top  card  bottom  valid  contains  second  contains  written  card  print  way  choose  resulting  deck  valid
1098/C __label__greedy  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  __label__binary  search  misha  walked  snowy  forest  wa  fascinated  tree  decide  draw  tree  misha  would  like  construct  rooted  tree  vertex  indexed  root  ha  index  every  vertex  ha  parent  called  child  vertex  vertex  belongs  subtree  vertex  iff  reachable  iterating  parent  clearly  belongs  subtree  vertex  subtree  called  size  subtree  misha  interested  tree  every  vertex  belongs  subtree  vertex  tree  vertex  subtree  vertex  contains  vertex  hence  size  subtree  branching  coefficient  tree  defined  maximum  child  vertex  example  tree  branching  coefficient  equal  task  construct  tree  vertex  sum  subtree  size  vertex  equal  branching  coefficient  minimum  possible  input  contains  vertex  tree  desired  sum  subtree  size  required  tree  doe  exist  output  otherwise  output  yes  next  output  denotes  parent  vertex
723/E __label__greedy  __label__dfs  __label__graphs  __label__constructive  algorithms  city  way  road  berland  road  connects  city  known  road  connecting  pair  city  road  connects  city  possible  way  get  city  city  using  road  road  minister  decided  make  reform  berland  orient  road  country  make  road  way  minister  want  maximize  city  road  begin  city  equal  road  end  contains  positive  testsets  input  testsets  given  following  way  contains  city  road  berland  next  description  road  berland  contains  city  corresponding  road  connects  guaranteed  self  loop  multiple  road  possible  way  along  road  pair  city  guaranteed  total  city  testset  input  data  exceed  pay  attention  hack  use  test  consisting  testset  equal  testset  print  maximum  city  road  begin  city  equal  road  end
979/D __label__math  __label__dp  __label__greedy  __label__data  structures  __label__brute  force  __label__binary  search  __label__number  theory  kuro  currently  playing  educational  game  game  focus  greatest  common  divisor  gcd  xor  value  sum  kuro  love  game  much  solves  level  level  day  day  sadly  going  vacation  day  able  continue  solving  streak  katie  reliable  person  kuro  kindly  asked  come  house  day  play  game  initally  empty  array  game  consists  task  type  type  asks  katie  add  second  type  asks  katie  find  existing  cd  maximized  denotes  bitwise  xor  operation  gcd  denotes  greatest  common  divisor  mean  divisible  report  found  since  programmer  katie  need  automatically  accurately  perform  task  game  satisfy  dear  friend  kuro  let  help  contains  task  game  want  perform  follow  begin  type  task  follow  add  array  follow  must  find  existing  array  cd  maximized  denotes  xor  operation  report  found  guaranteed  type  task  type  exists  least  task  type  task  type  output  desired  found
246/A __label__greedy  __label__sortings  __label__constructive  algorithms  little  boy  valera  study  algorithm  sorting  array  studying  theory  went  practical  task  result  wrote  program  sort  array  non  decreasing  order  pseudocode  program  written  valera  given  input  program  get  array  loop  variable  loop  variable  swap  value  element  valera  could  made  mistake  fully  learned  sorting  algorithm  valera  made  mistake  program  need  give  counter  example  make  program  work  improperly  example  make  program  sort  array  non  decreasing  order  example  given  value  exist  print  got  single  size  sorted  array  print  space  separated  counter  example  valera  algorithm  work  correctly  counter  example  meet  described  condition  impossible  give  print
1138/B __label__math  __label__greedy  __label__brute  force  __label__strings  polycarp  head  circus  troupe  even  artist  troupe  known  whether  artist  perform  clown  yes  otherwise  whether  perform  acrobat  yes  otherwise  split  artist  performance  way  artist  play  exactly  performance  artist  performance  equal  equal  artist  perform  clown  performance  artist  perform  acrobat  second  performance  contains  single  even  artist  troupe  second  contains  digit  equal  artist  perform  clown  otherwise  third  contains  digit  equal  artist  perform  acrobat  otherwise  print  distinct  index  artist  play  performance
1196/A __label__math  __label__constructive  algorithms  __label__brute  force  alice  bob  received  big  pile  candy  gift  want  divide  candy  fair  possible  alice  take  pile  candy  bob  take  pile  last  pile  split  alice  bob  want  example  possible  alice  take  whole  pile  bob  get  nothing  taking  candy  pile  alice  ha  candy  bob  discard  candy  candy  ha  equal  candy  bob  ha  course  bob  doe  ha  candy  alice  bob  want  many  candy  possible  plan  process  dividing  candy  accordingly  please  calculate  maximum  candy  alice  division  process  course  bob  candy  answer  independent  query  let  see  following  example  alice  choose  third  pile  bob  take  second  pile  candy  pile  go  bob  alice  ha  candy  bob  ha  candy  another  example  alice  choose  second  pile  bob  choose  pile  candy  third  pile  divided  way  bob  take  candy  alice  take  candy  bob  ha  candy  alice  ha  candy  ha  discard  candy  ha  candy  input  contains  query  query  follow  query  contains  candy  second  third  pile  correspondingly  print  answer  query  maximum  candy  alice  division  alice  bob  act  optimally  course  bob  candy
150/A __label__math  __label__number  theory  possibly  imagine  cold  friend  winter  nvodsk  play  following  game  warm  initially  piece  paper  ha  move  player  write  non  trivial  divisor  last  written  run  circle  around  hotel  let  remind  divisor  called  non  trivial  different  divided  person  make  move  win  continues  lie  warm  bed  blanket  keep  running  determine  player  win  considering  player  play  optimally  player  win  print  winning  move  contains  please  use  lld  specificator  read  write  bit  preferred  use  cin  cout  stream  specificator  print  winning  player  player  win  second  another  move  player  even  make  move  print  multiple  solution  print
1108/E1 __label__implementation  __label__greedy  __label__brute  force  difference  easy  hard  version  element  array  given  array  consisting  value  element  array  given  set  segment  segment  choose  subset  given  set  segment  decrease  value  chosen  segment  independently  example  initial  array  given  segment  choose  array  become  choose  subset  given  segment  segment  chosen  way  apply  subset  segment  array  obtain  array  value  max  min  max  maximum  possible  note  choose  empty  set  multiple  answer  print  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  length  array  segment  respectively  second  input  contains  value  element  array  next  contains  end  segment  output  print  maximum  possible  value  max  min  max  array  obtained  applying  subset  given  segment  array
453/C __label__dfs  __label__graphs  __label__constructive  algorithms  twilight  sparkle  learnt  evil  nightmare  moon  would  return  upcoming  summer  sun  celebration  thousand  year  imprisonment  moon  tried  warn  mentor  princess  celestia  princess  ignored  sent  ponyville  check  preparation  celebration  twilight  sparkle  wanted  track  path  nightmare  moon  unfortunately  know  exact  path  knew  parity  time  place  nightmare  moon  visited  help  twilight  sparkle  restore  path  consistent  information  ponyville  represented  undirected  graph  vertex  place  edge  road  place  without  self  loop  multi  edge  path  start  end  place  empty  place  visited  multiple  time  path  must  visit  place  contains  place  road  ponyville  following  contains  uii  describe  road  place  next  contains  parity  time  place  must  visited  place  must  visited  even  time  else  must  visited  odd  time  output  visited  place  n  output  place  order  path  place  must  appear  path  even  time  else  place  must  appear  path  odd  time  note  given  road  system  ha  self  loop  therefore  neighbouring  place  path  must  distinct
1216/C __label__math  __label__geometry  white  sheet  paper  lying  rectangle  table  sheet  rectangle  side  parallel  side  table  take  look  assume  bottom  left  corner  table  ha  coordinate  coordinate  ax  left  bottom  side  table  bottom  left  corner  white  sheet  ha  coordinate  top  right  black  sheet  paper  placed  table  side  black  sheet  parallel  side  table  coordinate  bottom  left  corner  black  sheet  top  right  coordinate  bottom  left  corner  second  black  sheet  top  right  example  rectangle  determine  part  white  sheet  seen  black  sheet  placed  part  white  sheet  seen  least  point  lying  strictly  inside  white  sheet  strictly  outside  black  sheet  input  contains  coordinate  bottom  left  top  right  corner  white  sheet  second  input  contains  coordinate  bottom  left  top  right  corner  black  sheet  third  input  contains  coordinate  bottom  left  top  right  corner  second  black  sheet  side  sheet  paper  parallel  perpendicular  coordinate  ax  part  white  sheet  seen  black  sheet  placed  print  yes  without  quote  otherwise  print
682/C __label__dp  __label__dfs  __label__graphs  __label__trees  alyona  decided  diet  went  forest  get  apple  unexpectedly  found  magic  rooted  tree  root  vertex  every  vertex  every  edge  ha  written  girl  noticed  tree  vertex  sad  decided  play  let  call  vertex  sad  vertex  subtree  vertex  dist  written  vertex  dist  sum  written  edge  path  leaf  tree  vertex  connected  single  vertex  single  edge  root  tree  leaf  tree  consists  single  vertex  root  thus  alyona  decided  remove  tree  leaf  sad  vertex  left  tree  minimum  leaf  alyona  need  remove  input  given  vertex  tree  second  sequence  given  written  vertex  next  describe  tree  edge  ith  consists  meaning  edge  connecting  vertex  written  print  minimum  leaf  alyona  need  remove  sad  vertex  left  tree
1016/F __label__dp  __label__dfs  __label__trees  city  country  berland  connected  bidirectional  road  way  exists  exactly  path  visit  road  every  pair  city  road  ha  length  city  numbered  travelling  time  city  total  length  road  shortest  path  important  city  berland  city  berland  ministry  transport  decided  build  single  new  road  decrease  traffic  important  city  lot  people  used  current  travelling  time  important  city  new  road  change  much  new  road  built  city  already  connected  road  came  possible  project  project  length  new  road  polycarp  work  head  analyst  berland  ministry  transport  job  deal  project  project  required  choose  city  build  new  road  length  travelling  time  important  city  maximal  possible  unfortunately  polycarp  programmer  analyst  world  capable  process  project  using  pen  paper  thus  asks  help  calculate  maximal  possible  travelling  time  important  city  project  note  choice  differ  different  project  contains  city  project  respectively  next  contains  description  road  guaranteed  exists  exactly  path  visit  road  every  pair  city  next  contains  single  length  road  project  print  single  maximal  possible  travelling  time  important  city  project
363/C __label__implementation  __label__greedy  many  modern  text  editor  automatically  check  spelling  user  text  editor  even  suggest  correct  typo  problem  task  implement  small  functionality  correct  type  typo  word  assume  identical  letter  together  typo  example  word  helllo  contains  typo  besides  couple  identical  letter  immediately  followed  another  couple  identical  letter  typo  example  word  helloo  wwaatt  typo  write  code  deletes  minimum  letter  word  correcting  described  typo  word  allowed  delete  letter  end  middle  word  single  input  contains  word  length  character  given  word  consists  lowercase  english  letter  print  word  typo  described  problem  statement  obtained  deleting  least  letter
1208/B __label__implementation  __label__brute  force  __label__binary  search  given  array  remove  subsegment  remaining  element  pairwise  distinct  word  time  choose  delete  array  remaining  element  pairwise  distinct  find  minimum  size  subsegment  need  remove  make  remaining  element  distinct  input  contains  single  element  given  array  next  contains  spaced  element  array  print  single  minimum  size  subsegment  need  remove  make  element  array  pairwise  distinct  subsegment  need  removed  print
339/C __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__constructive  algorithms  xenia  ha  set  weight  pan  scale  weight  ha  weight  kilo  xenia  going  play  scale  weight  little  put  weight  scalepans  weight  go  left  scalepan  second  weight  go  right  scalepan  third  go  left  scalepan  fourth  go  right  scalepan  xenia  want  put  total  weight  scalepans  simply  putting  weight  scale  interesting  xenia  ha  set  rule  doe  put  scale  consecutive  weight  weight  weight  go  different  weight  second  every  time  xenia  put  weight  scalepan  want  scalepan  outweigh  sum  weight  corresponding  scalepan  must  strictly  greater  sum  pan  given  type  weight  available  xenia  assume  girl  ha  infinite  weight  specified  type  task  help  xenia  lay  weight  scale  say  done  contains  string  consisting  exactly  character  equal  xenia  ha  kilo  weight  otherwise  character  equal  second  contains  print  yes  way  put  weight  scale  rule  otherwise  print  put  weight  scale  print  next  weight  weight  order  put  scale
667/A __label__math  __label__geometry  lot  people  berland  hate  rain  rain  pacifies  put  thought  order  year  developed  good  tradition  rain  street  stay  silent  moment  contemplate  around  enjoy  freshness  think  big  deed  today  everything  changed  quietly  went  street  cup  contained  water  favorite  drink  moment  drinking  water  noticed  process  became  quite  long  cup  still  contained  water  rain  decided  make  formal  model  wa  happening  find  wa  possible  drink  water  situation  thus  cup  cylinder  diameter  equal  centimeter  initial  level  water  cup  equal  centimeter  bottom  drink  water  speed  equal  milliliter  per  second  rain  go  speed  drink  water  cup  level  water  increase  centimeter  per  second  process  drinking  water  cup  addition  rain  cup  go  evenly  continuously  find  time  needed  make  cup  empty  find  never  happen  guaranteed  possible  drink  water  happen  later  second  note  milliliter  equal  cubic  centimeter  input  contains  diameter  cylindrical  cup  initial  level  water  cup  speed  drinking  process  cup  milliliter  per  second  growth  water  rain  drink  cup  impossible  make  cup  empty  print  without  quote
467/B __label__implementation  __label__constructive  algorithms  __label__brute  force  helped  george  alex  move  dorm  went  help  friend  fedor  play  new  computer  game  call  soldier  game  ha  player  type  soldier  total  player  call  soldier  numbered  form  type  soldier  numbered  player  ha  army  army  player  described  non  negative  consider  binary  representation  bit  equal  army  player  ha  soldier  type  fedor  player  game  assume  player  become  friend  army  differ  type  soldier  word  binary  representation  corresponding  differ  bit  help  fedor  count  many  player  become  friend  contains  next  contains  single  n  describes  player  army  remind  fedor  player  print  single  fedor  potential  friend
888/D __label__math  __label__dp  permutation  size  array  every  occurs  exactly  array  let  call  permutation  almost  identity  permutation  iff  exist  least  index  task  count  almost  identity  permutation  given  contains  print  almost  identity  permutation  given
255/C __label__dp  __label__brute  force  gena  love  sequence  recently  ha  discovered  new  type  sequence  called  almost  arithmetical  progression  sequence  almost  arithmetical  progression  element  represented  right  gena  ha  piece  paper  sequence  consisting  help  gena  find  longest  subsequence  almost  arithmetical  progression  sequence  k  subsequence  sequence  n  increasing  sequence  index  k  bij  j  word  sequence  obtained  crossing  element  contains  next  contains  print  single  length  required  longest  subsequence
763/B __label__constructive  algorithms  __label__geometry  timofey  birthday  present  colourbook  shape  infinite  plane  plane  rectangle  side  parallel  coordinate  ax  situated  side  rectangle  odd  length  rectangle  intersect  touch  help  timofey  color  rectangle  different  color  way  every  rectangle  touching  side  would  different  color  determine  impossible  rectangle  intersect  intersection  ha  positive  area  rectangle  touch  side  pair  side  intersection  ha  non  length  picture  corresponds  example  contains  single  rectangle  follow  contains  mean  point  coordinate  opposite  corner  rectangle  guaranteed  side  rectangle  odd  length  rectangle  intersect  print  impossible  color  rectangle  different  color  way  every  rectangle  touching  side  would  different  color
805/B __label__constructive  algorithms  beginning  new  year  keivan  decided  reverse  name  like  palindrome  changed  naviek  navick  selfish  given  want  obtain  string  character  either  palindrome  length  appearing  string  substring  example  string  abc  abca  suit  string  aba  want  letter  string  little  possible  contains  single  length  string  print  string  satisfies  constraint
688/B __label__math  __label__constructive  algorithms  pari  ha  friend  love  palindrome  palindrome  read  forward  backward  example  palindrome  pari  trying  love  special  gifted  people  understand  beauty  behind  palindrome  pari  love  even  length  even  digit  try  see  lot  big  palindrome  even  length  like  digit  digit  maybe  could  see  something  pari  asks  write  program  get  huge  input  tell  even  length  positive  palindrome  input  contains  single  print  even  length  palindrome
381/A __label__implementation  __label__greedy  sereja  dima  play  game  rule  game  simple  player  card  row  card  contains  card  distinct  player  take  turn  sereja  move  turn  player  take  card  either  leftmost  card  row  rightmost  game  end  card  player  ha  maximum  sum  card  end  game  win  sereja  dima  greedy  chooses  card  larger  move  inna  friend  sereja  dima  know  strategy  guy  using  want  determine  final  score  given  initial  state  game  help  contains  card  table  second  contains  space  separated  card  left  right  card  distinct  single  print  sereja  point  end  game  second  dima  point  end  game
1106/E __label__dp  __label__data  structures  lunar  new  year  approaching  bob  going  receive  red  envelope  countless  money  collecting  money  red  envelope  time  consuming  process  let  describe  problem  mathematical  way  consider  timeline  time  red  envelope  available  time  inclusive  coin  bob  chooses  collect  coin  red  envelope  point  time  inclusive  collect  envelope  time  inclusive  hold  bob  greedy  man  collect  coin  greedily  whenever  collect  coin  time  collect  available  red  envelope  maximum  coin  multiple  envelope  maximum  coin  bob  would  choose  whose  parameter  largest  still  multiple  choice  bob  choose  randomly  alice  daughter  want  father  get  many  coin  could  disturb  bob  time  moment  alice  decides  disturb  bob  time  could  anything  time  resume  usual  strategy  time  inclusive  lead  missing  red  envelope  calculate  minimum  coin  bob  would  get  alice  disturbs  optimally  contains  non  negative  denoting  length  timeline  time  alice  disturb  bob  total  red  envelope  respectively  following  describe  red  envelope  contains  positive  time  segment  envelope  available  time  moment  bob  continue  collecting  collecting  envelope  coin  envelope  respectively  output  minimum  coin  bob  would  get  alice  disturbs  optimally
1238/D __label__dp  __label__strings  __label__binary  search  string  good  letter  string  belongs  least  palindrome  length  greater  palindrome  string  read  backward  forward  example  string  bab  abba  baabbbaab  palindrome  string  abbbaa  bbba  example  good  string  aabbb  letter  belong  palindrome  letter  belong  palindrome  abaa  letter  belong  palindrome  letter  belongs  palindrome  aaaaa  letter  belong  palindrome  given  string  length  consisting  letter  calculate  good  substring  string  contains  length  string  second  contains  string  consisting  letter  print  good  substring  string
1095/A __label__implementation  polycarp  love  cipher  ha  invented  cipher  called  repeating  repeating  cipher  used  string  encrypt  string  polycarp  us  following  algorithm  writes  writes  twice  writes  time  writes  time  example  bab  process  baa  baabbb  encrypted  bab  baabbb  given  string  result  encryption  string  task  decrypt  find  string  contains  length  encrypted  string  second  input  contains  result  encryption  string  contains  lowercase  latin  letter  length  exactly  guaranteed  answer  test  exists  print  string  encryption  equal
1017/A __label__implementation  john  smith  know  son  thomas  smith  best  student  class  even  school  student  school  took  exam  english  german  math  history  table  result  wa  formed  student  ha  unique  thomas  every  student  ha  score  correspond  english  german  math  history  score  student  given  order  increasing  id  table  student  sorted  decreasing  sum  score  student  largest  sum  get  place  student  sum  student  sorted  increasing  id  please  help  john  find  rank  son  contains  single  student  next  contains  grade  student  english  german  math  history  student  equal  print  rank  thomas  smith  thomas
1121/A __label__implementation  __label__sortings  everybody  know  coder  tournament  happen  soon  school  participate  tournament  student  school  participates  total  student  school  tournament  student  put  name  name  school  technogoblet  fire  technogoblet  selects  strongest  student  school  participate  arkady  hacker  want  chosen  selected  technogoblet  unfortunately  strongest  school  arkady  make  new  school  name  replace  name  technogoblet  use  made  name  case  technogoblet  would  select  strongest  student  made  school  know  power  student  school  study  calculate  minimal  school  arkady  ha  make  chosen  would  selected  technogoblet  contains  total  student  school  chosen  second  contains  different  denotes  power  student  bigger  power  stronger  student  third  contains  denotes  school  student  go  least  student  study  school  fourth  contains  different  chosen  output  single  minimal  school  made  arkady  chosen  would  selected  technogoblet
984/B __label__implementation  day  alex  decided  remember  childhood  computer  powerful  lot  people  played  default  game  alex  enjoyed  playing  minesweeper  time  imagined  saved  world  bomb  planted  terrorist  rarely  alex  ha  grown  since  easily  win  difficult  level  quickly  bored  thought  computer  gave  invalid  field  childhood  alex  could  win  need  help  check  minesweeper  field  rectangle  nm  cell  either  empty  contains  digit  bomb  field  valid  cell  digit  cell  exactly  neighboring  cell  bomb  cell  empty  neighboring  cell  bomb  cell  neighbor  common  side  corner  cell  ha  neighboring  cell  contains  size  field  next  description  field  contains  character  cell  empty  bomb  cell  digit  inclusive  print  yes  field  valid  otherwise
407/B __label__dp  __label__implementation  day  little  vasya  found  maze  consisting  room  numbered  initially  vasya  room  get  maze  need  get  maze  organized  follows  room  maze  ha  way  portal  let  consider  room  someone  use  portal  move  room  someone  use  second  portal  move  room  order  get  lost  vasya  decided  act  follows  time  vasya  enters  room  paint  cross  ceiling  initially  vasya  paint  cross  ceiling  room  let  assume  vasya  room  ha  already  painted  cross  ceiling  ceiling  contains  odd  cross  vasya  us  second  portal  lead  room  otherwise  vasya  us  portal  help  vasya  determine  time  need  use  portal  get  room  end  contains  room  second  contains  denotes  room  someone  reach  use  second  portal  room  print  single  portal  move  boy  need  maze  rather  large  print  modulo
1109/A __label__dp  __label__implementation  sasha  like  programming  long  contest  sasha  decided  wa  bit  tired  needed  relax  since  sasha  ordinary  guy  prefers  relax  unusually  leisure  time  sasha  like  upsolve  unsolved  problem  upsolving  useful  therefore  sasha  decided  upsolve  following  problem  array  need  count  funny  pair  check  pair  funny  pair  take  mid  even  mid  mid  mid  pair  funny  word  element  left  half  subarray  equal  element  right  half  note  denotes  bitwise  xor  operation  time  continue  solving  contest  sasha  asked  solve  task  contains  size  array  second  contains  array  print  funny  pair  consider  pair  even
839/A __label__implementation  bran  older  sister  arya  house  bran  like  candy  much  arya  going  give  candy  arya  bran  candy  day  day  arya  find  candy  box  given  many  faced  god  every  day  give  bran  candy  give  candy  day  saved  give  later  task  find  minimum  day  arya  need  give  bran  candy  end  day  formally  need  output  minimum  day  index  end  candy  given  day  indexed  print  give  candy  given  day  contains  second  contains  impossible  arya  give  bran  candy  day  print
639/D __label__greedy  __label__data  structures  __label__sortings  codeforces  wonderful  platform  feature  show  much  someone  contributes  community  every  registered  user  ha  contribution  necessarily  positive  registered  user  ha  contribution  limak  little  polar  bear  new  competitive  programming  even  account  codeforces  able  upvote  existing  blog  comment  assume  every  registered  user  ha  infinitely  many  blog  comment  limak  spend  minute  read  blog  upvote  author  contribution  increased  limak  spend  minute  read  comment  upvote  author  contribution  increased  note  possible  limak  read  blog  faster  comment  limak  like  tie  think  would  awesome  see  tie  least  registered  user  make  happen  going  spend  time  reading  upvoting  exist  value  least  registered  user  contribution  exactly  much  time  doe  limak  need  achieve  goal  contains  registered  user  required  minimum  user  contribution  time  needed  read  upvote  blog  time  needed  read  upvote  comment  respectively  second  contains  denotes  contribution  registered  user  print  minimum  minute  limak  spend  get  tie  least  registered  user
567/B __label__implementation  berland  national  library  ha  recently  built  capital  berland  addition  library  take  collected  work  berland  leader  library  ha  reading  room  today  wa  pilot  launch  automated  reading  room  visitor  accounting  system  scanner  system  installed  entrance  reading  room  record  event  form  reader  entered  room  reader  left  room  every  reader  assigned  registration  registration  procedure  library  unique  thus  system  log  event  form  reader  registration  entered  room  reader  registration  left  room  launch  system  wa  success  functioned  period  time  time  launch  time  shutdown  reading  room  already  visitor  significant  fund  budget  berland  spent  design  installation  system  therefore  citizen  capital  demand  explain  need  system  benefit  implementation  bring  developer  system  need  urgently  come  reason  existence  help  system  developer  find  minimum  possible  capacity  reading  room  visitor  using  log  system  available  contains  positive  record  system  log  next  follow  event  system  journal  order  made  event  wa  written  single  look  registration  visitor  distinct  visitor  always  distinct  registration  guaranteed  log  contradictory  every  visitor  type  consecutive  event  distinct  starting  system  stopping  room  possibly  visitor  print  single  minimum  possible  capacity  reading  room
462/A __label__implementation  __label__brute  force  toastman  came  easy  task  give  appleman  appleman  know  solve  help  given  n  checkerboard  cell  board  ha  either  character  character  true  cell  board  ha  even  adjacent  cell  cell  board  adjacent  share  side  contains  follow  containing  description  checkerboard  contains  character  either  without  space  print  yes  without  quote  depending  answer  problem
814/A __label__implementation  __label__greedy  __label__sortings  __label__constructive  algorithms  year  ago  hitagi  encountered  giant  crab  stole  whole  body  weight  ever  since  tried  avoid  contact  others  fear  secret  might  noticed  get  rid  oddity  recover  weight  special  sequence  needed  hitagi  sequence  ha  broken  long  time  kaiki  provides  opportunity  hitagi  sequence  ha  length  lost  element  denoted  kaiki  provides  another  sequence  whose  length  equal  lost  element  hitagi  replace  element  element  used  exactly  hitagi  know  apart  occurs  total  resulting  sequence  increasing  sequence  ha  power  recover  hitagi  oddity  determine  whether  possible  kaiki  sequence  another  fake  word  detect  whether  possible  replace  used  exactly  resulting  sequence  increasing  input  contains  space  separated  positive  length  sequence  respectively  second  contains  space  separated  hitagi  broken  sequence  exactly  element  third  contains  space  separated  element  fill  hitagi  sequence  guarantee  apart  occurs  total  output  yes  possible  replace  element  make  resulting  sequence  increasing  otherwise
915/E __label__implementation  __label__data  structures  __label__sortings  year  alex  ha  finished  school  year  student  berland  state  university  wa  total  surprise  even  though  study  programming  still  ha  attend  physical  education  lesson  end  term  soon  unfortunately  alex  still  attended  single  lesson  since  alex  want  get  expelled  want  know  working  day  left  end  term  attend  physical  education  lesson  day  bsu  calculating  working  day  complicated  matter  day  left  end  term  numbered  initially  working  day  university  staff  sequentially  publishes  order  another  order  characterised  day  inclusive  become  non  working  day  day  made  working  day  previous  order  day  still  become  non  working  day  day  inclusive  become  working  day  day  made  non  working  day  previous  order  day  still  become  working  day  help  alex  determine  working  day  left  order  contains  second  day  left  end  term  order  respectively  follow  containing  representing  order  ii  print  must  equal  working  day  left  end  term  order  published
718/C __label__math  __label__data  structures  sasha  ha  array  perform  query  might  query  type  increase  segment  value  find  fibonacci  large  find  modulo  problem  define  fibonacci  follows  sasha  talented  boy  managed  perform  query  second  able  write  program  performs  well  sasha  input  contains  element  array  query  respectively  next  contains  follow  query  description  contains  tpi  pi  ii  tpi  corresponds  query  type  tpi  corresponds  query  second  type  guaranteed  input  contains  least  query  second  type  query  second  type  print  answer  modulo
1214/G __label__data  structures  recently  biologist  came  fascinating  conclusion  find  chameleon  mood  consider  chameleon  body  rectangular  table  nm  cell  green  blue  change  color  denote  cell  row  column  let  define  chameleon  good  mood  certificate  cell  corner  subrectangle  table  color  opposite  cell  similar  time  cell  color  similar  formally  group  cell  color  coincide  color  coincide  cell  share  color  wa  found  whenever  cell  present  chameleon  good  mood  vice  versa  cell  chameleon  bad  mood  asked  help  scientist  write  program  determining  mood  chameleon  let  consider  initially  cell  chameleon  green  chameleon  coloring  change  several  time  change  color  contiguous  segment  table  row  replaced  opposite  formally  color  change  defined  change  color  cell  l  replaced  opposite  write  program  report  mood  chameleon  change  additionally  chameleon  mood  good  program  find  cell  good  mood  certificate  input  contains  size  table  change  respectively  following  contains  describing  coloring  change  print  report  chameleon  mood  color  change
1059/D __label__binary  search  __label__geometry  forest  model  plane  live  rare  animal  animal  ha  lair  point  order  protect  decision  build  nature  reserve  ha  made  reserve  must  form  circle  containing  lair  straight  river  flowing  forest  animal  drink  river  therefore  must  least  common  point  reserve  hand  ship  constantly  sail  along  river  reserve  must  common  point  river  convenience  scientist  made  transformation  coordinate  river  defined  check  whether  possible  build  reserve  possible  find  minimum  possible  radius  reserve  contains  animal  next  contains  coordinate  animal  lair  guaranteed  lair  coincide  reserve  built  print  otherwise  print  minimum  radius  answer  accepted  absolute  relative  error  doe  exceed
545/A __label__implementation  little  susie  thanks  older  brother  like  play  car  today  decided  set  tournament  process  tournament  described  next  paragraph  toy  car  pair  collides  result  collision  following  car  turned  car  turned  car  turned  car  good  turned  collision  result  collision  determined  n  matrix  intersection  row  column  describes  result  collision  car  pair  car  never  collided  occurs  main  diagonal  matrix  car  turned  collision  car  turned  collision  car  turned  collision  car  turned  collision  susie  want  find  good  car  quickly  determined  car  good  cope  task  contains  car  next  contains  space  separated  determine  matrix  guaranteed  main  diagonal  appear  anywhere  else  matrix  guaranteed  input  correct  aij  aji  aij  aji  aij  aji  print  good  car  next  print  space  separated  index  increasing  order
367/A __label__implementation  __label__data  structures  sereja  love  sort  algorithm  ha  recently  come  new  algorithm  receives  string  input  let  represent  input  string  algorithm  q  algorithm  consists  step  find  continuous  subsequence  substring  character  string  equal  either  string  zyx  xzy  yxz  subsequence  terminate  algorithm  otherwise  step  rearrange  letter  found  subsequence  randomly  step  sereja  think  algorithm  work  correctly  string  non  probability  algorithm  terminated  algorithm  anyway  work  infinitely  long  string  consider  algorithm  work  incorrectly  string  sereja  want  test  algorithm  ha  string  consisting  character  boy  conduct  series  test  test  sends  substring  slisli  sri  ii  algorithm  input  unfortunately  implementation  algorithm  work  long  sereja  asked  help  test  determine  algorithm  work  correctly  test  contains  non  empty  string  length  exceed  guaranteed  string  contains  character  second  contains  test  next  test  contains  pair  ii  test  print  yes  without  quote  algorithm  work  correctly  corresponding  test  without  quote  otherwise
1198/E __label__graphs  square  grid  size  nn  cell  colored  black  others  colored  white  operation  select  rectangle  color  cell  white  cost  min  min  color  rectangle  size  hw  make  cell  white  minimum  total  cost  square  large  give  compressed  way  set  black  cell  union  rectangle  contains  size  square  grid  black  rectangle  next  contains  coordinate  bottom  left  top  right  corner  cell  black  rectangle  rectangle  intersect  print  single  minimum  total  cost  painting  whole  square  white
450/A __label__implementation  child  jzzhu  school  jzzhu  going  give  candy  let  child  child  want  get  least  candy  jzzhu  asks  child  initially  child  stand  place  jzzhu  start  distribution  candy  follows  algorithm  give  candy  child  child  still  got  enough  candy  child  go  end  else  child  home  repeat  step  empty  consider  child  order  home  jzzhu  want  know  child  last  order  contains  second  contains  output  single  representing  last  child
1075/A __label__math  __label__implementation  chessboard  width  height  row  numbered  bottom  top  column  numbered  left  right  therefore  cell  chessboard  assign  coordinate  row  column  white  king  ha  sitting  cell  coordinate  thousand  year  black  king  ha  sitting  cell  coordinate  would  sat  like  suddenly  beautiful  coin  fell  cell  coordinate  monarch  wanted  get  decided  arrange  race  according  slightly  changed  chess  rule  chess  white  king  make  move  black  king  make  second  white  king  make  third  problem  king  stand  adjacent  cell  even  cell  time  player  reach  coin  win  say  player  reach  cell  coordinate  win  let  recall  king  chess  piece  move  cell  direction  king  cell  move  move  cell  going  outside  field  prohibited  determine  color  king  reach  cell  coordinate  white  king  move  contains  single  length  side  chess  field  second  contains  coordinate  cell  coin  fell  single  print  answer  white  without  quote  white  king  win  black  without  quote  black  king  win
509/B __label__implementation  __label__greedy  __label__constructive  algorithms  pile  pebble  table  pile  contains  pebble  task  paint  pebble  using  given  color  color  pile  difference  pebble  color  pile  pebble  color  pile  word  let  say  pebble  color  pile  following  condition  must  satisfied  necessary  use  color  color  used  pile  considered  input  contains  positive  separated  space  pile  color  respectively  second  contains  positive  denoting  pebble  pile  way  paint  pebble  satisfying  given  condition  output  without  quote
743/C __label__math  __label__constructive  algorithms  __label__brute  force  __label__number  theory  vladik  chloe  decided  determine  better  math  vladik  claimed  positive  represent  fraction  sum  distinct  positive  fraction  form  help  vladik  given  find  distinct  positive  chloe  check  vladik  answer  large  asks  print  exceeding  answer  print  single  contains  single  answer  exists  print  distinct  x  x  otherwise  print
499/B __label__implementation  __label__strings  new  professor  graph  theory  speaks  quickly  come  following  plan  keep  lecture  make  note  know  language  professor  giving  lecture  word  language  consist  lowercase  english  character  language  consists  several  word  language  word  distinct  spelled  differently  moreover  word  language  correspondence  word  language  exists  exactly  word  language  ha  meaning  write  every  word  professor  say  either  language  second  language  course  lecture  write  word  language  word  shorter  case  equal  length  corresponding  word  prefer  word  language  given  text  lecture  professor  going  read  find  lecture  recorded  note  contains  word  professor  lecture  word  language  following  word  contains  string  meaning  word  belongs  language  word  belongs  second  language  word  meaning  guaranteed  word  occurs  language  word  occurs  language  exactly  next  contains  space  separated  string  text  lecture  guaranteed  string  belongs  set  string  string  input  non  empty  consisting  lowercase  english  letter  output  exactly  word  record  lecture  notebook  output  word  lecture  order  input
1140/F __label__data  structures  given  set  dimensional  point  let  denote  extension  result  following  algorithm  create  another  set  dimensional  point  initially  equal  exist  add  impossible  find  let  result  algorithm  problem  given  set  dimensional  point  initially  empty  process  type  query  add  point  remove  point  query  compute  size  contains  query  follow  containing  denoting  query  follows  erase  otherwise  insert  print  equal  size  processing  query
603/C __label__math  kevin  nicky  sun  invented  new  game  called  liege  legendre  game  player  take  turn  modifying  game  state  kevin  moving  initially  game  set  pile  cow  pile  containing  cow  player  turn  player  call  upon  power  sunlight  us  either  remove  single  cow  chosen  non  empty  pile  choose  pile  cow  even  size  replace  pile  cow  player  remove  last  cow  win  given  sequence  help  kevin  nicky  find  winner  given  side  play  optimal  way  input  contains  space  separated  second  contains  describing  initial  state  game  output  name  winning  player  either  kevin  nicky  without  quote
835/F __label__dp  __label__dfs  __label__graphs  __label__trees  kingdom  town  numbered  town  connected  directional  road  numbered  road  connects  town  length  road  town  road  connect  town  let  call  inconvenience  road  maximum  shortest  distance  pair  town  lack  money  wa  decided  close  road  removal  still  possible  reach  town  find  minimum  possible  inconvenience  road  closing  road  contains  town  road  next  road  description  contains  town  connected  road  length  road  road  connects  town  road  connect  town  guaranteed  always  possible  close  road  town  still  reachable  print  single  minimum  possible  inconvenience  road  refusal  road
680/B __label__implementation  __label__constructive  algorithms  city  bearland  numbered  city  arranged  long  row  distance  city  equal  limak  police  officer  life  city  job  catch  criminal  hard  know  city  criminal  though  know  criminal  city  limak  going  use  bcd  bear  criminal  detector  bcd  tell  limak  many  criminal  every  distance  city  limak  catch  criminal  city  sure  must  criminal  know  city  criminal  count  criminal  limak  catch  us  bcd  input  contains  city  index  city  limak  life  second  contains  criminal  city  print  criminal  limak  catch
44/G __label__implementation  __label__data  structures  berland  amusement  park  shooting  gallery  rightly  acknowledged  best  world  every  day  country  best  shooter  master  skill  many  visitor  compete  clay  pigeon  shooting  win  decent  prize  head  park  ha  recently  decided  make  online  version  shooting  gallery  elaboration  process  turned  program  imitates  process  shooting  effectively  needed  formulate  requirement  program  shooting  gallery  wa  formally  described  cartesian  system  coordinate  wa  introduced  axis  ran  gallery  floor  along  along  shooter  located  axis  ran  vertically  along  gallery  wall  positive  direction  axis  matched  shooting  direction  let  call  xoy  plane  shooting  plane  let  assume  bullet  muzzle  point  area  fly  parallel  axis  every  clay  pigeon  represented  rectangle  whose  side  parallel  ax  ha  positive  coordinate  distance  clay  pigeon  shooting  plane  always  different  every  target  bullet  hit  target  go  inner  area  border  rectangle  corresponding  bullet  hit  target  target  fall  vertically  crawl  space  shooting  gallery  shot  target  tough  enough  bullet  pierce  target  way  bullet  hit  target  fly  input  simulator  program  given  arrangement  target  shot  order  appearance  program  determine  target  wa  hit  shot  guessed  write  program  contains  target  subsequent  contains  description  target  target  described  determine  location  space  l  r  l  r  next  contains  determining  shot  shot  described  every  shot  determined  coordinate  bullet  shooting  plane  coordinate  bullet  shot  given  order  firing  interval  shot  large  enough  target  fall  quickly  assume  falling  target  obstruction  shot  following  hit  every  shot  single  print  target  shot  ha  hit  bullet  hit  target  target  numbered  starting  order  given  input  data
1157/G __label__constructive  algorithms  __label__brute  force  given  binary  matrix  size  nm  binary  matrix  matrix  element  either  perform  possibly  operation  matrix  operation  inverse  row  matrix  column  matrix  formally  inverting  row  changing  value  row  opposite  inverting  column  changing  value  column  opposite  task  sort  initial  matrix  sequence  operation  matrix  considered  sorted  array  sorted  non  descending  order  input  contains  row  column  matrix  next  element  element  position  impossible  obtain  sorted  matrix  print
1088/D __label__implementation  __label__constructive  algorithms  interactive  problem  ehab  play  game  laggy  ehab  ha  hidden  laggy  ask  pair  ehab  reply  operation  bitwise  xor  operation  laggy  guess  question  play  game  laggy  interactor  ehab  guaranteed  see  interaction  section  print  answer  print  without  quote  forget  flush  output  printing  answer
757/B __label__math  __label__greedy  __label__number  theory  bash  ha  set  journey  become  greatest  pokemon  master  get  pokemon  went  professor  zulu  lab  since  bash  professor  zulu  favourite  student  zulu  allows  take  many  pokemon  lab  plea  zulu  warns  group  pokemon  strength  tend  fight  gcd  see  note  gcd  definition  bash  smart  doe  want  pokemon  fight  want  maximize  pokemon  take  lab  help  bash  find  maximum  pokemon  take  note  pokemon  fight  input  consists  contains  pokemon  lab  next  contains  space  separated  denotes  strength  pokemon  print  single  maximum  pokemons  bash  take
665/C __label__dp  __label__greedy  __label__strings  zscoder  love  simple  string  string  called  simple  every  pair  adjacent  character  distinct  example  aba  zscoder  simple  whereas  add  simple  zscoder  given  string  want  change  minimum  character  string  becomes  simple  help  task  contains  string  string  given  zscoder  string  consists  lowercase  english  letter  print  simple  string  string  minimal  change  multiple  solution  output
549/H __label__math  __label__binary  search  determinant  matrix  defined  follows  matrix  called  degenerate  determinant  equal  norm  matrix  defined  maximum  absolute  value  element  given  matrix  consider  degenerate  matrix  norm  minimum  possible  determine  contains  element  row  matrix  second  contains  element  second  row  matrix  output  single  real  minimum  possible  value  answer  considered  correct  absolute  relative  error  doe  exceed
1147/A __label__graphs  alice  bob  playing  game  cell  cell  labeled  cell  adjacent  alice  initially  ha  token  cell  bob  try  guess  bob  guess  sequence  cell  order  question  bob  asks  alice  token  currently  cell  alice  answer  either  yes  bob  question  time  process  answering  question  alice  allowed  move  token  current  cell  adjacent  cell  alice  acted  way  wa  able  answer  bob  question  note  alice  even  move  token  answering  question  answering  last  question  alice  choose  move  given  bob  question  would  like  count  scenario  let  alice  answer  bob  question  let  denote  scenario  alice  start  cell  end  cell  scenario  different  contains  cell  question  bob  asked  second  contains  bob  question  print  single  scenario  let  alice  answer  bob  question
607/E __label__binary  search  __label__geometry  genos  ha  given  distinct  cartesian  plane  let  list  intersection  point  single  point  might  appear  multiple  time  list  intersection  multiple  pair  order  list  doe  matter  given  query  point  let  corresponding  list  distance  point  query  point  distance  refers  euclidean  distance  refresher  euclidean  distance  point  genos  given  point  positive  asked  find  sum  smallest  element  duplicate  element  treated  separate  element  genos  intimidated  div  problem  asked  help  input  contains  single  second  contains  encoded  coordinate  query  point  statement  query  point  obtained  word  divide  get  actual  query  point  denotes  length  list  guaranteed  next  contains  parameter  form  guaranteed  print  single  real  sum  smallest  element  answer  considered  correct  absolute  relative  error  doe  exceed
359/C __label__math  __label__number  theory  simon  ha  prime  array  non  negative  simon  love  fraction  much  today  wrote  piece  paper  simon  led  fraction  common  denominator  summed  got  fraction  equal  xa  simon  want  reduce  resulting  fraction  help  find  greatest  common  divisor  gcd  rather  large  print  remainder  dividing  contains  positive  size  array  prime  second  contains  space  separated  n  print  single  answer  problem  modulo
748/D __label__greedy  __label__data  structures  __label__constructive  algorithms  santa  claus  like  palindrome  much  wa  birthday  recently  friend  came  congratulate  presented  string  length  denote  beauty  string  happen  negative  mean  santa  find  string  beautiful  santa  claus  crazy  palindrome  thinking  following  question  maximum  possible  total  beauty  palindrome  obtained  concatenating  possibly  string  ha  present  used  note  string  length  recall  palindrome  string  change  revers  since  empty  string  palindrome  answer  negative  even  negative  santa  obtain  empty  string  contains  positive  divided  space  denoting  santa  friend  length  every  string  presented  respectively  follow  contains  string  beauty  string  consists  lowercase  english  letter  beauty  string  coincide  equal  string  different  beauty  print  required  maximum  possible  beauty
817/C __label__math  __label__dp  __label__brute  force  __label__binary  search  ivan  like  learn  different  thing  especially  interested  really  big  ivan  think  positive  really  big  difference  sum  digit  decimal  representation  le  prove  different  special  property  want  know  rare  rare  fact  need  calculate  quantity  really  big  greater  ivan  tried  calculation  soon  realized  difficult  asked  help  calculation  contains  print  quantity  really  big  greater
980/C __label__greedy  professor  ibrahim  ha  prepared  final  homework  algorithm  class  asked  student  implement  posterization  image  filter  algorithm  tested  array  represents  color  pixel  image  image  black  white  therefore  color  pixel  inclusive  implement  filter  student  required  divide  black  white  color  range  group  consecutive  color  select  color  group  group  key  order  preserve  image  detail  size  group  must  greater  color  belong  exactly  group  finally  student  replace  color  pixel  array  color  assigned  group  key  better  understand  effect  image  basking  turtle  posterization  filter  wa  applied  increasing  right  make  process  checking  final  answer  easier  professor  ibrahim  want  student  divide  group  assign  key  way  produce  lexicographically  smallest  possible  array  input  contains  pixel  image  maximum  size  group  respectively  second  contains  color  pixel  print  space  separated  lexicographically  smallest  possible  array  represents  image  applying  posterization  filter
793/G __label__data  structures  oleg  bank  client  solves  interesting  chess  problem  place  n  chessboard  maximum  rook  beat  course  rook  share  cell  remind  rook  standing  cell  beat  rook  standing  cell  unfortunately  fortunately  oleg  answer  problem  wa  always  task  bored  oleg  soon  decided  make  difficult  removing  cell  board  cell  deleted  oleg  put  rook  rook  beat  deleted  cell  oleg  deletes  cell  group  namely  repeatedly  choose  rectangle  side  parallel  board  side  deletes  cell  inside  rectangle  formally  chooses  rectangle  lower  left  cell  ha  coordinate  upper  right  cell  ha  coordinate  deletes  cell  coordinate  x  guaranteed  cell  deleted  twice  chosen  rectangle  intersect  version  problem  oleg  solve  friend  igor  busy  conference  help  oleg  last  hope  oleg  help  given  size  board  deleted  rectangle  find  maximum  possible  rook  could  placed  board  rook  beat  contains  single  size  board  second  contains  single  deleted  rectangle  next  information  deleted  rectangle  contains  coordinate  lower  left  upper  right  cell  deleted  rectangle  guaranteed  rectangle  intersect  print  maximum  rook  oleg  place  board  rook  beat
776/B __label__constructive  algorithms  __label__number  theory  sherlock  ha  new  girlfriend  unlike  valentine  day  coming  want  gift  jewelry  bought  piece  jewelry  piece  ha  price  equal  price  jewelry  watson  gave  sherlock  challenge  color  jewelry  piece  piece  color  price  piece  prime  divisor  price  piece  watson  asked  minimize  different  color  used  help  sherlock  complete  trivial  task  contains  single  jewelry  piece  output  single  minimum  color  used  color  piece  jewelry  given  constraint
681/C __label__greedy  __label__data  structures  __label__constructive  algorithms  petya  ha  recently  learned  data  structure  named  binary  heap  heap  operating  allows  following  operation  put  given  heap  get  value  minimum  element  heap  extract  minimum  element  heap  thus  moment  time  heap  contains  several  possibly  none  might  equal  order  better  learn  data  structure  petya  took  empty  heap  applied  operation  carefully  wrote  operation  result  event  log  following  format  insert  put  element  value  heap  getmin  value  minimum  element  contained  heap  wa  equal  removemin  minimum  element  wa  extracted  heap  instance  many  operation  correct  wa  least  element  heap  time  getmin  removemin  operation  applied  petya  wa  away  lunch  little  brother  vova  came  room  took  away  page  petya  log  used  make  paper  boat  vova  worried  made  petya  sequence  operation  inconsistent  example  apply  operation  order  written  event  log  result  getmin  operation  might  differ  result  recorded  petya  getmin  removemin  operation  incorrect  heap  empty  moment  applied  vova  want  add  new  operation  record  event  log  order  make  resulting  sequence  operation  correct  result  getmin  operation  equal  result  record  heap  non  empty  getmin  removemin  applied  vova  want  complete  fast  possible  petya  get  back  moment  asks  add  least  possible  operation  record  current  log  note  arbitrary  operation  added  beginning  operation  end  log  input  contains  record  left  petya  journal  following  describe  record  current  log  order  applied  format  described  statement  used  input  exceeding  absolute  value  output  single  minimum  possible  record  modified  sequence  operation
1054/C __label__implementation  __label__constructive  algorithms  child  numbered  kindergarten  kindergarten  teacher  gave  candy  child  child  seated  row  order  left  right  started  eating  candy  child  wa  eating  candy  calculated  child  seating  left  got  candy  child  seating  right  got  candy  respectively  formally  index  index  child  told  kindergarten  teacher  calculated  unfortunately  forgot  many  candy  ha  given  child  asks  help  given  array  determine  whether  could  given  candy  child  child  correctly  calculated  value  definitely  made  mistake  wa  possible  find  way  could  done  single  child  kindergarten  next  separated  space  next  separated  space  way  distribute  candy  child  calculated  correctly  print  without  quote
1183/E __label__dp  __label__implementation  __label__graphs  difference  easy  hard  version  constraint  subsequence  string  derived  another  string  deleting  symbol  without  changing  order  remaining  symbol  character  deleted  required  successively  gap  example  string  abaca  following  string  subsequence  abaca  aba  aaa  empty  string  following  string  subsequence  aabaca  bcaa  given  string  consisting  lowercase  latin  letter  move  take  subsequence  given  string  add  set  set  duplicate  move  cost  length  added  subsequence  price  equal  deleted  character  task  find  minimum  possible  total  cost  obtain  set  size  report  impossible  input  contains  k  length  string  size  set  correspondingly  second  input  contains  string  consisting  lowercase  latin  letter  print  impossible  obtain  set  size  print  otherwise  print  minimum  possible  total  cost
629/D __label__dp  __label__data  structures  know  every  birthday  party  ha  cake  time  babaei  going  prepare  special  birthday  party  cake  simple  cake  cylinder  radius  height  volume  simple  cake  equal  volume  corresponding  cylinder  babaei  ha  simple  cake  going  make  special  cake  placing  cylinder  additional  culinary  restriction  cake  numbered  way  cake  placed  table  cake  moreover  order  impress  friend  babaei  put  cake  top  cake  volume  cake  strictly  greater  volume  cake  babaei  want  prepare  birthday  cake  ha  maximum  possible  total  volume  help  find  value  input  contains  single  simple  cake  babaei  ha  following  contains  giving  radius  height  cake  print  maximum  volume  cake  babaei  make  answer  considered  correct  absolute  relative  error  doe  exceed
357/A __label__implementation  __label__greedy  __label__brute  force  beginning  school  year  berland  state  university  start  city  school  programming  group  beginner  intermediate  coder  child  tested  order  sort  group  according  result  student  got  score  point  know  schoolchildren  got  point  child  got  point  child  got  point  need  set  passing  rate  schoolchildren  got  le  point  beginner  group  get  strictly  least  point  intermediate  group  know  size  group  university  find  room  know  group  ha  le  schoolchildren  small  point  class  need  split  schoolchildren  group  size  group  wa  inclusive  help  university  pick  passing  rate  way  meet  requirement  contains  second  contains  separated  single  space  third  contains  space  separated  least  greater  impossible  pick  passing  rate  way  make  size  resulting  group  least  print  otherwise  print  passing  rate  like  suggest  multiple  possible  answer  print
864/F __label__dfs  __label__graphs  __label__trees  city  berland  pair  connected  directed  road  use  road  move  city  another  road  connect  city  pair  city  road  path  city  city  sequence  city  road  city  city  path  pas  multiple  time  city  except  pas  path  ideal  lexicographically  minimal  path  word  ideal  path  path  minimum  pii  tourist  agency  country  offer  unusual  excursion  excursion  start  city  end  city  pair  help  agency  study  ideal  path  note  possible  ideal  path  possible  due  reason  path  path  every  path  another  path  minimum  pii  agency  would  like  know  ideal  path  city  path  way  triple  find  ideal  path  print  city  path  contains  city  road  excursion  next  contains  xii  denoting  road  go  city  city  road  directional  road  direction  city  next  contains  j  j  sjj  j  print  city  ideal  path  ideal  path  greater  length  path  print  string  without  quote
743/D __label__dp  __label__dfs  __label__graphs  __label__trees  generous  sponsor  olympiad  chloe  vladik  took  part  allowed  participant  choose  prize  christmas  coming  sponsor  decided  decorate  christmas  tree  prize  took  prize  contestant  wrote  unique  gift  characterized  pleasantness  gift  pleasantness  gift  positive  negative  sponsor  placed  gift  top  tree  gift  hung  rope  tied  gift  gift  hung  gift  possibly  sequence  rope  another  gift  formally  gift  formed  rooted  tree  vertex  prize  giving  procedure  go  following  way  participant  come  tree  another  choose  remaining  gift  cut  rope  prize  hang  note  rope  used  hang  prize  chosen  cut  contestant  get  chosen  gift  well  gift  hang  possibly  sequence  rope  another  gift  friend  chloe  vladik  shared  place  olympiad  choose  prize  time  keep  fighting  decided  choose  different  gift  set  gift  hang  sequence  rope  another  gift  intersect  word  gift  hang  gift  chosen  chloe  gift  chosen  vladik  possible  variant  choose  pair  prize  sum  pleasantness  gift  take  cutting  rope  large  possible  print  maximum  sum  pleasantness  vladik  chloe  get  impossible  choose  gift  without  fighting  print  impossible  contains  single  gift  next  contains  pleasantness  gift  next  contains  uii  description  tree  edge  mean  gift  connected  rope  gift  id  description  rope  given  arbirtary  order  hang  hang  guaranteed  gift  hang  gift  possibly  sequence  rope  another  gift  possible  chloe  vladik  choose  prize  without  fighting  print  single  maximum  possible  sum  pleasantness  get  together
1237/F __label__dp  consider  square  grid  row  column  domino  domino  cover  exactly  cell  grid  share  common  side  every  cell  covered  domino  let  call  placement  domino  grid  perfectly  balanced  row  column  contains  pair  cell  covered  different  domino  word  every  row  column  covered  cell  covered  cell  covered  cell  belong  domino  given  perfectly  balanced  placement  domino  grid  find  way  place  extra  domino  grid  keep  placement  perfectly  balanced  output  modulo  contains  w  denoting  dimension  grid  already  placed  domino  row  numbered  column  numbered  next  contains  denoting  row  column  cell  covered  domino  cell  distinct  share  common  side  given  domino  placement  perfectly  balanced  output  way  place  extra  domino  grid  keep  placement  perfectly  balanced  modulo
374/C __label__dp  __label__implementation  __label__dfs  __label__graphs  inna  dima  bought  table  size  n  shop  cell  table  contains  single  letter  inna  love  dima  want  name  many  time  possible  move  table  inna  act  follows  initially  inna  chooses  cell  table  letter  written  inna  move  side  adjacent  table  cell  contains  letter  cell  side  adjacent  table  cell  contains  written  letter  side  adjacent  cell  contains  letter  inna  assumes  ha  gone  sweetheart  name  inna  next  move  going  side  adjacent  table  cell  contains  letter  walk  name  dima  similar  manner  inna  never  skip  letter  letter  always  go  letter  letter  always  go  letter  letter  always  go  letter  letter  always  go  letter  depending  choice  initial  table  cell  inna  name  dima  either  infinite  time  positive  finite  time  name  help  inna  find  maximum  time  name  dima  input  contains  follow  describe  inna  dima  table  contains  character  character  following  character  note  guaranteed  table  contains  least  letter  inna  name  dima  print  single  poor  dima  without  quote  infinite  name  dima  inna  print  poor  inna  without  quote  otherwise  print  single  maximum  time  inna  name  dima
519/D __label__dp  __label__data  structures  preparing  programming  contest  several  year  sport  programming  solving  many  problem  require  calculating  sort  abstract  object  developed  rather  peculiar  taste  like  lowercase  letter  latin  alphabet  ha  assigned  letter  show  much  like  letter  ha  assigned  negative  letter  dislike  like  substring  especially  like  start  end  letter  length  must  exceed  string  trying  find  many  substring  string  interesting  start  end  letter  length  larger  sum  value  letter  assigned  except  last  equal  naturally  quickly  found  substring  interesting  contains  value  assigned  letter  respectively  second  contains  string  length  character  consisting  lating  lowercase  letter  string  need  calculate  answer  print  answer  problem
819/D __label__number  theory  studying  beacon  mister  decided  visit  alien  planet  learned  live  system  flickering  star  moon  moreover  mister  learned  star  shine  exactly  second  problem  star  discovered  scientist  astronomer  numerated  trying  detect  star  try  detect  star  sending  request  record  sky  second  astronomer  send  request  cycle  astronomer  sends  request  exactly  second  previous  request  wa  sent  moment  next  request  sent  moment  astronomer  sends  request  second  later  astronomer  sends  request  moment  mister  know  moment  star  going  shine  obvious  moment  star  shine  determined  time  shine  moment  interval  moreover  interval  split  part  second  length  form  mister  want  know  lucky  astronomer  discovering  star  astronomer  compute  many  segment  form  interval  astronomer  discover  star  shine  star  happens  time  interval  contains  second  contains  print  astronomer  print  time  segment  describer  earlier
364/D __label__math  __label__brute  force  john  doe  offered  sister  jane  doe  find  gcd  set  gcd  positive  set  evenly  divisible  set  evenly  divisible  unfortunately  jane  cope  task  john  offered  find  ghd  subset  ghd  positive  least  half  set  evenly  divisible  least  half  set  evenly  divisible  jane  coped  task  hour  please  try  contains  showing  many  set  second  contains  space  separated  please  note  given  set  equal  please  write  lld  specifier  read  write  bit  preferred  use  specifier  print  single  ghd  set
793/A __label__math  __label__implementation  oleg  bank  client  check  share  price  every  day  share  price  interested  today  observed  second  exactly  price  decrease  ruble  note  second  exactly  price  change  different  second  different  price  change  price  become  negative  oleg  found  process  interesting  asked  igor  financial  analyst  minimum  time  needed  price  become  equal  impossible  igor  busy  right  asked  help  oleg  answer  question  contains  share  price  amount  ruble  price  decrease  second  second  contains  initial  price  print  containing  minimum  second  needed  price  become  equal  impossible
436/F __label__dp  __label__data  structures  __label__brute  force  modern  mobile  application  divided  free  paid  even  single  application  developer  often  release  version  paid  version  without  ad  free  version  ad  suppose  paid  version  app  cost  ruble  free  version  application  contains  banner  user  described  ruble  user  willing  pay  paid  version  application  banner  willing  tolerate  free  version  behavior  member  shall  considered  strictly  deterministic  user  value  least  us  free  version  otherwise  value  least  buy  paid  version  without  advertising  otherwise  user  simply  doe  use  application  user  free  version  brings  profit  c  ruble  user  paid  version  brings  profit  ruble  task  help  application  developer  select  optimal  parameter  namely  knowing  characteristic  user  value  max  need  determine  maximum  profit  application  corresponding  parameter  contains  user  profit  single  banner  next  contains  characteristic  user  print  max  print  pay  maximum  gained  profit  corresponding  optimal  app  cost  multiple  optimal  solution  print
992/E __label__data  structures  __label__binary  search  nastya  like  reading  even  spends  whole  day  library  sometimes  today  found  chronicle  byteland  library  stated  lived  shaman  long  time  ago  known  every  moment  wa  exactly  shaman  byteland  shaman  total  enumerated  order  lived  shaman  magic  power  expressed  chronicle  includes  list  power  shaman  shaman  king  shaman  gathered  power  predecessor  power  exactly  sum  power  previous  shaman  nastya  interested  whether  wa  least  king  shaman  byteland  unfortunately  many  power  unreadable  list  nastya  following  initially  supposes  power  shaman  change  power  shaman  time  shaman  differ  want  check  least  king  shaman  list  yes  want  know  index  king  shaman  unfortunately  list  large  nastya  want  help  contains  second  contains  magic  power  shaman  follow  contains  mean  new  power  shaman  print  change  shaman  king  otherwise  single  index  king  shaman  change
425/C __label__dp  __label__data  structures  sereja  ha  sequence  consisting  day  sereja  got  bored  decided  play  rule  game  wa  simple  sereja  make  several  move  move  perform  following  action  choose  several  least  element  sequence  non  empty  prefix  choose  several  least  element  sequence  non  empty  prefix  element  sequence  maximum  index  chosen  must  equal  element  sequence  maximum  index  chosen  remove  chosen  element  sequence  remove  element  sequence  action  worth  energy  unit  add  dollar  sereja  electronic  account  second  action  worth  energy  unit  equal  element  sereja  removed  sequence  performing  action  sereja  performed  second  action  get  money  earned  electronic  account  game  initially  sereja  ha  energy  unit  money  account  maximum  money  sereja  get  note  amount  seraja  energy  negative  time  moment  contains  second  contains  third  contains  print  single  maximum  money  dollar  sereja  get
479/E __label__dp  imagine  building  ha  exactly  floor  move  floor  lift  let  floor  bottom  top  floor  bored  want  take  lift  floor  ha  secret  lab  entry  forbidden  already  mood  decide  make  consecutive  trip  lift  let  suppose  moment  floor  initially  floor  another  trip  floor  choose  floor  lift  travel  floor  visit  floor  secret  lab  decided  distance  current  floor  chosen  must  strictly  le  distance  current  floor  floor  secret  lab  formally  mean  following  inequation  must  fulfill  lift  successfully  transport  floor  write  notepad  task  find  distinct  sequence  could  written  notebook  result  trip  lift  sought  trip  rather  large  find  remainder  dividing  input  contains  space  separated  print  single  remainder  dividing  sought  sequence
798/B __label__dp  __label__brute  force  __label__strings  mike  ha  string  consisting  lowercase  english  letter  move  choose  string  erase  character  append  end  string  example  ha  string  coolmike  move  transform  string  oolmikec  mike  asks  minimal  move  need  order  make  string  equal  contains  string  followed  string  corresponding  string  length  string  equal  length  string  positive  exceed  print  minimal  move  mike  need  order  make  string  equal  print  solution
220/A __label__implementation  __label__sortings  little  elephant  ha  got  problem  somebody  ha  touching  sorted  non  decreasing  array  length  possibly  swapped  element  array  little  elephant  want  call  police  understands  could  accidentally  changed  array  think  could  accidentally  changed  array  array  sorted  operation  swapping  element  necessarily  adjacent  little  elephant  could  accidentally  swapped  element  help  little  elephant  determine  could  accidentally  changed  array  sorted  non  decreasing  contains  single  size  array  next  contains  positive  separated  single  space  exceeding  array  note  element  array  necessarily  distinct  single  print  yes  without  quote  little  elephant  could  accidentally  changed  array  without  quote  otherwise
779/A __label__math  __label__constructive  algorithms  berland  high  school  student  characterized  academic  performance  value  high  school  xff  group  pupil  group  group  group  consists  exactly  student  academic  performance  student  known  value  school  director  want  redistribute  student  group  group  ha  student  whose  academic  performance  equal  student  whose  academic  performance  word  purpose  school  director  change  composition  group  value  academic  performance  student  group  equal  achieve  plan  produce  series  exchange  student  group  single  exchange  director  selects  student  class  student  class  change  group  print  least  exchange  order  achieve  desired  equal  student  academic  performance  input  contains  student  group  second  contains  sequence  academic  performance  student  group  third  contains  sequence  academic  performance  student  group  print  required  minimum  exchange  desired  distribution  student  obtained
1033/B __label__math  __label__number  theory  alice  ha  lovely  piece  cloth  ha  shape  square  side  length  centimeter  bob  want  piece  cloth  would  prefer  square  side  length  centimeter  alice  wanted  make  bob  happy  cut  needed  square  corner  piece  gave  bob  left  ugly  shaped  cloth  see  picture  alice  would  like  know  whether  area  cloth  expressed  square  centimeter  prime  could  help  determine  contains  test  case  next  describes  test  case  contains  side  length  alice  square  side  length  square  bob  want  print  answer  test  case  print  yes  without  quote  area  remaining  piece  cloth  prime  otherwise  print
934/A __label__brute  force  nian  monster  life  deep  ocean  year  show  land  devouring  livestock  even  people  order  keep  monster  away  people  fill  village  red  colour  light  cracking  noise  frighten  monster  coming  little  tommy  ha  lantern  big  banban  ha  lantern  tommy  lantern  brightness  banban  brightness  respectively  tommy  intends  hide  lantern  banban  pick  tommy  non  hidden  lantern  lantern  form  pair  pair  brightness  product  brightness  lantern  tommy  want  make  product  small  possible  banban  try  make  large  possible  asked  find  brightness  chosen  pair  choose  optimally  contains  space  separated  second  contains  space  separated  third  contains  space  separated  range  print  single  brightness  chosen  pair
644/A __label__constructive  algorithms  parliamentarian  berland  numbered  happened  parliamentarian  odd  index  democrat  parliamentarian  even  index  republican  new  parliament  assembly  hall  rectangle  consisting  chair  row  chair  chair  considered  neighbouring  share  side  example  chair  row  neighbouring  chair  row  chair  row  thus  chair  neighbour  general  except  chair  border  hall  know  parliamentarian  political  party  democrat  republican  seat  nearby  spent  time  discussing  internal  party  issue  write  program  given  parliamentarian  size  hall  determine  way  find  seat  parliamentarian  member  party  share  neighbouring  seat  input  contains  parliamentarian  row  assembly  hall  seat  row  respectively  way  assigns  seat  parliamentarian  proper  way  print
374/E __label__implementation  __label__data  structures  __label__binary  search  __label__geometry  inna  dima  sereja  room  together  cold  outside  sereja  suggested  play  board  game  called  baby  baby  playing  board  infinite  plane  containing  blue  baby  red  baby  segment  grows  time  time  moment  blue  baby  blue  segment  end  point  similarly  time  red  baby  red  segment  end  point  plane  initially  time  baby  point  plane  goal  game  find  moment  time  plane  contains  rectangle  non  area  side  fully  covered  baby  side  covered  multiple  baby  formally  point  side  rectangle  covered  least  baby  color  must  assume  baby  closed  segment  endpoint  given  position  baby  help  inna  dima  find  required  moment  time  input  contains  next  coordinate  blue  baby  contains  baby  coordinate  next  coordinate  red  baby  similar  form  coordinate  input  exceed  absolute  value  note  baby  stand  distinct  point  single  print  single  answer  problem
1106/D __label__greedy  __label__data  structures  __label__dfs  __label__graphs  lunar  new  year  approaching  bob  decides  take  wander  nearby  park  park  represented  connected  graph  node  bidirectional  edge  initially  bob  node  record  notebook  wander  node  another  bidirectional  edge  whenever  visit  node  recorded  notebook  record  visit  node  least  stop  wandering  thus  finally  permutation  node  recorded  wandering  boring  thing  solving  problem  fascinating  bob  want  know  lexicographically  smallest  sequence  node  record  wandering  bob  think  problem  trivial  want  solve  sequence  lexicographically  smaller  sequence  following  hold  prefix  impossible  problem  considered  sequence  length  position  differ  sequence  ha  smaller  element  corresponding  element  contains  positive  denoting  node  edge  respectively  following  describe  bidirectional  edge  graph  contains  representing  node  edge  connects  note  graph  multiple  edge  connecting  node  self  loop  guaranteed  graph  connected  output  containing  lexicographically  smallest  sequence  bob  record
1216/F __label__dp  __label__greedy  __label__data  structures  work  system  administrator  dormitory  ha  room  another  along  straight  hallway  room  numbered  connect  room  internet  connect  room  internet  directly  cost  connection  room  coin  room  spot  router  cost  placing  router  room  coin  place  router  room  doe  spot  place  router  room  connect  room  max  min  inclusive  internet  range  router  value  router  calculate  minimum  total  cost  connecting  room  internet  assume  room  spot  router  greater  router  input  contains  room  range  router  second  input  contains  string  length  consisting  character  string  equal  spot  router  room  character  string  equal  place  router  room  print  minimum  total  cost  connecting  room  internet
1043/B __label__implementation  bajtek  known  unusual  gift  recently  got  array  unfortunately  huge  array  party  extraordinary  friend  realized  lost  hour  spent  searching  new  toy  bajtek  found  array  producer  website  another  array  length  formal  description  say  modk  pmodq  denotes  remainder  division  example  mod  mod  mod  mod  mod  boy  hope  able  restore  knowing  help  find  possible  value  possible  length  lost  array  contains  exactly  length  array  excluding  element  second  contains  note  always  given  input  output  denoting  correct  length  lost  array
750/C __label__math  __label__greedy  __label__binary  search  every  codeforces  user  ha  rating  described  possibly  negative  user  divided  division  division  user  rating  higher  rating  lower  belong  second  division  every  contest  according  performance  rating  change  value  possibly  negative  limak  competed  contest  year  remembers  contest  competed  division  belonged  division  start  contest  rating  changed  contest  note  negative  denotes  loss  rating  maximum  possible  rating  limak  right  contest  rating  arbitrarily  big  print  infinity  scenario  matching  given  information  print  impossible  input  contains  single  next  contains  describing  limak  rating  change  contest  division  contest  contest  limak  current  rating  arbitrarily  big  print  infinity  without  quote  situation  impossible  print  impossible  without  quote  otherwise  print  denoting  maximum  possible  value  limak  current  rating  rating  contest
899/C __label__math  __label__graphs  __label__constructive  algorithms  petya  ha  want  split  non  empty  group  way  absolute  difference  sum  group  small  possible  help  petya  split  exactly  group  contains  single  petya  ha  print  smallest  possible  absolute  difference
1237/A __label__math  __label__implementation  another  codeforces  round  ha  finished  ha  gathered  participant  according  result  expected  rating  change  participant  rating  change  perfectly  balanced  sum  equal  unfortunately  due  minor  technical  glitch  round  declared  semi  rated  mean  rating  change  must  divided  condition  though  participant  modified  rating  change  must  close  possible  mean  either  particular  even  denotes  rounding  largest  greater  denotes  rounding  smallest  smaller  modified  rating  change  must  perfectly  balanced  sum  must  equal  help  contains  single  denoting  participant  next  contains  single  denoting  rating  change  participant  sum  equal  output  denoting  modified  rating  change  participant  order  input
688/A __label__implementation  arya  ha  opponent  school  day  fight  opponent  present  day  opponent  fighting  plan  guarantee  win  implementing  plan  requires  presence  mean  day  least  arya  opponent  absent  school  arya  beat  present  opponent  otherwise  opponent  present  beat  arya  opponent  arya  know  schedule  whether  going  present  particular  day  tell  maximum  consecutive  day  beat  present  opponent  note  day  opponent  present  arya  still  considers  beat  present  opponent  input  contains  opponent  day  respectively  following  contains  string  length  consisting  character  character  string  opponent  going  absent  day  print  maximum  consecutive  day  arya  beat  present  opponent
490/B __label__implementation  lunch  break  berland  state  university  student  lined  food  court  turned  food  court  ha  lunch  break  temporarily  stopped  working  standing  queue  served  boring  student  wrote  student  student  stand  directly  front  student  stand  directly  behind  stand  student  last  writes  instead  berland  state  university  student  id  numerated  student  went  business  returned  found  restoring  queue  easy  task  help  student  restore  state  queue  student  neighbor  queue  contains  student  queue  follow  contains  pair  person  front  student  person  behind  student  given  arbitrary  order  value  given  instead  neighbor  neighbor  exist  student  distinct  guaranteed  record  correspond  queue  student  stand  order  print  sequence  sequence  student  order  queue  student  last
1159/A __label__math  __label__implementation  vasya  ha  pile  consists  stone  time  either  took  stone  pile  added  stone  pile  pile  wa  non  empty  operation  taking  stone  pile  given  operation  vasya  ha  made  find  minimal  possible  stone  pile  making  operation  contains  positive  operation  made  vasya  next  contains  string  consisting  symbol  equal  without  quote  without  quote  vasya  took  stone  operation  equal  without  quote  added  equal  without  quote  print  minimal  possible  stone  pile  operation
946/C __label__greedy  __label__strings  given  string  consisting  small  english  letter  move  replace  character  string  next  character  alphabetical  order  replaced  replaced  etc  replace  letter  letter  target  make  move  necessary  minimal  get  string  abcdefghijklmnopqrstuvwxyz  english  alphabet  subsequence  subsequence  string  string  obtained  deleting  character  position  need  print  string  obtained  given  string  english  alphabet  subsequence  say  impossible  input  consisting  string  consisting  small  english  letter  get  string  obtained  given  string  english  alphabet  subsequence  print  otherwise  print  without  quote
891/B __label__greedy  __label__constructive  algorithms  given  array  distinct  construct  array  permuting  every  non  empty  subset  index  sum  element  position  different  contains  size  array  second  contains  space  separated  distinct  element  array  array  print
1251/D __label__greedy  __label__sortings  __label__binary  search  head  large  enterprise  people  work  odd  divisible  distribute  salary  employee  initially  dollar  employee  get  salary  dollar  distribute  salary  way  median  salary  maximum  possible  find  median  sequence  odd  length  sort  take  element  middle  position  sorting  example  median  sequence  median  sequence  guaranteed  enough  money  pay  minimum  salary  note  spend  dollar  salary  answer  test  case  contains  test  case  query  contains  employee  amount  money  value  divisible  following  query  information  employee  contains  guaranteed  sum  query  doe  exceed  guaranteed  enough  money  pay  minimum  salary  employee  test  case  print  maximum  median  salary  obtain
437/C __label__greedy  __label__sortings  __label__graphs  child  day  child  got  toy  delayyy  present  child  naughty  wait  destroy  toy  toy  consists  part  rope  rope  link  part  every  pair  part  linked  rope  split  toy  child  must  remove  part  child  remove  single  part  time  remove  consume  energy  let  define  energy  value  part  child  spend  vf  f  fk  energy  removing  part  part  directly  connected  removed  help  child  find  minimum  total  energy  spend  remove  part  contains  second  contains  followed  contains  representing  rope  part  part  xii  consider  part  numbered  output  minimum  total  energy  child  spend  remove  part  toy
1250/E __label__implementation  __label__graphs  coronation  king  berl  xxii  soon  whole  royal  family  including  daughter  berl  xxii  present  king  ha  ordered  jeweler  assemble  beautiful  necklace  princess  could  wear  exactly  necklace  ceremony  necklace  finished  necklace  consists  gem  attached  gold  chain  type  gem  used  necklace  emerald  sapphire  necklace  represented  sequence  gem  listed  left  right  gem  either  emerald  sapphire  formally  necklace  represented  binary  string  length  character  gem  necklace  emerald  otherwise  gem  sapphire  looking  necklace  king  afraid  daughter  envy  daughter  necklace  want  necklace  look  similar  necklace  considered  similar  least  position  necklace  type  gem  example  necklace  represented  sequence  necklace  represented  sequence  position  necklace  type  gem  gem  emerald  second  gem  sapphire  fifth  gem  emerald  necklace  similar  similar  king  think  daughter  notice  necklace  similar  conflict  obviously  want  conflict  coronation  berl  xxii  want  tell  daughter  wear  necklace  backward  necklace  worn  backward  sequence  gem  necklace  reversed  example  necklace  represented  sequence  worn  backward  would  represented  sequence  king  want  find  minimum  necklace  worn  backward  coronation  conflict  berl  xxii  busy  preparation  coronation  ordered  resolve  issue  help  give  truly  royal  reward  contains  test  case  test  case  follow  test  case  begin  containing  necklace  gem  necklace  minimum  position  necklace  type  gem  order  look  similar  respectively  follow  contains  binary  string  length  representing  necklace  test  case  print  answer  follows
552/E __label__dp  __label__implementation  __label__greedy  __label__brute  force  __label__strings  vanya  math  homework  ha  expression  form  digit  sign  represents  either  plus  multiplication  sign  vanya  need  add  pair  bracket  expression  maximize  value  resulting  expression  contains  expression  odd  odd  position  digit  even  position  sign  sign  exceed  print  maximum  possible  value  expression
382/D __label__implementation  __label__dfs  __label__graphs  __label__trees  ksenia  ha  chessboard  size  n  cell  chessboard  contains  character  cell  character  blocked  know  chessboard  cell  touch  border  blocked  ksenia  playing  pawn  chessboard  initially  put  pawn  chessboard  cell  chessboard  pawn  cell  blocked  case  pawn  stand  cell  game  begin  ksenia  put  pawn  board  move  ksenia  move  pawn  side  adjacent  cell  direction  arrow  painted  cell  corresponding  pawn  sits  pawn  sits  doe  move  assume  ksenia  move  pawn  simultaneously  see  second  test  case  course  ksenia  play  point  calculate  point  per  game  simply  let  count  many  movement  pawn  made  many  movement  second  pawn  made  sum  resulting  score  game  ksenia  wonder  maximum  point  earn  place  pawn  optimally  well  early  game  help  find  contains  size  board  following  contains  character  board  description  character  character  guaranteed  border  cell  table  blocked  cell  character  ksenia  get  infinitely  many  point  print  otherwise  print  maximum  point  get
442/E __label__geometry  gena  like  geometry  asks  solve  problem  rectangle  side  parallel  coordinate  ax  contains  dot  let  consider  point  plane  let  count  distance  point  given  point  let  sort  non  decreasing  order  call  beauty  point  second  element  array  mimimum  element  array  beaty  equal  minimum  find  maximum  beauty  point  inside  given  rectangle  contains  length  rectangle  side  point  next  coordinate  point  possible  coincident  point  print  single  maximum  beauty  point  absolute  relative  error
803/C __label__math  __label__greedy  __label__constructive  algorithms  given  positive  create  strictly  increasing  sequence  positive  sum  equal  greatest  common  divisor  maximal  greatest  common  divisor  sequence  maximum  every  element  sequence  divisible  possible  sequence  output  consists  answer  exists  output  resulting  sequence  otherwise  output  multiple  answer  print
1008/B __label__greedy  __label__sortings  rectangle  row  either  turn  rectangle  degree  leave  turn  rectangle  width  height  height  width  notice  turn  rectangle  turn  none  change  order  rectangle  find  way  make  rectangle  order  non  ascending  height  word  turn  height  every  rectangle  ha  greater  height  previous  rectangle  contains  single  rectangle  next  contains  width  height  rectangle  print  yes  without  quote  way  make  rectangle  order  non  ascending  height  otherwise  print
605/B __label__data  structures  __label__graphs  __label__constructive  algorithms  student  vladislav  came  programming  exam  completely  unprepared  usual  got  question  strange  algorithm  graph  something  definitely  never  useful  real  life  asked  girl  sitting  next  lend  cheat  paper  question  found  following  definition  minimum  spanning  tree  graph  tree  contains  vertex  original  graph  sum  weight  edge  minimum  possible  tree  vladislav  drew  graph  vertex  edge  containing  loop  multiple  edge  found  minimum  spanning  tree  wrote  edge  weight  whether  included  found  tree  unfortunately  piece  paper  graph  wa  painted  gone  teacher  getting  angry  demand  see  original  graph  help  vladislav  come  graph  information  minimum  spanning  tree  remains  correct  input  contains  vertex  edge  graph  next  describes  edge  graph  consists  j  weight  edge  second  equal  edge  wa  included  minimum  spanning  tree  found  vladislav  wa  guaranteed  exactly  equal  exactly  equal  vladislav  ha  made  mistake  graph  exist  print
526/G __label__greedy  __label__trees  spider  nom  old  enemy  love  eating  candy  much  doe  keep  trying  keep  monster  away  favorite  candy  came  evil  plan  trap  nom  let  consider  rope  structure  consisting  node  rope  connecting  node  structure  connected  thus  rope  node  form  tree  rope  formed  structure  associated  length  candy  tied  node  structure  nom  really  want  eat  candy  spider  trying  stop  decided  entangle  candy  part  structure  web  thus  attaching  candy  large  possible  part  rope  structure  spider  use  web  cover  rope  path  arbitrary  node  thus  spider  cover  set  rope  union  path  given  tree  path  arbitrarily  intersect  spider  want  following  condition  hold  node  containing  candy  adjacent  least  rope  covered  web  rope  covered  web  form  connected  structure  idea  covering  web  rope  connected  candy  total  length  rope  covered  web  large  possible  spider  decided  node  structure  tie  candy  many  spider  cover  structure  web  asked  help  help  calculate  optimal  plan  multiple  value  contains  node  structure  question  spider  want  ask  next  determine  rope  structure  contains  uii  showing  rope  length  node  next  describe  spider  question  want  answer  question  online  encoded  message  special  manner  next  contains  question  spider  calculate  value  spider  question  need  use  following  formula  ansi  total  length  rope  covered  web  answer  question  following  inequality  hold  question  spider  print  separate  single  ansi  total  length  rope  covered  web  optimal  plan
908/A __label__implementation  __label__brute  force  friend  ha  card  know  card  ha  lowercase  english  letter  side  digit  currently  friend  ha  laid  card  table  side  card  visible  would  like  know  following  statement  true  card  friend  owns  card  ha  vowel  side  ha  even  digit  side  specifically  vowel  even  digit  example  card  ha  side  side  statement  true  statement  true  example  card  card  since  letter  vowel  statement  false  example  card  interested  statement  true  card  particular  card  ha  vowel  statement  true  determine  flip  card  reveal  side  would  like  know  minimum  card  need  flip  worst  case  order  verify  statement  true  input  string  denoting  side  card  see  table  currently  character  either  lowercase  english  letter  digit  print  single  minimum  card  must  turn  verify  claim
946/A __label__greedy  given  sequence  consisting  partition  sequence  sequence  way  every  element  belongs  exactly  sequence  let  sum  element  belonging  sum  element  belonging  sequence  empty  sum  maximum  possible  value  contains  element  second  contains  element  sequence  print  maximum  possible  value  sum  element  sequence  sum  element  sequence
659/F __label__greedy  __label__sortings  __label__dfs  __label__graphs  farmer  polycarp  ha  warehouse  hay  represented  n  rectangular  table  row  column  table  cell  table  contains  haystack  height  meter  hay  located  row  column  equal  coincides  cubic  meter  hay  haystack  cell  size  base  polycarp  ha  decided  tidy  warehouse  removing  arbitrary  amount  cubic  meter  hay  top  stack  take  different  amount  hay  different  haystack  besides  allowed  touch  stack  contrary  remove  completely  stack  completely  removed  corresponding  cell  becomes  empty  longer  contains  stack  polycarp  want  following  requirement  hold  reorganization  total  amount  hay  remaining  warehouse  must  equal  height  stack  cell  containing  non  amount  hay  height  least  stack  must  remain  wa  stability  remaining  structure  stack  form  connected  region  stack  considered  adjacent  share  side  table  area  called  connected  stack  area  get  stack  area  moving  adjacent  stack  case  adjacent  stack  necessarily  belong  area  help  polycarp  complete  challenging  task  inform  impossible  input  contains  row  column  rectangular  table  heap  hay  lain  required  total  cubic  meter  hay  reorganization  follow  containing  positive  equal  cubic  meter  hay  making  hay  stack  row  column  table  print  yes  without  quote  polycarpus  perform  reorganisation  without  quote  otherwise  answer  yes  without  quote  next  print  height  remaining  hay  stack  remaining  non  value  equal  represent  connected  area  least  value  altered
566/G __label__geometry  kitten  max  min  play  pair  non  negative  guess  name  kitten  max  love  maximize  kitten  min  love  minimize  part  game  min  want  make  sure  became  negative  time  kitten  max  try  prevent  kitten  ha  set  pair  available  kitten  max  ha  pair  non  negative  kitten  min  ha  pair  non  negative  kitten  max  make  move  take  available  pair  add  kitten  min  take  available  pair  subtract  kitten  use  pair  multiple  time  distinct  move  max  move  kitten  min  winning  moment  negative  simultaneously  otherwise  winner  game  kitten  max  determine  kitten  win  play  optimally  contains  pair  available  max  min  correspondingly  second  contains  initial  value  kitten  playing  next  pair  pair  available  max  last  pair  j  j  pair  available  min  print  max  without  quote  kitten  max  win  min  without  quote  kitten  min  win
992/C __label__math  nastya  received  gift  new  year  magic  wardrobe  magic  end  month  dress  double  dress  becomes  twice  large  beginning  month  unfortunately  right  doubling  wardrobe  eats  dress  probability  happens  every  month  except  last  year  nastya  owns  dress  became  interested  expected  dress  year  nastya  life  byteland  year  last  month  nastya  really  busy  want  solve  problem  programmer  find  answer  modulo  easy  see  always  contains  initial  dress  month  year  byteland  print  single  expected  dress  nastya  year  later  modulo
963/A __label__math  __label__number  theory  given  moreover  given  sequence  value  known  sequence  periodic  divide  word  k  satisfied  find  non  negative  remainder  division  note  modulo  unusual  contains  second  contains  sequence  length  consisting  character  character  indexed  otherwise  note  member  sequence  given  rest  obtained  using  periodicity  property  output  single  value  given  expression  modulo
1056/E __label__data  structures  __label__brute  force  __label__strings  arkady  friend  work  huge  radio  telescope  decade  ago  telescope  ha  sent  signal  towards  faraway  galaxy  recently  received  response  believe  response  alien  scientist  want  check  signal  similar  original  signal  wa  sequence  everyone  know  binary  code  universe  wide  language  returned  signal  doe  look  easy  scientist  give  represented  sequence  english  letter  say  similar  replace  string  string  obtain  string  must  different  non  empty  please  help  arkady  friend  find  possible  replacement  pair  string  transform  contains  string  consisting  original  signal  second  contains  string  consisting  lowercase  english  letter  received  signal  guaranteed  string  contains  least  least  print  single  pair  string  transform
1213/D2 __label__math  __label__sortings  __label__brute  force  difference  easy  hard  version  element  array  given  array  consisting  move  choose  divide  rounding  word  move  set  perform  operation  possibly  time  task  calculate  minimum  possible  operation  required  obtain  least  equal  array  forget  possible  operation  thus  answer  always  exists  input  contains  element  array  equal  required  second  input  contains  element  print  minimum  possible  operation  required  obtain  least  equal  array
841/A __label__implementation  __label__brute  force  day  kefa  found  baloons  convenience  denote  color  baloon  lowercase  letter  latin  alphabet  kefa  ha  friend  friend  upset  get  baloons  color  kefa  want  give  baloons  friend  help  kefa  find  give  baloons  friens  upset  print  yes  otherwise  note  kefa  friend  upset  get  baloons  contains  baloons  friend  next  contains  string  color  baloons  answer  task  yes  single
1083/E __label__dp  __label__data  structures  __label__geometry  fair  nut  got  stacked  planar  world  solve  task  get  given  rectangle  vertex  rectangle  given  choose  area  union  minus  sum  chosen  maximum  guaranteed  nested  rectangle  nut  ha  idea  find  answer  asked  help  contains  rectangle  next  contains  guaranteed  nested  rectangle  single  print  answer  problem  maximum  value  achieve
1141/F2 __label__greedy  __label__data  structures  problem  given  edition  differ  exclusively  constraint  given  array  block  sequence  contiguous  consecutive  element  thus  block  defined  pair  index  find  set  block  intersect  disjoint  formally  pair  block  either  block  sum  element  formally  block  set  maximum  formally  doe  exist  set  block  satisfying  requirement  picture  corresponds  example  blue  box  illustrate  block  write  program  find  set  block  contains  length  given  array  second  contains  sequence  element  print  following  block  per  print  pair  index  bound  block  print  block  order  multiple  answer  print
567/A __label__implementation  __label__greedy  city  lineland  located  coordinate  axis  thus  city  associated  position  coordinate  axis  city  located  single  point  lineland  resident  love  send  letter  person  send  letter  recipient  life  another  city  live  city  easier  drop  strange  true  cost  sending  letter  exactly  equal  distance  sender  city  recipient  city  city  calculate  value  mini  maxi  mini  minimum  cost  sending  letter  city  city  maxi  maximum  cost  sending  letter  city  city  input  contains  city  lineland  second  contains  sequence  distinct  coordinate  city  distinct  follow  ascending  order  print  must  mini  axi  separated  space  mini  minimum  cost  sending  letter  city  maxi  maximum  cost  sending  letter  city
372/E __label__geometry  set  point  plane  set  origin  distinct  point  set  triangle  oab  ha  strictly  positive  area  consider  set  pair  point  p  k  k  call  set  good  k  distinct  element  pair  p  p  j  j  circumcircles  triangle  op  p  j  op  ip  j  single  common  point  circumcircle  triangle  op  p  j  op  ip  j  single  common  point  calculate  good  set  pair  modulo  contains  single  point  next  contains  represent  point  point  coincide  print  single  answer  problem  modulo
599/E __label__dp  __label__trees  rooted  tree  connected  graph  without  simple  cycle  vertex  selected  root  problem  vertex  always  serve  root  lowest  common  ancestor  vertex  farthest  root  vertex  lie  path  root  path  root  denote  lca  sandy  rooted  tree  consisting  vertex  used  store  nut  unfortunately  underwater  storm  broke  tree  remember  edge  managed  restore  edge  initial  tree  triple  supposes  lca  help  sandy  count  tree  size  vertex  root  match  information  remembered  made  mess  tree  print  rooted  tree  considered  distinct  exists  edge  occur  occur  input  contains  vertex  edge  lca  triple  remembered  sandy  respectively  next  contains  ii  vertex  connected  edge  guaranteed  set  edge  subset  edge  tree  last  triplet  triple  define  lca  guaranteed  exists  tree  satisfy  given  lca  condition  print  single  tree  size  satisfy  condition
434/E __label__sortings  __label__trees  __label__binary  search  day  okazaki  tomoya  ha  bought  tree  furukawa  nagisa  birthday  tree  strange  every  node  tree  ha  value  value  node  furukawa  nagisa  okazaki  tomoya  want  play  game  tree  let  path  node  node  write  sequence  value  node  path  denote  sequence  define  value  sequence  follows  suppose  sequence  length  sequence  define  l  path  satisfies  path  belongs  furukawa  nagisa  otherwise  belongs  okazaki  tomoya  calculating  ha  path  easy  want  play  something  difficult  furukawa  nagisa  think  path  belong  path  belongs  well  think  path  belong  okazaki  tomoya  path  belongs  okazaki  tomoya  well  fact  conclusion  always  right  furukawa  nagisa  want  know  many  triplet  correct  conclusion  task  contains  node  tree  guaranteed  prime  second  contains  follow  contains  denoting  edge  tree  node  tree  numbered  output  single  triplet  correct  furukawa  nagisa  conclusion
420/A __label__implementation  recently  start  student  state  university  city  gained  incredible  popularity  time  start  new  company  call  market  analyst  came  smart  plan  name  company  identical  reflection  mirror  word  write  name  company  piece  paper  horizontally  left  right  large  english  letter  put  piece  paper  front  mirror  reflection  name  mirror  perfectly  match  written  piece  paper  many  suggestion  company  name  coming  mirror  piece  paper  name  sensible  founder  company  decided  automatize  process  asked  write  program  given  word  determine  whether  word  mirror  word  contains  non  empty  name  need  checked  name  contains  large  english  letter  name  written  next  sans  serif  font  print  yes  without  quote  given  name  match  mirror  reflection  otherwise  print  without  quote
999/E __label__greedy  __label__dfs  __label__graphs  city  road  berland  road  connects  pair  city  road  berland  way  minimum  new  road  need  built  make  city  reachable  capital  new  road  way  input  consists  city  road  index  capital  city  indexed  following  road  road  given  pair  city  pair  city  road  road  opposite  direction  pair  city  allowed  print  minimum  extra  road  needed  make  city  reachable  city  city  already  reachable  print
1151/E __label__math  __label__dp  __label__data  structures  kingdom  kremland  tree  connected  undirected  graph  without  cycle  consisting  vertex  vertex  ha  value  vertex  connected  series  edge  formally  every  edge  vertex  denote  function  take  leave  tree  vertex  whose  value  range  value  function  connected  component  new  graph  task  calculate  following  sum  n  lnf  contains  single  vertex  tree  second  contains  value  vertex  print  answer  problem
810/B __label__greedy  __label__sortings  summer  holiday  someone  going  trip  someone  visiting  grandparent  someone  trying  get  part  time  job  summer  noora  decided  want  earn  money  took  job  shop  assistant  shop  noora  working  ha  plan  following  day  day  sale  manager  know  exactly  day  product  put  sale  exactly  client  come  shop  day  manager  sure  everyone  come  shop  buy  exactly  product  left  leaf  shop  without  buying  anything  moreover  due  short  shelf  life  product  manager  established  following  rule  part  product  left  shelf  end  day  product  kept  next  day  sent  dump  advertising  purpose  manager  offered  start  sell  shop  asked  noora  choose  day  next  sell  chosen  day  product  put  sale  would  doubled  thus  day  shop  planned  put  sale  product  noora  ha  chosen  day  sell  shelf  shop  would  keep  product  consequently  opportunity  sell  time  product  day  sell  noora  task  choose  day  maximize  total  sold  product  asks  help  difficult  problem  contains  denoting  day  shop  plan  day  noora  ha  choose  sell  following  subsequent  contains  denoting  product  shelf  shop  day  client  come  shop  day  print  single  denoting  maximal  product  shop  sell
1252/B __label__dp  __label__trees  new  icpc  town  ha  junction  numbered  connected  road  possible  junction  junction  going  road  make  sure  junction  well  maintained  government  environment  agency  planning  deploy  newest  advanced  cleaning  robot  addition  cleaning  ability  robot  equipped  movement  ability  move  junction  junction  connected  road  might  guessed  robot  cheap  therefore  agency  considering  following  deployment  plan  let  set  junction  cleaned  robot  known  robot  task  junction  junction  form  path  exists  sequence  adjacent  junction  sequence  connected  road  union  robot  equal  set  junction  icpc  town  hand  robot  share  common  junction  avoid  complaint  citizen  inefficient  operation  deployment  plan  irreducible  word  robot  form  longer  path  note  agency  doe  care  whether  robot  used  minimized  long  task  irreducible  task  problem  count  feasible  deployment  plan  given  town  layout  plan  feasible  satisfies  mentioned  requirement  example  let  road  feasible  deployment  plan  shown  following  figure  plan  us  robot  labeled  figure  clean  second  plan  us  robot  labeled  figure  clean  third  plan  us  robot  clean  fourth  plan  us  robot  clean  fifth  plan  us  robot  clean  plan  feasible  case  example  plan  feasible  task  combined  longer  path  plan  feasible  path  begin  containing  representing  junction  next  contains  representing  road  connecting  junction  junction  guaranteed  possible  junction  junction  going  road  output  representing  feasible  deployment  plan  output  large  need  modulo  output
1117/B __label__math  __label__greedy  __label__sortings  emotes  popular  digital  collectible  card  game  game  pretty  famous  say  name  emote  increase  opponent  happiness  unit  know  emotes  game  used  make  opponent  happy  time  use  emotes  time  allowed  use  emotion  use  restriction  use  emote  time  row  otherwise  opponent  think  trolling  note  emotes  considered  different  make  opponent  happy  possible  find  maximum  possible  opponent  happiness  input  contains  emotes  time  use  emotes  maximum  time  use  emote  row  second  input  contains  value  happiness  emote  print  maximum  opponent  happiness  use  emotes  way  satisfying  problem  statement
621/E __label__dp  block  digit  consisting  digit  given  input  wet  shark  must  choose  exactly  digit  block  concatenate  digit  together  form  large  example  chooses  digit  block  digit  second  block  get  wet  shark  take  modulo  please  tell  many  way  choose  digit  block  get  exactly  final  result  large  print  modulo  note  way  choose  digit  block  equal  occurrence  example  way  choose  digit  block  input  contains  space  separated  digit  block  block  interesting  remainder  modulo  modulo  next  contains  space  separated  give  digit  contained  block  print  way  pick  exactly  digit  block  resulting  equal  modulo
908/D __label__math  __label__dp  given  construct  sequence  following  algorithm  initially  start  empty  sequence  second  following  probability  add  end  sequence  otherwise  probability  add  end  sequence  stop  least  subsequence  form  determine  expected  time  subsequence  resulting  sequence  shown  represented  coprime  print  value  b  print  single  answer  problem
785/D __label__math  __label__dp  __label__number  theory  probably  know  anton  go  school  school  subject  anton  study  bracketology  bracketology  lesson  student  usually  learn  different  sequence  consist  round  bracket  character  without  quote  last  lesson  anton  learned  regular  simple  bracket  sequence  rsbs  bracket  sequence  length  rsbs  following  condition  met  empty  n  length  sequence  even  charactes  sequence  equal  last  charactes  sequence  equal  example  sequence  rsbs  sequence  rsbs  elena  ivanovna  anton  teacher  gave  following  task  homework  given  bracket  sequence  find  distinct  subsequence  rsbs  note  subsequence  string  obtained  deleting  element  subsequence  considered  distinct  distinct  set  position  deleted  answer  big  anton  teacher  like  big  asks  anton  find  answer  modulo  anton  thought  task  long  time  still  know  solve  help  anton  solve  task  write  program  find  answer  input  contains  string  bracket  sequence  given  anton  homework  string  consists  character  without  quote  guaranteed  string  empty  length  exceed  output  answer  task  modulo
630/Q __label__geometry  city  administration  ha  rest  fame  pyramid  egypt  project  construction  pyramid  complex  near  city  place  called  emerald  walley  distinction  complex  pyramid  quadrangular  egypt  triangular  pentagonal  course  amount  city  budget  fund  construction  depends  pyramid  volume  task  calculate  volume  pilot  project  consisting  pyramid  triangular  quadrangular  pentagonal  pyramid  ha  equilateral  triangle  base  edge  pyramid  equal  length  second  pyramid  ha  square  base  edge  pyramid  equal  length  third  pyramid  ha  regular  pentagon  base  edge  pyramid  equal  length  input  contains  edge  length  triangular  quadrangular  pentagonal  pyramid  correspondingly  output  total  volume  pyramid  absolute  relative  error  greater
1132/E __label__dp  __label__greedy  __label__dfs  set  item  weight  greater  denote  subset  item  good  total  weight  item  subset  doe  exceed  want  calculate  maximum  possible  weight  good  subset  item  note  consider  empty  set  original  set  calculating  answer  contains  maximum  total  weight  good  subset  second  denotes  set  item  contains  n  item  weight  set  print  maximum  possible  weight  good  subset  item
1132/B __label__greedy  __label__sortings  came  local  shop  want  buy  chocolate  bar  bar  shop  cost  coin  want  buy  different  coupon  allow  buy  chocolate  bar  coupon  allows  buy  chocolate  bar  pay  expensive  cheapest  bar  bar  free  use  coupon  use  coupon  choose  bar  buy  using  coupon  buy  remaining  bar  without  discount  decide  coupon  choose  want  know  minimum  total  amount  money  pay  use  coupon  optimally  contains  chocolate  bar  shop  second  contains  cost  chocolate  bar  third  contains  coupon  fourth  contains  chocolate  bar  buy  using  coupon  least  expensive  free  value  pairwise  distinct  print  minimum  amount  money  pay  buy  bar  coupon  remaining  bar  full  price
476/A __label__math  __label__implementation  dreamoon  want  climb  stair  step  climb  step  move  dreamoon  want  move  multiple  minimal  move  making  climb  top  stair  satisfies  condition  single  contains  space  separated  print  single  minimal  move  multiple  way  climb  satisfying  condition  print  instead
1027/B __label__math  __label__implementation  given  chessboard  size  nn  filled  following  way  written  cell  even  sum  coordinate  left  right  top  bottom  rest  written  cell  odd  sum  coordinate  left  right  top  bottom  operation  mean  division  rounded  example  left  board  following  picture  chessboard  given  right  board  chessboard  given  given  query  query  described  pair  answer  query  written  cell  row  column  row  column  numbered  contains  size  board  query  next  contains  description  query  query  print  answer  query  answer  query  written  cell  row  column  row  column  numbered  query  numbered  order  input
991/C __label__implementation  __label__binary  search  passing  test  vasya  got  box  candy  decided  eat  equal  amount  candy  morning  candy  petya  noticed  box  decided  get  candy  mean  process  eating  candy  following  beginning  vasya  chooses  single  day  morning  eats  candy  box  le  candy  box  eats  evening  petya  eats  candy  remaining  box  still  candy  left  box  process  repeat  next  day  vasya  eats  candy  petya  candy  left  box  amount  candy  box  divisible  petya  round  amount  take  box  example  candy  box  petya  would  eat  particular  le  candy  box  petya  eat  task  find  minimal  amount  chosen  vasya  would  eat  least  half  candy  initially  got  note  must  contains  single  initial  amount  candy  box  output  single  minimal  amount  would  allow  vasya  eat  least  half  candy  got
802/M __label__greedy  __label__sortings  marmot  prepared  easy  problem  year  hc  involves  sequence  positive  came  beautiful  riveting  story  problem  statement  explains  input  mean  program  output  read  like  good  criminal  heidi  none  joke  today  removing  story  statement  replacing  unhelpful  paragraph  solve  problem  fool  input  contains  space  separated  second  contains  space  separated  output
1238/B __label__greedy  __label__sortings  ivan  play  old  action  game  called  heretic  stuck  final  level  game  need  help  killing  monster  main  part  level  large  corridor  large  narrow  represented  infinite  coordinate  corridor  divided  part  let  assume  point  part  meet  right  part  corridor  filled  monster  monster  initial  coordinate  given  since  monster  right  part  every  positive  left  part  corridor  filled  crusher  trap  monster  enters  left  part  corridor  origin  current  coordinate  becomes  le  equal  get  instantly  killed  trap  main  weapon  ivan  us  kill  monster  phoenix  rod  launch  missile  explodes  upon  impact  obliterating  every  monster  caught  explosion  throwing  monster  away  epicenter  formally  suppose  ivan  launch  missile  explodes  point  every  monster  either  killed  explosion  pushed  away  let  monster  current  coordinate  monster  killed  monster  pushed  unit  left  current  coordinate  becomes  monster  pushed  unit  right  current  coordinate  becomes  ivan  going  kill  monster  follows  choose  point  launch  missile  point  wait  explodes  monster  pushed  left  part  corridor  killed  crusher  trap  least  monster  still  alive  choose  another  point  probably  wa  already  used  launch  missile  minimum  missile  ivan  ha  launch  order  kill  monster  assume  every  time  ivan  fire  phoenix  rod  chooses  impact  point  optimally  answer  independent  query  contains  query  query  contains  enemy  distance  enemy  thrown  away  epicenter  explosion  second  query  contains  initial  position  monster  guaranteed  sum  query  doe  exceed  query  print  minimum  shot  phoenix  rod  required  kill  monster
379/B __label__implementation  __label__constructive  algorithms  new  year  coming  many  people  today  busy  preparing  new  year  present  vasily  programmer  exception  vasily  know  best  present  contest  money  put  empty  wallet  left  right  row  decided  much  money  put  wallet  vasily  decided  put  coin  wallet  left  vasily  busy  man  money  sorted  bag  robot  initially  robot  stand  leftmost  wallet  row  robot  follow  instruction  type  wallet  left  current  wallet  exists  wallet  right  current  wallet  exists  put  coin  current  wallet  due  technical  malfunction  robot  follow  put  coin  instruction  row  vasily  want  wait  long  want  write  program  robot  contains  operation  necessarily  minimum  length  robot  use  put  coin  wallet  help  contains  wallet  next  contains  guaranteed  least  positive  print  sequence  consists  character  equal  character  sequence  instruction  robot  character  order  move  left  character  order  move  right  character  order  robot  put  coin  wallet  robot  allowed  beyond  wallet  word  give  instruction  robot  wallet  wallet
442/C __label__greedy  __label__data  structures  artem  ha  array  positive  artem  decided  play  game  consists  move  move  go  like  artem  chooses  element  array  remove  get  min  point  adjacent  removed  adjacent  left  right  artem  get  point  element  removed  part  array  glue  together  resulting  new  array  artem  continues  playing  borya  wondered  maximum  total  point  artem  get  play  game  contains  single  element  array  next  contains  value  array  element  single  print  single  maximum  point  artem  get
150/C __label__math  __label__data  structures  guess  much  point  reminding  nvodsk  winter  exactly  hot  increased  popularity  public  transport  dramatically  route  bus  ha  exactly  stop  stop  go  way  stop  go  last  stop  positioned  straight  coordinate  day  exactly  people  use  bus  person  know  stop  get  bus  stop  get  bus  ticket  stop  stop  cost  ruble  conductor  choose  segment  sell  ticket  mean  conductor  choose  sell  ticket  segment  sell  ticket  conductor  passenger  divide  saved  money  equally  conductor  untaxed  income  sometimes  interrupted  inspection  take  place  bus  drive  segment  route  located  consecutive  stop  inspector  fine  conductor  ruble  passenger  ticket  route  segment  know  coordinated  stop  stop  passenger  get  fine  probability  inspection  segment  stop  conductor  asked  help  make  plan  selling  ticket  maximizes  mathematical  expectation  profit  contains  next  contains  coordinate  stop  bus  route  third  contains  probability  inspection  percent  segment  stop  stop  follow  describe  bus  passenger  contains  exactly  stop  passenger  get  print  single  real  maximum  expectation  conductor  profit  answer  considered  correct  absolute  relative  error  doe  exceed
653/A __label__implementation  __label__sortings  __label__brute  force  limak  little  polar  bear  ha  ball  ball  ha  size  limak  want  give  ball  friend  giving  gift  easy  rule  limak  must  obey  make  friend  happy  friend  get  ball  size  friend  get  ball  size  differ  example  limak  choose  ball  size  ball  size  choose  ball  size  friend  would  get  ball  size  choose  ball  size  size  differ  task  check  whether  limak  choose  ball  satisfy  condition  input  contains  ball  limak  ha  second  contains  denotes  size  ball  print  yes  without  quote  limak  choose  ball  distinct  size  differ  otherwise  print  without  quote
1238/F __label__dp  __label__dfs  __label__graphs  __label__trees  assume  dimensional  segment  segment  denoted  endpoint  build  following  graph  segment  graph  consists  vertex  edge  vertex  segment  intersect  exists  least  point  belongs  example  resulting  graph  following  tree  size  good  possible  choose  dimensional  segment  graph  built  segment  coincides  tree  given  tree  find  good  subtree  maximum  possible  size  recall  subtree  connected  subgraph  tree  note  answer  independent  query  contains  query  query  contains  vertex  tree  next  contains  denoting  edge  vertex  guaranteed  given  graph  tree  guaranteed  sum  doe  exceed  query  print  maximum  size  good  subtree  given  tree
744/D __label__geometry  hongcow  really  like  color  red  hongcow  like  color  blue  hongcow  standing  infinite  field  red  point  blue  point  hongcow  want  draw  circle  field  circle  contains  least  red  point  blue  point  point  exactly  boundary  circle  counted  either  inside  outside  compute  radius  largest  circle  satisfies  condition  circle  arbitrarily  large  size  print  otherwise  answer  accepted  ha  relative  absolute  error  input  next  denotes  coordinate  red  point  next  denotes  coordinate  blue  point  point  coordinate  print  circle  arbitrary  size  otherwise  print  floating  point  representing  largest  radius  circle  satisfies  condition  answer  considered  correct  absolute  relative  error  doe  exceed
1070/K __label__implementation  polycarp  took  video  duration  video  second  video  listed  chronological  order  video  earliest  video  next  video  last  polycarp  want  publish  exactly  post  instabram  video  part  single  post  post  preserve  chronological  order  mean  post  earliest  video  second  post  block  video  going  next  word  video  post  post  contains  video  second  post  contains  video  third  post  contains  video  post  contains  video  polycarp  perfectionist  want  total  duration  video  post  help  polycarp  find  positive  value  satisfy  condition  contains  next  contains  positive  duration  video  solution  exists  print  yes  print  positive  second  total  duration  video  post  easily  proven  answer  unique  exists
982/C __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__trees  given  tree  vertex  task  determine  maximum  possible  edge  removed  way  remaining  connected  component  even  size  contains  denoting  size  tree  next  describing  vertex  connected  edge  guaranteed  given  edge  form  tree  output  single  maximum  edge  removed  leave  connected  component  even  size  impossible  remove  edge  order  satisfy  property
1148/C __label__sortings  __label__constructive  algorithms  given  permutation  even  goal  sort  permutation  perform  operation  following  type  take  index  swap  need  minimize  operation  use  operation  show  always  possible  contains  single  even  length  permutation  second  contains  distinct  given  permutation  print  swap  perform
1070/M __label__constructive  algorithms  __label__geometry  upon  time  algoland  berland  single  country  time  long  gone  different  country  city  scattered  common  territory  city  represented  point  cartesian  plane  algoland  consists  city  numbered  coordinate  algoland  city  pair  similarly  berland  consists  city  numbered  coordinate  berland  city  pair  mentioned  city  lie  single  straight  step  unite  country  berland  decided  build  several  bidirectional  freeway  freeway  going  segment  start  berland  city  end  algoland  city  freeway  intersect  point  except  freeway  start  end  moreover  freeway  connect  city  connectivity  mean  get  specified  city  city  using  freeway  note  freeway  bidirectional  mean  drive  direction  mayor  berland  city  allocated  budget  build  freeway  start  city  thus  given  freeway  going  start  berland  city  total  allocated  budget  tight  cover  building  minimal  necessary  set  freeway  word  help  berland  build  freeway  freeway  segment  connecting  berland  city  algoland  city  freeway  intersect  except  freeway  start  end  freeway  connect  city  freeway  bidirectional  freeway  start  berland  city  contains  several  test  case  input  contains  single  test  case  test  case  follow  solve  test  case  separately  test  case  completely  independent  affect  test  case  start  containing  space  separated  b  algoland  city  berland  city  correspondingly  next  contains  space  separated  freeway  start  berland  city  guaranteed  next  coordinate  algoland  city  pair  space  separated  next  coordinate  berland  city  pair  space  separated  city  located  distinct  point  city  lie  single  straight  sum  value  test  case  exceed  sum  value  test  case  exceed  test  case  print  yes  answer  otherwise
315/B __label__implementation  sereja  ha  got  array  consisting  sereja  active  boy  going  complete  operation  operation  form  make  array  element  equal  word  perform  assignment  avi  increase  array  element  word  perform  assignment  take  piece  paper  write  array  element  element  aqi  help  sereja  complete  operation  contains  second  contains  space  separated  original  array  next  describe  operation  describes  operation  represents  operation  type  followed  followed  followed  third  type  operation  print  value  aqi  print  value  order  corresponding  query  follow  input
1034/B __label__constructive  algorithms  __label__brute  force  little  love  much  love  thing  playing  game  chessboard  size  nm  cell  row  column  called  initially  chessboard  empty  time  place  chessman  different  empty  cell  manhattan  distance  exactly  manhattan  distance  cell  defined  want  place  many  chessman  possible  chessboard  please  help  find  maximum  chessman  place  single  contains  row  column  chessboard  print  maximum  chessman  little  place
377/E __label__dp  __label__geometry  kostya  playing  computer  game  cookie  clicker  goal  game  gather  cooky  get  cooky  using  different  building  click  special  field  screen  get  cooky  click  buy  cookie  factory  alchemy  lab  time  machine  bring  lot  lot  cooky  beginning  game  time  kostya  ha  cooky  building  ha  available  building  choose  building  worth  cooky  built  brings  cooky  end  second  make  game  interesting  play  kostya  decided  add  limit  moment  time  use  building  course  change  active  building  second  discretion  important  kostya  playing  version  game  buy  new  building  change  active  building  time  moment  multiple  second  kostya  buy  new  building  use  time  kostya  start  use  building  time  moment  get  profit  time  moment  kostya  want  earn  least  cooky  quickly  possible  determine  second  need  contains  building  game  cooky  kostya  want  earn  next  contains  cooky  building  brings  per  second  building  price  output  minimum  second  kostya  need  earn  least  cooky  guaranteed
534/F __label__dp  task  write  program  dealing  nonograms  field  larger  simplified  nonogram  task  build  field  cell  either  white  black  satisfies  given  information  row  column  row  column  contiguous  black  segment  specified  example  size  field  contiguous  black  segment  row  column  solution  look  like  guaranteed  test  testset  exists  least  solution  follow  row  column  respectively  second  contains  contiguous  black  segment  row  field  similarly  third  contains  contiguous  black  segment  column  field  guaranteed  exists  least  solution  output  possible  solution  output  consist  containing  character  denote  white  cell  black  cell
877/A __label__implementation  __label__strings  day  alex  wa  creating  contest  friend  accidentally  deleted  fortunately  problem  saved  need  find  problem  many  problem  manually  alex  asks  write  program  determine  problem  contest  name  known  problem  contest  name  contains  alex  friend  name  exactly  friend  name  danil  olya  slava  ann  nikita  name  case  sensitive  contains  string  lowercase  uppercase  letter  symbol  length  name  problem  print  yes  problem  contest  otherwise
745/A __label__implementation  __label__strings  hongcow  learning  spell  day  teacher  give  word  need  learn  spell  dutiful  student  immediately  learns  spell  word  hongcow  ha  decided  try  make  new  word  start  taking  word  learned  spell  move  last  character  word  beginning  word  call  cyclic  shift  apply  cyclic  shift  many  time  example  consecutively  applying  cyclic  shift  operation  word  abracadabra  hongcow  get  word  aabracadabr  raabracadab  hongcow  wondering  many  distinct  word  generate  cyclic  shift  arbitrarily  many  time  initial  string  counted  input  single  string  word  hongcow  initially  learns  spell  string  consists  lowercase  english  letter  output  single  equal  distinct  string  hongcow  obtain  applying  cyclic  shift  arbitrarily  many  time  given  string
1088/B __label__implementation  __label__sortings  given  array  repeat  following  operation  time  find  minimum  non  element  array  print  subtract  non  element  array  element  print  contains  length  array  operation  perform  second  contains  space  separated  element  array  print  minimum  non  element  operation  new
453/B __label__dp  __label__brute  force  princess  twilight  went  celestia  luna  old  castle  research  chest  element  harmony  sequence  positive  harmony  every  element  sequence  greatest  common  divisor  equal  according  ancient  book  key  chest  harmony  sequence  minimizes  following  expression  given  sequence  help  princess  twilight  find  key  contains  element  sequence  next  contains  output  key  sequence  minimizes  sum  described  multiple  optimal  sequence  output
729/A __label__implementation  __label__strings  polycarp  ha  interviewed  oleg  ha  written  interview  without  punctuation  mark  space  save  time  thus  interview  string  consisting  lowercase  english  letter  filler  word  ogo  oleg  speech  word  obtained  ogo  adding  several  time  end  considered  filler  example  word  ogo  ogogo  ogogogo  filler  word  ogog  ogogog  oggo  filler  filler  maximal  size  example  ogogoo  speech  consider  ogo  filler  goo  normal  phrase  consider  ogogo  filler  print  interview  polycarp  ha  replace  filler  asterisk  note  filler  word  replaced  exactly  asterisk  regardless  length  polycarp  ha  dealt  problem  time  clock  ticking  contains  positive  length  interview  second  contains  string  length  consisting  lowercase  english  letter  print  interview  text  replacement  filler  allowed  substring  several  consecutive  occurences
963/D __label__strings  given  string  answer  query  query  consists  string  answer  query  minimum  length  string  substring  ha  least  occurrence  substring  substring  string  continuous  segment  character  string  guaranteed  query  string  query  different  contains  string  second  contains  next  contains  non  empty  string  parameter  query  order  string  input  consists  lowercase  english  letter  sum  length  string  input  exceed  distinct  query  output  answer  separate
662/A __label__math  know  game  nim  played  pile  stone  pile  initially  contains  stone  player  alternate  turn  turn  player  pick  non  empty  pile  remove  positive  stone  able  make  move  loses  game  petya  vasya  tired  playing  nim  invented  version  game  named  gambling  nim  sided  card  side  card  ha  written  side  ha  beginning  game  player  put  card  table  card  side  side  chosen  independently  uniformly  thus  obtain  sequence  equal  take  pile  stone  pile  containing  exactly  stone  play  nim  petya  take  turn  given  player  play  optimally  find  probability  petya  victory  output  answer  irreducible  fraction  input  contains  single  card  deck  following  contains  description  card  consisting  output  answer  irreducible  fraction  probability  petya  victory  print
1143/C __label__dfs  __label__trees  given  rooted  tree  vertex  numerated  tree  connected  graph  without  cycle  rooted  tree  ha  special  vertex  named  root  ancestor  vertex  vertex  path  root  vertex  except  vertex  parent  vertex  nearest  vertex  ancestor  vertex  child  parent  given  tree  parent  vertex  vertex  root  value  example  tree  root  vertex  parent  vertex  vertex  parent  vertex  vertex  ancestor  vertex  vertex  ancestor  vertex  vertex  noticed  vertex  respect  others  particular  vertex  doe  respect  ancestor  respect  decided  delete  vertex  tree  step  select  non  root  vertex  doe  respect  parent  none  child  respect  several  vertex  select  smallest  delete  vertex  child  become  connected  parent  example  deletion  vertex  vertex  matching  criterion  deletion  stop  process  print  order  delete  vertex  note  order  unique  contains  single  vertex  tree  next  describe  tree  contains  parent  vertex  vertex  respect  parent  vertex  doe  respect  parent  root  tree  ha  instead  parent  index  root  guaranteed  value  define  rooted  tree  vertex  case  least  vertex  delete  print  containing  index  vertex  delete  order  delete  otherwise  print  single
432/D __label__dp  __label__strings  string  length  string  character  let  introduce  several  definition  substring  string  string  sisi  prefix  string  length  string  suffix  string  length  string  task  prefix  string  match  suffix  string  print  time  occurs  string  substring  single  contains  sequence  character  string  string  consists  uppercase  english  letter  print  prefix  match  suffix  string  next  print  print  mean  prefix  length  match  suffix  length  occurs  string  substring  time  print  pair  order  increasing
780/D __label__implementation  __label__greedy  __label__graphs  __label__strings  innokenty  president  new  football  league  byteland  task  assign  short  name  club  shown  next  score  course  short  name  distinct  innokenty  want  short  name  consist  letter  club  full  name  consist  word  team  name  hometown  name  example  dinamo  bytecity  innokenty  want  assign  strange  short  name  want  choose  short  name  club  short  name  letter  team  name  example  mentioned  club  din  letter  short  name  letter  team  name  third  letter  letter  hometown  name  mentioned  club  dib  apart  rule  club  second  option  short  name  chosen  club  option  chosen  option  club  example  mentioned  club  ha  short  name  dib  club  option  chosen  short  name  equal  din  possible  club  short  name  din  letter  team  name  letter  hometown  name  course  team  short  name  help  innokenty  choose  short  name  team  impossible  report  multiple  answer  suit  innokenty  team  option  short  name  equal  innokenty  formally  think  option  chosen  contains  single  club  league  next  contains  word  team  name  hometown  name  club  team  name  hometown  name  consist  uppercase  english  letter  length  least  possible  choose  short  name  satisfy  constraint  print  single
1213/D1 __label__implementation  __label__brute  force  difference  easy  hard  version  element  array  given  array  consisting  move  choose  divide  rounding  word  move  set  perform  operation  possibly  time  task  calculate  minimum  possible  operation  required  obtain  least  equal  array  forget  possible  operation  thus  answer  always  exists  input  contains  element  array  equal  required  second  input  contains  element  print  minimum  possible  operation  required  obtain  least  equal  array
240/F __label__data  structures  boy  named  leo  miss  single  torcoder  contest  round  last  torcoder  round  leo  stumbled  following  problem  wa  given  string  consisting  lowercase  english  letter  query  query  characterised  pair  ii  consider  letter  string  numbered  left  right  query  must  swap  letter  index  inclusive  string  make  substring  palindrome  multiple  letter  permutation  choose  string  lexicographically  minimum  permutation  exists  ignore  query  change  string  everybody  know  torcoder  round  input  array  size  limit  never  exceed  leo  solved  problem  easily  task  solve  problem  little  bit  larger  limit  given  string  query  print  string  result  applying  query  string  input  contains  string  length  query  second  contains  string  consisting  lowercase  latin  letter  next  contains  pair  ii  query  apply  string  single  print  result  applying  query  string  print  query  order  given  input
175/A __label__implementation  __label__brute  force  vasya  play  robot  bicorn  attack  game  consists  round  non  negative  amount  point  given  result  game  sum  obtained  point  vasya  ha  already  played  round  wrote  obtained  point  without  leading  string  vasya  decided  brag  achievement  friend  ha  forgotten  many  point  got  round  thing  remembers  string  help  vasya  find  maximum  amount  point  could  get  take  account  vasya  played  robot  bicorn  attack  time  could  get  point  round  input  contains  non  empty  string  obtained  vasya  string  consists  digit  string  length  doe  exceed  character  print  maximum  amount  point  vasya  could  get  vasya  wrong  string  could  obtained  according  rule  output
1076/D __label__greedy  __label__graphs  given  undirected  connected  weighted  graph  consisting  vertex  edge  let  denote  length  shortest  path  vertex  vertex  erase  edge  graph  edge  remain  let  call  vertex  good  still  exists  path  length  erasing  edge  goal  erase  edge  way  good  vertex  maximized  contains  n  vertex  edge  graph  maximum  edge  retained  graph  respectively  follow  containing  denoting  edge  connecting  vertex  weight  given  graph  connected  vertex  reached  vertex  simple  self  loop  unordered  pair  vertex  exists  edge  connecting  vertex  print  edge  remain  graph
1140/G __label__data  structures  __label__trees  given  special  undirected  graph  consists  vertex  numbered  following  property  hold  graph  exactly  n  edge  graph  edge  connect  vertex  odd  vertex  even  edge  connect  vertex  odd  edge  connect  vertex  even  edge  pair  vertex  odd  exists  edge  vice  versa  odd  n  exists  edge  graph  connected  moreover  delete  vertex  even  edge  incident  graph  become  tree  applies  deleting  odd  vertex  graph  represented  tree  structure  edge  connecting  vertex  tree  corresponding  vertex  second  tree  edge  graph  weighted  length  simple  path  graph  sum  weight  traversed  edge  given  query  graph  query  asked  compute  length  shortest  path  pair  vertex  graph  answer  query  input  contains  second  contains  n  describe  weight  edge  connecting  odd  vertex  even  follow  contains  describes  edge  connecting  weight  another  connecting  weight  next  contains  query  follow  contains  describing  query  compute  length  shortest  path  vertex  print  equal  answer  query
1182/D __label__dp  __label__implementation  __label__dfs  __label__trees  __label__constructive  algorithms  given  tree  consist  vertex  select  vertex  root  vertex  satisfies  condition  vertex  distance  root  distance  root  degree  degree  degree  mean  vertex  connected  vertex  distance  mean  edge  vertex  determine  find  root  vertex  tree  multiple  answer  find  contains  single  vertex  next  contains  mean  edge  exist  guaranteed  graph  form  tree  root  vertex  exists  print  otherwise  print
436/C __label__greedy  __label__graphs  __label__trees  loading  game  dungeon  candy  required  get  description  level  server  description  map  n  checkered  rectangular  field  cell  field  candy  cell  ha  candy  empty  cell  denoted  map  cell  ha  candy  denoted  letter  english  alphabet  level  identical  candy  case  letter  corresponding  cell  map  transmit  information  via  network  want  minimize  traffic  total  size  transferred  data  level  transmitted  order  way  transmit  current  level  transmit  whole  level  need  transmit  byte  via  network  transmit  difference  level  previously  transmitted  level  exists  operation  requires  transmit  byte  cell  field  different  constant  note  compare  corresponding  cell  level  calculate  transform  map  level  rotate  shift  relatively  task  find  way  transfer  level  minimize  traffic  contains  follows  description  level  level  described  contains  character  character  either  letter  english  alphabet  dot  please  note  case  letter  matter  print  required  minimum  transferred  byte
1009/C __label__math  __label__greedy  alice  got  array  length  birthday  present  third  year  row  disappointing  overwhelmengly  boring  filled  entirely  bob  decided  apply  change  array  cheer  alice  bob  ha  chosen  change  following  form  chooses  arbitrary  position  every  add  dist  value  cell  dist  distance  position  dist  absolute  value  example  alice  currently  ha  array  bob  chooses  position  array  become  note  bob  choose  position  outside  array  smaller  greater  alice  happiest  element  array  big  possible  bob  claimed  arithmetic  mean  value  element  work  fine  metric  maximum  arithmetic  mean  value  bob  achieve  contains  element  array  change  next  contains  parameter  change  print  maximal  average  arithmetic  mean  element  bob  achieve
370/C __label__greedy  __label__sortings  __label__constructive  algorithms  christmas  party  city  child  child  came  mitten  mitten  different  color  child  left  right  mitten  color  let  say  color  mitten  numbered  child  numbered  child  ha  mitten  color  party  santa  claus  father  frost  russian  granddaughter  snow  girl  child  danced  around  richly  decorated  christmas  tree  fact  everything  wa  bright  diverse  child  wanted  wear  mitten  distinct  color  child  decided  swap  mitten  got  left  right  mitten  end  mitten  distinct  color  mitten  size  fit  child  child  started  exchanging  mitten  haphazardly  reach  situation  child  ha  pair  mitten  distinct  color  vasily  petrov  dad  child  noted  general  case  child  idea  turn  impossible  besides  mathematician  came  scheme  distributing  mitten  child  distinct  colored  mitten  wa  maximum  task  repeat  discovery  note  left  right  mitten  different  child  must  end  left  right  mitten  contains  child  possible  mitten  color  second  contains  color  mitten  child  print  maximum  child  end  distinct  colored  pair  mitten  next  print  way  mitten  distributed  case  print  space  separated  color  left  color  right  mitten  child  get  multiple  solution  print
535/D __label__greedy  __label__strings  tavas  strange  creature  usually  zzz  come  people  mouth  sleeping  string  length  come  tavas  mouth  instead  today  tavas  fell  asleep  malekas  place  wa  sleeping  malekas  little  process  malekas  ha  favorite  string  determined  position  match  formally  condition  sxisxi  sxi  fullfilled  malekas  wrote  subsequence  possibly  write  anything  piece  paper  sequence  subsequence  sequence  turn  removing  element  maybe  tavas  woke  malekas  told  everything  remember  string  knew  contains  lowercase  english  letter  subsequence  written  piece  paper  tavas  wonder  possible  value  asked  saddas  smart  enough  solve  tavas  asked  calculate  answer  large  tavas  want  print  answer  modulo  contains  length  length  subsequence  malekas  wrote  second  contains  string  next  contains  space  separated  malekas  subsequence  single  print  answer  modulo
1203/E __label__greedy  __label__sortings  boxer  weight  boxer  change  weight  competition  weight  become  equal  must  remain  positive  weight  always  necessary  choose  largest  boxing  team  term  people  boxer  weight  team  different  unique  write  program  given  current  value  find  maximum  possible  boxer  team  possible  change  weight  boxer  contains  boxer  next  contains  weight  boxer  print  single  maximum  possible  people  team
859/F __label__greedy  another  start  mean  shirt  order  order  make  sure  shirt  shipped  soon  possible  decided  year  going  order  necessary  shirt  actual  competition  top  contestant  going  awarded  shirt  obviously  know  contestant  plan  get  shirt  size  contestant  actual  competition  order  enough  shirt  matter  top  shirt  available  order  award  order  get  shirt  size  contestant  send  survey  survey  allow  contestant  either  specify  single  desired  shirt  size  adjacent  shirt  size  contestant  specifies  size  mean  awarded  either  size  probably  tell  plan  could  require  ordering  lot  unnecessary  shirt  like  help  determine  minimum  shirt  need  order  ensure  able  award  shirt  matter  outcome  competition  begin  shirt  size  shirt  awarded  respectively  following  odd  indicates  contestant  desiring  shirt  size  even  indicates  contestant  okay  receiving  either  shirt  size  exceed  total  contestant  print  minimum  shirt  need  buy
1055/A __label__graphs  alice  ha  birthday  today  invited  home  best  friend  bob  bob  need  find  way  commute  alice  home  city  alice  bob  live  metro  built  metro  contains  station  numbered  bob  life  near  station  alice  life  near  station  metro  ha  track  train  track  station  station  train  second  track  reverse  direction  train  arrives  end  track  go  depot  immediately  impossible  travel  station  open  partially  open  station  track  known  whether  station  closed  track  station  closed  track  train  going  track  direction  pas  station  without  stopping  bob  got  information  opened  closed  station  found  traveling  metro  unexpectedly  complicated  help  bob  determine  whether  travel  alice  home  metro  search  transport  contains  station  metro  station  alice  home  located  bob  life  station  next  describe  information  closed  open  station  second  contains  station  open  track  direction  increasing  station  otherwise  station  closed  track  third  contains  station  open  second  track  direction  decreasing  station  otherwise  station  closed  second  track  print  yes  quote  clarity  bob  able  commute  alice  home  metro  quote  clarity  otherwise
975/E __label__geometry  hag  talented  person  ha  always  artist  inside  father  forced  study  mechanical  engineering  yesterday  spent  time  cutting  giant  piece  wood  trying  make  look  like  goose  anyway  dad  found  wa  art  rather  studying  mechanic  boring  subject  confronted  hag  fact  spoiled  son  doe  care  future  continues  art  cut  lira  monthly  allowance  hag  trying  prove  dad  wooden  piece  project  mechanic  subject  told  dad  wooden  piece  strictly  convex  polygon  vertex  hag  brought  pin  pinned  polygon  vertex  wall  dad  ha  query  hag  type  pull  pin  vertex  wait  wooden  polygon  rotate  gravity  force  rotate  stabilize  put  pin  vertex  answer  coordinate  vertex  please  help  hag  answer  father  query  assume  wood  form  polygon  ha  uniform  density  polygon  ha  positive  thickness  point  every  query  type  hag  dad  try  move  polygon  bit  watch  stabilize  contains  vertex  polygon  query  next  describe  wooden  polygon  contains  coordinate  vertex  polygon  guaranteed  polygon  strictly  convex  vertex  given  counter  clockwise  order  vertex  distinct  next  describe  query  per  query  start  type  query  type  continues  vertex  pin  taken  vertex  pin  put  polygon  finish  rotating  guaranteed  vertex  contains  pin  query  second  type  continues  single  vertex  coordinate  hag  tell  father  guaranteed  least  query  second  type  output  answer  query  second  type  separate  answer  considered  correct  absolute  relative  error  doe  exceed
449/A __label__math  __label__greedy  jzzhu  ha  big  rectangular  chocolate  bar  consists  n  unit  square  want  cut  bar  exactly  time  cut  must  meet  following  requirement  cut  straight  horizontal  vertical  cut  along  edge  unit  square  prohibited  divide  unit  chocolate  square  cut  cut  inside  whole  chocolate  bar  cut  must  distinct  picture  show  possible  way  cut  chocolate  time  imagine  jzzhu  made  cut  big  chocolate  splitted  several  piece  consider  smallest  area  piece  chocolate  jzzhu  want  piece  large  possible  maximum  possible  area  smallest  piece  get  exactly  cut  area  chocolate  piece  unit  square  single  contains  output  single  representing  answer  impossible  cut  big  chocolate  time  print
590/A __label__implementation  schoolboy  named  vasya  love  reading  book  programming  mathematics  ha  recently  read  encyclopedia  article  described  method  median  smoothing  median  filter  many  application  science  engineering  vasya  liked  idea  method  much  decided  try  practice  applying  simplest  variant  median  smoothing  sequence  result  new  sequence  obtained  following  algorithm  last  new  sequence  match  corresponding  original  sequence  value  equal  median  value  median  set  go  second  place  written  non  decreasing  order  example  median  set  median  set  equal  order  make  task  easier  vasya  decided  apply  method  sequence  consisting  made  procedure  vasya  looked  resulting  sequence  thought  apply  algorithm  apply  next  result  vasya  tried  couple  example  found  median  smoothing  algorithm  application  sequence  stop  changing  say  sequence  stable  doe  change  median  smoothing  applied  vasya  wonder  whether  sequence  always  eventually  becomes  stable  asks  write  program  given  sequence  determine  whether  ever  becomes  stable  moreover  ever  becomes  stable  determine  look  like  many  time  need  apply  median  smoothing  algorithm  initial  sequence  order  obtain  stable  input  input  contains  single  length  initial  sequence  next  contains  giving  initial  sequence  sequence  never  become  stable  print  single
1012/D __label__constructive  algorithms  __label__strings  string  consisting  letter  make  following  operation  several  time  choose  prefix  prefix  swap  prefix  empty  prefix  coincide  whole  string  task  find  sequence  operation  string  consists  letter  consists  letter  operation  minimized  contains  string  second  contains  string  denote  length  respectively  guaranteed  least  string  contains  least  letter  least  string  contains  least  letter  single  operation
990/G __label__dp  __label__trees  __label__number  theory  given  tree  consisting  vertex  written  vertex  vertex  equal  let  denote  function  greatest  common  divisor  written  vertex  belonging  simple  path  vertex  vertex  including  vertex  every  count  pair  equal  contains  vertex  second  contains  written  vertex  follow  containing  denoting  edge  connecting  vertex  vertex  guaranteed  edge  form  tree  every  following  pair  output  anything  otherwise  output  aforementioned  pair  consider  value  ascending  order
710/E __label__dp  __label__dfs  zscoder  want  generate  input  file  programming  competition  problem  input  string  consisting  letter  lazy  write  generator  manually  generate  input  text  editor  initially  text  editor  empty  take  second  insert  delete  letter  text  file  second  copy  content  entire  text  file  duplicate  zscoder  want  find  minimum  amount  time  needed  create  input  file  exactly  letter  help  determine  amount  time  needed  generate  input  contains  letter  input  file  parameter  problem  statement  print  minimum  amount  time  needed  generate  input  file
620/E __label__data  structures  __label__trees  new  year  holiday  resha  want  throw  away  new  year  tree  invited  best  friend  kerim  gural  help  redecorate  new  year  tree  new  year  tree  undirected  tree  vertex  root  vertex  process  query  type  change  colour  vertex  subtree  vertex  colour  find  different  colour  subtree  vertex  contains  vertex  tree  query  second  contains  colour  vertex  next  contains  j  j  vertex  edge  guaranteed  given  correct  undirected  tree  last  contains  description  query  description  start  k  type  query  query  type  follows  k  k  vertex  whose  subtree  recoloured  colour  query  second  type  follows  k  vertex  subtree  find  different  colour  query  second  type  print  different  colour  subtree  vertex  given  query
311/D __label__math  __label__data  structures  learning  computational  geometry  tiny  simultaneously  learning  useful  data  structure  called  segment  tree  interval  tree  ha  scarcely  grasped  come  strange  problem  given  sequence  run  query  type  given  ask  sum  element  sequence  given  let  element  sequence  becomes  word  apply  assignment  l  r  every  query  type  output  answer  tiny  surely  work  asks  help  addition  tiny  prime  lover  tell  answer  huge  output  modulo  prime  contains  representing  length  sequence  second  contains  space  separated  third  contains  representing  query  follow  contains  ii  stand  type  query  parameter  query  correspondingly  type  query  print  answer  per
743/A __label__implementation  __label__greedy  __label__constructive  algorithms  vladik  competitive  programmer  year  going  win  international  olympiad  informatics  easy  sound  question  vladik  face  find  cheapest  way  get  olympiad  vladik  know  airport  airport  located  straight  airport  ha  unique  vladik  house  situated  next  airport  place  olympiad  situated  next  airport  possible  vladik  house  place  olympiad  located  near  airport  get  olympiad  vladik  fly  pair  airport  time  ha  start  route  airport  finish  airport  airport  belongs  company  cost  flight  airport  airport  airport  belong  company  belong  different  company  print  minimum  cost  vladik  ha  pay  get  olympiad  contains  airport  airport  vladik  start  route  airport  ha  reach  second  contains  string  length  consists  character  character  string  airport  belongs  company  otherwise  belongs  second  print  single  minimum  cost  vladik  ha  pay  get  olympiad
513/D2 __label__data  structures  __label__constructive  algorithms  need  find  binary  tree  size  satisfies  given  set  constraint  suppose  node  unknown  binary  tree  labeled  using  pre  order  traversal  starting  constraint  given  label  direction  left  right  case  left  direction  element  subtree  rooted  left  child  similarly  case  right  direction  element  subtree  rooted  right  child  input  contains  next  either  left  right  denoting  whether  subtree  rooted  left  child  subtree  rooted  right  child  problem  consists  multiple  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  single
1256/B __label__greedy  given  permutation  length  recall  permutation  array  consisting  distinct  arbitrary  order  example  permutation  permutation  appears  twice  array  permutation  array  perform  operation  given  permutation  possible  perform  operation  operation  allows  swap  element  given  permutation  position  operation  performed  operation  performed  arbitrary  order  task  find  lexicographically  minimum  possible  permutation  obtained  performing  given  operation  order  see  definition  lexicographical  order  note  section  answer  independent  test  case  example  let  consider  permutation  minimum  possible  permutation  obtain  following  way  perform  second  operation  swap  second  third  element  obtain  permutation  perform  fourth  operation  swap  fourth  fifth  element  obtain  permutation  perform  third  operation  swap  third  fourth  element  obtain  permutation  perform  operation  swap  second  element  obtain  permutation  another  example  minimum  possible  permutation  obtain  performing  third  operation  swap  third  fourth  element  input  contains  test  case  test  case  follow  test  case  contains  element  permutation  second  test  case  contains  distinct  given  permutation  test  case  print  answer  lexicograhically  minimum  possible  permutation  obtained  performing  given  operation  order
706/D __label__data  structures  __label__trees  __label__binary  search  author  ha  gone  story  vasiliy  formal  task  description  given  query  multiset  initially  containing  type  query  add  multiset  erase  occurrence  multiset  guaranteed  least  present  multiset  query  given  need  compute  value  maximum  value  bitwise  exclusive  know  xor  multiset  multiset  set  equal  element  allowed  input  contains  single  query  vasiliy  ha  perform  following  input  contains  character  guaranteed  least  query  third  type  note  always  present  set  query  type  print  maximum  value  bitwise  exclusive  xor  multiset
643/F __label__math  __label__dp  bear  inn  place  sleep  bear  party  together  night  day  bear  love  drinking  juice  like  wine  distinguish  juice  taste  smell  bear  sleep  unless  drink  wine  bear  must  sleep  hour  drinking  wine  wake  many  day  party  radewoosh  owner  inn  want  put  barrel  front  bear  barrel  wine  juice  radewoosh  challenge  bear  find  barrel  wine  night  following  happens  exact  order  bear  must  choose  maybe  empty  set  barrel  barrel  chosen  many  bear  bear  drink  glass  barrel  chose  bear  drink  wine  sleep  exactly  bear  chose  barrel  wine  wake  many  day  party  enough  place  sleep  bear  lose  immediately  end  sure  wine  least  awake  bear  bear  win  unless  lost  place  sleep  radewoosh  want  allow  bear  win  considers  scenario  scenario  party  last  night  let  denote  maximum  barrel  bear  surely  win  behave  optimally  let  define  task  find  denotes  exclusive  denoted  xor  note  barrel  chosen  many  bear  sleep  input  contains  bear  place  sleep  scenario  respectively  print  equal
821/D __label__dfs  __label__graphs  okabe  like  able  walk  city  path  lit  street  lamp  way  get  beaten  schoolchildren  okabe  city  represented  grid  cell  row  numbered  top  bottom  column  numbered  left  right  exactly  cell  city  lit  street  lamp  guaranteed  top  left  cell  lit  okabe  start  walk  top  left  cell  want  reach  bottom  right  cell  course  okabe  walk  lit  cell  move  adjacent  cell  left  right  direction  okabe  temporarily  light  cell  single  row  column  time  pay  coin  allowing  walk  cell  lit  initially  note  okabe  light  single  row  column  time  ha  pay  coin  every  time  light  new  row  column  change  row  column  temporarily  lit  must  stand  cell  lit  initially  remove  temporary  light  row  column  cell  row  column  initially  lit  lit  help  okabe  find  minimum  coin  need  pay  complete  walk  input  contains  space  separated  next  contains  space  separated  row  column  lit  cell  guaranteed  lit  cell  distinct  guaranteed  top  left  cell  lit  print  minimum  coin  okabe  need  pay  complete  walk  possible
1040/B __label__math  __label__dp  __label__greedy  long  story  short  shashlik  miroslav  favorite  food  shashlik  prepared  several  skewer  simultaneously  state  skewer  initial  turned  time  miroslav  laid  skewer  parallel  enumerated  consecutive  order  left  right  better  cooking  put  quite  close  turn  skewer  lead  turning  closest  skewer  side  skewer  skewer  exist  example  let  miroslav  turn  skewer  skewer  come  turned  turn  skewer  skewer  turned  skewer  initial  position  turned  said  art  cooking  requires  perfect  timing  miroslav  want  turn  skewer  minimal  possible  action  example  example  turning  sufficient  turn  skewer  help  miroslav  turn  skewer  contains  skewer  skewer  side  turned  step  minimum  action  needed  miroslav  turn  skewer  print  denoting  skewer  turned  corresponding  step
1133/B __label__math  __label__number  theory  international  woman  day  coming  soon  polycarp  preparing  holiday  candy  box  shop  sale  box  contains  candy  polycarp  want  prepare  maximum  gift  girl  gift  consist  exactly  box  girl  able  share  gift  equally  total  amount  candy  gift  pair  box  divisible  word  box  combined  gift  divisible  many  box  polycarp  able  give  course  box  part  gift  polycarp  use  box  partially  redistribute  candy  input  contains  box  girl  second  input  contains  candy  box  print  maximum  box  polycarp  give  gift
476/B __label__math  __label__dp  __label__brute  force  dreamoon  standing  position  drazil  sending  list  command  dreamoon  smartphone  dreamoon  follows  command  following  type  unit  towards  positive  direction  denoted  unit  towards  negative  direction  denoted  condition  poor  dreamoon  smartphone  report  command  recognized  dreamoon  know  might  even  wrong  though  successfully  recognized  dreamoon  decides  follow  every  recognized  command  toss  fair  coin  decide  unrecognized  mean  move  unit  negative  positive  direction  probability  given  original  list  command  sent  drazil  list  received  dreamoon  probability  dreamoon  end  position  originally  supposed  final  drazil  command  contains  string  command  drazil  sends  dreamoon  string  consists  character  set  second  contains  string  command  dreamoon  smartphone  recognizes  string  consists  character  set  denotes  unrecognized  command  length  string  equal  exceed  output  single  real  corresponding  probability  answer  considered  correct  relative  absolute  error  exceed
1156/G __label__implementation  __label__greedy  __label__graphs  let  analyze  program  written  strange  programming  language  variable  language  name  consisting  character  character  lowercase  uppercase  latin  letter  digit  extra  constraint  character  digit  type  operation  program  denoted  character  program  ha  following  format  lvalue  rvalue  lvalue  rvalue  valid  variable  name  lvalue  arg  arg  lvalue  arg  arg  valid  variable  name  operation  character  program  executed  result  execution  stored  variable  name  never  assigned  program  result  equal  value  running  program  program  called  equivalent  matter  operation  character  denote  obviously  performing  operation  argument  give  result  value  variable  execution  program  value  running  program  equal  value  running  second  program  program  executed  independently  given  program  consisting  task  write  program  consisting  minimum  possible  equivalent  program  given  contains  program  follow  program  corresponds  format  described  statement  ha  extra  whitespaces  print  minimum  equivalent  program
61/B __label__strings  contest  comparing  shapur  teacher  found  real  genius  could  possibly  calculation  faster  even  using  super  computer  day  contest  teacher  took  simple  looking  exam  student  took  part  exam  teacher  gave  string  asked  concatenate  concatenating  string  mean  put  arbitrary  order  example  concatenating  alireza  amir  get  alirezaamir  amiralireza  depending  order  concatenation  unfortunately  enough  teacher  forgot  ask  student  concatenate  string  pre  defined  order  student  way  liked  teacher  know  shapur  fast  calculating  genius  boy  asks  correct  student  paper  shapur  good  time  taking  task  rather  like  finish  soon  possible  take  time  solve  sat  polynomial  time  moreover  teacher  ha  given  advice  shapur  ha  follow  teacher  said  expect  know  string  gave  student  including  contained  lowercase  uppercase  persian  mikhi  script  letter  letter  much  like  latin  letter  make  task  much  harder  converted  initial  string  student  answer  latin  latin  alphabet  ha  much  le  character  mikhi  script  added  odd  looking  character  answer  include  character  invention  course  call  sign  length  initial  string  wa  le  equal  length  student  answer  le  equal  son  student  genius  quite  possible  make  minor  mistake  changing  case  character  example  write  alirezaamir  instead  alirezaamir  picky  ignore  mistake  sign  previously  talked  important  ignore  since  many  student  mood  adding  extra  sign  forgetting  sign  something  like  iran  iran  indicate  student  answer  wa  right  wrong  writing  wrong  answer  acc  correct  answer  remind  none  string  initial  string  answer  empty  finally  soon  possible  le  hour  complete  string  initial  string  consists  lowercase  uppercase  latin  letter  sign  initial  string  length  inclusively  fourth  single  student  next  student  answer  guaranteed  answer  meet  teacher  said  answer  iconsists  lowercase  uppercase  latin  letter  sign  length  inclusively  student  write  different  print  answer  wrong  acc  answer
584/E __label__math  __label__greedy  __label__constructive  algorithms  anton  love  transforming  permutation  another  swapping  element  money  ira  like  paying  stupid  game  help  obtain  required  permutation  paying  little  money  possible  formally  permutation  swap  paying  coin  find  print  smallest  coin  required  obtain  permutation  permutation  print  sequence  swap  operation  obtain  solution  contains  single  length  permutation  second  contains  sequence  permutation  occurs  exactly  third  contains  sequence  permutation  occurs  print  minimum  coin  need  spend  transform  permutation  permutation
716/B __label__greedy  coder  love  read  dictionary  think  word  nice  exists  substring  contiguous  segment  letter  length  letter  english  alphabet  appears  exactly  particular  string  ha  length  strictly  le  substring  exists  thus  nice  coder  tell  word  letter  missing  forgot  want  determine  possible  fill  missing  letter  resulting  word  nice  possible  need  find  example  word  well  help  input  contains  single  string  word  coder  remembers  character  string  uppercase  letter  english  alphabet  question  mark  question  mark  denotes  letter  coder  remember  way  replace  question  mark  uppercase  letter  resulting  word  nice  print
746/A __label__math  __label__implementation  nikolay  ha  lemon  apple  pear  decided  cook  compote  according  recipe  fruit  ratio  mean  lemon  compote  exactly  apple  exactly  pear  crumble  break  cut  fruit  piece  fruit  lemon  apple  pear  put  compote  whole  fruit  task  determine  maximum  total  lemon  apple  pear  nikolay  cook  compote  possible  nikolay  use  fruit  case  print  contains  positive  lemon  nikolay  ha  second  contains  positive  apple  nikolay  ha  third  contains  positive  pear  nikolay  ha  print  maximum  total  lemon  apple  pear  nikolay  cook  compote
560/A __label__implementation  __label__sortings  magic  island  geraldion  gerald  life  ha  currency  system  us  banknote  several  value  problem  system  perfect  sometimes  happens  geraldionians  express  certain  sum  money  set  banknote  course  use  banknote  value  sum  called  unfortunate  gerald  wondered  minimum  unfortunate  sum  contains  value  banknote  used  geraldion  second  contains  distinct  space  separated  value  banknote  print  single  minimum  unfortunate  sum  unfortunate  sum  print
1067/A __label__dp  ivan  unexpectedly  saw  present  previous  birthday  array  array  old  hard  read  ivan  remembers  element  least  neighbour  le  formally  ax  ivan  doe  remember  array  asks  find  way  restore  restored  element  since  way  big  print  modulo  input  contains  size  array  second  input  contains  element  array  either  mean  element  read  print  way  restore  array  modulo
842/C __label__math  __label__dfs  __label__graphs  __label__trees  __label__number  theory  ilya  fond  graph  especially  tree  last  trip  forest  ilya  found  interesting  tree  rooted  vertex  written  vertex  tree  written  vertex  equal  ilya  belief  beauty  vertex  greatest  common  divisor  written  vertex  path  root  including  vertex  addition  ilya  change  arbitrary  vertex  leave  vertex  unchanged  vertex  ilya  want  know  maximum  possible  beauty  vertex  answer  must  considered  independently  beauty  root  equal  written  contains  vertex  tree  next  contains  next  contains  x  mean  edge  tree  output  separated  space  equal  maximum  possible  beauty  vertex
679/A __label__math  __label__constructive  algorithms  interactive  problem  output  section  see  information  flushing  output  bear  limak  think  hidden  interval  task  say  hidden  prime  composite  called  prime  ha  exactly  distinct  divisor  prime  called  composite  ask  query  divisor  hidden  query  print  interval  system  answer  yes  divisor  hidden  otherwise  answer  example  hidden  system  answer  yes  print  done  asking  query  print  prime  composite  terminate  program  get  wrong  answer  verdict  ask  query  print  range  get  wrong  answer  verdict  printed  answer  correct  get  idleness  limit  exceeded  verdict  print  anything  forget  flushing  output  info  query  read  string  input  yes  printed  divisor  hidden  otherwise  time  ask  query  print  interval  print  end  character  flush  output  flushing  read  response  input
696/B __label__math  __label__dfs  __label__trees  barney  life  country  usc  united  state  charzeh  usc  ha  city  numbered  road  city  road  usc  form  rooted  tree  barney  sure  rooted  root  tree  city  thus  start  journey  city  visit  city  want  following  road  girl  ha  stolen  barney  heart  barney  want  find  start  looking  root  tree  since  barney  stinson  random  guy  us  random  dfs  search  city  pseudo  code  algorithm  follows  let  startingtime  array  length  currenttime  dfs  currenttime  currenttime  startingtime  currenttime  shuffle  child  randomly  permutation  equal  possibility  child  vector  child  city  city  child  dfs  told  barney  start  journey  root  tree  equivalent  call  dfs  barney  need  pack  backpack  want  know  upcoming  journey  every  city  barney  want  know  expected  value  startingtime  friend  jon  snow  know  nothing  asked  help  input  contains  single  city  usc  second  contains  parent  city  city  tree  meaning  road  city  numbered  usc  output  print  expected  value  startingtime
378/B __label__implementation  __label__sortings  semifinal  running  tournament  semifinal  participant  participant  advancing  final  chosen  follows  semifinal  choose  people  k  showed  best  result  semifinal  place  final  people  ranked  top  semifinal  got  best  others  tournament  organizer  determined  value  participant  want  know  else  ha  chance  get  final  home  contains  single  participant  semifinal  next  contains  result  participant  millisecond  need  cover  semifinal  distance  second  semifinal  correspondingly  result  distinct  sequence  sorted  ascending  order  order  participant  finished  corresponding  semifinal  print  string  consisting  character  equal  either  correspond  participant  semifinal  second  correspond  participant  second  semifinal  character  equal  participant  semifinal  ha  chance  advance  final  otherwise  equal
1202/F __label__math  __label__implementation  __label__binary  search  given  uppercase  latin  letter  letter  period  string  smallest  positive  mod  indexed  note  implies  always  divide  example  period  string  abaabaa  period  aaaa  period  aabbb  find  different  period  possible  string  letter  letter  contains  letter  respectively  print  different  period  possible  string  letter  letter
852/G __label__implementation  smith  wake  side  dirty  disused  bathroom  ankle  chained  pipe  next  tape  player  hand  written  message  play  find  tape  back  pocket  putting  tape  tape  player  see  key  hanging  ceiling  chained  kind  machine  connected  terminal  next  pressing  play  button  rough  voice  start  playing  tape  listen  smith  see  pretty  tough  situation  order  escape  solve  puzzle  given  string  represent  word  word  maximum  length  consists  character  given  string  represent  pattern  pattern  string  length  consists  character  well  maximum  character  character  unknown  character  meaning  equal  character  even  empty  character  pattern  find  word  match  given  pattern  solving  typing  result  terminal  key  drop  ceiling  escape  let  game  begin  help  smith  escape  input  contains  representing  word  pattern  respectively  next  represent  word  following  represent  pattern  word  pattern  ha  maximum  length  pattern  ha  character  character  word  patter  lowercase  english  letter  output  contains  consists  representing  word  match  corresponding  pattern
852/H __label__dp  __label__geometry  citizen  bubbleland  celebrating  th  anniversary  decided  organize  big  music  festival  bob  got  task  invite  famous  singer  would  sing  fest  wa  busy  placing  stage  performance  totally  forgot  write  invitation  mail  time  unfortunately  found  available  singer  stage  singer  leaving  stage  empty  bob  would  like  citizen  bubbleland  noticed  empty  stage  found  wa  irresponsible  decided  choose  exactly  stage  form  convex  set  make  large  poster  edge  convex  set  hold  festival  inside  large  poster  make  impossible  citizen  see  empty  stage  outside  bob  still  need  make  sure  see  empty  stage  inside  area  since  lot  people  coming  would  like  festival  area  large  possible  help  calculate  maximum  area  could  obtain  respecting  condition  area  festival  organized  answer  input  contains  separated  empty  space  representing  stage  singer  respectively  next  contains  representing  coordinate  stage  collinear  stage  output  contains  rounded  exactly  decimal  place  maximal  festival  area  rounding  performed  round  everything  else  round
446/A __label__dp  __label__implementation  dzy  ha  sequence  consisting  call  sequence  subsegment  sequence  value  denotes  length  subsegment  task  find  longest  subsegment  possible  change  change  want  subsegment  make  subsegment  strictly  increasing  need  output  length  subsegment  find  contains  next  contains  single  print  answer  problem  maximum  length  required  subsegment
391/A __label__implementation  receive  point  solving  problem  manao  designing  genetic  code  new  type  algae  efficiently  produce  fuel  specifically  manao  focusing  stretch  dna  encodes  protein  stretch  dna  represented  string  containing  character  manao  ha  determined  stretch  dna  contains  maximal  sequence  consecutive  identical  nucleotide  even  length  protein  nonfunctional  example  consider  protein  described  dna  string  gttaaag  contains  maximal  sequence  consecutive  identical  nucleotide  aaa  protein  nonfunctional  sequence  ha  even  length  manao  trying  obtain  functional  protein  protein  currently  ha  manao  insert  additional  nucleotide  dna  stretch  additional  nucleotide  character  set  manao  want  determine  minimum  insertion  necessary  make  dna  encode  functional  protein  input  consists  single  containing  string  length  character  set  problem  subproblems  get  point  correct  submission  program  print  single  representing  minimum  character  required  inserted  input  string  order  make  run  identical  character  odd  length
519/C __label__math  __label__implementation  __label__greedy  __label__number  theory  preparing  programming  contest  important  part  preparing  competition  sharing  programming  knowledge  experienced  member  beginning  deal  contest  therefore  next  team  training  decided  make  team  newbie  solving  problem  together  experienced  participant  belief  optimal  team  people  consist  experienced  participant  newbie  thus  experienced  participant  share  experience  large  people  belief  optimal  team  experienced  member  plus  newbie  thus  newbie  gain  knowledge  experience  result  decided  team  training  session  belong  type  described  furthermore  agree  total  team  much  possible  experienced  member  newbie  training  session  calculate  maximum  team  formed  contains  experienced  participant  newbie  present  training  session  print  maximum  team  formed
886/D __label__implementation  __label__graphs  __label__constructive  algorithms  substring  string  called  frequent  occurrence  le  occurrence  substring  given  set  string  string  necessarily  set  called  good  element  set  frequent  substring  string  restore  non  empty  good  string  minimum  length  several  string  exist  restore  lexicographically  minimum  string  good  string  print  without  quote  substring  string  contiguous  subsequence  letter  string  example  abc  substring  string  abc  substring  string  occurrence  substring  string  starting  position  string  substring  occurs  occurrence  could  overlap  string  lexicographically  smaller  string  prefix  ha  smaller  letter  position  differ  contains  string  set  next  contains  non  empty  string  consisting  lowercase  english  letter  guaranteed  string  distinct  total  length  string  exceed  print  non  empty  good  string  minimum  length  several  good  string  exist  print  lexicographically  minimum  print  without  quote  good  string
228/E __label__dfs  __label__graphs  berland  ha  city  connected  bidirectional  road  road  know  whether  asphalted  king  berland  valera  want  asphalt  road  berland  gathered  group  worker  every  day  valera  chooses  exactly  city  order  crew  asphalt  road  come  city  valiant  crew  fulfilled  king  order  day  worker  went  home  unfortunately  everything  great  valera  would  like  main  part  group  gastarbeiters  illegal  immigrant  enthusiastic  exactly  good  understanding  order  berlandian  therefore  received  order  asphalt  road  coming  city  group  asphalted  non  asphalted  road  coming  city  vice  versa  took  asphalt  road  upon  learning  progress  valera  wa  upset  since  wa  late  change  anything  asked  make  program  determines  whether  way  asphalt  berlandian  road  day  help  king  contains  space  separated  city  road  berland  correspondingly  next  description  road  berland  contains  space  separated  aii  index  city  connected  road  third  equal  road  wa  initially  asphalted  otherwise  consider  city  berland  indexed  road  indexed  guaranteed  berlandian  city  road  print  single  day  needed  asphalt  road  second  print  space  separated  index  city  send  worker  print  city  order  valera  send  worker  asphalt  road  multiple  solution  print
909/E __label__dp  __label__greedy  __label__dfs  __label__graphs  given  program  want  execute  set  task  organized  dependency  graph  dependency  graph  directed  acyclic  graph  task  depend  result  several  task  directed  circular  dependency  task  task  executed  task  depends  already  completed  task  graph  executed  coprocessor  rest  executed  main  processor  coprocessor  call  send  set  task  executed  task  set  task  depends  must  either  already  completed  included  set  main  processor  start  program  execution  get  result  task  executed  coprocessor  automatically  find  minimal  coprocessor  call  necessary  execute  given  program  contains  space  separated  total  task  given  total  dependency  task  next  contains  space  separated  task  executed  main  processor  otherwise  executed  coprocessor  next  describe  dependency  task  contains  space  separated  mean  task  depends  task  task  indexed  pair  distinct  guaranteed  circular  dependency  task  output  containing  minimal  coprocessor  call  necessary  execute  program
1090/J __label__strings  misha  math  homework  today  lesson  punishment  teacher  andrew  decided  give  hard  useless  task  andrew  ha  written  string  lowercase  english  letter  blackboard  reminded  misha  prefix  string  string  formed  removing  several  possibly  none  last  character  concatenation  string  string  formed  appending  second  string  right  string  teacher  asked  misha  write  blackboard  string  concatenation  non  empty  prefix  non  empty  prefix  misha  andrew  asked  many  distinct  string  misha  spent  almost  entire  lesson  completed  task  asks  write  program  would  task  automatically  contains  string  consisting  lowercase  english  letter  second  contains  string  consisting  lowercase  english  letter  length  string  exceed  output  single  distinct  string  concatenation  non  empty  prefix  non  empty  prefix
543/C __label__dp  multiset  string  length  consisting  lowercase  english  letter  say  string  easy  remember  string  position  letter  english  alphabet  string  string  multiset  ha  letter  position  example  multiset  string  abc  aba  adc  ada  easy  remember  multiset  abc  ada  ssa  easy  remember  string  string  ha  character  position  second  string  string  ha  character  position  third  string  string  ha  character  position  want  change  multiset  little  easy  remember  aij  coin  change  character  position  string  lowercase  letter  english  alphabet  find  minimum  sum  pay  order  make  multiset  string  easy  remember  contains  string  multiset  length  string  respectively  next  string  multiset  consisting  lowercase  english  letter  string  length  next  contains  ai  im  ij  print  single  answer  problem
387/E __label__data  structures  __label__binary  search  george  cat  love  playing  much  vitaly  put  card  row  front  george  card  ha  written  card  distinct  written  let  card  left  right  card  left  contains  vitaly  want  row  exactly  card  left  want  card  left  written  vitaly  gave  task  george  get  required  sequence  card  using  remove  operation  time  remove  operation  george  choose  greater  current  card  row  contiguous  card  contiguous  subsegment  card  let  denote  written  card  left  right  george  remove  card  xij  described  operation  george  get  piece  sausage  george  wondered  maximum  piece  sausage  get  total  reach  goal  act  optimally  well  help  george  find  answer  question  contains  initial  final  card  second  contains  distinct  space  separated  initial  row  card  third  contains  space  separated  row  card  need  get  guaranteed  possible  obtain  given  row  using  remove  operation  time  print  single  maximum  piece  sausage  george  get  act  optimally  well
1250/J __label__greedy  __label__binary  search  berland  army  preparing  large  military  parade  already  decided  soldier  participating  divided  row  row  soldier  course  every  arrangement  soldier  row  suitable  height  soldier  row  differ  height  soldier  possible  height  know  soldier  height  conduct  parade  choose  soldier  participating  arrange  chosen  soldier  row  following  condition  met  row  ha  soldier  row  contains  pair  soldier  height  differ  calculate  maximum  soldier  participate  parade  contains  test  case  test  case  follow  test  case  begin  containing  different  height  soldier  row  soldier  parade  respectively  second  final  test  case  contains  soldier  height  berland  army  guaranteed  sum  test  case  doe  exceed  test  case  print  maximum  soldier  participate  parade
1203/C __label__math  __label__implementation  given  array  consisting  task  say  positive  divide  array  word  find  common  divisor  element  array  example  array  divide  array  answer  test  input  contains  element  second  input  contains  element  print  positive  divide  given  array  word  answer  common  divisor  element  array
835/E __label__constructive  algorithms  __label__binary  search  pay  attention  problem  interactive  penguin  xoriy  came  new  game  recently  ha  icicle  numbered  icicle  ha  temperature  exactly  icicle  special  temperature  temperature  others  x  find  special  icicle  choose  non  empty  subset  icicle  ask  penguin  bitwise  exclusive  xor  temperature  icicle  subset  note  ask  question  find  special  icicle  contains  x  icicle  temperature  non  special  icicle  temperature  special  icicle  give  answer  penguin  print  character  without  quote  print  index  special  icicle  ascending  order  note  separated  space  index  separated  space  gave  answer  program  terminate  immediately
373/A __label__implementation  cucumber  boy  fan  kyubeat  famous  music  game  kyubeat  ha  panel  playing  arranged  table  panel  light  ha  press  panel  panel  ha  timing  press  preffered  time  player  press  cucumber  boy  able  press  panel  time  hand  cucumber  boy  trying  press  panel  perfect  timing  want  press  panel  exactly  preffered  time  press  panel  hand  perfect  timing  challenge  press  panel  perfect  timing  fail  given  scene  kyubeat  panel  music  cucumber  boy  trying  tell  able  press  panel  perfect  timing  contains  single  panel  cucumber  boy  press  hand  next  character  digit  period  table  panel  digit  wa  written  panel  mean  boy  ha  press  panel  time  period  wa  written  panel  press  panel  output  yes  without  quote  able  press  panel  perfect  timing  output  without  quote
1099/F __label__dp  __label__data  structures  __label__dfs  __label__trees  __label__binary  search  mitya  vasya  playing  interesting  game  rooted  tree  vertex  vertex  indexed  root  ha  index  every  vertex  ha  parent  vertex  called  child  vertex  cooky  every  vertex  tree  cooky  vertex  take  exactly  time  mitya  eat  cookie  vertex  chip  initially  located  root  tree  take  time  move  chip  along  edge  connecting  vertex  parent  mitya  vasya  take  turn  playing  mitya  go  mitya  move  chip  vertex  chip  located  child  vasya  remove  edge  vertex  chip  located  child  vasya  decide  skip  turn  mitya  stop  game  turn  stop  game  move  chip  root  eating  cooky  along  way  mitya  decide  many  cooky  would  like  eat  every  vertex  way  total  time  spent  descend  ascend  eating  cooky  exceed  please  note  end  game  chip  always  located  root  tree  mitya  leave  chip  vertex  even  ha  already  eaten  enough  cooky  must  move  chip  back  root  every  move  vertex  parent  take  time  find  maximum  cooky  mitya  eat  regardless  vasya  action  contains  vertex  tree  time  ha  accomplish  task  second  contains  cooky  located  corresponding  vertex  third  contains  much  time  take  mitya  eat  cookie  vertex  following  describe  tree  every  corresponding  contains  denotes  parent  vertex  denotes  time  take  mitya  move  chip  along  edge  vertex  parent  output  single  maximum  cooky  mitya  eat
1151/C __label__math  __label__constructive  algorithms  nazar  student  scientific  lyceum  kingdom  kremland  known  outstanding  mathematical  ability  today  math  teacher  gave  difficult  task  consider  infinite  set  set  consists  odd  positive  second  set  consists  even  positive  stage  teacher  writes  endless  blackboard  set  second  stage  second  set  third  stage  next  set  fourth  next  second  set  word  stage  starting  second  writes  time  previous  change  set  written  another  written  let  written  starting  task  find  sum  given  answer  big  need  find  remainder  division  nazar  thought  problem  long  time  come  solution  help  solve  problem  contains  range  need  find  sum  print  single  answer  modulo
903/F __label__dp  given  matrix  row  column  element  matrix  either  asterisk  dot  perform  following  operation  arbitrary  time  choose  square  submatrix  size  k  replace  element  chosen  submatrix  dot  choosing  submatrix  size  k  cost  coin  minimum  coin  pay  replace  asterisk  dot  contains  column  second  contains  cost  replace  square  submatrix  size  respectively  follow  containing  character  denoting  row  matrix  character  either  dot  asterisk  print  minimum  coin  replace  asterisk  dot
377/C __label__dp  kostya  progamer  specializing  discipline  dota  valve  corporation  developer  game  ha  recently  released  new  patch  turned  balance  game  upside  kostya  captain  team  realizes  greatest  responsibility  lie  want  resort  analysis  innovation  patch  mathematical  point  view  choose  best  hero  team  every  game  dota  match  involves  team  must  choose  hero  player  team  going  play  forbidden  choose  hero  several  time  even  different  team  large  electronic  sport  competition  kostya  team  going  participate  match  held  captain  mode  mode  captain  select  hero  making  possible  action  certain  predetermined  order  pick  ban  pick  hero  team  captain  pick  picked  hero  go  team  later  team  member  play  longer  selected  team  ban  hero  ban  hero  sent  team  still  longer  selected  team  team  captain  miss  pick  ban  miss  pick  random  hero  added  team  available  moment  miss  ban  hero  banned  wa  ban  kostya  ha  already  identified  strength  hero  based  new  patch  fix  course  kostya  know  order  pick  ban  strength  team  sum  strength  team  hero  team  participate  match  seek  maximize  difference  strength  favor  help  kostya  determine  team  second  ha  advantage  match  large  advantage  contains  single  hero  dota  second  contains  strength  hero  third  contains  single  action  captain  team  must  perform  next  look  like  action  team  action  needed  action  pick  represented  ban  represented  team  team  need  perform  action  guaranteed  team  make  least  pick  besides  team  ha  pick  ban  print  single  difference  strength  team  strength  second  team  captain  team  act  optimally  well
1038/F __label__dp  __label__strings  given  binary  string  find  distinct  cyclical  binary  string  length  substring  cyclical  string  contains  substring  cyclical  shift  string  substring  cyclical  shift  example  cyclical  string  contains  substring  cyclical  string  called  different  differ  string  example  different  string  differ  cyclical  shift  still  considered  different  cyclical  string  contains  single  length  target  string  next  contains  string  string  must  substring  cyclical  string  string  contains  character  print  distinct  cyclical  binary  string  substring
1156/E __label__data  structures  given  permutation  permutation  array  element  occurs  exactly  let  call  subsegment  permutation  special  max  please  calculate  special  subsegments  contains  second  contains  pairwise  distinct  print  special  subsegments  given  permutation
630/H __label__math  city  park  city  contains  east  west  path  north  south  path  east  west  path  cross  north  south  path  intersection  city  funded  purchase  bench  make  seems  many  bench  wa  decided  place  many  path  possible  obviously  requirement  satisfied  following  scheme  bench  placed  cross  path  path  contains  bench  help  park  administration  count  way  place  bench  input  contains  east  west  path  north  south  path  output  way  place  bench
1256/A __label__math  coin  value  coin  value  always  pay  exact  change  want  know  exist  take  coin  value  coin  value  total  value  taken  coin  answer  independent  test  case  input  contains  test  case  test  case  follow  test  case  contains  coin  value  coin  value  value  required  total  value  test  case  print  answer  yes  without  quote  exist  take  coin  value  coin  value  total  value  taken  coin  otherwise
223/D __label__graphs  __label__geometry  plane  contains  necessarily  convex  polygon  without  self  intersection  consisting  vertex  numbered  spider  sitting  border  polygon  spider  move  like  transfer  spider  move  point  coordinate  lying  polygon  border  point  coordinate  lying  border  spider  beyond  polygon  border  transfer  spider  path  point  point  go  along  polygon  border  spider  choose  direction  walking  round  polygon  border  clockwise  counterclockwise  descend  spider  move  point  coordinate  point  coordinate  point  must  lie  vertical  straight  point  must  lower  point  segment  p  p  point  located  strictly  outside  polygon  specifically  segment  common  point  border  initially  spider  located  polygon  vertex  find  length  shortest  path  vertex  consisting  transfer  descends  distance  determined  usual  euclidean  metric  contains  vertex  given  polygon  next  space  separated  coordinate  polygon  vertex  vertex  listed  counter  clockwise  order  coordinate  polygon  vertex  exceed  absolute  value  last  contains  space  separated  start  end  vertex  sought  shortest  way  consider  polygon  vertex  numbered  order  given  input  coordinate  vertex  located  second  input  coordinate  vertex  guaranteed  given  polygon  simple  contains  self  intersection  self  tangency  output  print  single  real  length  shortest  way  vertex  vertex  answer  considered  correct  absolute  relative  error  doe  exceed
538/D __label__implementation  __label__constructive  algorithms  __label__brute  force  igor  ha  chess  long  time  sick  game  ordinary  rule  going  think  new  rule  game  become  world  famous  igor  chessboard  square  size  n  cell  igor  decided  simple  rule  guarantee  success  game  type  piece  besides  piece  game  color  possible  move  piece  described  set  shift  vector  next  passage  contains  formal  description  available  move  let  row  board  numbered  top  bottom  column  numbered  left  right  let  assign  square  pair  corresponding  column  row  possible  move  piece  defined  pair  using  move  piece  move  field  field  perform  move  cell  boundary  board  another  piece  piece  stand  cell  important  considering  possibility  making  given  move  example  like  knight  move  usual  chess  igor  offer  find  move  chess  piece  make  placed  several  piece  board  unoccupied  square  told  whether  attacked  present  piece  whether  piece  field  move  cell  restore  possible  set  shift  vector  piece  else  determine  igor  ha  made  mistake  situation  impossible  set  shift  vector  contains  single  next  character  describing  position  offered  igor  character  string  following  value  case  field  occupied  piece  field  attacked  piece  case  field  attacked  piece  case  field  attacked  piece  guaranteed  least  piece  board  valid  set  move  print  single  word  yes  without  quote  next  print  description  set  move  piece  form  board  center  board  ha  piece  symbol  mark  cell  attacked  format  similar  input  see  example  output  full  understanding  format  several  possible  answer  print
1095/B __label__implementation  given  array  consisting  let  instability  array  following  value  max  min  max  remove  exactly  element  array  minimize  instability  resulting  element  array  task  calculate  minimum  possible  instability  input  contains  element  array  second  input  contains  element  array  print  minimum  possible  instability  array  remove  exactly  element  array
765/F __label__data  structures  artsem  vacation  want  buy  souvenir  teammate  souvenir  shop  along  street  shop  artsem  buy  souvenir  dollar  buy  souvenir  shop  want  introduce  envy  team  want  buy  souvenir  least  possible  difference  price  artsem  ha  visited  shopping  street  time  strange  reason  day  shop  operating  weird  yes  ever  tried  come  reasonable  legend  range  query  problem  visit  artsem  want  know  minimum  possible  difference  price  different  souvenir  buy  opened  shop  word  artsem  visit  find  minimum  possible  value  li  contains  second  contains  space  separated  third  contains  query  next  describe  query  contains  space  separated  denoting  range  shop  working  day  print  answer  query  separate
424/B __label__implementation  __label__greedy  __label__sortings  __label__binary  search  administration  tomsk  region  firmly  belief  time  become  megacity  get  population  million  instead  improving  demographic  situation  decided  achieve  goal  expanding  boundary  city  city  tomsk  represented  point  plane  coordinate  city  surrounded  location  ha  coordinate  population  people  widen  city  boundary  circle  radius  case  location  inside  circle  border  included  city  goal  write  program  determine  minimum  radius  necessary  expand  boundary  tomsk  becomes  megacity  input  contains  locatons  around  tomsk  city  population  city  follow  contains  coordinate  value  location  people  coordinate  exceed  absolute  value  guaranteed  location  point  location  point  output  print  without  quote  tomsk  able  become  megacity  otherwise  print  single  real  minimum  radius  circle  city  need  expand  order  become  megacity
652/D __label__data  structures  __label__sortings  given  segment  end  segment  coincide  segment  find  segment  contains  contains  single  segment  next  contains  coordinate  left  right  end  segment  guaranteed  end  segment  coincide  print  segment  contained  segment
614/B __label__math  __label__implementation  year  tank  game  know  love  still  exists  exists  great  gena  code  written  problem  code  solves  given  tank  battle  country  find  product  turn  large  server  might  enough  time  assign  tank  team  whole  game  collapse  exactly  distinct  country  world  country  added  tank  game  developer  game  perfectionist  tank  country  beautiful  beautiful  according  developer  decimal  representation  consists  digit  moreover  contains  digit  due  complaint  player  tank  country  wa  removed  game  hence  tank  country  remain  beautiful  task  write  program  solves  exactly  problem  order  verify  gena  code  correctness  case  input  contains  country  second  contains  non  negative  without  leading  tank  country  guaranteed  second  contains  least  beautiful  total  length  representation  exceed  print  single  without  leading  product  tank  presented  country
718/A __label__math  __label__dp  __label__implementation  efim  received  grade  last  test  study  special  school  grade  equal  positive  decimal  fraction  got  disappointed  expected  way  pleasant  result  developed  tricky  plan  second  ask  teacher  round  grade  place  decimal  point  ask  round  nearest  second  left  till  end  break  efim  ha  act  fast  help  find  maximum  grade  get  second  note  choose  use  second  moreover  even  choose  round  grade  problem  classic  rounding  rule  used  rounding  digit  ha  take  look  digit  le  digit  remain  unchanged  subsequent  digit  replaced  otherwise  digit  greater  equal  digit  position  increased  might  change  digit  wa  equal  subsequent  digit  replaced  end  trailing  thrown  away  example  rounded  decimal  place  result  round  nearest  result  rounding  fifth  decimal  place  result  input  contains  length  efim  grade  second  till  end  break  respectively  second  contains  grade  guaranteed  grade  positive  containing  least  digit  decimal  point  representation  finish  print  maximum  grade  efim  get  second  print  trailing
518/D __label__math  __label__dp  ilya  got  tired  sport  programming  left  university  got  job  subway  wa  given  task  determine  escalator  load  factor  let  assume  people  stand  queue  escalator  second  following  possibility  take  place  either  person  queue  enters  escalator  probability  person  queue  move  probability  paralyzed  fear  escalator  making  whole  queue  wait  behind  formally  speaking  person  queue  enter  escalator  people  index  inclusive  enter  second  person  enter  escalator  escalator  infinite  person  enters  never  leaf  standing  escalator  following  second  ilya  need  count  expected  value  people  standing  escalator  second  task  help  solve  complicated  task  input  contains  real  given  exactly  digit  decimal  point  print  single  real  expected  people  standing  escalator  second  absolute  relative  error  exceed
773/D __label__dp  __label__graphs  country  never  city  well  developed  road  system  exactly  bidirectional  road  every  pair  city  thus  many  road  road  intersect  road  pass  intermediate  city  art  building  tunnel  bridge  ha  mastered  neverians  independent  committee  ha  evaluated  road  never  positive  called  perishability  road  lower  road  perishability  pleasant  drive  road  year  transport  never  ha  decided  build  museum  transport  city  set  single  signpost  directing  city  necessarily  museum  city  signpost  must  satisfy  following  important  condition  neverian  living  city  without  museum  start  travelling  city  following  direction  signpost  person  eventually  arrive  city  museum  neverians  incredibly  positive  minded  neverian  travel  route  consisting  several  road  considers  perishability  route  equal  smallest  perishability  road  route  government  never  ha  decided  build  museum  consider  possible  option  important  sum  perishability  route  museum  city  city  never  traveler  strictly  follow  direction  signpost  government  never  care  citizen  want  set  signpost  way  minimizes  sum  help  determine  minimum  possible  sum  possible  option  city  museum  built  contains  single  city  never  following  description  road  network  contains  denotes  perishability  road  city  road  perishability  inclusive  city  order  output  minimum  possible  sum  perishability  route  city  city  never  signpost  set  way  minimizes  sum
622/B __label__implementation  given  current  time  hour  format  find  print  time  minute  note  find  time  minute  see  example  clarify  problem  statement  read  hour  format  http  wikipedia  org  wiki  hourclock  contains  current  time  format  h  hour  minute  given  digit  hour  minute  le  given  leading  second  contains  minute  passed  time  minute  format  described  input  note  print  exactly  digit  hour  minute  add  leading  needed
915/B __label__implementation  luba  surfing  internet  currently  ha  opened  tab  browser  indexed  left  right  mouse  cursor  currently  located  po  tab  luba  need  use  tab  index  inclusive  study  want  close  tab  belong  segment  fast  possible  second  luba  either  try  moving  cursor  left  right  cursor  currently  tab  move  tab  max  tab  min  try  closing  tab  left  right  cursor  cursor  currently  tab  close  tab  index  segment  segment  aforementioned  expression  denote  minimum  maximum  index  unclosed  tab  respectively  example  tab  initially  tab  closed  minimum  second  luba  ha  spend  order  leave  tab  initial  index  inclusive  opened  input  contains  po  tab  cursor  position  segment  luba  need  leave  opened  print  equal  minimum  second  required  close  tab  outside  segment
1/A __label__math  theatre  square  capital  city  berland  ha  rectangular  shape  size  n  meter  occasion  city  anniversary  decision  wa  taken  pave  square  square  granite  flagstone  flagstone  size  least  flagstone  needed  pave  square  allowed  cover  surface  larger  theatre  square  square  ha  covered  allowed  break  flagstone  side  flagstone  parallel  side  square  input  contains  positive  write  needed  flagstone
632/F __label__graphs  __label__trees  __label__brute  force  given  matrix  size  n  let  call  matrix  nonnegative  element  magic  symmetric  aij  ji  aii  aijax  aik  jk  triple  note  need  distinct  determine  matrix  magic  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  scanf  printf  instead  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  size  matrix  next  contains  aij  ij  element  matrix  note  given  matrix  necessarily  symmetric  arbitrary  print  magic  without  quote  given  matrix  magic  otherwise  print  magic
961/D __label__geometry  given  point  cartesian  plane  every  point  lattice  point  coordinate  point  distinct  draw  straight  necessarily  distinct  possible  way  every  point  lie  least  contains  point  given  follow  containing  coordinate  point  point  distinct  possible  draw  straight  way  given  point  belongs  least  print  yes  otherwise  print
911/F __label__greedy  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  given  unweighted  tree  vertex  following  operation  applied  tree  single  operation  consists  following  step  choose  leaf  add  length  simple  path  answer  remove  chosen  leaf  tree  initial  answer  applying  operation  obviously  operation  tree  consist  single  vertex  calculate  maximal  possible  answer  achieve  construct  sequence  operation  allows  achieve  answer  contains  vertex  tree  next  describe  edge  tree  form  bi  aii  guaranteed  given  graph  tree  print  maximal  possible  answer
1236/B __label__math  alice  got  many  present  day  decided  pack  box  send  friend  kind  present  present  kind  identical  way  distinguish  gift  kind  present  different  kind  different  gift  different  kind  distinguishable  present  kind  alice  ha  big  consider  alice  ha  infinite  gift  kind  box  different  people  pairwise  distinct  consider  name  friend  written  box  example  putting  kind  present  box  second  box  different  putting  kind  present  second  box  box  alice  want  pack  present  following  rule  pack  present  kind  box  box  present  different  kind  box  contains  subset  kind  empty  box  allowed  kind  least  present  packed  box  alice  want  know  many  different  way  pack  present  exists  please  help  calculate  since  answer  huge  output  modulo  see  example  note  clarification  contains  separated  space  kind  present  box  alice  ha  print  way  pack  present  alice  rule  calculated  modulo
277/E __label__trees  root  tree  directed  acyclic  graph  contains  node  root  exactly  path  node  root  tree  binary  node  ha  outgoing  arc  binary  tree  painted  plane  arc  directed  top  bottom  arc  going  must  meet  condition  given  coordinate  tree  node  task  connect  node  arc  get  binary  root  tree  make  total  length  arc  minimum  arc  built  tree  must  directed  top  bottom  contains  single  node  tree  follow  per  coordinate  node  guaranteed  point  distinct  impossible  build  binary  root  tree  given  point  print  otherwise  print  single  real  total  length  arc  minimum  binary  tree  answer  considered  correct  absolute  relative  error  exceed
580/B __label__sortings  __label__binary  search  kefa  want  celebrate  big  salary  going  restaurant  need  company  kefa  ha  friend  friend  agree  restaurant  kefa  asks  friend  characterized  amount  money  ha  friendship  factor  respect  kefa  parrot  want  friend  feel  poor  compared  somebody  else  company  kefa  count  friend  feel  poor  company  someone  ha  least  unit  money  doe  kefa  want  total  friendship  factor  member  company  maximum  help  invite  optimal  company  input  contains  space  separated  kefa  friend  minimum  difference  amount  money  order  feel  poor  respectively  next  description  kefa  friend  contains  description  friend  type  amount  money  friendship  factor  respectively  print  maximum  total  friendship  factir  reached
1163/C1 __label__brute  force  __label__geometry  problem  next  ha  smaller  constraint  wa  sunday  morning  friend  selena  shiro  katie  decided  trip  nearby  power  station  try  home  arriving  power  station  cat  got  impressed  large  power  transmission  system  consisting  many  chimney  electric  pole  wire  since  cat  found  thing  gigantic  entrance  station  map  describing  complicated  wiring  system  selena  best  math  friend  decided  draw  map  cartesian  plane  pole  point  coordinate  since  every  pole  different  point  representing  pole  distinct  every  pole  connected  wire  wire  straight  plane  infinite  direction  pole  lying  connected  single  common  wire  selena  think  whenever  different  electric  wire  intersect  interfere  cause  damage  wonder  many  pair  intersecting  could  help  problem  contains  single  electric  pole  following  contains  coordinate  pole  guaranteed  point  distinct  print  single  pair  wire  intersecting
1083/D __label__implementation  __label__data  structures  fair  nut  ha  found  array  call  subarray  sequence  consecutive  element  array  index  know  reason  call  pair  subsegments  good  following  condition  satisfied  subsegments  nested  subsegments  element  index  doe  belong  another  subsegment  subsegments  intersect  element  belongs  intersection  belongs  segment  example  pair  good  subsegment  contains  subsegment  belongs  segment  occurs  twice  subsegment  help  fair  nut  find  pair  good  subsegments  answer  rather  big  print  modulo  contains  single  length  array  second  contains  array  element  print  single  pair  good  subsegments  modulo
127/B __label__implementation  nicholas  painter  going  paint  several  new  canvas  nicholas  sure  canvas  turn  great  need  framing  hung  wall  frame  nicholas  decided  begin  nicholas  ha  stick  whose  length  equal  nicholas  doe  want  break  stick  glue  together  make  h  sized  frame  need  stick  whose  length  equal  stick  whose  length  equal  specifically  make  square  frame  need  stick  length  nicholas  want  make  stick  ha  many  frame  possible  able  paint  many  canvas  possible  fill  frame  help  uneasy  task  note  necessary  use  stick  nicholas  ha  contains  stick  second  contains  space  separated  equal  length  stick  print  single  maximum  frame  nicholas  make  future  canvas
356/A __label__data  structures  hooray  berl  king  berland  making  knight  tournament  king  ha  already  sent  message  knight  kingdom  turn  agreed  participate  grand  event  simple  peasant  surprise  slept  morning  late  tournament  wa  weekend  really  curious  result  tournament  time  tournament  berland  went  follows  knight  participating  tournament  knight  wa  assigned  unique  tournament  consisted  fight  fight  knight  still  game  least  fought  right  continue  taking  part  tournament  fight  participant  fight  knight  knight  continued  participating  tournament  knight  left  tournament  winner  last  fight  knight  became  winner  tournament  fished  information  fight  friend  knight  want  know  name  knight  wa  conquered  think  knight  wa  conquered  knight  wa  fight  knight  present  winner  wa  knight  write  code  calculates  knight  name  knight  beat  contains  knight  fight  following  contains  liii  description  fight  guaranteed  input  correct  match  problem  statement  guaranteed  least  knight  took  part  battle  print  knight  lost  equal  knight  beat  knight  knight  winner  must  equal
1062/F __label__dfs  __label__graphs  city  kingdom  numbered  people  travel  city  way  road  passenger  jatc  find  weird  city  start  trip  return  back  using  road  kingdom  kingdom  viewed  acyclic  graph  annoyed  traveling  system  jatc  decides  meet  king  ask  something  response  king  say  upgrade  city  make  easier  travel  budget  king  upgrade  city  important  semi  important  city  called  important  every  city  either  path  path  city  called  semi  important  important  destroy  exactly  city  becomes  important  king  start  act  soon  find  city  please  help  speed  process  input  contains  city  way  road  next  describe  road  system  kingdom  contains  denoting  way  road  guaranteed  kingdom  road  make  acyclic  graph  multiple  edge  self  loop  print  single  city  king  ha  upgrade
1121/B __label__implementation  __label__brute  force  mike  decided  teach  programming  child  elementary  school  know  easy  task  interest  child  age  code  decided  give  child  sweet  mike  ha  sweet  size  sweet  different  size  pair  since  mike  ha  taught  many  year  know  give  sweet  size  child  another  child  ha  smaller  sum  size  upset  child  different  sum  sweet  upset  apparently  mike  doe  want  somebody  upset  mike  want  invite  child  giving  sweet  obviously  give  sweet  child  goal  invite  many  child  since  mike  busy  preparing  lecture  elementary  school  asking  find  maximum  child  invite  giving  sweet  way  nobody  upset  contains  sweet  mike  ha  second  contains  size  sweet  guaranteed  distinct  print  maximum  child  mike  invite  giving  sweet  way  nobody  upset
631/A __label__implementation  __label__brute  force  blake  ceo  large  company  called  blake  technology  love  company  much  think  company  best  every  candidate  need  pas  interview  consists  following  problem  define  function  bitwise  element  array  given  array  length  need  determine  maximum  value  sum  possible  input  contains  single  length  array  second  contains  third  contains  print  single  maximum  value  sum  possible
1089/K __label__data  structures  king  kog  got  annoyed  usual  laxity  knight  break  hall  without  prior  notice  thus  king  decided  build  reception  queue  knight  chooses  advance  time  come  long  visit  take  knight  served  order  recorded  time  knight  ha  wait  visit  knight  finished  princess  keabeanie  want  see  father  doe  want  interrupt  knight  join  queue  unfortunately  knight  change  mind  often  join  queue  cancel  visit  please  help  princess  understand  long  wait  see  father  enters  queue  specified  moment  time  given  record  reception  input  contains  single  event  event  type  join  cancel  query  join  new  knight  join  queue  time  knight  come  duration  visit  cancel  knight  cancel  visit  counted  starting  corresponding  join  event  list  event  query  keabeanie  asks  long  wait  come  time  guaranteed  event  knight  entrance  time  queue  cancel  event  refer  previous  join  cancelled  keabeanie  come  time  knight  keabeanie  polite  wait  knight  pas  query  write  separate  amount  time  keabeanie  wait
1136/D __label__greedy  big  break  nastya  came  school  dining  room  pupil  school  numbered  unfortunately  nastya  came  pretty  late  pupil  already  stood  queue  nastya  took  last  place  queue  course  little  bit  sad  nastya  going  despond  pupil  queue  agree  change  place  pupil  formally  pair  pupil  stand  directly  front  pupil  nastya  ask  change  place  nastya  asks  find  maximal  place  queue  move  forward  contains  pupil  queue  pair  pupil  agrees  change  place  second  directly  front  second  second  contains  initial  arrangement  pupil  queue  queue  start  end  permutation  word  pupil  stand  position  queue  following  contains  denoting  pupil  agrees  change  place  pupil  directly  front  guaranteed  note  possible  pair  pupil  agree  change  place  nastya  last  person  queue  pupil  print  single  place  queue  move  forward
1149/E __label__graphs  byteland  political  party  fighting  seat  parliament  upcoming  election  wrong  answer  party  time  limit  exceeded  party  want  convince  many  citizen  possible  cast  vote  keep  promising  lower  lower  tax  city  byteland  connected  way  road  interestingly  enough  road  network  ha  cycle  impossible  start  city  follow  road  return  city  last  year  citizen  city  pay  bourles  tax  party  alternately  hold  election  convention  various  city  party  hold  convention  city  party  need  decrease  tax  city  non  negative  amount  bourles  time  arbitrarily  modify  tax  city  reached  using  single  road  condition  must  fulfilled  tax  city  ha  remain  non  negative  amount  bourles  party  hold  convention  wrong  answer  party  predicted  party  hold  last  convention  win  election  wrong  answer  party  win  regardless  time  limit  exceeded  party  move  input  contains  city  road  byteland  next  contains  space  separated  denotes  amount  tax  paid  city  following  contains  describes  way  road  leading  city  city  cycle  road  network  road  connect  pair  city  show  convention  held  indefinitely  correct  test  case  wrong  answer  party  win  election  output  win  output  case  additionally  asked  produce  convention  allowing  party  win  regardless  opponent  action  second  non  negative  describing  amount  tax  paid  consecutive  city  convention  multiple  answer  output  guarantee  party  ha  winning  move  exists  move  city  ha  pay  bourles
1203/D1 __label__implementation  __label__greedy  difference  easy  hard  version  length  string  given  string  string  consisting  lowercase  latin  letter  guaranteed  obtained  removing  possibly  character  necessary  contiguous  without  changing  order  remaining  character  word  guaranteed  subsequence  example  string  test  tst  subsequence  string  test  string  tset  contest  subsequence  string  test  want  remove  substring  contiguous  subsequence  maximum  possible  length  removing  substring  remain  subsequence  want  remove  substring  string  transformed  length  task  find  maximum  possible  length  substring  remove  still  subsequence  input  contains  string  consisting  least  lowercase  latin  letter  second  input  contains  string  consisting  least  lowercase  latin  letter  guaranteed  subsequence  print  maximum  possible  length  substring  remove  still  subsequence
1236/E __label__dp  __label__data  structures  __label__binary  search  alice  playing  game  good  friend  marisa  box  arranged  numbered  left  right  marisa  hide  doll  box  alice  chance  guess  doll  alice  correctly  guess  box  doll  win  game  otherwise  friend  win  game  order  win  marisa  use  unfair  trick  time  alice  guess  box  move  doll  neighboring  box  keep  place  box  neighboring  use  trick  game  start  game  happens  order  game  start  marisa  make  trick  alice  make  guess  marisa  make  trick  alice  make  second  guess  marisa  make  trick  alice  make  guess  marisa  make  trick  game  end  alice  ha  come  sequence  guess  ask  doll  box  want  know  scenario  marisa  win  game  put  doll  box  beginning  end  game  doll  box  help  calculate  contains  separated  space  box  guess  alice  make  next  contains  separated  space  mean  box  alice  guess  guess  print  scenario  single  pair  box  marisa  put  doll  box  make  trick  way  end  game  doll  box  win  game
802/B __label__greedy  __label__data  structures  whereas  human  nowadays  read  fewer  fewer  book  paper  book  readership  marmot  ha  surged  heidi  ha  expanded  library  serving  longer  request  sequence  easy  version  limit  changed  easy  version
1157/F __label__dp  __label__greedy  __label__constructive  algorithms  people  row  height  person  choose  subset  people  try  arrange  balanced  circle  balanced  circle  order  people  difference  height  adjacent  people  example  let  height  chosen  people  people  choose  condition  satisfied  condition  satisfied  mean  absolute  value  obvious  circle  consisting  person  balanced  task  choose  maximum  people  construct  balanced  circle  consisting  chosen  people  obvious  circle  consisting  person  balanced  answer  always  exists  input  contains  people  second  input  contains  height  person  output  print  people  maximum  balanced  circle
627/F __label__dfs  __label__graphs  __label__trees  remote  island  chain  contains  island  bidirectional  bridge  current  bridge  network  form  tree  word  total  bridge  connect  pair  island  way  possible  reach  island  island  using  bridge  network  center  island  contains  identical  pedestal  island  ha  fragile  uniquely  colored  statue  currently  held  pedestal  remaining  island  hold  empty  pedestal  islander  want  rearrange  statue  new  order  repeat  following  process  choose  island  directly  adjacent  island  containing  empty  pedestal  painstakingly  carry  statue  island  adjoining  bridge  place  empty  pedestal  often  impossible  rearrange  statue  desired  order  using  operation  described  islander  would  like  build  additional  bridge  order  make  achievable  fewest  movement  possible  find  bridge  construct  minimum  statue  movement  necessary  arrange  statue  desired  position  contains  single  total  island  second  contains  space  separated  statue  currently  located  island  island  ha  statue  guaranteed  distinct  third  contains  space  separated  desired  statue  island  indicates  island  desire  statue  guaranteed  distinct  next  distinct  space  separated  endpoint  bridge  bridge  form  tree  guaranteed  bridge  listed  twice  input  print  single
621/D __label__math  __label__constructive  algorithms  __label__brute  force  wet  shark  asked  rat  kwesh  generate  positive  real  inclusive  wet  krash  want  impress  wet  shark  generated  exactly  digit  decimal  point  wet  shark  know  rat  kwesh  want  lot  cheese  give  rat  opportunity  earn  lot  cheese  hand  rat  kwesh  rat  kwesh  pick  twelve  option  yz  zy  xz  zx  xy  yx  let  maximum  smallest  index  rat  goal  find  asks  help  rat  kwesh  want  see  much  cheese  get  print  expression  corresponding  input  contains  space  separated  real  given  exactly  digit  decimal  point  find  maximum  value  expression  xyz  xzy  yxz  yzx  zxy  zyx  print  corresponding  expression  many  maximum  print  come  list
560/B __label__implementation  __label__constructive  algorithms  gerald  bought  rare  painting  sotheby  auction  want  hang  wall  bought  special  board  attach  wall  place  painting  board  board  ha  shape  rectangle  painting  shape  rectangle  since  painting  painted  style  abstract  art  doe  matter  exactly  rotated  still  side  board  painting  must  parallel  floor  painting  touch  edge  board  overlap  beyond  edge  board  gerald  asks  whether  possible  place  painting  board  board  bought  large  enough  contains  space  separated  side  board  next  side  painting  input  fit  range  painting  placed  wall  print  yes  without  quote  print  without  quote
46/G __label__geometry  happened  time  great  berland  empire  emperor  dreamt  messenger  god  ordered  build  temple  whose  base  would  convex  polygon  angle  next  morning  emperor  gave  command  build  temple  whose  base  wa  regular  polygon  angle  temple  wa  built  soon  empire  wa  shaken  disaster  crop  failure  earthquake  destroyed  temple  emperor  understood  somehow  caused  wrath  god  fall  people  ordered  bring  wise  man  wise  man  appeared  emperor  retold  dream  asked  wisest  wisest  tell  could  infuriated  god  lord  wise  man  answered  far  judge  god  angry  haste  fulfill  order  listen  end  message  indeed  following  night  messenger  appeared  reproached  emperor  chosen  imperfect  shape  temple  shape  perfect  regular  polygon  cried  emperor  dream  messenger  gave  complete  thorough  reply  vertex  polygon  positioned  lattice  point  length  side  different  possible  range  polygon  polygon  maximum  side  minimal  possible  must  chosen  obedient  architect  going  make  temple  plan  note  polygon  simple  border  without  self  intersection  overlapping  convex  acceptable  consecutive  vertex  lie  contains  single  print  yes  without  quote  possible  build  polygon  possessing  needed  quality  next  print  coordinate  polygon  vertex  order  would  passed  counter  clockwise  absolute  value  coordinate  exceed  vertex  coincide  permitted  print  possible  solution  print  build  polygon  impossible
678/F __label__data  structures  __label__geometry  lena  programmer  got  task  solve  work  empty  set  pair  query  process  query  type  add  pair  set  remove  pair  added  query  query  numbered  given  find  maximal  value  pair  set  help  lena  process  query  input  contains  query  next  start  type  query  pair  follows  query  type  follows  query  second  type  guaranteed  le  query  query  ha  type  pair  query  already  removed  follows  query  third  type  query  third  type  print  separate  desired  maximal  value
698/B __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  tree  undirected  connected  graph  without  cycle  let  consider  rooted  undirected  tree  vertex  numbered  many  way  represent  tree  way  create  array  denotes  parent  vertex  convenience  root  considered  parent  rooted  tree  array  given  sequence  able  restore  tree  must  exactly  index  vertex  root  tree  vertex  edge  vertex  vertex  sequence  called  valid  described  procedure  generates  rooted  tree  example  sequence  valid  given  sequence  necessarily  valid  task  change  minimum  element  order  get  valid  sequence  print  minimum  change  example  valid  sequence  change  many  valid  sequence  achievable  minimum  change  print  input  contains  vertex  tree  second  contains  print  minimum  element  change  order  get  valid  sequence
1118/E __label__implementation  __label__constructive  algorithms  king  berland  organizes  ball  pair  invited  ball  numbered  pair  consists  man  woman  dancer  either  man  woman  ha  monochrome  costume  color  costume  represented  inclusive  let  color  man  costume  color  woman  costume  pair  choose  color  dancer  costume  value  way  every  inclusive  completely  identical  pair  index  time  pair  color  man  costume  color  woman  costume  pair  every  consecutive  adjacent  pair  man  costume  color  woman  costume  color  differ  every  condition  hold  let  take  look  example  bad  good  color  choosing  man  pair  woman  second  bad  color  choosing  contradiction  second  rule  equal  pair  contradiction  third  rule  pair  costume  color  contradiction  fourth  rule  consecutive  pair  color  costume  men  woman  good  color  choosing  find  suitable  color  choosing  say  suitable  choosing  exists  input  contains  pair  color  impossible  find  suitable  color  choosing  print
607/C __label__strings  spirit  holiday  saitama  ha  given  genos  grid  path  length  weird  gift  even  saitama  standard  grid  path  ordered  sequence  neighbouring  square  infinite  grid  square  neighbouring  share  side  example  grid  path  note  square  sequence  might  repeated  path  ha  self  intersection  movement  grid  path  restricted  adjacent  square  sequence  square  move  square  path  note  single  valid  move  last  square  grid  path  note  even  square  path  coincides  square  move  square  available  example  second  square  sequence  move  either  third  square  ensure  movement  ambiguous  grid  path  alternating  sequence  square  example  contiguous  subsequence  occur  valid  grid  path  marble  placed  square  grid  path  genos  want  get  marble  last  square  grid  path  catch  whenever  move  marble  marble  copy  movement  possible  instance  marble  move  east  marble  try  move  east  well  try  mean  moving  east  valid  move  marble  move  east  moving  north  increase  second  coordinate  moving  south  decrease  similarly  moving  east  increase  coordinate  moving  west  decrease  given  valid  grid  path  genos  want  know  possible  move  marble  end  respective  path  possible  move  marble  marble  rest  last  square  respective  path  input  contains  single  length  path  second  input  contains  string  consisting  character  either  grid  path  character  thought  sequence  move  needed  traverse  grid  path  example  example  path  problem  statement  expressed  string  nnesww  third  input  contains  string  character  either  second  grid  path  print  yes  without  quote  possible  marble  end  position  time  print  without  quote  otherwise  case  answer  case  insensitive
1062/B __label__math  __label__greedy  __label__number  theory  jatc  math  teacher  always  give  class  interesting  math  problem  get  bored  today  problem  follows  given  perform  following  operation  time  mul  multiplies  arbitrary  positive  sqrt  replaces  apply  operation  must  perform  operation  many  time  like  minimum  value  achieved  minimum  operation  achieve  minimum  value  apparently  class  know  answer  problem  maybe  help  input  contains  single  initial  print  minimum  achieved  using  described  operation  minimum  operation  required
847/K __label__sortings  evening  polycarp  decided  analyze  today  travel  expense  public  transport  bus  system  capital  berland  arranged  way  bus  run  along  route  stop  bus  ha  intermediate  stop  bus  continuously  run  along  route  stop  back  bus  running  pair  stop  polycarp  made  trip  bus  trip  stop  started  trip  stop  finished  known  trip  follow  chronological  order  polycarp  note  known  trip  bus  cost  burles  case  passenger  make  transshipment  cost  trip  decrease  burles  passenger  make  transshipment  stop  board  bus  coincides  stop  left  previous  bus  obviously  trip  made  transshipment  example  polycarp  made  consecutive  trip  berbank  university  university  bermall  university  berbank  payed  burles  berbank  arrived  university  made  transshipment  bus  departed  bermall  walked  university  returned  berbank  bus  polycarp  buy  travel  card  travel  card  cost  burles  travel  card  single  bus  route  make  free  charge  trip  route  direction  purchased  travel  card  used  time  direction  smallest  amount  money  polycarp  could  spent  today  buy  travel  card  contains  polycarp  trip  cost  regualar  single  trip  cost  trip  transshipment  maximum  travel  card  polycarp  buy  cost  single  travel  card  following  describe  trip  chronological  order  contains  exactly  different  word  separated  single  space  name  start  stop  name  finish  stop  trip  name  consist  uppercase  lowercase  english  letter  length  letter  inclusive  uppercase  lowercase  letter  considered  different  print  smallest  amount  money  polycarp  could  spent  today  purchase  travel  card
1146/D __label__math  __label__dfs  __label__number  theory  frog  initially  position  frog  ha  positive  position  either  jump  position  let  distinct  frog  reach  never  jump  outside  interval  frog  need  visit  trip  counted  frog  somehow  reach  start  given  find  find  sum  contains  print  single  desired  sum
979/E __label__dp  kuro  ha  recently  intelligent  cat  ever  contest  friend  decided  katie  home  celebrate  kuro  winning  big  meal  took  small  break  started  playing  game  kuro  challenged  katie  create  game  white  paper  pencil  pair  scissors  lot  arrow  assume  arrow  infinite  immediately  katie  came  game  called  topological  parity  paper  divided  piece  enumerated  shiro  ha  painted  piece  color  specifically  piece  ha  color  defines  black  color  defines  white  color  mean  piece  colored  rule  game  simple  player  must  put  arrow  pair  different  piece  way  arrow  piece  start  le  piece  end  different  piece  connected  arrow  player  must  choose  color  unpainted  piece  score  valid  way  putting  arrow  coloring  piece  defined  path  piece  alternating  color  example  valid  path  counted  travel  piece  piece  arrow  kuro  fun  love  parity  let  call  favorite  parity  stand  even  stand  odd  want  put  arrow  choose  color  way  score  ha  parity  seems  like  many  way  satisfy  kuro  want  count  could  large  let  help  problem  print  modulo  contains  piece  kuro  wanted  parity  second  contains  color  piece  print  single  way  put  arrow  choose  color  valid  path  alternating  color  ha  parity
1010/C __label__number  theory  astronaut  natasha  arrived  mar  know  martian  poor  alien  ensure  better  life  mar  citizen  emperor  decided  take  tax  every  tourist  visited  planet  natasha  inhabitant  earth  therefore  pay  tax  enter  territory  mar  banknote  denomination  mar  value  banknote  natasha  ha  infinite  banknote  denomination  martian  finger  hand  use  system  base  addition  martian  consider  digit  system  base  divine  thus  last  digit  natasha  tax  amount  written  system  base  martian  happy  unfortunately  natasha  doe  know  martian  divine  digit  determine  value  natasha  make  martian  happy  natasha  use  banknote  martian  give  change  contains  denomination  banknote  base  system  mar  second  contains  denomination  banknote  mar  given  decimal  notation  output  value  natasha  make  martian  happy
1101/E __label__implementation  polycarp  ha  recently  got  new  job  earns  much  old  wallet  even  store  money  ha  berland  bill  somehow  come  lot  different  size  shaped  rectangle  possibly  square  wallet  produced  form  rectangle  possibly  square  bill  xy  fit  wallet  hw  either  bill  overlap  wallet  infinite  amount  bill  fit  wallet  implies  bill  polycarp  currently  fit  wallet  every  single  fit  independently  others  asked  perform  query  type  polycarp  earns  bill  size  xy  polycarp  want  check  bill  ha  earned  moment  fit  wallet  size  hw  guaranteed  least  query  type  query  type  least  query  type  input  data  query  type  print  yes  bill  ha  earned  moment  fit  wallet  given  size  print  otherwise  contains  single  query  next  contains  query  type  polycarp  earns  bill  size  xy  polycarp  want  check  bill  ha  earned  moment  fit  wallet  size  hw  guaranteed  least  query  type  query  type  least  query  type  input  data  query  type  print  yes  bill  ha  earned  moment  fit  wallet  given  size  print  otherwise
766/C __label__dp  __label__greedy  __label__brute  force  __label__strings  mahmoud  wrote  message  length  want  send  birthday  present  friend  moaz  like  string  wrote  magical  paper  wa  surprised  character  disappeared  writing  string  magical  paper  allow  character  english  alphabet  written  string  length  example  write  character  paper  string  length  string  allowed  string  aaa  mahmoud  decided  split  message  non  empty  substring  write  every  substring  independent  magical  paper  fulfill  condition  sum  length  overlap  example  want  send  string  aaa  split  use  magical  paper  use  magical  paper  split  sum  length  greater  split  message  single  string  fulfills  condition  substring  string  string  consists  consecutive  character  string  string  abc  substring  string  abc  string  acb  string  substring  mahmoud  wa  thinking  split  message  ehab  told  many  way  split  mahmoud  asked  question  many  way  split  string  substring  every  substring  fulfills  condition  magical  paper  sum  length  overlap  compute  answer  modulo  maximum  length  substring  appear  valid  splitting  minimum  substring  message  spit  way  considered  different  set  split  position  differ  example  splitting  considered  different  splittings  message  aaa  contains  denoting  length  message  second  contains  message  length  consists  lowercase  english  letter  third  contains  x  maximum  length  substring  letter  appear  print
622/F __label__math  well  known  formula  mathematician  found  similar  formula  higher  degree  find  value  sum  modulo  find  remainder  dividing  answer  value  contains  print  remainder  dividing  value  sum  value
1244/F __label__implementation  __label__constructive  algorithms  chip  arranged  circle  numbered  initially  chip  ha  black  white  color  iteration  occur  iteration  chip  change  color  according  following  rule  chip  chip  considered  chip  neighbour  white  chip  greater  black  chip  chip  chip  becomes  white  otherwise  chip  becomes  black  note  neighbouring  chip  neighbour  chip  neighbour  following  picture  describes  iteration  chip  initially  black  chip  white  iteration  become  black  become  white  task  determine  color  chip  iteration  contains  chip  iteration  respectively  second  contains  string  consisting  character  character  chip  white  initially  character  chip  black  initially  print  string  consisting  character  iteration  chip  white  character  otherwise  character
1043/D __label__math  __label__brute  force  acingel  small  town  wa  doctor  miss  ada  wa  friendly  nobody  ha  ever  said  something  bad  could  expected  ada  found  dead  house  gawry  world  famous  detective  appointed  find  criminal  asked  neighbour  ada  client  visited  unlucky  day  let  client  neighbour  testimony  permutation  describes  order  client  seen  asked  neighbour  fact  suspicious  according  given  permutation  client  ha  seen  morning  others  ha  seen  evening  morning  neighbour  must  sleeping  think  gawry  evening  dark  see  somebody  face  want  delete  prefix  suffix  prefix  suffix  empty  permutation  non  empty  equal  potential  criminal  disappear  testimony  stand  contradiction  many  way  way  called  different  remaining  common  part  different  contains  suspect  asked  neighbor  next  contains  guaranteed  form  correct  permutation  appears  exactly  output  single  denoting  way  delete  prefix  suffix  permutation  possibly  empty  remaining  part  equal  non  empty
962/B __label__implementation  __label__greedy  __label__constructive  algorithms  consecutive  seat  place  railway  carriage  place  either  empty  occupied  passenger  university  team  olympiad  consists  student  programmer  student  athlete  determine  largest  student  student  put  railway  carriage  student  programmer  sitting  next  student  programmer  student  athlete  sitting  next  student  athlete  word  consecutive  adjacent  place  student  athlete  student  programmer  sitting  consider  initially  occupied  seat  place  occupied  jury  member  obviously  student  total  seat  place  railway  carriage  student  programmer  student  athlete  second  contains  string  length  consisting  character  dot  mean  corresponding  place  empty  asterisk  mean  corresponding  place  occupied  jury  member  print  largest  student  put  railway  carriage  student  programmer  sitting  next  student  programmer  student  athlete  sitting  next  student  athlete
920/F __label__data  structures  __label__brute  force  __label__number  theory  let  positive  divisor  positive  example  divisible  divisible  given  array  process  type  query  replace  every  replace  sum  calculate  print  answer  sum  query  contains  element  array  query  process  respectively  second  contains  element  array  follow  containing  denoting  query  query  replace  otherwise  sum  ii  least  sum  query  sum  query  print  answer
437/B __label__implementation  __label__greedy  __label__sortings  child  day  child  came  pick  house  messed  house  pick  wa  angry  lot  important  thing  lost  particular  favorite  set  pick  fortunately  pick  remembers  something  set  element  distinct  limit  value  wa  equal  sum  lowbit  equal  position  binary  representation  example  lowbit  owbit  owbit  binary  representation  help  pick  find  set  satisfies  condition  contains  sum  imit  um  imit  print  denoting  size  print  element  set  order  multiple  answer  print
479/B __label__implementation  __label__greedy  __label__sortings  __label__constructive  algorithms  __label__brute  force  know  kid  berland  love  playing  cube  little  petya  ha  tower  consisting  cube  size  tower  consists  cube  stacked  top  petya  defines  instability  set  tower  value  equal  difference  height  highest  lowest  tower  example  petya  built  cube  tower  height  instability  set  equal  highest  tower  ha  height  lowest  ha  height  boy  want  instability  set  tower  low  possible  perform  following  operation  several  time  take  top  cube  tower  put  top  tower  set  please  note  petya  would  never  put  cube  tower  wa  removed  think  waste  time  going  school  boy  time  perform  operation  petya  doe  want  late  class  help  accomplish  task  contains  space  separated  positive  tower  given  set  maximum  operation  petya  perform  second  contains  space  separated  positive  tower  initial  height  print  space  separated  non  negative  value  minimum  possible  instability  obtained  performing  operation  second  operation  needed
1044/E __label__implementation  given  nm  grid  grid  cell  filled  unique  appears  exactly  operation  choose  arbitrary  cycle  grid  move  along  cycle  space  cycle  sequence  satisfies  following  condition  least  square  square  appears  every  pair  adjacent  square  last  square  share  edge  example  following  grid  choose  arbitrary  cycle  like  get  following  grid  particular  case  chosen  cycle  represented  sequence  direction  want  rotate  find  sequence  operation  sort  grid  array  created  concatenating  row  highest  lowest  sorted  look  picture  note  need  minimize  operation  sum  cycle  length  constraint  sum  cycle  length  must  greater  show  answer  always  exists  given  constraint  output  valid  sequence  move  sort  grid  contains  dimension  grid  next  contains  denoting  value  block  row  column  guaranteed  distinct  print  single  operation
1181/D __label__implementation  __label__data  structures  __label__sortings  __label__trees  __label__binary  search  misha  wa  interested  water  delivery  childhood  mother  sent  annual  innovative  olympiad  irrigation  ioi  pupil  berland  compete  demonstrating  skill  watering  extremely  expensive  host  olympiad  olympiad  organizer  introduced  following  rule  host  city  selection  host  city  olympiad  selected  following  way  city  berland  wishing  host  olympiad  numbered  host  city  next  olympiad  determined  city  hosted  olympiad  smallest  time  several  city  city  smallest  index  selected  misha  mother  interested  olympiad  held  specific  year  information  know  selection  rule  host  city  olympiad  help  succeed  ask  misha  avoid  flooding  house  contains  q  olympiad  rule  wa  introduced  city  berland  wishing  host  olympiad  year  misha  mother  interested  respectively  next  contains  denotes  city  hosted  olympiad  year  note  rule  wa  introduced  host  city  wa  chosen  arbitrarily  next  contains  year  misha  mother  interested  host  city  print  city  olympiad  hosted  year
591/A __label__math  __label__implementation  harry  potter  must  named  engaged  fight  death  time  located  opposite  end  corridor  length  opponent  simultaneously  charge  deadly  spell  enemy  know  impulse  harry  magic  spell  fly  speed  meter  per  second  impulse  know  magic  spell  fly  speed  meter  per  second  impulse  moving  corridor  toward  time  collision  turn  round  fly  back  cast  without  changing  original  speed  soon  impulse  get  back  caster  wizard  reflects  sends  towards  enemy  without  changing  original  speed  impulse  since  harry  ha  perfectly  mastered  basic  magic  know  second  collision  impulse  disappear  powerful  explosion  occur  exactly  place  collision  young  wizard  good  math  asks  calculate  distance  position  place  second  meeting  spell  impulse  provided  opponent  change  position  whole  fight  input  contains  single  length  corridor  fight  take  place  second  contains  third  contains  speed  magical  impulse  harry  potter  must  named  respectively  print  single  real  distance  end  corridor  harry  located  place  second  meeting  spell  impulse  answer  considered  correct  absolute  relative  error  exceed
865/A __label__constructive  algorithms  attention  lost  test  case  problem  instead  solving  problem  need  generate  test  case  going  give  answer  need  print  test  case  produce  given  answer  original  problem  following  paragraph  people  use  cash  often  used  credit  card  solves  hassle  cash  receive  change  form  exact  amount  money  needed  purchase  item  typically  cashier  give  coin  possible  change  example  change  cent  cashier  could  give  cent  piece  cent  piece  could  give  cent  piece  cent  piece  cent  piece  cent  piece  altogether  different  way  make  cent  using  cent  piece  cent  piece  cent  piece  cent  piece  way  considered  different  different  least  type  coin  given  denomination  coin  amount  change  made  many  different  way  make  change  mentioned  lost  test  case  problem  actually  going  give  way  want  produce  test  case  way  given  could  many  way  achieve  guarantee  always  least  print  long  meet  constraint  described  consist  single  desired  way  print  amount  change  made  denomination  respectively
403/D __label__dp  sequence  pair  beautiful  following  statement  fulfilled  kk  given  positive  distinct  given  find  beautiful  sequence  length  answer  rather  large  print  remainder  dividing  contains  test  data  next  contains  test  input  print  answer  problem  modulo  print  answer  test  order  test  given  input
542/C __label__math  __label__graphs  __label__constructive  algorithms  time  ago  leonid  known  idempotent  function  idempotent  function  defined  set  function  formula  hold  let  denote  function  applied  time  value  formally  given  function  task  find  minimum  positive  function  idempotent  input  single  size  function  domain  second  follow  value  function  output  minimum  function  idempotent
356/E __label__dp  __label__implementation  __label__strings  xenia  coder  went  olympiad  informatics  got  string  problem  unfortunately  xenia  fabulous  string  algorithm  help  solve  problem  string  sequence  character  record  show  length  string  substring  string  string  sisi  string  gray  string  meet  condition  length  string  odd  character  occurs  exactly  string  either  substring  gray  string  example  string  abacaba  xzx  gray  string  string  aaa  abaxcbc  beauty  string  sum  square  length  substring  string  gray  string  word  consider  pair  value  substring  gray  string  add  beauty  xenia  ha  got  string  consisting  lowercase  english  letter  allowed  replace  letter  string  english  letter  task  get  string  maximum  beauty  contains  non  empty  string  string  consists  lowercase  english  letter  print  sought  maximum  beauty  value  xenia  get
34/D __label__dfs  __label__graphs  city  berland  city  ha  index  capital  ha  index  road  berland  way  road  system  exactly  path  capital  city  road  map  look  like  tree  berland  chronicle  road  map  kept  following  way  city  different  capital  kept  index  last  city  way  capital  king  berland  berl  xxxiv  decided  move  capital  city  city  naturally  old  representation  road  map  berland  chronicle  became  incorrect  please  help  king  find  new  representation  road  map  way  described  contains  space  separated  amount  city  berland  index  old  capital  index  new  correspondingly  following  contains  space  separated  old  representation  road  map  city  apart  given  index  last  city  way  capital  city  city  described  order  increasing  index  output  new  representation  road  map  format
716/A __label__implementation  coder  coding  crazy  computer  type  word  consecutive  second  everything  typed  disappear  formally  typed  word  second  next  word  second  new  word  appended  word  screen  everything  screen  disappears  word  typed  appears  screen  example  typed  word  second  second  word  screen  everything  disappears  second  nothing  wa  typed  second  another  word  typed  finally  second  word  typed  total  word  remain  screen  given  time  coder  typed  word  determine  many  word  remain  screen  finished  typing  everything  contains  word  coder  typed  crazy  computer  delay  respectively  next  contains  n  denotes  second  coder  typed  word  print  single  positive  word  remain  screen  word  wa  typed  word  second
988/B __label__sortings  __label__strings  given  string  string  consists  lowercase  english  letter  rearrange  reorder  given  string  way  every  string  string  placed  substring  string  substring  string  possible  choose  several  consecutive  letter  way  form  example  string  contained  substring  string  codeforces  therefore  contained  substring  string  fofo  rof  contains  string  next  given  string  letter  string  inclusive  string  consists  lowercase  english  letter  string  might  equal  impossible  reorder  given  string  required  order  print  without  quote
489/A __label__implementation  __label__greedy  __label__sortings  problem  goal  sort  array  consisting  swap  given  array  find  sequence  swap  make  array  sorted  non  descending  order  swap  performed  consecutively  another  note  problem  minimize  swap  task  find  sequence  longer  input  contains  array  element  second  contains  element  array  element  array  element  numerated  left  right  appear  array  print  swap  next  must  description  swap  per  swap  printed  pair  representing  swap  element  print  index  pair  order  swap  performed  order  appear  output  last  allowed  print  swap  pair  element  multiple  time
819/A __label__greedy  sometimes  mister  ha  free  evening  know  fortunately  mister  found  new  game  player  play  alien  character  game  lowercase  english  letter  player  mister  competitor  initially  player  string  consisting  english  letter  alphabetical  order  example  equal  abcde  player  take  turn  appending  letter  string  mister  move  mister  must  append  exactly  letter  move  arbitrary  choose  letter  opponent  add  exactly  letter  move  mister  quickly  understood  opponent  wa  computer  used  simple  algorithm  computer  turn  considers  suffix  string  length  generates  string  length  letter  string  distinct  appear  considered  suffix  multiple  variant  lexicographically  minimal  chosen  suffix  bfdd  computer  chooses  string  equal  aceg  chosen  string  appended  end  mister  soon  found  game  boring  came  following  question  minimum  possible  different  letter  string  segment  position  inclusive  letter  string  numerated  starting  contains  space  separated  letter  player  appends  bound  segment  print  minimum  possible  different  letter  segment  position  position  inclusive  string
618/A __label__implementation  friend  recently  gave  slime  birthday  slime  initially  value  going  play  game  slime  initially  put  single  slime  row  add  slime  add  slime  place  right  already  placed  slime  last  slime  row  value  combine  together  create  slime  value  would  like  see  final  state  row  added  slime  please  print  value  slime  row  left  right  input  single  output  single  slime  row  finished  procedure  described  problem  statement  value  slime  left
545/C __label__dp  __label__greedy  little  susie  listens  fairy  tale  bed  every  day  today  fairy  tale  wa  wood  cutter  little  girl  immediately  started  imagining  chopper  cutting  wood  imagined  situation  described  tree  located  along  road  point  coordinate  tree  ha  height  woodcutter  cut  tree  fell  left  right  occupies  segment  tree  cut  occupies  single  point  coordinate  woodcutter  fell  tree  segment  occupied  fallen  tree  occupied  point  woodcutter  want  process  many  tree  possible  susie  wonder  maximum  tree  fell  contains  tree  next  pair  coordinate  height  tree  pair  given  order  ascending  tree  located  point  coordinate  print  single  maximum  tree  cut  given  rule
886/A __label__brute  force  small  proud  high  school  wa  decided  win  acm  icpc  goal  requires  compose  many  team  possible  since  student  wished  participate  decision  wa  build  exactly  team  practice  competition  participant  got  score  team  score  defined  sum  score  participant  high  school  management  interested  possible  build  team  equal  score  task  answer  question  single  contains  score  participant  print  yes  quote  clarity  possible  build  team  equal  score  otherwise
552/C __label__math  __label__dp  __label__greedy  __label__brute  force  __label__number  theory  vanya  ha  scale  weighing  load  weight  mass  gram  le  exactly  weight  nominal  value  vanya  wonder  whether  weight  item  mass  using  given  weight  weight  put  pan  scale  formally  speaking  task  determine  whether  possible  place  item  mass  weight  left  pan  scale  weight  right  pan  scale  pan  scale  balance  contains  defining  mass  weight  mass  item  print  word  yes  item  weighted
611/C __label__dp  __label__implementation  say  year  like  domino  tumbling  would  year  fit  grid  think  limak  little  polar  bear  love  play  ha  recently  got  rectangular  grid  row  column  cell  square  either  empty  denoted  forbidden  denoted  row  numbered  top  bottom  column  numbered  left  right  limak  ha  single  domino  want  put  somewhere  grid  domino  occupy  exactly  adjacent  cell  located  either  row  column  adjacent  cell  must  empty  must  inside  grid  limak  need  fun  thus  going  consider  query  query  chooses  rectangle  wonder  many  way  put  single  domino  inside  chosen  rectangle  input  contains  row  column  respectively  next  describe  grid  contains  string  length  character  either  denoting  empty  forbidden  cell  respectively  next  contains  single  query  next  contains  r  c  r  c  query  r  c  denote  row  column  respectively  upper  left  cell  rectangle  r  c  denote  row  column  respectively  bottom  right  cell  rectangle  print  equal  way  put  single  domino  inside  rectangle
1140/B __label__implementation  __label__strings  string  length  consisting  character  operation  string  operation  choose  character  still  remains  string  choose  character  character  come  right  deleted  character  chose  wa  last  nothing  happens  choose  character  character  come  right  deleted  character  chose  wa  nothing  happens  example  choose  character  string  string  become  choose  character  string  string  become  string  good  sequence  operation  performing  character  remain  string  example  string  good  applying  operation  remove  character  given  string  possibly  none  possibly  whole  string  need  calculate  minimum  character  deleted  string  becomes  good  contains  test  case  test  case  represented  test  case  contains  length  string  second  test  case  contains  string  consisting  character  test  case  print
285/C __label__implementation  __label__greedy  __label__sortings  permutation  ordered  set  n  consisting  distinct  positive  exceed  denote  element  permutation  call  size  length  permutation  n  sequence  move  allowed  decrease  increase  count  minimum  move  needed  build  permutation  sequence  contains  size  sought  permutation  second  contains  print  single  minimum  move
69/E __label__implementation  __label__data  structures  programmer  sasha  ha  recently  begun  study  data  structure  coach  stas  told  solve  problem  finding  minimum  segment  array  sasha  coped  sasha  think  learned  stas  gave  new  task  segment  fixed  length  sasha  must  find  maximum  element  occur  given  segment  exactly  help  sasha  solve  problem  contains  positive  array  element  length  segment  follow  contains  single  print  per  print  maximum  subarray  occur  subarray  exactly  time  subarray  print  nothing
1096/G __label__dp  bus  ticket  berland  consists  digit  even  decimal  digit  used  form  ticket  digit  leading  example  digit  used  valid  ticket  ticket  lucky  sum  digit  equal  sum  remaining  digit  calculate  different  lucky  ticket  berland  since  answer  big  print  modulo  contains  digit  ticket  different  decimal  digit  used  even  second  contains  sequence  pairwise  distinct  digit  used  ticket  digit  given  arbitrary  order  print  lucky  ticket  taken  modulo
431/D __label__math  __label__dp  __label__binary  search  day  difficult  lecture  diligent  student  sasha  saw  graffitied  desk  classroom  came  closer  read  find  positive  exactly  binary  representation  contains  exactly  digit  girl  got  interested  task  asked  help  solve  sasha  know  afraid  large  guaranteed  answer  exceed  contains  space  separated  print  required  multiple  answer  print
1046/F __label__implementation  finding  moving  new  planet  support  human  life  discussion  started  currency  used  long  negotiation  bitcoin  wa  ultimately  chosen  universal  currency  great  news  alice  whose  grandfather  got  bitcoin  mining  accumulated  lot  throughout  year  unfortunately  paying  something  bitcoin  everyone  see  many  bitcoins  public  address  wallet  worried  alice  decided  split  bitcoins  multiple  different  address  every  address  ha  satoshi  bitcoin  satoshi  create  new  public  address  wallet  free  willing  pay  fee  satoshi  per  transaction  ensure  acceptable  speed  transfer  fee  deducted  address  transaction  wa  sent  tell  alice  much  total  fee  satoshi  need  pay  achieve  goal  contains  representing  total  public  address  alice  ha  next  contains  separated  single  space  representing  many  satoshi  alice  ha  public  address  last  contains  representing  maximum  satoshies  alice  address  well  fee  satoshies  willing  pay  per  transaction  output  representing  total  fee  satoshi  alice  need  pay  achieve  goal
417/D __label__dp  __label__greedy  __label__sortings  boy  named  gena  really  want  get  russian  code  cup  final  least  get  shirt  offered  problem  complex  made  arrangement  friend  solve  problem  participant  offered  problem  contest  friend  gena  know  problem  solve  gena  friend  agree  help  gena  nothing  friend  asks  gena  ruble  help  solving  problem  friend  agreed  write  code  gena  gena  computer  connected  least  monitor  monitor  cost  ruble  gena  careful  money  want  spend  little  money  possible  solve  problem  help  gena  tell  spend  smallest  possible  amount  money  initially  monitor  connected  gena  computer  contains  gena  friend  problem  cost  single  monitor  following  describe  friend  information  friend  contains  desired  amount  money  monitor  problem  friend  solve  contains  distinct  positive  problem  friend  solve  problem  numbered  print  minimum  amount  money  gena  need  spend  solve  problem  print  achieved
1103/E __label__math  __label__number  theory  let  define  radix  sum  consisting  digit  consisting  digit  add  leading  shorter  match  longer  length  consisting  digit  mod  mod  radix  sum  several  defined  follows  given  array  task  compute  way  consequently  choose  array  time  radix  sum  equal  calculate  value  modulo  contains  length  array  second  contains  array  element  output  equal  corresponding  way  modulo
988/D __label__math  __label__brute  force  distinct  point  coordinate  coordinate  point  equal  choose  subset  given  set  point  distance  pair  point  subset  integral  power  necessary  consider  pair  point  adjacent  note  subset  containing  element  satisfies  condition  subset  choose  subset  maximum  possible  size  word  choose  maximum  possible  point  pair  true  non  negative  necessarily  pair  point  contains  point  second  contains  pairwise  distinct  coordinate  point  print  maximum  possible  point  subset  satisfies  condition  described
1096/C __label__brute  force  __label__geometry  given  angle  ang  ang  jury  asks  find  regular  gon  regular  polygon  vertex  ha  vertex  non  consecutive  bc  ang  report  gon  several  answer  print  minimal  guarantied  answer  exists  exceed  contains  single  query  next  contains  ang  ang  ng  angle  measured  degree  query  print  single  minimal  possible  vertex  regular  gon
373/B __label__math  __label__implementation  __label__binary  search  define  positive  follows  digit  decimal  base  example  want  make  consecutive  sequence  starting  need  pay  add  sequence  spend  cost  want  make  sequence  long  possible  write  program  tell  sequence  maximum  length  contains  please  write  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  single  answer  problem
24/E __label__binary  search  recently  construction  berland  collider  ha  completed  collider  represented  long  narrow  tunnel  contains  particle  associate  collider  dimensional  coordinate  system  going  left  right  particle  know  coordinate  velocity  moment  start  collider  velocity  particle  change  launch  collider  berland  scientist  think  big  bang  happen  collision  particle  whose  velocity  differs  direction  help  determine  much  time  elapses  launch  collider  big  bang  happens  contains  single  amount  particle  collider  next  description  particle  particle  described  coordinate  velocity  respectively  coordinate  distinct  particle  listed  order  increasing  coordinate  coordinate  meter  velocity  meter  per  second  negative  velocity  mean  start  collider  particle  move  left  positive  particle  move  right  big  bang  output  otherwise  output  much  time  second  elapses  launch  collider  big  bang  happens  answer  must  relative  absolute  error  le
777/E __label__dp  __label__greedy  __label__data  structures  __label__sortings  __label__brute  force  course  heard  famous  task  hanoi  tower  know  special  factory  producing  ring  wonderful  game  upon  time  ruler  ancient  egypt  ordered  worker  hanoi  factory  create  high  tower  possible  ready  serve  strange  order  create  new  tower  using  already  produced  ring  ring  factory  stock  ring  ha  inner  radius  outer  radius  height  goal  select  subset  ring  arrange  following  condition  satisfied  outer  radius  form  non  increasing  sequence  put  ring  ring  bji  ring  fall  mean  place  ring  ring  total  height  ring  used  maximum  possible  input  contains  single  ring  factory  stock  next  contains  inner  radius  outer  radius  height  ring  respectively  print  maximum  height  tower  obtained
616/F __label__strings  given  string  string  ha  cost  let  define  function  string  occurrence  length  string  find  maximal  value  function  string  note  string  necessarily  string  contains  string  next  contains  contains  non  empty  string  contains  lowercase  english  letter  guaranteed  sum  length  string  greater  last  contains  cost  string  print  maximal  value  function  string  note  time  string  necessarily
377/A __label__dfs  pavel  love  grid  maze  grid  maze  n  rectangle  maze  cell  either  empty  wall  cell  another  cell  empty  common  side  pavel  drew  grid  maze  empty  cell  forming  connected  area  empty  cell  pavel  like  maze  ha  little  wall  want  turn  exactly  empty  cell  wall  remaining  cell  still  formed  connected  area  help  contains  maze  height  width  correspondingly  wall  pavel  want  add  letter  represents  empty  cell  original  maze  next  contains  character  describe  original  maze  character  equal  corresponding  cell  empty  character  equal  cell  wall  print  containing  character  new  maze  fit  pavel  requirement  mark  empty  cell  transformed  wall  cell  must  left  without  change
732/B __label__dp  __label__greedy  recently  dog  wa  bought  polycarp  dog  name  cormen  polycarp  ha  lot  trouble  example  cormen  like  going  walk  empirically  polycarp  learned  dog  need  least  walk  consecutive  day  order  feel  good  example  yesterday  polycarp  went  walk  cormen  time  today  ha  walk  least  time  polycarp  analysed  affair  next  day  made  sequence  time  polycarp  walk  dog  day  affair  example  ha  shop  throw  trash  etc  help  polycarp  determine  minimum  walk  need  additionaly  next  day  cormen  feel  good  day  assume  day  day  day  day  polycarp  walk  cormen  exactly  time  write  program  find  minumum  additional  walk  appropriate  schedule  sequence  bii  mean  total  walk  dog  day  contains  day  minimum  walk  cormen  consecutive  day  second  contains  walk  cormen  day  polycarp  ha  already  planned  print  smallest  additional  walk  polycarp  next  day  cormen  feel  good  day
376/A __label__math  __label__implementation  description  lever  string  represent  string  length  record  lever  look  horizontal  bar  weight  length  exactly  pivot  assume  bar  segment  axis  point  decoding  lever  description  given  character  string  equal  mean  coordinate  pivot  bar  character  string  equal  mean  coordinate  nothing  lying  bar  character  string  equal  digit  mean  coordinate  weight  mass  bar  task  given  lever  description  print  balance  assume  bar  weight  anything  assume  bar  initially  balance  weight  simultaneously  put  bar  either  tilt  left  tilt  right  balance  contains  lever  description  non  empty  string  consisting  digit  character  guaranteed  contains  exactly  character  guaranteed  pivot  lever  located  end  lever  bar  solve  problem  need  bit  please  forget  use  program  print  left  given  lever  tilt  left  right  tilt  right  balance  balance
420/D __label__data  structures  employee  company  lot  way  entertain  today  invited  famous  magician  show  trick  plastic  cup  marble  point  trick  spectator  attention  initially  spectator  stand  front  plastic  cup  magician  place  small  marble  cup  shuffle  cup  spectator  guess  cup  hide  marble  head  coder  company  easy  trick  saw  performance  noticed  several  important  fact  cup  contains  mark  mark  cup  distinct  magician  shuffle  cup  operation  operation  look  like  take  cup  marked  sitting  position  row  cup  position  numbered  left  right  starting  shift  beginning  cup  row  position  head  coder  came  home  work  wanted  trick  unfortunately  remember  starting  final  position  cup  remembered  operation  magician  performed  help  coder  given  operation  order  made  find  least  initial  permutation  cup  described  operation  given  order  otherwise  state  permutation  exist  contains  next  contains  couple  contains  description  operation  magician  note  operation  given  order  magician  made  coder  want  make  order  described  permutation  exist  programmer  remembered  wrong  operation  print  otherwise  print  distinct  represent  mark  cup  initially  row  position
848/C __label__data  structures  feel  lonely  sorrowful  everything  buried  string  bead  left  message  leaving  bead  numbered  left  right  shape  numbered  inclusive  bead  shape  memory  shape  certain  subsegment  bead  defined  difference  last  position  position  shape  appears  segment  memory  subsegment  sum  memory  shape  occur  time  time  shape  bead  change  well  memory  sometimes  past  secreted  subsegments  recalled  find  memory  input  contains  space  separated  bead  string  total  change  query  respectively  second  contains  initial  shape  bead  respectively  following  describes  either  change  bead  query  subsegment  ha  following  format  meaning  shape  bead  changed  denoting  query  memory  subsegment  inclusive  query  print  memory  recalled  subsegment
1185/C2 __label__math  __label__greedy  __label__data  structures  __label__brute  force  difference  easy  hard  version  constraint  write  solution  python  prefer  send  pypy  speed  execution  time  session  ha  begun  beland  state  university  many  student  taking  exam  polygraph  poligrafovich  going  examine  group  student  student  take  exam  order  rule  exam  following  student  randomly  chooses  ticket  ticket  hard  student  answer  go  home  immediately  process  fast  considered  time  elapses  student  fails  exam  student  find  ticket  easy  spends  exactly  minute  pas  exam  immediately  get  mark  go  home  student  take  exam  fixed  order  without  interruption  moment  time  polygraph  poligrafovich  take  answer  student  duration  whole  exam  student  minute  max  max  student  end  list  greater  possibility  run  time  pas  exam  student  count  minimum  possible  student  need  fail  exam  student  ha  enough  time  pas  exam  student  find  answer  independently  finding  answer  student  student  leave  finding  answer  student  student  doe  home  input  contains  student  total  duration  exam  minute  respectively  second  input  contains  time  minute  student  spends  answer  ticket  guaranteed  value  greater  print  must  equal  minimum  student  leave  exam  order  student  ha  enough  time  pas  exam
679/E __label__data  structures  limak  bear  good  handling  query  asks  say  power  bad  good  given  sequence  good  task  handle  query  type  print  separate  set  guaranteed  good  increase  repeat  process  least  bad  note  query  good  input  contains  size  limak  sequence  query  respectively  second  input  contains  initial  element  limak  sequence  good  follow  describes  query  typei  ypei  type  query  least  query  type  output  empty  query  second  third  type  query  second  type  guaranteed  good  query  third  type  bad  query  type  print  answer  separate
417/B __label__implementation  russian  code  cup  programming  competition  testing  system  store  sent  solution  participant  know  many  participant  use  random  program  often  sent  several  solution  source  code  check  participant  identified  unique  positive  sent  solution  characterized  different  solution  sent  solution  identical  participant  author  solution  consequently  identical  solution  known  data  testing  system  stored  chronological  order  testing  system  ha  solution  participant  testing  system  ha  solution  participant  stored  somewhere  competition  checking  system  crashed  data  submission  participant  restored  jury  want  verify  recovered  data  chronological  order  help  jury  input  contains  solution  following  contains  separated  space  previous  unique  solution  identifier  participant  single  output  yes  data  chronological  order  otherwise
878/A __label__constructive  algorithms  petya  learned  new  programming  language  calpas  program  language  always  take  non  negative  return  non  negative  well  language  command  apply  bitwise  operation  xor  given  constant  current  program  arbitrary  sequence  operation  arbitrary  constant  program  run  operation  applied  given  order  argument  end  result  returned  petya  wrote  program  language  turned  long  write  program  calpas  doe  thing  petya  program  consists  program  return  petya  program  argument  contains  next  command  command  consists  character  represents  operation  xor  respectively  constant  output  length  program
546/C __label__dfs  __label__brute  force  bored  soldier  playing  card  war  card  deck  consists  exactly  card  numbered  value  different  divide  card  manner  possible  different  card  play  war  like  card  game  rule  following  turn  fight  happens  pick  card  top  stack  put  table  whose  card  value  bigger  win  fight  take  card  table  bottom  stack  precisely  take  opponent  card  put  bottom  stack  put  card  bottom  stack  turn  player  stack  becomes  empty  loses  win  calculate  many  fight  happen  win  game  state  game  end  contains  single  card  second  contains  soldier  card  follow  value  soldier  card  top  bottom  stack  third  contains  second  soldier  card  follow  value  second  soldier  card  top  bottom  stack  card  value  different  somebody  win  game  print  stand  fight  end  game  second  showing  player  ha
604/A __label__implementation  kevin  sun  ha  finished  competing  codeforces  round  round  wa  minute  long  featured  problem  maximum  point  value  respectively  despite  challenging  task  kevin  wa  uncowed  bulldozed  distinguishing  herd  best  cowmputer  scientist  bovinia  kevin  know  submission  time  problem  wrong  submission  made  problem  total  successful  unsuccessful  hack  codeforces  scoring  complicated  kevin  want  write  program  compute  final  score  codeforces  score  computed  follows  maximum  point  value  problem  kevin  submitted  correctly  minute  made  wrong  submission  score  problem  total  score  equal  sum  score  problem  addition  kevin  total  score  get  increased  point  successful  hack  get  decreased  point  unsuccessful  hack  arithmetic  operation  performed  absolute  precision  rounding  guaranteed  kevin  final  score  input  contains  space  separated  time  kevin  last  submission  problem  last  submission  always  correct  get  accepted  second  contains  space  separated  kevin  wrong  submission  problem  last  contains  space  separated  u  denoting  kevin  successful  unsuccessful  hack  respectively  print  single  value  kevin  final  score
803/E __label__dp  __label__graphs  evening  rom  play  online  poker  favourite  website  rule  poker  website  bit  strange  always  player  hand  bet  winner  take  virtual  bourle  loser  last  evening  rom  started  play  poker  decided  spend  virtual  bourles  stop  immediately  loses  exceeds  win  rom  leave  game  win  enough  money  evening  win  exceeds  loses  next  morning  rom  found  piece  paper  sequence  representing  result  rom  remember  result  exactly  character  sequence  written  way  impossible  recognize  character  rom  recall  whether  bourles  lost  sequence  written  rom  string  consisting  character  rom  corresponding  hand  rom  lost  draw  unknown  result  rom  want  restore  valid  sequence  changing  character  sequence  called  valid  condition  met  end  absolute  difference  win  loses  equal  hand  absolute  difference  hand  wa  equal  help  rom  restore  sequence  contains  length  rom  sequence  second  contains  sequence  consisting  character  exactly  character  sequence  valid  sequence  obtained  replacing  character  print
1075/B __label__implementation  __label__sortings  palo  alto  unusual  city  endless  coordinate  known  office  lyft  level  lyft  ha  become  popular  used  taxi  driver  city  every  day  transport  rest  city  resident  rider  resident  including  taxi  driver  palo  alto  life  unique  location  pair  resident  coordinate  lyft  system  clever  rider  call  taxi  call  doe  taxi  driver  closest  person  multiple  distance  taxi  driver  smaller  coordinate  selected  morning  taxi  driver  wondered  many  rider  would  call  given  taxi  driver  order  taxi  day  word  need  find  taxi  driver  rider  would  call  taxi  driver  driver  rider  home  taxi  driver  neither  transport  taxi  driver  contains  rider  taxi  driver  second  contains  coordinate  resident  life  third  contains  resident  taxi  driver  otherwise  guaranteed  equal  print  answer  taxi  driver  taxi  driver  ha  taxi  driver  life  smallest  coordinate  see  example  better  understanding
959/C __label__trees  __label__constructive  algorithms  mahmoud  wa  trying  solve  vertex  cover  problem  tree  problem  statement  given  undirected  tree  consisting  node  find  minimum  vertex  cover  edge  formally  need  find  set  vertex  edge  belongs  tree  either  set  set  set  mahmoud  ha  found  following  algorithm  root  tree  node  count  node  even  depth  let  evencnt  count  node  odd  depth  let  oddcnt  answer  minimum  evencnt  oddcnt  depth  node  tree  edge  shortest  path  node  root  depth  root  ehab  told  mahmoud  algorithm  wrong  believe  tested  algorithm  many  tree  worked  ehab  asked  find  tree  consisting  node  algorithm  find  incorrect  answer  tree  correct  answer  second  contains  node  desired  tree  output  consist  independent  section  containing  tree  algorithm  find  incorrect  answer  tree  section  correct  answer  tree  second  tree  exist  section  output  without  quote  section
701/C __label__strings  __label__binary  search  sergei  young  coach  pokemons  ha  found  big  house  consists  flat  ordered  row  left  right  possible  enter  flat  street  possible  flat  flat  connected  flat  left  flat  right  flat  connected  flat  flat  connected  flat  exactly  pokemon  type  flat  sergei  asked  resident  house  let  enter  flat  order  catch  pokemons  consulting  resident  house  decided  let  sergei  enter  flat  street  visit  several  flat  flat  let  visit  flat  sergei  wa  pleased  want  visit  flat  possible  order  collect  pokemons  type  appear  house  task  help  determine  minimum  flat  ha  visit  contains  flat  house  second  contains  row  length  consists  uppercase  lowercase  letter  english  alphabet  letter  equal  type  pokemon  flat  print  minimum  flat  sergei  visit  order  catch  pokemons  type  house
802/D __label__math  heidi  statistician  core  like  study  evolution  marmot  population  village  come  every  spring  heidi  see  snowdrop  sprout  meadow  around  barn  impatiently  snowshoe  set  alp  welcome  friend  marmot  new  season  thrilling  adventure  arriving  village  heidi  asks  every  marmot  come  inhabitant  village  year  marmot  decide  play  april  fool  joke  heidi  instead  consistently  providing  exact  inhabitant  village  respond  random  non  negative  drawn  type  probability  distribution  poissonavril  distribution  probability  getting  answer  uniform  distribution  probability  getting  answer  heidi  collect  exactly  answer  per  village  every  village  follows  either  poisson  uniform  distribution  heidi  tell  marmot  apart  query  marmot  several  time  time  marmot  answer  new  drawn  village  distribution  help  heidi  find  whether  village  follows  poisson  uniform  distribution  input  village  following  describe  village  description  village  consists  space  separated  drawn  distribution  output  per  village  order  provided  input  village  shall  state  poisson  village  distribution  poisson  type  uniform  answer  came  uniform  distribution
1027/G __label__math  __label__number  theory  campus  ha  room  numbered  mouse  life  campus  mouse  mouse  second  mouse  move  room  room  imodm  fact  teleports  room  another  since  visit  intermediate  room  starting  position  mouse  unknown  responsible  catch  mouse  campus  guessing  minimum  possible  trap  trap  room  need  place  sure  mouse  enters  trapped  room  immediately  get  caught  observation  made  gcd  gcd  contains  gcd  gcd  room  parameter  mouse  print  minimum  trap  need  install  catch  mouse
65/D __label__dfs  __label__brute  force  know  hogwarts  ha  house  gryffindor  hufflepuff  ravenclaw  slytherin  sorting  year  house  done  sorting  hat  pupil  called  alphabetical  order  put  hat  head  thought  hat  solemnly  announces  name  house  student  enter  hat  believed  base  consideration  student  personal  quality  sends  brave  noble  gryffindor  smart  shrewd  ravenclaw  persistent  honest  hufflepuff  clever  cunning  slytherin  year  student  hermione  granger  got  concerned  forthcoming  sorting  studied  literature  sorting  hat  came  conclusion  much  simpler  relative  student  already  studied  hogwarts  hat  put  student  house  family  used  study  controversial  situation  relative  studied  different  house  muggles  like  hermione  parent  hat  sort  student  house  least  year  ha  sent  moment  several  house  choice  given  student  student  choose  house  least  year  ha  sent  far  hermione  ha  already  asked  student  list  relative  new  friend  harry  potter  ron  weasley  want  find  house  hat  put  hermione  input  contains  student  list  hermione  next  contains  symbol  relative  student  used  study  house  character  string  coincides  letter  name  house  otherwise  symbol  equal  print  possible  house  hermione  sent  name  house  printed  alphabetical  order  per
489/C __label__dp  __label__implementation  __label__greedy  positive  non  negative  task  find  smallest  largest  length  sum  digit  required  non  negative  written  decimal  base  without  leading  single  input  contains  pair  length  sum  digit  required  output  print  pair  required  non  negative  minimum  possible  maximum  possible  satisfying  condition  required  exist  print  pair  without  quote
212/D __label__data  structures  __label__binary  search  vasya  carpenter  ha  estate  separated  wood  fence  fence  consists  plank  put  fence  closed  circle  plank  numbered  left  right  plank  height  plank  width  lower  edge  plank  located  ground  level  recently  local  newspaper  malevich  life  wrote  fashionable  way  decorate  fence  summer  draw  fuchsia  colored  rectangle  lower  side  rectangle  must  located  lower  edge  fence  vasya  delighted  idea  immediately  bought  fuchsia  colored  paint  began  decide  kind  rectangle  paint  vasya  sure  rectangle  cover  consecutive  plank  word  paint  plank  want  paint  rectangle  maximal  area  rectangle  height  equal  min  x  colored  plank  vasya  ha  already  made  mind  rectangle  width  equal  sequence  want  know  expected  height  painted  rectangle  provided  selects  fence  uniformly  possible  value  help  find  expected  height  contains  single  plank  fence  second  contains  sequence  height  plank  fence  third  contains  next  contains  space  separated  width  desired  fuchsia  colored  rectangle  plank  print  whitespace  separated  real  equal  expected  value  rectangle  height  width  plank  equal  value  considered  correct  absolute  relative  error  exceed
835/D __label__dp  __label__brute  force  __label__strings  palindromic  characteristic  string  length  sequence  total  non  empty  substring  palindrome  string  palindrome  read  backward  forward  string  palindrome  left  half  equal  right  half  left  right  half  non  empty  palindrome  left  half  string  prefix  length  right  half  suffix  length  denotes  length  string  divided  rounded  note  substring  counted  many  time  appears  string  example  string  aaa  substring  appears  time  contains  string  consisting  lowercase  english  letter  print  palindromic  characteristic  string
1138/A __label__implementation  __label__greedy  __label__binary  search  arkady  invited  anna  dinner  sushi  restaurant  restaurant  bit  unusual  offer  piece  sushi  aligned  row  customer  ha  choose  continuous  subsegment  sushi  buy  piece  sushi  type  either  tuna  eel  let  denote  type  left  sushi  mean  tuna  mean  eel  arkady  doe  like  tuna  anna  doe  like  eel  arkady  want  choose  continuous  subsegment  sushi  ha  equal  sushi  type  half  subsegment  ha  sushi  type  example  subsegment  valid  subsegment  half  type  sushi  find  length  longest  continuous  subsegment  sushi  arkady  buy  contains  single  piece  sushi  second  contains  denoting  sushi  tuna  denoting  sushi  eel  representing  type  sushi  left  right  guaranteed  least  piece  sushi  type  note  mean  least  valid  continuous  segment  print  single  maximum  length  valid  continuous  segment
1176/A __label__implementation  __label__greedy  __label__brute  force  given  perform  following  operation  arbitrary  possibly  time  replace  divisible  replace  divisible  replace  divisible  example  replace  using  operation  using  second  operation  using  third  operation  task  find  minimum  move  required  obtain  say  impossible  answer  independent  query  input  contains  query  next  query  query  given  print  answer  query  new  impossible  obtain  print  otherwise  print  minimum  move  required
482/C __label__dp  play  game  friend  description  game  listed  friend  creates  distinct  string  length  tell  string  randomly  chooses  chooses  string  equiprobably  probability  choosing  string  equal  want  guess  string  wa  chosen  friend  order  guess  string  friend  ha  chosen  allowed  ask  question  question  ha  following  form  character  stand  position  po  string  chosen  string  considered  guessed  answer  given  question  uniquely  identify  string  string  guessed  stop  asking  question  particular  strategy  question  equiprobably  ask  position  mentioned  task  determine  expected  question  needed  guess  string  chosen  friend  contains  single  string  friend  came  next  string  friend  ha  created  guaranteed  string  distinct  consist  large  small  english  letter  besides  length  string  inclusive  print  single  expected  value  answer  considered  correct  absolute  relative  error  exceed
939/B __label__implementation  dima  ha  hamster  farm  soon  hamster  grow  dima  sell  city  nearby  hamster  transported  box  box  completely  full  hamster  bored  box  completely  full  hamster  dima  buy  box  factory  factory  produce  box  kind  box  kind  hamster  dima  buy  amount  box  buy  box  kind  get  wholesale  discount  course  dima  would  buy  box  way  box  completely  filled  hamster  transported  city  place  hamster  dima  leave  farm  find  many  box  type  dima  buy  transport  maximum  hamster  contains  hamster  grow  dima  farm  type  box  factory  produce  second  contains  capacity  box  output  type  box  dima  buy  box  type  dima  buy  type  box  numbered  order  given  input
95/E __label__dp  __label__graphs  petya  love  lucky  everybody  know  positive  lucky  decimal  representation  digit  example  lucky  night  petya  wa  sleeping  wa  dreaming  president  island  country  country  represented  island  connected  way  road  island  road  way  even  island  country  divided  several  region  formally  island  belongs  exactly  region  path  island  located  region  path  island  different  region  region  lucky  amount  island  lucky  real  president  petya  decided  build  presidential  palace  lucky  fan  petya  want  position  palace  lucky  region  possible  initially  country  ha  region  case  petya  build  additional  road  different  region  thus  joining  find  minimum  road  needed  build  create  lucky  region  contains  island  road  correspondingly  next  road  description  road  defined  island  connects  road  connect  island  road  pair  island  separated  exactly  space  character  solution  output  without  quote  otherwise  output  minimum  road  need  built  get  lucky  region
799/G __label__data  structures  __label__binary  search  __label__geometry  arkady  reached  level  township  game  masha  decided  bake  pie  course  pie  ha  shape  convex  gon  polygon  vertex  arkady  decided  cut  pie  equal  area  part  cutting  straight  eat  give  masha  difficulty  arkady  ha  already  put  knife  point  pie  ha  cut  pie  straight  passing  trough  point  help  arkady  find  pass  point  arkady  ha  put  knife  cut  pie  part  equal  area  determine  impossible  program  ha  quickly  answer  many  query  pie  different  point  arkady  put  knife  contains  vertex  pie  query  follow  describing  polygon  vertex  clockwise  order  contains  coordinate  vertex  guaranteed  polygon  strictly  convex  particular  vertex  empty  follows  follow  describing  query  point  coordinate  point  arkady  put  knife  query  guaranteed  query  given  point  strictly  inside  polygon  particular  edge  query  print  single  polar  angle  answer  corresponding  query  radian  angle  segment  angle  measured  direction  axis  counter  clockwise  order  example  polar  angle  axis  answer  query  print
1041/A __label__implementation  __label__greedy  __label__sortings  wa  electronic  store  heist  last  night  keyboard  store  yesterday  numbered  ascending  order  example  keyboard  store  device  index  keyboard  index  heist  keyboard  remain  index  calculate  minimum  possible  keyboard  stolen  staff  remember  neither  keyboard  store  heist  contains  single  keyboard  store  remained  heist  second  contains  distinct  index  remaining  keyboard  given  arbitrary  order  pairwise  distinct  print  minimum  possible  keyboard  stolen  staff  remember  neither  keyboard  store  heist
1109/D __label__math  __label__dp  __label__trees  __label__brute  force  lesson  sasha  got  bored  decided  talk  friend  suddenly  saw  kefa  since  talk  endlessly  kefa  even  start  conversation  turned  graph  kefa  promised  sasha  tell  interesting  fact  graph  theory  sasha  help  kefa  count  beautiful  tree  task  tree  weighted  connected  graph  consisting  vertex  edge  weight  edge  kefa  determines  beauty  tree  follows  find  tree  favorite  vertex  vertex  count  distance  distance  vertex  sum  weight  edge  simple  path  distance  vertex  equal  tree  beautiful  sasha  like  graph  theory  even  sasha  like  interesting  fact  agreed  help  kefa  luckily  sasha  familiar  best  programmer  byteland  help  sasha  count  beautiful  tree  kefa  tree  considered  distinct  edge  occurs  occur  edge  weight  matter  kefa  warned  sasha  many  beautiful  tree  enough  count  modulo  contains  vertex  tree  maximum  weight  edge  kefa  favorite  vertex  print  beautiful  tree  modulo
959/B __label__implementation  __label__greedy  mahmoud  want  send  message  friend  ehab  language  consists  word  numbered  word  meaning  group  word  word  group  meaning  mahmoud  know  word  sent  cost  word  message  mahmoud  either  replace  another  word  meaning  leave  help  mahmoud  determine  minimum  cost  sending  message  cost  sending  message  sum  cost  sending  every  word  input  contains  word  language  group  word  word  mahmoud  message  respectively  second  contains  string  consisting  lowercase  english  letter  length  exceeding  represent  word  guaranteed  word  distinct  third  contains  cost  sending  word  next  describe  group  word  meaning  next  start  mean  word  group  followed  represent  index  word  group  guaranteed  word  appears  exactly  group  next  contains  space  separated  word  represent  mahmoud  message  word  appears  list  language  word  minimum  cost  send  message  replacing  word  maybe  none  word  meaning
960/C __label__implementation  __label__greedy  __label__constructive  algorithms  pikachu  array  wrote  non  empty  subsequence  array  paper  note  array  size  ha  non  empty  subsequence  pikachu  mischievous  always  removed  subsequence  maximumelementofthesubsequence  minimumelementofsubsequence  pikachu  wa  finally  left  subsequence  lost  initial  array  serious  trouble  still  remembers  want  construct  array  satisfy  condition  final  array  positive  le  note  element  output  array  answer  possible  print  input  consists  space  separated  output  consist
575/B __label__dfs  __label__graphs  __label__trees  ruritania  country  badly  maintained  road  network  exactly  good  news  lorry  driver  constantly  delivery  fact  road  maintained  become  way  turn  sometimes  impossible  get  town  another  legal  way  know  town  reachable  though  illegally  fortunately  police  tend  corrupt  allow  lorry  driver  break  rule  drive  wrong  direction  provided  receive  small  gift  patrol  car  every  road  request  ruritanian  dinar  driver  drive  wrong  direction  greedy  every  time  patrol  car  notice  driver  breaking  rule  charge  double  amount  money  requested  previous  time  particular  road  borna  lorry  driver  managed  figure  bribing  pattern  part  job  ha  make  stop  town  ruritania  ha  make  stop  certain  order  town  enumerated  ruritania  borna  initial  location  capital  city  town  happens  know  road  ruritania  currently  unidirectional  unable  compute  least  amount  money  need  prepare  bribing  police  help  borna  providing  answer  richly  rewarded  contains  town  ruritania  following  information  regarding  individual  road  town  road  represented  tuple  separated  single  whitespace  character  represent  city  connected  particular  road  either  mean  road  bidirectional  mean  direction  legal  next  contains  stop  borna  ha  make  final  input  contains  positive  town  borna  ha  visit  road  road  output  single  least  amount  thousand  ruritanian  dinar  borna  allocate  bribe  modulo
1234/B1 __label__implementation  difference  easy  hard  version  constraint  messaging  popular  social  network  via  smartphone  smartphone  show  recent  conversation  friend  initially  screen  empty  displayed  conversation  equal  conversation  friend  conversation  friend  conversation  uniquely  defined  friend  suddenly  ability  see  future  know  day  receive  message  message  received  friend  receive  message  conversation  currently  displayed  smartphone  nothing  happens  conversation  screen  change  change  order  read  message  continue  waiting  new  message  otherwise  conversation  screen  firstly  conversation  displayed  screen  last  conversation  ha  position  removed  screen  conversation  screen  guaranteed  le  conversation  friend  displayed  screen  conversation  friend  appears  topmost  position  screen  displayed  conversation  shifted  position  task  find  list  conversation  order  displayed  screen  processing  message  input  contains  k  message  conversation  smartphone  show  second  input  contains  friend  sends  message  output  print  conversation  shown  receiving  message
1077/F1 __label__dp  difference  easy  hard  version  constraint  vova  like  picture  kitten  news  feed  social  network  us  represented  array  consecutive  picture  kitten  course  vova  like  picture  beautiful  others  picture  ha  beauty  vova  want  repost  exactly  picture  way  segment  news  feed  least  consecutive  picture  ha  least  picture  reposted  vova  sum  beauty  value  reposted  picture  maximum  possible  example  vova  ha  repost  picture  news  feed  vova  skip  picture  every  pair  consecutive  picture  vova  ha  repost  least  task  calculate  maximum  possible  sum  value  reposted  picture  vova  follows  condition  described  say  way  satisfy  condition  input  contains  x  picture  news  feed  minimum  length  segment  least  repost  picture  vova  ready  repost  second  input  contains  beauty  picture  print  way  repost  picture  satisfy  condition  problem  statement
479/C __label__greedy  __label__sortings  student  valera  undergraduate  student  university  end  term  exam  approaching  pas  exactly  exam  valera  smart  guy  able  pas  exam  take  try  besides  take  several  exam  day  order  according  schedule  student  take  exam  subject  day  valera  ha  made  arrangement  teacher  teacher  subject  allowed  take  exam  schedule  time  day  thus  valera  take  exam  subject  either  day  day  teacher  put  record  exam  student  record  book  day  actual  exam  write  date  mark  valera  belief  would  rather  strange  entry  record  book  order  non  decreasing  date  therefore  valera  asks  help  find  minimum  possible  value  day  valera  take  final  exam  take  exam  record  record  book  order  non  decreasing  date  contains  single  positive  exam  valera  take  next  contains  positive  space  separated  date  exam  schedule  early  date  passing  exam  correspondingly  print  single  minimum  possible  day  valera  take  last  exam  take  exam  record  record  book  order  non  decreasing  date
990/D __label__implementation  __label__graphs  __label__constructive  algorithms  given  need  find  adjacency  matrix  undirected  graph  component  equal  component  complement  matrix  must  symmetric  digit  main  diagonal  must  undirected  graph  loop  edge  vertex  allowed  edge  pair  vertex  adjacency  matrix  undirected  graph  square  matrix  size  consisting  vertex  graph  row  column  correspond  vertex  graph  cell  adjacency  matrix  contains  vertex  graph  connected  edge  connected  component  set  vertex  every  vertex  set  exists  least  path  graph  connecting  pair  vertex  adding  vertex  violates  rule  complement  inverse  graph  graph  vertex  distinct  vertex  adjacent  adjacent  single  given  vertex  graph  required  connectivity  component  required  amount  connectivity  component  complement  graph  satisfies  constraint  single  print  without  quote
1196/F __label__sortings  __label__constructive  algorithms  __label__brute  force  given  connected  undirected  weighted  graph  consisting  vertex  edge  need  print  smallest  shortest  path  graph  path  vertex  counted  path  counted  formally  matrix  shortest  path  length  shortest  path  vertex  need  print  element  sorted  array  consisting  input  contains  n  vertex  graph  edge  graph  value  correspondingly  follow  containing  denoting  edge  vertex  weight  guaranteed  given  graph  connected  path  pair  vertex  self  loop  edge  connecting  vertex  multiple  edge  pair  vertex  edge  pair  vertex  graph  print  length  smallest  shortest  path  given  graph  path  vertex  counted  path  counted
138/C __label__data  structures  __label__sortings  __label__binary  search  day  natalia  wa  walking  wood  met  little  mushroom  gnome  gnome  told  following  story  everybody  know  mushroom  gnome  power  lie  magic  mushroom  grow  native  wood  gnome  tree  magic  mushroom  wood  tree  grows  point  straight  coordinate  ha  height  mushroom  grows  point  coordinate  ha  magical  power  day  wild  mushroommunchers  sworn  enemy  mushroom  gnome  unleashed  terrible  storm  home  forest  result  tree  began  fall  crush  magic  mushroom  supreme  oracle  mushroom  gnome  calculated  advance  probability  tree  fall  left  right  stand  tree  coordinate  height  fall  left  mushroom  belong  right  open  interval  destroyed  tree  fall  right  mushroom  belong  left  open  interval  destroyed  mushroom  hit  single  tree  survive  knowing  tree  fall  independently  event  mutually  independent  besides  tree  interfere  tree  falling  arbitrary  direction  supreme  oracle  wa  able  quickly  calculate  would  expectation  total  power  mushroom  survived  storm  calculation  ultimately  saved  mushroom  gnome  imminent  death  natalia  good  olympiad  programmer  got  interested  story  decided  come  way  quickly  calculate  expectation  sum  surviving  mushroom  power  contains  tree  mushroom  respectively  next  represent  coordinate  tree  height  percentage  probability  tree  fall  left  right  respectively  remaining  percentage  probability  tree  stand  next  j  represent  coordinate  magical  power  mushroom  respectively  arbitrary  tree  mushroom  grow  point  print  real  expectation  total  magical  power  surviving  mushroom  result  accepted  relative  absolute  accuracy
496/C __label__implementation  __label__constructive  algorithms  __label__brute  force  given  n  rectangular  table  consisting  lower  case  english  letter  operation  completely  remove  column  table  remaining  part  combined  forming  new  table  example  removing  second  column  table  abcd  edfg  hijk  obtain  table  acd  efg  hjk  table  called  good  row  ordered  top  bottom  lexicographically  row  lexicographically  larger  following  determine  minimum  operation  removing  column  needed  make  given  table  good  contains  next  small  english  letter  character  table  print  single  minimum  column  need  remove  order  make  table  good
407/D __label__dp  given  matrix  size  n  element  assume  row  matrix  numbered  top  bottom  column  numbered  left  right  denote  element  intersecting  row  column  aij  call  submatrix  element  aij  given  matrix  j  call  area  submatrix  call  submatrix  inhomogeneous  element  distinct  find  largest  area  inhomogenous  submatrix  given  matrix  contains  row  column  matrix  correspondingly  next  contains  aij  ij  element  matrix  print  single  area  optimal  inhomogenous  submatrix
732/F __label__dfs  __label__graphs  berland  tourist  country  least  become  government  berland  confident  city  berland  pair  connected  way  road  road  connects  different  city  berland  road  connect  pair  city  possible  get  city  city  using  given  way  road  according  reform  road  become  way  oriented  direction  maximize  tourist  attraction  berland  reform  city  value  calculated  equal  city  oriented  path  city  city  word  equal  city  reached  city  road  government  sure  tourist  attention  focused  minimum  value  help  government  berland  make  reform  maximize  minimum  contains  city  road  next  describe  road  berland  contains  j  j  ujj  city  connected  road  city  numbered  guaranteed  possible  get  city  following  way  road  berland  road  connect  pair  city  print  single  maximum  possible  value  min  orientation  road
1158/B __label__math  __label__constructive  algorithms  __label__strings  let  string  consisting  symbol  let  call  string  substring  string  exists  let  call  substring  string  unique  exist  example  let  string  unique  substring  suitable  example  unique  substring  suitable  example  substring  suitable  today  vasya  solved  following  problem  informatics  lesson  given  string  consisting  symbol  task  find  length  minimal  unique  substring  ha  written  solution  problem  want  test  asking  help  given  positive  nmod  kmod  xmod  operation  taking  remainder  dividing  find  string  consisting  symbol  length  minimal  unique  substring  equal  contains  separated  space  kmod  nmod  print  string  length  consisting  symbol  minimal  length  unique  substring  equal  find  suitable  string  guaranteed  exists  least  string
855/C __label__dp  __label__trees  harry  ron  hermione  figured  helga  hufflepuff  cup  horcrux  encounter  bellatrix  lestrange  hermione  came  know  cup  present  bellatrix  family  vault  gringott  wizarding  bank  wizarding  bank  form  tree  total  vault  vault  ha  type  denoted  tree  undirected  connected  graph  cycle  vault  highest  security  type  vault  type  highest  security  vault  highest  security  vault  highest  security  adjacent  vault  guaranteed  highest  security  type  guaranteed  le  harry  want  consider  every  possibility  easily  find  best  path  reach  bellatrix  vault  tell  given  tree  structure  gringotts  possible  way  giving  vault  type  condition  hold  input  contains  space  separated  vault  different  vault  type  possible  next  space  separated  representing  edge  show  path  vault  guaranteed  given  graph  tree  last  input  contains  type  highest  security  vault  maximum  possible  vault  highest  security  output  single  way  giving  vault  type  following  condition  modulo
559/C __label__math  __label__dp  __label__number  theory  giant  chess  quite  common  geraldion  delve  rule  game  say  game  take  place  h  field  painted  color  like  chess  almost  cell  field  white  black  currently  gerald  finishing  game  giant  chess  friend  pollard  gerald  ha  almost  thing  need  win  bring  pawn  upper  left  corner  board  standing  lower  right  corner  gerald  confident  victory  became  interested  many  way  win  pawn  gerald  ha  got  left  way  cell  cell  right  addition  black  cell  otherwise  gerald  still  loses  pawn  piece  left  field  according  rule  giant  chess  gerald  move  pawn  game  pollard  watching  process  input  contains  side  board  black  cell  next  description  black  cell  contains  row  column  cell  guaranteed  upper  left  lower  right  cell  white  cell  description  distinct  print  single  remainder  way  move  gerald  pawn  upper  left  lower  right  corner  modulo
873/A __label__implementation  luba  ha  chore  today  chore  take  unit  time  complete  guaranteed  every  condition  aii  met  sequence  sorted  luba  work  really  hard  chore  choose  chore  unit  time  instead  luba  responsible  ha  chore  want  know  minimum  time  need  everything  luba  chore  simultaneously  contains  chore  luba  ha  chore  unit  time  second  contains  time  luba  ha  spend  chore  guaranteed  aii  print  minimum  time  luba  need  chore
1244/B __label__implementation  __label__brute  force  nikolay  life  storied  house  room  floor  arranged  row  numbered  left  right  room  represented  floor  room  floor  room  nikolay  currently  room  move  neighbouring  room  exist  room  floor  neighbouring  staircase  connect  room  different  floor  staircase  connecting  room  floor  room  second  floor  nikolay  use  move  room  another  picture  illustrates  house  staircase  room  floor  room  second  floor  another  staircase  room  floor  room  second  floor  arrow  denote  possible  direction  nikolay  move  picture  corresponds  string  input  nikolay  want  move  room  house  firstly  chooses  room  start  nikolay  move  room  according  aforementioned  rule  nikolay  never  visit  room  twice  enter  room  ha  already  calculate  maximum  room  nikolay  visit  tour  start  room  floor  choice  visit  room  twice  input  contains  test  case  input  test  case  follow  test  case  consists  contains  room  floor  second  contains  string  consisting  character  character  either  character  staircase  room  floor  room  second  floor  character  staircase  room  floor  room  second  floor  hack  allowed  use  test  case  input  satisfied  test  case  print  maximum  room  nikolay  visit  tour  start  room  floor  visit  room  twice
398/A __label__implementation  __label__constructive  algorithms  user  ainta  love  play  card  ha  card  containing  letter  card  containing  letter  arranges  card  row  calculates  score  deck  formula  score  block  contiguous  length  score  increase  block  contiguous  length  score  decrease  example  ainta  arranged  card  order  described  string  ooxoooxxo  score  deck  equal  deck  ha  block  total  ooo  user  ainta  like  big  want  maximize  score  given  card  help  ainta  make  score  big  possible  note  ha  arrange  card  contains  space  separated  card  card  print  single  maximum  score  ainta  obtain
1215/E __label__dp  monocarp  ha  arranged  colored  marble  row  color  marble  monocarp  like  ordered  thing  want  rearrange  marble  way  marble  color  form  contiguos  segment  segment  color  word  monocarp  want  rearrange  marble  every  color  leftmost  marble  color  row  rightmost  marble  color  ha  position  row  every  marble  ha  color  achieve  goal  monocarp  following  operation  time  choose  neighbouring  marble  swap  calculate  minimum  operation  monocarp  ha  perform  rearrange  marble  note  order  segment  marble  equal  color  doe  matter  required  every  color  marble  color  form  exactly  contiguous  segment  contains  marble  second  contains  sequence  color  marble  print  minimum  operation  monocarp  ha  perform  achieve  goal
676/C __label__dp  __label__strings  __label__binary  search  high  school  student  vasya  got  string  length  birthday  present  string  consists  letter  vasya  denotes  beauty  string  maximum  length  substring  consecutive  subsequence  consisting  equal  letter  vasya  change  character  original  string  maximum  beauty  string  achieve  input  contains  length  string  maximum  character  change  second  contains  string  consisting  letter  print  maximum  beauty  string  vasya  achieve  changing  character
656/B __label__implementation  btoh  yuo  adn  yuor  roomatme  lhoate  wianshg  disehs  btu  stlil  sdmoeboy  msut  peorrfm  tihs  cohre  dialy  oen  dya  yuo  decdie  idourtcne  smoe  syestm  yuor  rmmotaoe  sstgegus  teh  fooniwllg  dael  yuo  argee  tow  arayrs  ientgres  adn  nmebur  upmicnog  dyas  induiclng  teh  cunrret  oen  wtih  sicsescuve  irnegets  teh  ceurrnt  dya  zreo  adn  yuo  wsah  teh  diehss  dya  adn  olny  terhe  etsixs  iednx  scuh  taht  mod  otwsehrie  yuor  rmootmae  deos  yuo  lkie  teh  cncepot  btu  yuor  rmotaome  cuinnng  simle  meaks  yuo  ssecupt  sthnoemig  yuo  itennd  vefriy  teh  fnerisas  teh  aemnrgeet  yuo  aer  geivn  ayarrs  adn  cuaclatle  teh  pceanregte  dyas  wchih  yuo  edn  dnoig  teh  wisahng  amsuse  taht  yuo  hvae  iiiftlneny  mnay  dyas  aehad  yuo  input  contains  single  second  third  input  inclusive  represent  array  respectively  positive  output  single  real  answer  considered  correct  absolute  relative  error  doe  exceed
1009/A __label__implementation  maxim  want  buy  game  local  game  shop  game  shop  game  cost  maxim  ha  wallet  represented  array  wallet  contains  bill  bill  ha  value  game  shop  ordered  left  right  maxim  try  buy  every  game  order  maxim  stand  position  shop  take  bill  wallet  wallet  empty  proceeds  next  position  immediately  try  buy  game  using  bill  maxim  tried  buy  game  leaf  shop  maxim  buy  game  value  bill  take  wallet  greater  equal  cost  game  successfully  buy  game  bill  wallet  disappears  next  bill  becomes  otherwise  maxim  leaf  bill  wallet  bill  still  remains  proceeds  next  game  example  array  array  following  process  take  place  maxim  buy  game  using  bill  value  bill  disappears  second  bill  value  becomes  maxim  wallet  maxim  buy  second  game  third  game  buy  fourth  game  using  bill  value  third  bill  becomes  maxim  wallet  buy  fifth  game  using  bill  value  task  get  game  maxim  buy  input  contains  game  bill  maxim  wallet  second  input  contains  cost  game  third  input  contains  value  bill  maxim  wallet  print  single  game  maxim  buy
576/D __label__dp  country  exactly  city  numbered  positive  city  airport  located  airline  make  flight  unfortunately  use  need  regular  customer  company  namely  opportunity  enjoy  flight  city  city  already  made  least  flight  please  note  flight  fly  exactly  city  city  used  fly  city  city  interesting  fact  possibly  recreational  flight  beautiful  view  sky  begin  end  city  need  get  city  city  unfortunately  never  traveled  plane  minimum  flight  perform  order  get  city  note  flight  used  multiple  time  contains  city  country  flight  company  provides  next  representing  flight  city  city  accessible  client  made  least  flight  print  impossible  without  quote  impossible  get  city  city  using  airway
568/B __label__math  __label__dp  little  johnny  ha  recently  learned  set  theory  studying  binary  relation  probably  heard  term  equivalence  relation  relation  important  many  area  mathematics  example  equality  equivalence  relation  set  pair  element  set  called  binary  relation  set  element  set  say  relation  pair  case  use  notation  binary  relation  equivalence  relation  reflexive  true  symmetric  true  transitive  little  johnny  completely  fool  noticed  condition  necessary  proof  take  element  according  property  mean  according  property  simple  noticed  johnny  proof  wrong  decided  show  lot  example  prove  wrong  task  count  binary  relation  set  size  symmetric  transitive  equivalence  relation  reflexive  since  large  according  little  johnny  print  remainder  division  single  contains  single  single  print  answer  problem  modulo
1034/A __label__number  theory  ha  positive  think  greatest  common  divisor  small  want  enlarge  removing  problem  simple  doe  want  help  give  score  reward  task  calculate  minimum  need  remove  greatest  common  divisor  remaining  bigger  contains  ha  second  contains  print  minimum  need  remove  greatest  common  divisor  remaining  bigger
925/D __label__constructive  algorithms  indiana  jones  found  ancient  aztec  catacomb  containing  golden  idol  catacomb  consists  cave  pair  cave  connected  way  corridor  opened  closed  entrance  catacomb  cave  idol  exit  cave  indiana  go  cave  cave  using  open  corridor  corridor  connected  cave  change  state  open  corridor  become  closed  closed  corridor  become  open  indiana  want  cave  cave  going  small  corridor  possible  help  find  optimal  path  determine  impossible  get  catacomb  contains  cave  open  corridor  initial  moment  next  describe  open  corridor  contains  cave  connected  open  corridor  guaranteed  unordered  pair  cave  presented  path  exit  print  single  minimum  corridor  indian  pas  second  print  cave  order  indiana  visit  sequence  satisfy  following
700/A __label__math  __label__binary  search  vacation  pupil  decided  excursion  gather  together  need  overcome  path  length  meter  pupil  speed  equal  get  excursion  quickly  wa  decided  rent  bus  ha  seat  people  mean  fit  people  time  speed  equal  order  avoid  seasick  pupil  want  get  bus  determine  minimum  time  required  pupil  reach  place  excursion  consider  embarkation  disembarkation  passenger  well  reversal  bus  take  place  immediately  time  neglected  input  contains  positive  pupil  distance  meeting  place  excursion  speed  pupil  speed  bus  seat  bus  print  real  minimum  time  pupil  reach  place  excursion  answer  considered  correct  absolute  relative  error  exceed
653/G __label__math  __label__number  theory  pussycat  sonya  ha  array  consisting  positive  possible  subsequence  array  subsequence  count  minimum  operation  make  element  equal  operation  must  choose  element  subsequence  multiply  prime  choose  element  subsequence  divide  prime  chosen  element  must  divisible  chosen  prime  sum  minimum  operation  possible  subsequence  find  print  sum  modulo  input  contains  single  size  array  second  contains  element  array  print  sum  minimum  operation  possible  subsequence  given  array  modulo
1155/C __label__math  __label__number  theory  ivan  going  sleep  want  set  alarm  clock  many  necessary  event  tomorrow  start  minute  ivan  want  skip  event  ha  set  alarm  clock  way  ring  minute  awake  minute  note  doe  matter  alarm  clock  ring  minute  ivan  choose  property  alarm  clock  minute  ring  let  denote  interval  consecutive  signal  let  denote  clock  set  ring  minute  ivan  choose  minute  choose  arbitrary  value  ha  pick  given  value  phone  doe  support  option  setting  ivan  ha  choose  minute  alarm  clock  start  ringing  interval  consecutive  signal  way  ring  given  minute  doe  matter  alarm  clock  ring  minute  task  tell  minute  index  ivan  set  alarm  clock  property  ring  given  minute  say  impossible  choose  value  given  property  multiple  answer  print  input  contains  event  possible  setting  interval  signal  second  input  contains  minute  event  start  guaranteed  given  increasing  order  condition  hold  third  input  contains  option  interval  consecutive  signal  impossible  choose  value  constraint  satisfied  print
1175/B __label__implementation  __label__data  structures  given  function  written  basic  language  function  accepts  value  immediately  written  variable  variable  assigned  value  function  contains  type  command  loop  end  every  command  corresponding  end  executed  time  add  add  execution  command  value  returned  every  matched  end  thus  function  guaranteed  valid  immediately  followed  end  add  command  outside  loop  notice  add  command  might  overflow  value  mean  value  becomes  greater  add  command  run  wonder  resulting  value  correct  overflow  made  incorrect  overflow  happened  output  overflow  otherwise  print  resulting  value  contains  single  function  next  contains  single  command  type  loop  end  every  command  corresponding  end  executed  time  add  add  overflow  happened  execution  output  overflow  otherwise  print  resulting  value
877/F __label__data  structures  ann  favorite  book  shop  many  book  math  economics  book  numbered  contains  non  negative  problem  today  sale  subsegment  segment  bought  fixed  price  ann  decided  want  buy  non  empty  subsegment  sale  operates  math  problem  greater  economics  problem  exactly  note  positive  negative  unfortunately  ann  sure  segment  sale  operates  ha  assumption  want  know  option  buy  subsegment  satisfying  condition  time  spends  choosing  depends  currently  ann  busy  solving  problem  asks  help  assumption  determine  subsegments  given  segment  math  problem  greaten  economics  problem  subsegment  exactly  contains  book  needed  difference  math  problem  economics  problem  second  contains  book  math  economics  third  contains  problem  book  fourth  contains  single  assumption  next  contains  ii  describing  ann  assumption  print  print  subsegments  ann  assumption
526/C __label__math  __label__greedy  __label__brute  force  sweet  little  monster  nom  love  candy  much  day  found  rather  tricky  situation  required  think  bit  order  enjoy  candy  would  succeed  task  place  day  came  friend  evan  nom  find  home  found  bag  candy  wa  full  blue  candy  second  bag  wa  full  red  candy  nom  know  red  candy  weighs  gram  blue  candy  weighs  gram  eating  single  red  candy  give  nom  joy  unit  eating  single  blue  candy  give  nom  joy  unit  candy  important  thing  world  hand  overeating  good  nom  know  eats  gram  candy  get  sick  nom  think  proper  leave  candy  leftover  eat  whole  candy  nom  great  mathematician  quickly  determined  many  candy  type  eat  order  get  maximum  joy  unit  repeat  achievement  assume  bag  contains  candy  nom  eat  single  contains  b  print  single  maximum  joy  unit  nom  get
785/E __label__data  structures  __label__brute  force  anton  like  permutation  especially  like  permute  element  note  permutation  element  sequence  every  appears  exactly  day  anton  got  new  permutation  started  play  doe  following  operation  time  take  element  permutation  swap  element  operation  asks  friend  vanya  many  inversion  new  permutation  inversion  permutation  distinct  pair  vanya  tired  answering  anton  silly  question  asked  write  program  would  answer  question  instead  initially  anton  permutation  wa  input  contains  length  permutation  operation  anton  doe  following  input  contains  index  element  anton  swap  operation  note  index  element  anton  swap  operation  coincide  element  permutation  numbered  starting  output  output  inversion  anton  permutation  operation
522/A __label__dp  __label__dfs  __label__graphs  __label__trees  day  polycarp  published  funny  picture  social  network  making  poll  color  handle  many  friend  started  reposting  polycarp  joke  news  feed  reposted  reposts  event  given  sequence  string  name  reposted  name  name  name  person  reposted  joke  name  name  person  whose  news  feed  joke  wa  reposted  guaranteed  string  name  reposted  name  user  name  joke  feed  name  already  feed  moment  repost  polycarp  wa  registered  polycarp  initially  joke  wa  feed  polycarp  measure  popularity  joke  length  largest  repost  chain  print  popularity  polycarp  joke  input  contains  reposts  next  follow  reposts  order  made  written  single  look  name  reposted  name  name  input  consist  lowercase  uppercase  english  letter  digit  length  character  inclusive  know  user  name  case  insensitive  name  differ  letter  case  correspond  social  network  user  print  single  maximum  length  repost  chain
1023/F __label__dfs  __label__graphs  __label__trees  managing  mobile  phone  network  want  offer  competitive  price  connect  network  network  ha  node  competitor  ha  already  offered  connection  node  fixed  price  connection  bidirectional  initially  connection  competitor  offering  connection  competitor  offering  connect  node  cost  list  connection  want  offer  guaranteed  set  connection  doe  form  cycle  connection  connect  node  connection  bidirectional  cost  connection  decided  set  price  connection  arbitrary  value  price  set  independently  connection  setting  price  customer  choose  connection  node  connected  single  network  total  cost  chosen  connection  minimum  possible  multiple  way  choose  network  customer  choose  arbitrary  maximizes  connection  want  set  price  way  connection  chosen  customer  sum  price  connection  maximized  print  maximum  profit  achieve  unbounded  input  k  node  connection  competitor  connection  respectively  next  representing  connection  node  set  connection  guaranteed  acyclic  next  denoting  competitor  connection  node  cost  none  connection  connects  node  pair  connection  connect  pair  node  addition  connection  given  non  decreasing  order  cost  valid  note  connection  appear  set  competitor  set  though  connection  appear  twice  set  guaranteed  union  connection  competitor  connection  form  connected  network  print  single  maximum  possible  profit  achieve  set  price  connection  appropriately  profit  unbounded  print
875/E __label__dp  __label__data  structures  __label__binary  search  petya  vasya  got  employed  courier  working  day  deliver  package  different  point  according  company  internal  rule  delivery  package  must  carried  strictly  certain  order  initially  petya  point  coordinate  vasya  point  coordinate  client  point  order  required  visit  guy  agree  advance  deliver  package  customer  act  follows  package  client  delivered  delivers  package  client  sent  path  person  went  point  friend  busy  delivering  current  package  standing  still  communicate  guy  got  walkie  talkie  walkie  talkie  work  rather  poorly  great  distance  petya  vasya  want  distribute  order  maximum  distance  day  low  possible  help  petya  vasya  minimize  maximum  distance  observing  delivery  rule  contains  point  delivery  starting  position  petya  vasya  second  contains  customer  coordinate  order  make  delivery  guaranteed  equal  output  minimum  possible  maximal  distance  courier  delivery
543/B __label__graphs  __label__constructive  algorithms  country  exactly  city  bidirectional  road  connecting  city  city  numbered  city  connected  road  hour  along  road  either  city  city  city  city  road  network  city  get  moving  along  road  want  destroy  largest  possible  road  country  remaining  road  would  allow  get  city  city  hour  get  city  city  hour  determine  maximum  road  need  destroy  order  meet  condition  plan  impossible  reach  desired  result  print  contains  city  road  country  respectively  next  description  road  pair  aii  guaranteed  road  given  description  transport  city  guaranteed  pair  city  ha  road  last  contains  respectively  print  single  answer  problem  impossible  meet  condition  print
1175/D __label__greedy  __label__sortings  given  array  asked  divide  array  non  empty  consecutive  subarrays  every  element  array  included  exactly  subarray  let  index  subarray  element  belongs  subarrays  numbered  left  right  let  cost  division  equal  example  divide  subbarays  following  way  cost  division  equal  calculate  maximum  cost  obtain  dividing  array  non  empty  consecutive  subarrays  contains  second  contains  print  maximum  cost  obtain  dividing  array  nonempty  consecutive  subarrays
527/C __label__implementation  __label__data  structures  __label__binary  search  leonid  want  become  glass  carver  person  creates  beautiful  artwork  cutting  glass  already  ha  rectangular  sheet  glass  diamond  glass  cutter  lot  enthusiasm  lack  understanding  carve  order  waste  time  decided  practice  technique  carving  make  vertical  horizontal  cut  entire  sheet  process  result  making  smaller  rectangular  fragment  glass  leonid  doe  move  newly  made  glass  fragment  particular  cut  divide  fragment  glass  go  smaller  fragment  cut  leonid  try  determine  area  largest  currently  available  glass  fragment  ha  since  appear  fragment  question  take  time  distracts  fascinating  process  leonid  offer  divide  labor  cut  glass  calculate  area  maximum  fragment  cut  agree  contains  next  description  cut  description  ha  form  case  leonid  make  horizontal  cut  distance  millimeter  lower  edge  original  sheet  glass  second  case  leonid  make  vertical  cut  distance  millimeter  left  edge  original  sheet  glass  guaranteed  leonid  make  identical  cut  cut  print  single  area  maximum  available  glass  fragment  mm
613/E __label__dp  __label__strings  oleg  petrov  love  crossword  puzzle  every  thursday  buy  favorite  magazine  crossword  word  puzzle  last  magazine  oleg  found  curious  puzzle  magazine  promised  valuable  prize  solution  give  formal  description  problem  puzzle  field  consists  row  row  contains  cell  cell  contains  exactly  small  english  letter  given  word  consists  small  english  letter  solution  puzzle  sequence  field  cell  letter  written  cell  match  letter  cell  sequence  pairwise  distinct  cell  common  side  oleg  petrov  quickly  found  solution  puzzle  wonder  many  distinct  solution  puzzle  oleg  petrov  like  large  calculate  answer  modulo  solution  considered  distinct  sequence  cell  match  least  position  range  cj  state  field  puzzle  non  empty  contains  exactly  small  english  letter  next  left  empty  next  non  empty  contains  word  consisting  small  english  letter  length  exceed  print  single  distinct  solution  puzzle  modulo
172/D __label__number  theory  reform  started  berland  time  parliament  discussing  reform  calendar  make  life  citizen  berland  varied  wa  decided  change  calendar  people  complaining  year  fly  wa  decided  starting  next  year  day  per  year  begin  grow  coming  year  exactly  day  next  coming  year  day  next  day  schedule  planned  coming  year  year  length  year  equal  day  ha  decided  become  month  palevny  made  following  proposal  calendar  month  comfortable  printed  square  sheet  paper  proposed  make  day  month  square  day  per  month  month  year  different  different  year  day  year  must  divisible  day  per  month  year  rule  ensures  month  year  day  per  month  year  must  chosen  save  maximum  amount  paper  print  calendar  word  day  per  month  much  possible  rule  provide  unambiguous  method  choosing  day  month  given  year  length  example  according  palevny  proposition  year  consists  day  month  day  year  consists  day  month  day  year  day  month  day  proposal  provoked  heated  discussion  community  famous  mathematician  perelmanov  quickly  calculated  proposal  supported  period  year  beginning  year  ha  day  country  spend  sheet  paper  print  set  calendar  year  perelmanov  calculation  take  account  fact  set  calendar  year  month  printed  separate  sheet  repeat  perelmanov  achievement  print  required  given  positive  perelmanov  warns  program  work  longer  second  maximum  test  input  contains  pair  print  required
778/D __label__constructive  algorithms  peter  decided  lay  parquet  room  size  n  parquet  consists  tile  size  worker  laid  parquet  became  clear  tile  pattern  look  like  peter  like  worker  lay  worker  decided  removing  entire  parquet  laying  difficult  task  decided  make  operation  every  hour  remove  tile  form  square  rotate  degree  put  back  place  idea  obtain  desired  configuration  using  operation  whether  possible  help  peter  make  plan  worker  tell  impossible  plan  command  contains  size  room  least  even  following  character  description  current  configuration  parquet  tile  character  represents  position  half  tile  character  correspond  left  right  upper  lower  half  respectively  following  character  describing  desired  configuration  format  output  operation  next  output  description  operation  operation  specified  coordinate  row  column  left  upper  half  tile  operation  performed
1188/A1 __label__trees  note  problem  similar  problem  hack  problem  solve  problem  given  tree  node  beginning  written  edge  operation  choose  distinct  leaf  real  add  value  written  edge  simple  path  example  picture  see  result  applying  operation  graph  adding  path  adding  path  true  configuration  real  written  edge  achieve  finite  operation  leaf  node  tree  degree  simple  path  path  node  twice  contains  single  node  next  contains  meaning  edge  node  guaranteed  edge  form  tree  configuration  real  written  edge  tree  achieve  performing  operation  output
831/C __label__constructive  algorithms  __label__brute  force  polycarp  watched  show  jury  member  rated  participant  adding  certain  point  negative  point  subtracted  initially  participant  score  mark  added  score  known  jury  member  gave  point  polycarp  doe  remember  many  point  participant  mark  given  remembers  score  announced  judge  rated  participant  n  value  guaranteed  value  distinct  possible  polycarp  remembers  score  announced  note  initial  score  announced  task  determine  option  score  participant  could  judge  rated  participant  contains  jury  member  score  polycarp  remembers  second  contains  jury  mark  chronological  order  third  contains  distinct  j  value  point  polycarp  remembers  note  value  necessarily  given  chronological  order  print  option  score  participant  could  judge  rated  participant  polycarp  mess  something  option  print  without  quote
617/D __label__implementation  __label__constructive  algorithms  point  marked  coordinate  plane  goal  make  simple  polyline  without  self  intersection  self  touch  pass  point  polyline  must  consist  segment  parallel  coordinate  ax  find  minimum  segment  polyline  consist  input  contains  contains  coordinate  point  guaranteed  point  distinct  print  single  minimum  possible  segment  polyline
411/A __label__implementation  probably  registered  internet  site  many  time  time  enter  invented  password  usually  registration  form  automatically  check  password  crypt  resistance  user  password  complex  enough  message  displayed  today  task  implement  automatic  check  web  developer  company  assume  password  complex  enough  meet  following  condition  password  length  least  character  password  contains  least  large  english  letter  password  contains  least  small  english  letter  password  contains  least  digit  given  password  please  implement  automatic  check  complexity  company  contains  non  empty  sequence  character  character  character  either  large  english  letter  small  english  letter  digit  character  password  complex  enough  print  message  correct  without  quote  otherwise  print  message  weak  without  quote
1000/F __label__data  structures  given  array  consisting  query  query  denoted  query  find  occurs  exactly  subarray  index  index  subarray  contiguous  subsegment  array  example  query  subarray  interested  possible  answer  query  subarray  interested  element  occurs  exactly  answer  query  contains  second  contains  third  contains  follow  containing  representing  query  answer  query  follows
1102/B __label__greedy  __label__sortings  given  array  consisting  color  array  color  way  element  array  colored  color  least  element  colored  color  array  element  colored  color  distinct  obviously  coloring  might  impossible  case  print  otherwise  print  yes  coloring  color  element  given  array  satisfying  condition  multiple  answer  print  input  contains  length  array  color  respectively  second  input  contains  element  array  answer  print  otherwise  print  yes  coloring  color  element  given  array  satisfying  condition  described  problem  statement  multiple  answer  print
623/C __label__dp  __label__binary  search  programmer  sasha  student  mipt  moscow  institute  physic  technology  need  make  laboratory  work  pas  final  laboratory  unit  plane  standard  coordinate  ax  marked  physicist  moscow  institute  physic  technology  charged  ax  large  electric  charge  axis  positive  axis  negative  experienced  laboratory  worker  marked  point  coordinate  plane  stopped  time  sasha  use  atomic  tweezer  place  elementary  particle  point  ha  unlimited  electron  negatively  charged  elementary  particle  proton  positively  charged  elementary  particle  put  either  electron  proton  marked  point  soon  marked  point  filled  particle  laboratory  worker  turn  time  particle  come  motion  time  stabilize  equilibrium  objective  laboratory  work  arrange  particle  way  diameter  resulting  state  maximum  distance  pair  point  set  small  possible  since  sasha  programmer  naively  think  particle  simply  fall  projection  corresponding  ax  electron  fall  axis  proton  fall  axis  programmer  consider  model  sasha  particle  get  point  point  electron  point  proton  laboratory  ha  high  background  radiation  sasha  take  care  laptop  take  write  program  computes  minimum  possible  diameter  resulting  set  therefore  print  square  minimum  possible  diameter  set  input  contains  single  point  marked  plane  next  contains  coordinate  point  guaranteed  point  coincide  print  single  square  minimum  possible  diameter  set
818/B __label__implementation  child  standing  circle  playing  game  child  clockwise  order  form  permutation  length  sequence  appears  exactly  game  consists  step  step  current  leader  index  count  people  clockwise  order  starting  next  person  last  pointed  leader  becomes  new  leader  given  index  leader  beginning  step  child  leader  game  write  program  restore  possible  permutation  multiple  solution  print  solution  print  contains  second  contains  index  leader  beginning  step  print  permutation  leader  game  exactly  rule  followed  multiple  solution  print
1214/C __label__greedy  __label__data  structures  petya  friend  made  birthday  present  bracket  sequence  petya  wa  quite  disappointed  gift  dreamed  correct  bracket  sequence  told  friend  nothing  dream  decided  fix  present  make  everything  right  petya  going  move  bracket  original  place  sequence  position  reversing  bracket  turning  vice  versa  allowed  remind  bracket  sequence  called  correct  empty  equal  correct  bracket  sequence  equal  concatenation  correct  bracket  sequence  example  correct  help  petya  fix  birthday  present  understand  whether  move  bracket  sequence  becomes  correct  input  contains  single  length  sequence  petya  received  birthday  second  input  contains  bracket  sequence  length  containing  symbol  print  yes  petya  make  sequence  correct  moving  bracket  otherwise  print
283/A __label__implementation  __label__data  structures  __label__constructive  algorithms  bessie  cow  playing  sequence  need  help  start  sequence  initially  containing  perform  operation  operation  following  add  element  sequence  append  end  sequence  hence  size  sequence  increase  remove  last  element  sequence  size  sequence  decrease  note  operation  done  least  element  sequence  operation  cow  would  like  know  average  sequence  help  contains  single  operation  next  describe  operation  start  denoting  type  operation  see  followed  followed  single  followed  anything  guaranteed  operation  correct  touch  nonexistent  element  always  least  element  sequence  output  containing  average  sequence  corresponding  operation
628/D __label__dp  consider  decimal  presentation  let  call  magic  digit  appears  decimal  presentation  even  position  nowhere  else  example  magic  magic  hand  magic  magic  magic  magic  find  magic  segment  multiple  answer  huge  find  value  modulo  find  remainder  dividing  contains  parameter  problem  statement  second  contains  positive  decimal  presentation  without  leading  third  contains  positive  decimal  presentation  without  leading  guaranteed  digit  exceed  print  remainder  dividing  magic  segment  multiple
883/B __label__greedy  __label__graphs  __label__constructive  algorithms  military  men  berland  army  given  order  military  men  given  pair  meaning  military  man  gave  order  another  military  man  time  reform  berland  ministry  defence  plan  introduce  rank  berland  army  military  man  assigned  rank  inclusive  already  assigned  rank  rest  get  rank  soon  help  ministry  assign  rank  rest  army  order  true  rank  person  giving  order  military  man  strictly  greater  rank  person  receiving  order  military  man  rank  least  military  man  rank  contains  military  men  berland  army  order  rank  second  contains  case  mean  military  man  ha  already  assigned  rank  mean  military  man  rank  following  order  per  order  described  containing  xii  mean  order  wa  given  military  man  military  man  pair  military  men  could  several  order  print  rank  military  man  many  solution  print
1216/E1 __label__math  __label__brute  force  __label__binary  search  difference  easy  hard  version  maximum  value  given  infinite  sequence  form  consist  block  consecutive  positive  written  another  block  consists  second  third  block  consists  element  sequence  element  sequence  numbered  example  element  sequence  element  sequence  element  sequence  element  element  sequence  task  answer  independent  query  query  given  calculate  digit  position  sequence  input  contains  query  following  contains  description  corresponding  query  print  print  digit  answer  query  equal  element  position  sequence
913/A __label__math  __label__implementation  following  problem  well  known  given  calculate  factor  denotes  remainder  division  asked  solve  reverse  problem  given  calculate  contains  single  second  contains  single  output  single  value
909/D __label__implementation  __label__greedy  __label__data  structures  given  set  point  straight  point  ha  color  assigned  point  neighbor  point  point  point  ha  neighbor  left  right  perform  sequence  operation  set  point  operation  delete  point  neighbor  point  different  color  point  point  deleted  simultaneously  decide  point  deleted  delete  perform  next  operation  etc  operation  would  delete  point  perform  many  operation  need  perform  next  operation  doe  point  delete  contains  single  string  lowercase  english  letter  letter  give  point  color  order  arranged  letter  give  color  leftmost  point  second  give  color  second  point  left  etc  point  output  containing  operation  performed  given  set  point  point  delete
911/D __label__math  __label__brute  force  permutation  size  array  size  occurs  exactly  array  inversion  permutation  pair  index  example  permutation  contains  inversion  given  permutation  size  query  query  represented  index  denoting  reverse  segment  permutation  example  query  applied  resulting  permutation  query  determine  whether  inversion  odd  even  contains  size  permutation  second  contains  element  permutation  pairwise  distinct  third  contains  query  process  follow  containing  ii  denoting  query  reverse  segment  permutation  query  performed  another  print  must  equal  odd  inversion  permutation  query  odd  even  otherwise
846/E __label__greedy  __label__dfs  __label__trees  igor  post  graduate  student  chemistry  faculty  berland  state  university  bersu  need  conduct  complicated  experiment  write  thesis  laboratory  bersu  material  required  experiment  fortunately  chemical  law  allow  material  transformation  yes  chemistry  berland  differs  rule  transformation  bit  strange  berland  chemist  aware  material  numbered  order  discovered  material  transformed  material  vice  versa  formally  exist  denote  possible  transformation  kilogram  material  transformed  kilogram  material  kilogram  material  transformed  kilogram  material  chemical  processing  equipment  bersu  allows  transformation  amount  resulting  material  always  kilogram  igor  know  experiment  requires  kilogram  material  laboratory  contains  kilogram  material  possible  conduct  experiment  transforming  material  none  contains  material  discovered  berland  chemist  second  contains  supply  bersu  laboratory  third  contains  amount  required  experiment  follow  contains  denote  transformation  material  j  j  print  yes  possible  conduct  experiment  otherwise  print
592/A __label__implementation  galois  strongest  chess  player  byteforces  ha  even  invented  new  variant  chess  named  pawnchess  new  game  played  board  consisting  row  column  beginning  every  game  black  white  pawn  placed  board  black  pawn  placed  necessarily  equal  white  pawn  placed  let  enumerate  row  column  row  numbered  top  bottom  column  numbered  left  right  denote  cell  located  row  column  always  player  playing  game  player  play  white  pawn  player  play  black  goal  player  put  pawn  row  player  try  put  pawn  row  soon  player  completes  goal  game  finish  immediately  succeeded  player  declared  winner  player  move  alternate  turn  move  player  must  choose  exactly  white  pawn  move  step  upward  player  turn  must  choose  exactly  black  pawn  move  step  move  possible  targeted  cell  empty  guaranteed  scenario  game  always  least  move  available  player  moving  upward  mean  pawn  located  cell  moving  mean  pawn  located  cell  corresponding  cell  must  empty  occupied  pawn  color  given  initial  disposition  board  determine  win  game  player  play  optimally  note  always  winner  due  restriction  game  scenario  player  move  available  input  consists  board  description  given  contains  character  character  used  denote  black  pawn  character  represents  white  pawn  empty  cell  marked  guaranteed  white  pawn  row  neither  black  pawn  last  row  print  player  win  game  given  board  player  claim  victory  guaranteed  always  winner  given  board
989/A __label__implementation  __label__strings  curtain  opened  canvas  unfolds  outside  kanno  marvel  blonde  colour  along  riverside  tangerine  blossom  instead  pity  already  late  spring  sigh  mino  regret  drizzling  night  gone  blend  best  absorbed  landscape  kanno  remains  optimistic  landscape  expressed  row  consecutive  cell  either  contains  flower  colour  amber  buff  canary  yellow  empty  flower  withers  disappears  cell  originally  belonged  spread  petal  colour  neighbouring  cell  outside  field  cell  side  landscape  case  petal  fall  outside  given  cell  simply  become  invisible  help  kanno  determine  whether  possible  possibly  none  flower  shed  petal  least  cell  contains  colour  considering  petal  flower  note  flower  wither  arbitrary  order  input  contains  non  empty  string  consisting  uppercase  english  letter  character  dot  denoting  cell  containing  amber  flower  buff  canary  yellow  flower  respectively  output  yes  possible  colour  appear  cell  otherwise
1251/E2 __label__greedy  __label__data  structures  __label__binary  search  difference  easy  hard  version  constraint  election  held  berland  want  win  precisely  want  everyone  vote  voter  way  convince  vote  way  convince  voter  pay  coin  second  way  make  voter  vote  voter  vote  free  moreover  process  voting  take  place  several  step  example  voter  buy  vote  fifth  voter  eventually  everyone  vote  set  people  voting  change  follows  calculate  minimum  coin  spend  everyone  vote  contains  test  case  test  case  contains  voter  next  contains  description  voter  contains  guaranteed  sum  test  case  doe  exceed  test  case  print  minimum  coin  spend  everyone  vote
939/C __label__binary  search  distant  future  earth  day  last  hour  timezones  local  time  adjacent  timezones  differ  hour  describing  local  time  hour  used  time  hour  instead  hour  used  local  time  timezone  hour  local  time  timezone  hour  online  programming  contest  platform  want  conduct  contest  last  hour  way  beginning  coincides  beginning  hour  time  zone  platform  know  people  timezone  want  participate  contest  person  participate  contest  start  earlier  hour  minute  local  time  end  later  hour  minute  local  time  value  equal  time  zone  contest  start  hour  minute  local  time  person  participate  help  platform  select  hour  people  participate  contest  maximum  contains  single  hour  day  second  contains  space  separated  people  timezone  want  participate  contest  third  contains  space  separated  output  single  time  beginning  contest  timezone  local  time  participant  maximum  possible  many  answer  output  smallest
163/E __label__dp  __label__data  structures  __label__dfs  __label__trees  __label__strings  best  programmer  embezzland  compete  develop  part  project  called  government  system  automated  statistic  collecting  press  analysis  know  citizen  become  member  embezzland  government  citizen  surname  surname  different  initially  citizen  list  member  government  system  support  following  option  include  citizen  government  exclude  citizen  government  given  newspaper  article  text  calculate  politicized  every  active  government  member  system  count  time  surname  occurs  text  substring  occurrence  taken  consideration  including  intersecting  degree  politicization  text  defined  sum  value  active  government  member  implement  system  contains  space  separated  query  system  potential  government  member  next  surname  per  surname  pairwise  different  next  query  system  per  query  consists  character  determines  operation  operation  argument  written  consecutively  without  space  operation  include  government  corresponds  character  operation  exclude  corresponds  argument  operation  index  citizen  involved  operation  citizen  included  excluded  government  arbitrary  time  order  including  government  citizen  already  excluding  citizen  change  nothing  operation  calculate  politicization  corresponds  character  argument  text  string  surname  text  non  empty  sequence  lowercase  latin  letter  total  length  surname  exceed  total  length  text  exceed  calculate  politicization  operation  print  separate  degree  politicization  given  text  print  nothing  operation
57/D __label__math  __label__dp  stewie  rabbit  explores  new  parallel  universe  dimensional  universe  ha  shape  rectangular  grid  containing  column  universe  small  cell  grid  particle  particle  universe  either  static  dynamic  static  particle  always  remains  position  due  unintelligible  gravitation  law  static  particle  parallel  universe  present  column  row  present  diagonally  adjacent  cell  dynamic  particle  appears  random  empty  cell  randomly  chooses  destination  cell  destination  cell  coincide  start  cell  see  sample  move  along  shortest  path  cell  unoccupied  static  particle  empty  cell  probability  selected  beginning  end  path  reached  destination  cell  particle  disappears  dynamic  particle  exist  moment  time  particle  move  cell  cell  adjacent  side  transition  take  exactly  galactic  second  stewie  got  interested  average  lifespan  particle  given  universe  contains  space  separated  represent  size  universe  next  containing  symbol  describe  universe  without  dynamic  particle  symbol  equal  cell  occupied  static  particle  empty  guaranteed  described  universe  satisfies  property  described  static  particle  column  row  besides  positioned  diagonally  adjacent  cell  print  single  single  average  life  span  particle  accuracy  least  decimal  place
1228/B __label__math  __label__implementation  suppose  hw  grid  consisting  empty  full  cell  let  make  definition  consecutive  full  cell  connected  left  side  row  particular  leftmost  cell  row  empty  consecutive  full  cell  connected  top  end  column  particular  topmost  cell  column  empty  word  row  start  exactly  full  cell  similarly  column  start  exactly  full  cell  value  grid  black  cell  full  white  cell  empty  value  initially  cell  empty  find  way  fill  grid  cell  satisfy  value  since  answer  large  find  answer  modulo  word  find  remainder  division  answer  contains  height  width  grid  second  contains  value  third  contains  value  print  answer  modulo
975/B __label__implementation  __label__brute  force  mancala  game  famous  middle  east  played  board  consists  hole  initially  hole  ha  stone  player  make  move  chooses  hole  contains  positive  stone  take  stone  inside  redistributes  stone  next  hole  counter  clockwise  direction  note  counter  clockwise  order  mean  player  take  stone  hole  put  stone  hole  etc  put  stone  hole  next  put  hole  move  player  collect  stone  hole  even  stone  stone  collected  player  score  according  resli  resli  famous  mancala  player  want  know  maximum  score  obtain  move  contains  stone  hole  guaranteed  either  odd  least  stone  board  output  maximum  possible  score  move
940/B __label__dp  __label__greedy  right  actually  solve  problem  given  initially  equal  allowed  perform  type  operation  subtract  operation  cost  coin  divide  performed  divisible  operation  cost  coin  minimum  amount  coin  pay  make  equal  contains  single  second  contains  single  third  contains  single  fourth  contains  single  output  single  minimum  amount  coin  pay  make  equal
260/E __label__data  structures  __label__brute  force  __label__binary  search  country  called  flatland  infinite  dimensional  plane  flatland  ha  city  point  plane  flatland  ruled  king  circle  circle  ha  son  want  give  son  part  flatland  rule  want  draw  distinct  straight  parallel  axis  others  parallel  axis  straight  city  thus  flatland  divided  part  son  given  exactly  part  circle  thought  little  evaluated  son  obedience  decided  son  get  part  flatland  ha  exactly  city  help  circle  find  straight  divide  flatland  part  resulting  part  given  son  son  got  part  flatland  contains  city  contains  city  flatland  next  space  separated  coordinate  city  city  located  point  last  contains  space  separated  solution  print  single
717/F __label__data  structures  strolling  sunshine  yeah  feel  good  well  certainly  feel  good  hero  making  magic  casually  walking  directional  road  fighting  imp  imp  weak  feeble  creature  good  much  hero  enjoy  fighting  fun  nothing  else  hero  ignatius  simply  adores  imp  observing  imp  represented  indexed  array  length  denotes  imp  position  sometimes  imp  appear  nowhere  hero  fight  imp  select  segment  start  end  segment  finish  end  without  ever  exiting  segment  move  exactly  cell  left  right  current  position  defeat  imp  cell  moved  imp  cell  decrease  applies  hero  appear  end  segment  beginning  walk  goal  defeat  imp  segment  without  ever  moving  empty  cell  without  imp  since  would  get  bored  since  ignatius  love  imp  really  want  fight  imp  harmed  event  task  would  like  tell  whether  would  possible  clear  certain  segment  imp  mentioned  way  wanted  given  query  type  denotes  imp  appear  cell  interval  asks  whether  ignatius  could  defeat  imp  interval  way  described  contains  single  length  array  following  contains  initial  imp  cell  third  contains  single  query  remaining  query  query  provided  possibly  second  type  query  output  possible  clear  segment
424/C __label__math  people  tomskaya  region  like  magic  formula  much  see  imagine  given  sequence  positive  let  write  magic  formula  mod  mean  operation  taking  residue  dividing  expression  mean  applying  bitwise  xor  excluding  operation  given  operation  exists  modern  programming  language  example  language  java  represented  pascal  xor  people  tomskaya  region  like  magic  formula  much  like  calculate  therefore  given  sequence  calculate  value  input  contains  next  contains  output  single  value
523/A __label__implementation  polycarp  writing  prototype  graphic  editor  ha  already  made  mind  basic  image  transformation  editor  rotate  image  degree  clockwise  flip  image  horizontally  symmetry  relative  vertical  right  part  image  move  left  vice  versa  zooming  image  sure  large  transformation  expressed  ha  recently  stopped  implementing  transformation  monochrome  image  test  feature  asked  write  code  consecutively  perform  action  monochrome  image  rotate  image  degree  clockwise  flip  image  horizontally  finally  zoom  twice  image  double  linear  size  implement  feature  help  polycarp  test  editor  contains  width  height  image  pixel  picture  given  contains  character  character  encodes  color  corresponding  pixel  image  consists  character  image  monochrome  print  containing  character  result  consecutive  implementing  transformation  described
859/B __label__math  __label__brute  force  __label__geometry  security  guard  friend  recently  got  new  job  new  security  company  company  requires  patrol  area  city  encompassing  exactly  city  block  let  choose  block  friend  must  walk  perimeter  region  whose  area  exactly  block  friend  quite  lazy  would  like  help  find  shortest  possible  route  meet  requirement  city  laid  square  grid  pattern  large  enough  sake  problem  considered  infinite  consist  single  city  block  must  enclosed  route  print  minimum  perimeter  achieved
1256/E __label__dp  __label__greedy  __label__sortings  student  university  programming  skill  student  coach  want  divide  team  prepare  upcoming  icpc  final  imagine  good  university  ha  student  ready  final  team  consist  least  student  student  belong  exactly  team  diversity  team  difference  maximum  programming  skill  student  belongs  team  minimum  programming  skill  student  belongs  team  word  team  consists  student  programming  skill  diversity  team  max  min  max  total  diversity  sum  diversity  team  formed  task  minimize  total  diversity  division  student  find  optimal  way  divide  student  input  contains  student  second  input  contains  programming  skill  student  print  minimum  total  diversity  division  student  team  division  correspondingly
523/D __label__implementation  __label__data  structures  social  network  dog  called  doghouse  ha  special  server  recompress  uploaded  video  cute  cat  video  uploaded  recompressed  server  saved  social  network  know  server  take  second  recompress  minute  fragment  thus  server  take  second  recompress  minute  video  know  time  video  uploaded  network  second  starting  moment  server  started  working  video  appear  different  moment  time  recompressed  order  appear  video  appeared  time  recompressing  start  moment  immediately  video  await  recompressing  server  busy  case  soon  server  available  immediately  start  recompressing  another  video  video  await  recompressing  queue  moment  video  started  recompressed  server  available  start  recompressing  video  video  find  moment  stop  recompressed  input  contains  video  server  respectively  next  description  video  pair  time  second  video  appeared  duration  minute  guaranteed  distinct  video  given  chronological  order  upload  order  increasing  print  time  second  server  start  working  video  recompressed
19/B __label__dp  bob  came  cash  carry  store  put  item  trolley  went  checkout  counter  pay  item  described  price  time  second  checkout  assistant  spends  item  checkout  assistant  occupied  item  bob  steal  item  trolley  steal  item  bob  need  exactly  second  minimum  amount  money  bob  pay  checkout  assistant  remember  please  bob  determines  order  item  checkout  assistant  input  contains  following  item  described  pair  bob  able  steal  anything  checkout  assistant  occupied  item  output  answer  problem  minimum  amount  money  bob  pay
1110/D __label__dp  playing  game  jongmah  need  know  rule  solve  problem  tile  hand  tile  ha  written  win  game  need  form  triple  triple  consists  tile  written  tile  either  consecutive  example  valid  triple  use  tile  hand  form  triple  tile  used  triple  determine  close  win  want  know  maximum  triple  form  tile  hand  contains  tile  hand  tile  type  second  contains  denotes  written  tile  print  maximum  triple  form
436/B __label__math  __label__implementation  nom  really  like  candy  like  spider  frequently  steal  candy  day  nom  fancied  walk  park  unfortunately  park  ha  spider  nom  want  see  park  represented  rectangular  n  field  park  ha  spider  spider  time  cell  field  spider  move  time  spider  always  move  direction  left  right  unit  time  spider  crawl  cell  side  adjacent  cell  corresponding  direction  cell  given  direction  spider  leaf  park  spider  interfere  move  specifically  cell  multiple  spider  time  nom  sure  start  walk  definitely  want  start  walking  time  upper  row  cell  field  guaranteed  cell  row  spider  walk  moving  field  towards  lowest  row  walk  end  nom  leaf  boundary  park  know  nom  move  jumping  jump  take  time  unit  transport  little  monster  cell  either  side  adjacent  cell  lower  row  outside  park  boundary  time  nom  land  cell  see  spider  come  cell  moment  time  nom  want  choose  optimal  cell  start  walk  wonder  possible  starting  cell  many  spider  see  walk  start  cell  help  calculate  required  value  possible  starting  cell  contains  next  contains  character  description  park  character  describe  row  park  field  character  equal  mean  corresponding  cell  field  empty  otherwise  character  equal  character  meaning  cell  ha  spider  time  moving  left  spider  moving  right  spider  moving  spider  moving  guaranteed  row  spider  guaranteed  description  field  contains  extra  character  guaranteed  time  field  contains  exactly  spider  print  must  show  spider  nom  see  start  walk  cell  row  cell  row  field  numbered  left  right
729/D __label__math  __label__greedy  __label__constructive  algorithms  galya  playing  dimensional  sea  battle  grid  game  ship  placed  grid  ship  consists  consecutive  cell  cell  part  ship  ship  touch  galya  know  ship  location  shoot  cell  shot  told  cell  wa  part  ship  case  called  hit  case  called  miss  galya  ha  already  made  shot  miss  task  calculate  minimum  cell  galya  shoot  would  hit  least  ship  guaranteed  least  valid  ship  placement  contains  positive  length  grid  ship  grid  length  ship  shot  galya  ha  already  made  second  contains  string  length  consisting  character  galya  ha  already  made  shot  cell  otherwise  guaranteed  exactly  string  print  minimum  cell  galya  shoot  would  hit  least  ship
598/C __label__sortings  __label__geometry  given  set  vector  plane  starting  origin  task  find  pair  vector  minimal  non  oriented  angle  non  oriented  angle  non  negative  value  minimal  clockwise  counterclockwise  direction  angle  non  oriented  angle  always  example  opposite  direction  vector  angle  equal  input  contains  single  vector  following  contains  coordinate  vector  vector  numbered  order  appearing  input  guaranteed  vector  input  share  direction  still  opposite  direction  print  pair  index  vector  minimal  non  oriented  angle  print  order  many  possible  answer  print
226/B __label__greedy  pile  stone  size  lying  table  front  move  take  pile  add  add  pile  pile  size  pile  increase  current  size  pile  pile  stop  existing  cost  adding  operation  equal  size  added  pile  task  determine  minimum  cost  gather  stone  pile  add  challenge  stone  pile  built  conspiracy  decided  pile  let  add  time  added  another  pile  moreover  pile  decided  puzzle  completely  told  variant  necessarily  distinct  might  equal  task  find  minimum  cost  variant  contains  stone  pile  second  contains  space  separated  initial  size  stone  pile  third  contains  query  last  contains  space  separated  value  distinct  query  note  repeat  print  whitespace  separated  answer  query  order  query  given  input
429/A __label__dfs  __label__trees  iahub  proud  recent  discovery  propagating  tree  right  invented  new  tree  called  xor  tree  new  revolutionary  discovery  invented  game  kid  us  xor  tree  game  played  tree  node  numbered  node  ha  initial  value  initi  either  root  tree  node  perform  several  possibly  operation  tree  game  available  type  operation  pick  node  right  someone  ha  picked  node  value  node  flip  value  son  remain  value  son  son  flip  value  son  son  son  remain  goal  game  get  node  value  goali  need  reach  goal  game  using  minimum  operation  contains  next  contains  uii  meaning  edge  node  next  contains  corresponds  initi  initi  either  following  contains  corresponds  goali  goali  either  output  cnt  representing  minimal  operation  perform  next  cnt  representing  pick  node
1184/E1 __label__graphs  __label__trees  heidi  found  daleks  created  network  bidirectional  time  corridor  connecting  different  destination  different  time  suspect  planning  another  invasion  entire  space  time  order  counter  invasion  plan  deploy  trap  time  vortex  along  carefully  chosen  time  corridor  know  tinkering  time  vortex  dangerous  consulted  doctor  proceed  ha  learned  following  different  time  corridor  require  different  amount  energy  keep  stable  daleks  unlikely  use  corridor  invasion  pick  set  corridor  requires  smallest  total  energy  maintain  still  make  time  travel  possible  destination  know  use  minimum  spanning  tree  setting  trap  modify  energy  required  keep  corridor  stable  heidi  decided  carry  field  test  deploy  trap  placing  along  corridor  need  know  whether  daleks  going  use  corridor  deployment  trap  give  map  time  corridor  undirected  graph  energy  requirement  corridor  corridor  max  largest  changed  required  amount  energy  daleks  still  using  invasion  belongs  minimum  spanning  tree  task  calculate  max  corridor  heidi  plan  arm  trap  edge  graph  contains  n  destination  invaded  time  corridor  next  describes  corridor  destination  energy  guaranteed  pair  repeat  graph  connected  possible  travel  destination  using  time  corridor  output  single  max  corridor  input
715/D __label__constructive  algorithms  coder  love  maze  job  create  play  maze  consists  n  room  room  arranged  row  numbered  top  bottom  starting  column  numbered  left  right  starting  room  row  column  denoted  player  start  room  want  reach  room  room  ha  door  except  maze  border  wall  adjacent  wall  room  share  door  door  locked  mean  impossible  pas  door  example  door  connecting  locked  travel  room  downwards  room  room  rightwards  room  room  provided  corresponding  door  locked  image  represents  maze  door  locked  colored  arrow  denotes  possible  path  red  cross  denotes  locked  door  coder  considers  maze  difficulty  exactly  way  travelling  room  room  way  considered  different  differ  sequence  room  visited  travelling  task  create  maze  difficulty  exactly  equal  addition  coder  like  large  maze  size  maze  locked  door  limited  sound  simple  enough  right  input  contains  single  difficulty  required  maze  row  column  maze  respectively
77/E __label__geometry  ever  tasted  martian  food  well  signature  dish  served  completely  black  plate  radius  flat  pancake  put  perfectly  circular  portion  golden  honduras  plate  ha  radius  located  close  edge  plate  possible  staying  entirely  plate  golden  honduras  touch  edge  plate  inside  believed  proximity  portion  golden  honduras  edge  plate  demonstrates  neatness  exactness  martian  perfectly  round  portion  pink  guadeloupe  put  plate  guadeloupe  overlap  honduras  beyond  border  plate  maximum  radius  pink  guadeloupe  touch  edge  plate  inside  touch  golden  honduras  outside  size  rose  guadeloupe  show  generosity  hospitality  martian  portion  perfectly  round  shape  green  bull  terrier  put  plate  come  contact  honduras  guadeloupe  beyond  border  plate  maximum  radius  following  portion  green  bull  terrier  must  necessarily  touch  golden  honduras  previous  portion  green  bull  terrier  touch  edge  plate  beyond  border  determine  whether  stranger  worthy  touch  food  martian  ask  find  radius  portion  green  bull  terrier  knowing  radius  plate  portion  golden  honduras  worthy  contains  amount  testcases  following  positive  radius  plate  portion  golden  honduras  pretests  print  radius  portion  green  bull  terrier  test  absolute  relative  error  answer  exceed
954/D __label__dfs  __label__graphs  little  town  nsk  consists  junction  connected  bidirectional  road  road  connects  distinct  junction  road  connect  pair  junction  possible  get  junction  junction  road  distance  junction  equal  minimum  possible  road  path  order  improve  transportation  system  city  council  asks  mayor  build  new  road  problem  mayor  ha  bought  wonderful  new  car  really  enjoys  ride  home  located  near  junction  work  located  near  junction  thus  want  build  new  road  way  distance  junction  decrease  assigned  task  compute  pair  junction  connected  road  new  road  junction  built  distance  decrease  firt  input  contains  junction  road  nsk  well  index  junction  mayor  home  work  located  respectively  following  contains  uii  meaning  road  connects  junction  directly  guaranteed  path  junction  road  connect  pair  junction  print  pair  junction  connected  direct  road  building  road  junction  decrease  distance  junction
1147/B __label__brute  force  __label__strings  inaka  ha  disc  circumference  unit  circumference  equally  divided  point  numbered  clockwise  point  adjacent  point  straight  segment  disc  endpoint  aforementioned  point  inaka  want  know  image  rotationally  symmetrical  segment  rotated  clockwise  around  center  circle  unit  new  image  original  contains  space  separated  point  segment  respectively  following  contains  space  separated  describe  segment  connecting  point  guaranteed  segment  coincide  output  yes  image  rotationally  symmetrical  otherwise  excluding  quotation  mark
472/D __label__dfs  __label__trees  easy  way  obtain  new  task  old  called  inverse  problem  give  output  original  task  ask  generate  input  solution  original  problem  produce  output  provided  hard  task  topcoder  open  round  inversermq  good  example  let  create  task  way  use  task  given  tree  please  calculate  distance  pair  node  yes  easy  inverse  version  bit  harder  given  n  distance  matrix  determine  distance  matrix  weighted  tree  weight  must  positive  contains  node  graph  next  contains  distance  node  node  exists  tree  output  yes  otherwise  output
1106/A __label__implementation  lunar  new  year  approaching  bought  matrix  lot  cross  matrix  size  nn  contains  without  quote  element  row  column  defined  define  cross  appearing  row  column  following  figure  illustrates  cross  appearing  position  matrix  task  find  cross  given  matrix  cross  different  appear  different  row  column  contains  positive  denoting  size  matrix  following  illustrate  matrix  contains  exactly  character  element  represents  output  single  containing  cross  given  matrix
813/F __label__data  structures  __label__graphs  given  undirected  graph  consisting  vertex  initially  edge  graph  given  query  query  either  add  undirected  edge  graph  remove  query  check  resulting  graph  bipartite  paint  vertex  graph  color  edge  connecting  vertex  color  contains  follow  ith  contains  describe  ith  query  edge  vertex  remove  otherwise  add  print  ith  must  yes  graph  bipartite  ith  query  otherwise
509/D __label__math  __label__constructive  algorithms  vasya  array  consisting  non  negative  size  size  vasya  chose  positive  created  n  matrix  using  following  formula  vasya  wrote  matrix  piece  paper  put  table  year  later  vasya  wa  cleaning  table  found  piece  paper  containing  n  matrix  remembered  making  matrix  day  rule  given  wa  sure  found  paper  matrix  day  task  find  matrix  found  could  obtained  following  rule  could  possible  contains  separated  space  row  column  found  matrix  respectively  following  contains  separated  space  element  row  matrix  matrix  could  obtained  manner  described  print  without  quote  single  output
1055/F __label__trees  __label__strings  given  connected  undirected  graph  without  cycle  tree  vertex  moreover  non  negative  written  every  edge  consider  pair  vertex  exactly  pair  pair  calculate  bitwise  exclusive  xor  edge  simple  path  path  consists  vertex  xor  edge  path  equal  suppose  sorted  resulting  value  non  decreasing  order  need  find  definition  xor  follows  given  consider  binary  representation  possibly  leading  bit  represented  bit  bit  let  result  xor  operation  defined  xii  contains  vertex  tree  path  list  non  decreasing  order  following  contains  ancestor  vertex  weight  corresponding  edge  print  smallest  xor  path  tree
1166/E __label__math  __label__constructive  algorithms  __label__brute  force  __label__number  theory  dora  explorer  ha  decided  use  money  several  year  juicy  royalty  shopping  better  place  shop  nlogonia  store  numbered  nlogonia  store  offer  positive  day  last  day  dora  bought  single  store  day  swiper  fox  bought  single  store  dora  buy  day  dora  considers  swiper  rival  considers  beat  swiper  day  least  common  multiple  bought  day  strictly  greater  least  common  multiple  swiper  bought  day  least  common  multiple  lcm  collection  smallest  positive  divisible  collection  dora  forgot  value  help  dora  find  positive  value  beat  swiper  every  day  need  find  possible  value  though  note  possible  value  coincide  solution  contains  day  store  follow  start  dora  bought  day  followed  distinct  index  store  dora  bought  day  index  output  must  consist  single  containing  possible  exist  positive  day  least  common  multiple  bought  dora  strictly  greater  least  common  multiple  bought  swiper  day  otherwise  print  impossible
983/E __label__data  structures  __label__trees  __label__binary  search  country  city  numbered  road  connecting  road  path  city  bidirectional  bus  route  city  bus  drive  city  taking  shortest  path  stop  every  city  drive  travelling  bus  travel  stop  route  travel  city  bus  interested  question  possible  get  city  another  minimum  bus  need  use  contains  single  city  second  contains  mean  city  connected  road  third  contains  single  bus  route  next  contains  meaning  bus  route  city  possible  route  city  next  contains  single  question  interested  next  contains  meaning  interested  possible  get  city  city  minimum  bus  need  use  print  answer  question  separate  way  get  city  another  print  otherwise  print  minimum  bus  use
676/B __label__math  __label__implementation  mary  ha  graduated  well  known  university  attending  celebration  party  student  like  dream  beautiful  life  used  champagne  glass  construct  small  pyramid  height  pyramid  top  level  consists  glass  stand  glass  second  level  counting  top  glass  third  level  bottom  level  consists  glass  vlad  ha  seen  movie  many  time  champagne  beautifully  flow  top  level  bottom  filling  glass  simultaneously  took  bottle  started  pour  glass  located  top  pyramid  second  vlad  pours  top  glass  amount  champagne  equal  size  exactly  glass  glass  already  full  champagne  flowing  pours  edge  glass  equally  distributed  glass  standing  overflowed  glass  bottom  level  champagne  pours  table  purpose  problem  consider  champagne  distributed  pyramid  glass  immediately  vlad  interested  completely  full  glass  stop  pouring  champagne  second  picture  illustrate  pyramid  consisting  level  input  contains  height  pyramid  second  vlad  pouring  champagne  bottle  print  single  completely  full  glass  second
1000/D __label__dp  sequence  called  good  array  example  sequence  good  array  sequence  sequence  called  good  divided  positive  good  array  good  array  subsegment  sequence  element  sequence  belong  exactly  array  example  sequence  good  sequence  given  sequence  count  subsequence  good  sequence  print  subsequence  modulo  contains  length  initial  sequence  following  contains  sequence  single  output  subsequence  original  sequence  good  sequence  taken  modulo
362/E __label__graphs  little  boy  petya  dream  growing  becoming  head  berland  plumber  thinking  problem  solve  future  unfortunately  petya  inexperienced  solve  problem  petya  interested  berland  capital  ha  water  tank  numbered  tank  connected  unidirectional  pipe  manner  pair  water  tank  connected  pipe  direction  pipe  ha  strictly  positive  width  width  determines  liter  water  per  unit  time  pipe  transport  water  go  city  main  water  tank  water  must  pipe  path  get  sewer  tank  cleaning  system  petya  want  increase  width  subset  pipe  unit  total  width  pipe  remains  help  determine  maximum  amount  water  transmitted  per  unit  time  main  tank  sewer  tank  operation  completed  contains  space  separated  follow  contains  separated  single  space  row  column  cij  width  pipe  go  tank  tank  ij  ii  cij  pipe  tank  tank  print  single  maximum  amount  water  transmitted  main  tank  sewer  tank  per  unit  time
506/D __label__dfs  __label__graphs  __label__brute  force  kitayuta  ha  bought  undirected  graph  vertex  edge  vertex  graph  numbered  edge  namely  edge  ha  color  connecting  vertex  kitayuta  want  process  following  query  query  give  find  color  satisfy  following  condition  edge  color  connect  vertex  vertex  directly  indirectly  input  contains  space  separated  denoting  vertex  edge  respectively  next  space  separated  note  multiple  edge  vertex  multiple  edge  color  vertex  next  contains  denoting  query  follows  containing  space  separated  guaranteed  uii  query  print  answer  separate
739/E __label__math  __label__dp  __label__data  structures  __label__sortings  __label__brute  force  gosha  hunting  goal  catch  many  pokemons  possible  gosha  ha  poke  ball  ultra  ball  pokemons  numbered  gosha  know  throw  poke  ball  pokemon  catch  probability  throw  ultra  ball  pokemon  catch  probability  throw  ball  type  pokemon  hunting  proceeds  follows  gosha  chooses  pokemons  throw  poke  ball  pokemons  throw  ultra  ball  throw  chosen  ball  chosen  pokemons  throw  ultra  ball  poke  ball  pokemon  caught  caught  ball  outcome  throw  depend  throw  gosha  would  like  know  expected  pokemons  catch  act  optimal  way  word  would  like  know  maximum  possible  expected  pokemons  catch  contains  pokemons  poke  ball  ultra  ball  second  contains  real  value  probability  catching  pokemon  gosha  throw  poke  ball  third  contains  real  value  probability  catching  pokemon  gosha  throw  ultra  ball  probability  given  exactly  digit  decimal  separator  print  maximum  possible  expected  pokemons  gosha  catch  answer  considered  correct  absolute  relative  error  exceed
630/L __label__implementation  protection  popular  program  developed  city  company  organized  following  way  installation  output  random  digit  sent  sm  particular  phone  response  sm  activation  code  arrives  young  hacker  vasya  disassembled  program  found  algorithm  transforms  shown  activation  code  note  clear  vasya  law  abiding  hacker  made  noble  purpose  show  developer  imperfection  protection  found  algorithm  look  following  way  digit  shuffled  following  order  digit  third  digit  fifth  digit  fourth  digit  second  digit  example  shuffle  lead  second  stage  raised  fifth  power  result  shuffle  exponentiation  answer  last  digit  result  answer  vasya  going  write  keygen  program  implementing  algorithm  input  contains  positive  digit  activation  code  found  output  exactly  digit  without  space  found  activation  code  program
849/B __label__brute  force  __label__geometry  connect  countless  point  till  reach  faraway  yonder  point  coordinate  plane  determine  whether  possible  draw  parallel  non  overlapping  every  point  set  lie  exactly  pass  least  point  set  input  contains  positive  point  second  contains  space  separated  vertical  coordinate  point  output  yes  without  quote  possible  fulfill  requirement  otherwise
717/C __label__implementation  __label__sortings  harry  water  ronaldo  knee  friend  started  new  school  year  mdcs  school  speechcraft  misery  time  happy  seen  long  time  sun  shining  bird  singing  flower  blooming  potion  class  teacher  professor  snipe  sulky  usual  due  angst  fueled  disappointment  life  ha  given  lot  homework  potion  class  student  ha  assigned  single  task  student  certain  task  faster  others  thus  want  redistribute  task  student  still  doe  exactly  task  task  finished  student  ha  laziness  level  task  ha  difficulty  level  professor  snipe  trying  hard  improve  work  ethic  student  laziness  level  equal  task  difficulty  level  set  value  given  sequence  represents  laziness  level  student  difficulty  task  time  student  need  finish  task  equal  product  laziness  level  task  difficulty  wondering  minimum  possible  total  time  must  spend  finish  task  distribute  optimal  way  person  receive  task  task  given  person  print  answer  modulo  input  contains  task  next  exactly  difficulty  initial  task  laziness  student  print  minimum  total  time  finish  task  modulo
995/C __label__math  __label__greedy  __label__data  structures  __label__sortings  __label__brute  force  __label__geometry  vector  define  allen  bit  much  drink  bar  origin  vector  allen  make  move  allen  sense  direction  impaired  move  either  move  direction  word  position  currently  either  move  allen  want  wander  far  home  happens  bar  need  help  figure  sequence  move  sequence  sign  vector  final  position  satisfies  stay  safe  contains  single  move  following  contains  space  separated  meaning  output  single  containing  either  solution  correct  value  satisfies
847/B __label__data  structures  __label__binary  search  ivan  ha  array  consisting  different  decided  reorder  element  increasing  order  ivan  love  merge  sort  decided  represent  array  several  increasing  sequence  plan  merge  sorted  array  ivan  represent  array  increasing  sequence  help  following  algorithm  least  unused  array  ivan  repeat  following  procedure  iterate  array  left  right  ivan  look  unused  current  iteration  current  unused  iteration  greater  previous  unused  current  iteration  ivan  mark  used  writes  example  ivan  array  look  like  perform  iteration  iteration  ivan  use  write  second  write  program  help  ivan  find  representation  given  array  several  increasing  sequence  accordance  algorithm  described  contains  single  element  ivan  array  second  contains  sequence  consisting  distinct  ivan  array  print  representation  given  array  form  increasing  sequence  accordance  algorithm  described  sequence  must  printed  new
1205/C __label__implementation  interactive  problem  given  grid  nn  odd  row  enumerated  column  enumerated  left  right  cell  standing  intersection  row  column  denoted  every  cell  contains  known  top  left  cell  contains  bottom  right  cell  contains  want  know  cell  grid  ask  following  question  word  output  different  cell  grid  get  second  moving  right  adjacent  response  question  told  exists  path  going  right  cell  form  palindrome  example  path  shown  green  palindromic  answer  would  exists  path  palindromic  path  determine  cell  grid  asking  question  shown  answer  always  exists  contains  odd  side  grid  begin  interaction  reading
367/C __label__greedy  __label__sortings  __label__graphs  let  call  array  consisting  beautiful  ha  following  property  consider  pair  x  occurs  array  occurs  array  pair  must  exist  position  least  condition  met  either  sereja  want  build  beautiful  array  consisting  everything  easy  sereja  friend  dima  ha  coupon  contains  coupon  cost  allows  use  many  want  constructing  array  value  distinct  sereja  ha  coupon  dima  sereja  made  following  deal  dima  build  beautiful  array  element  take  ruble  sereja  occurs  array  sereja  believed  friend  agreed  contract  wondering  maximum  amount  money  pay  help  sereja  find  maximum  amount  money  pay  dima  contains  next  pair  contains  guaranteed  distinct  single  print  maximum  amount  money  ruble  sereja  pay
599/D __label__math  __label__brute  force  spongebob  already  tired  trying  reason  weird  action  calculation  simply  asked  find  pair  exactly  distinct  square  table  consisting  row  column  example  table  square  side  square  side  square  side  total  distinct  square  table  input  contains  single  square  inside  table  spongebob  interested  print  single  table  exactly  distinct  square  inside
435/A __label__implementation  time  year  russian  flood  countryside  summer  cottage  dacha  bus  stop  ha  lot  people  people  rarely  dacha  usually  group  people  stand  queue  group  bus  stop  queue  ha  group  people  group  beginning  ha  people  every  minute  empty  bus  arrives  bus  stop  carry  people  naturally  people  group  enter  bus  people  second  group  note  order  group  queue  never  change  moreover  group  fit  member  current  bus  wait  next  bus  together  group  standing  queue  task  determine  many  bus  needed  transport  group  dacha  countryside  contains  next  contains  print  single  bus  needed  transport  group  dacha  countryside
799/B __label__implementation  __label__data  structures  new  pack  shirt  came  shop  shirt  characterized  price  shirt  front  color  shirt  back  color  shirt  value  distinct  value  buyer  come  shop  want  buy  exactly  shirt  buyer  know  favorite  color  buyer  agrees  buy  shirt  least  side  front  back  painted  favorite  color  shirt  color  acceptable  buyer  choose  cheapest  shirt  buyer  buy  anything  assume  buyer  come  buyer  served  previous  served  compute  price  buyer  pay  shirt  contains  single  shirt  following  contains  sequence  equal  price  shirt  following  contains  sequence  equal  front  color  shirt  following  contains  sequence  equal  back  color  shirt  next  contains  single  buyer  following  contains  sequence  j  equal  favorite  color  buyer  buyer  come  shop  order  given  input  buyer  served  previous  served  print  equal  price  shirt  buyer  buy  buyer  buy  anything  print
1200/D __label__dp  __label__implementation  __label__data  structures  __label__brute  force  gildong  ha  bought  famous  painting  software  cfpaint  working  screen  cfpaint  square  shaped  consisting  row  column  square  cell  row  numbered  top  bottom  column  numbered  left  right  position  cell  row  column  represented  color  cell  cfpaint  black  white  tool  named  eraser  cfpaint  eraser  ha  size  use  eraser  gildong  need  click  cell  j  cell  clicked  cell  become  white  word  square  side  equal  cell  top  left  corner  colored  white  white  row  column  without  black  cell  gildong  ha  worked  cfpaint  time  cell  possibly  currently  black  want  know  maximum  white  using  eraser  exactly  help  gildong  find  answer  question  contains  row  column  size  eraser  next  character  without  space  character  represents  cell  character  given  either  representing  black  cell  representing  white  cell  print  maximum  white  using  eraser  exactly
1239/A __label__math  __label__dp  recently  ivan  fool  decided  become  smarter  study  probability  theory  think  understands  subject  fairly  well  began  behave  like  already  got  phd  area  prove  skill  ivan  decided  demonstrate  friend  concept  random  picture  picture  field  row  column  cell  either  black  white  ivan  call  picture  random  every  cell  ha  adjacent  cell  color  cell  considered  adjacent  share  side  ivan  brother  spent  time  trying  explain  randomness  usually  work  trying  convince  ivan  want  count  different  random  according  ivan  picture  picture  considered  different  least  cell  picture  colored  differently  since  picture  quite  large  print  modulo  contains  row  column  field  print  random  picture  modulo
1248/D1 __label__dp  __label__implementation  __label__greedy  __label__brute  force  easier  version  problem  version  n  vasya  experienced  developer  programming  competition  problem  great  mind  time  vasya  faced  creative  crisis  improve  situation  petya  gifted  string  consisting  opening  closing  bracket  petya  belief  beauty  bracket  string  cyclical  shift  form  correct  bracket  sequence  digress  problem  vasya  decided  select  position  string  necessarily  distinct  swap  character  located  position  vasya  apply  operation  exactly  curious  maximum  possible  beauty  achieve  way  please  help  remind  bracket  sequence  called  correct  empty  equal  correct  bracket  sequence  equal  concatenation  correct  bracket  sequence  example  correct  cyclical  shift  string  length  string  formed  concatenation  last  symbol  string  symbol  string  example  cyclical  shift  string  equal  cyclical  shift  considered  different  contains  length  string  second  contains  string  consisting  exactly  character  character  either  single  largest  beauty  string  achieved  swapping  character
1244/D __label__dp  __label__implementation  __label__graphs  __label__trees  __label__constructive  algorithms  __label__brute  force  given  tree  consisting  vertex  tree  undirected  connected  acyclic  graph  example  tree  paint  vertex  color  vertex  know  cost  painting  every  color  paint  vertex  path  consisting  exactly  distinct  vertex  doe  vertex  equal  color  word  let  consider  triple  connected  edge  connected  edge  colour  pairwise  distinct  let  call  painting  meet  condition  good  calculate  minimum  cost  good  painting  find  optimal  painting  good  painting  report  contains  vertex  second  contains  sequence  cost  painting  vertex  color  third  contains  sequence  cost  painting  vertex  second  color  fourth  contains  sequence  cost  painting  vertex  third  color  follow  containing  vertex  connected  undirected  edge  guaranteed  edge  denote  tree  good  painting  print
1176/C __label__dp  __label__implementation  __label__greedy  given  array  consisting  following  task  remove  minimum  element  make  array  good  array  length  called  good  divisible  possible  split  subsequence  example  good  array  whole  array  required  sequence  sequence  formed  second  fourth  fifth  seventh  tenth  element  second  formed  remaining  element  empty  array  good  example  bad  array  order  element  exactly  length  array  divisible  sequence  formed  element  remaining  array  form  required  sequence  input  contains  element  second  input  contains  following  element  print  minimum  element  remove  obtain  good  array
1190/A __label__implementation  recently  tokitsukaze  found  interesting  game  tokitsukaze  item  beginning  game  thought  many  item  want  discard  special  item  item  marked  index  beginning  item  index  placed  position  item  divided  several  page  orderly  page  contains  exactly  position  last  position  last  page  left  empty  tokitsukaze  would  following  operation  focus  special  page  contains  least  special  item  time  tokitsukaze  would  discard  special  item  page  item  discarded  moved  old  position  would  empty  item  exists  would  move  empty  position  movement  bring  many  item  forward  even  previous  page  tokitsukaze  would  keep  waiting  item  stop  moving  operation  check  special  page  discard  special  item  repeatedly  item  need  discarded  consider  example  statement  page  initially  page  special  since  page  containing  special  item  tokitsukaze  discard  special  item  index  page  remains  special  contains  tokitsukaze  discard  special  item  index  second  page  special  since  page  containing  special  item  contains  tokitsukaze  discard  special  item  index  tokitsukaze  want  know  operation  would  total  contains  item  special  item  discarded  position  page  second  contains  distinct  index  special  item  discarded  print  single  operation  tokitsukaze  would  total
933/A __label__dp  dragon  symbolizes  wisdom  power  wealth  lunar  new  year  day  people  model  dragon  bamboo  strip  clothes  raise  rod  hold  rod  high  low  resemble  flying  dragon  performer  holding  rod  low  represented  holding  high  represented  thus  performer  represented  sequence  little  tommy  would  like  choose  interval  reverse  length  longest  non  decreasing  subsequence  new  sequence  maximum  non  decreasing  subsequence  sequence  index  ap  p  pk  length  subsequence  contains  denoting  length  original  sequence  second  contains  space  separated  describing  original  sequence  print  single  mean  maximum  possible  length  longest  non  decreasing  subsequence  new  sequence
898/F __label__math  __label__brute  force  correct  expression  form  wa  written  non  negative  without  leading  expression  plus  equally  sign  lost  task  restore  expression  word  character  character  inserted  given  sequence  digit  character  placed  left  character  character  split  sequence  non  empty  subsequence  consisting  digit  let  call  left  part  middle  part  right  part  part  leading  true  guaranteed  given  test  answer  always  exists  contains  non  empty  string  consisting  digit  length  string  doe  exceed  output  restored  expression  several  solution  print
961/C __label__implementation  __label__brute  force  magnus  decided  play  classic  chess  game  though  saw  locker  shocked  favourite  chessboard  got  broken  piece  size  always  odd  even  worse  square  wrong  color  square  row  piece  board  ha  color  black  white  magnus  want  change  color  square  way  recolors  minimum  square  obtained  piece  form  valid  chessboard  every  square  ha  color  different  neightbouring  side  square  valid  board  size  allowed  move  piece  allowed  rotate  flip  contains  odd  size  piece  board  segment  follow  describes  piece  board  consists  character  equal  square  black  initially  otherwise  segment  separated  empty  print  minimum  square  magnus  recolor  able  obtain  valid  chessboard
946/B __label__math  __label__number  theory  variable  consider  following  sequence  action  performed  variable  end  process  otherwise  step  set  value  repeat  step  otherwise  step  b  set  value  repeat  step  otherwise  end  process  initially  value  positive  process  finite  determine  value  process  end  input  contains  initial  value  variable  initial  value  variable  print  value  end  process
1221/D __label__dp  fence  consisting  vertical  board  width  board  height  board  think  fence  great  pair  adjacent  board  height  formally  fence  great  index  condition  hold  unfortunately  possible  fence  great  change  increase  length  board  pay  ruble  length  board  increased  time  possibly  calculate  minimum  ruble  spend  make  fence  great  answer  independent  query  contains  query  query  contains  board  fence  following  query  description  board  contains  length  board  price  increasing  respectively  guaranteed  sum  query  exceed  guaranteed  answer  query  exceed  query  print  minimum  ruble  spend  make  fence  great
833/B __label__dp  __label__data  structures  __label__binary  search  time  ago  slastyona  sweetmaid  decided  open  bakery  bought  required  ingredient  wonder  oven  bake  several  type  cake  opened  bakery  soon  expense  started  overcome  income  slastyona  decided  study  sweet  market  learned  profitable  pack  cake  box  distinct  cake  type  box  contains  let  denote  value  box  higher  price  ha  need  change  production  technology  problem  oven  chooses  cake  type  slastyona  affect  know  type  order  cake  oven  going  bake  today  slastyona  ha  pack  exactly  box  cake  today  ha  put  box  several  least  cake  oven  produced  right  another  word  ha  put  box  continuous  segment  cake  slastyona  want  maximize  total  value  box  cake  help  determine  maximum  possible  total  value  contains  cake  box  respectively  second  contains  type  cake  order  oven  bakes  print  maximum  total  value  box  cake
1004/D __label__implementation  __label__constructive  algorithms  __label__brute  force  since  sonya  ha  learned  basic  matrix  decided  play  little  bit  sonya  imagined  new  type  matrix  called  rhombic  matrix  matrix  exactly  cell  manhattan  distance  cell  containing  cell  equal  form  rhombus  sonya  called  type  manhattan  distance  cell  defined  example  manhattan  distance  cell  equal  example  rhombic  matrix  note  rhombic  matrix  uniquely  defined  coordinate  cell  containing  drew  nm  rhombic  matrix  belief  recreate  matrix  give  element  matrix  arbitrary  order  sequence  note  sonya  give  sequence  matrix  disposal  write  program  find  nm  rhombic  matrix  whose  element  element  sequence  order  contains  single  cell  matrix  second  contains  value  cell  arbitrary  order  print  positive  nm  size  matrix
724/A __label__implementation  given  name  day  week  please  determine  whether  possible  non  leap  year  day  month  wa  equal  day  week  given  day  next  month  wa  equal  second  day  week  given  month  belong  year  problem  consider  gregorian  calendar  used  month  calendar  equal  day  month  non  leap  year  name  day  week  given  lowercase  english  letter  monday  tuesday  wednesday  thursday  friday  saturday  sunday  input  consists  containing  name  exactly  day  week  guaranteed  string  input  set  monday  tuesday  wednesday  thursday  friday  saturday  sunday  print  yes  without  quote  situation  possible  non  leap  year  otherwise  print  without  quote
558/B __label__implementation  amr  ha  got  large  array  size  amr  like  large  array  intends  make  smaller  amr  care  anything  array  except  beauty  beauty  array  defined  maximum  time  occurs  array  want  choose  smallest  subsegment  array  beauty  original  array  help  amr  choosing  smallest  subsegment  possible  contains  size  array  second  contains  representing  element  array  output  beginning  end  subsegment  chosen  respectively
925/B __label__implementation  __label__sortings  __label__binary  search  department  software  company  ha  server  different  specification  server  indexed  consecutive  suppose  specification  server  expressed  single  artificial  resource  unit  order  production  work  needed  deploy  service  process  incoming  request  using  server  department  processing  incoming  request  service  take  resource  unit  described  situation  happens  advanced  company  service  deployed  using  server  several  server  simultaneously  service  deployed  using  server  load  divided  equally  server  server  requires  fractional  resource  unit  server  left  unused  used  deploying  exactly  service  simultaneously  service  use  resource  server  provides  determine  possible  deploy  service  using  given  server  yes  determine  server  used  deploying  service  contains  server  department  use  resource  unit  requirement  service  second  contains  space  separated  resource  unit  provided  server  impossible  deploy  service  using  given  server  print  word  without  quote
593/D __label__math  __label__data  structures  __label__dfs  __label__graphs  __label__trees  bogdan  ha  birthday  today  mom  gave  tree  consisting  vertecies  every  edge  tree  wa  written  case  forget  tree  connected  non  directed  graph  without  cycle  present  wa  granted  guest  consecutively  come  bogdan  party  guest  come  performs  exactly  possible  operation  chooses  vertecies  move  along  edge  tree  vertex  vertex  using  shortest  path  course  path  unique  tree  every  time  move  along  edge  replaces  current  result  division  div  chooses  edge  replaces  value  written  xpi  positive  pi  bogdan  care  guest  decided  ease  process  write  program  performs  operation  requested  guest  output  resulting  value  type  input  contains  vertecies  tree  granted  bogdan  mom  guest  came  party  respectively  next  description  edge  contains  uii  denoting  edge  connects  vertecies  initially  written  following  describe  operation  requested  bogdan  guest  description  contains  ha  possible  form  corresponds  guest  chooses  operation  type  corresponds  guest  chooses  operation  second  type  guaranteed  query  correct  namely  pi  xpi  represents  written  edge  particular  moment  time  necessarily  equal  initial  value  xpi  decrease  already  applied  edge  numbered  order  appear  input  guest  chooses  operation  type  print  result  processing  value  path
802/E __label__math  good  job  heidi  able  distinguish  poisson  uniform  distribution  good  position  actually  estimate  population  help  heidi  estimate  village  population  easy  version  output  per  village  order  provided  input  containing  population  estimate
1209/A __label__math  __label__implementation  __label__greedy  given  sequence  need  paint  element  color  consider  color  element  color  must  divisible  minimal  element  color  used  color  must  minimized  example  fine  paint  element  single  color  divisible  use  color  arbitrary  amount  time  particular  allowed  use  color  element  painted  color  need  consecutive  example  color  required  let  paint  color  divisible  paint  second  color  divisible  example  color  required  simply  paint  element  unique  color  contains  length  given  sequence  second  contains  duplicate  print  minimal  color  paint  given  valid  way
788/C __label__dfs  __label__graphs  sasha  kolya  decided  get  drunk  coke  time  type  coke  type  characterised  carbon  dioxide  concentration  today  party  honour  sergiy  vancouver  decided  prepare  glass  coke  carbon  dioxide  concentration  drink  tasty  glass  liter  coke  type  type  presented  glass  want  minimize  total  volume  coke  glass  carbon  dioxide  concentration  defined  volume  carbone  dioxide  coke  divided  total  volume  coke  mix  coke  volume  carbon  dioxide  sum  total  volume  coke  sum  well  help  find  minimal  natural  liter  needed  create  glass  carbon  dioxide  concentration  assume  friend  unlimited  amount  coke  type  contains  carbon  dioxide  concentration  friend  want  coke  type  second  contains  carbon  dioxide  concentration  type  coke  coke  type  concentration  print  minimal  natural  liter  needed  prepare  glass  carbon  dioxide  concentration  impossible
1204/E __label__math  __label__dp  __label__number  theory  natasha  favourite  sasha  favourite  day  natasha  sasha  met  wrote  every  possible  array  length  element  equal  another  element  equal  array  counted  maximal  prefix  sum  probably  empty  equal  another  word  every  nonempty  prefix  sum  le  considered  equal  formally  denote  maximal  prefix  sum  array  length  max  max  max  max  iaj  want  count  sum  maximal  prefix  sum  array  asking  help  sum  large  output  modulo  contains  output  answer  problem  modulo
1238/G __label__greedy  __label__data  structures  __label__sortings  adilbek  ha  water  garden  going  help  complex  watering  system  ha  deliver  water  mechanism  remaining  job  watering  system  consumes  liter  water  per  minute  water  working  hold  liter  adilbek  ha  already  poured  liter  water  system  going  start  watering  garden  right  water  minute  watering  system  least  liter  water  beginning  minute  every  adilbek  wonder  watering  system  run  water  called  friend  asked  going  bring  water  friend  answered  bring  liter  water  arrive  beginning  minute  pour  water  ha  system  system  hold  amount  water  excess  water  poured  ask  adilbek  pay  dollar  liter  water  ha  brought  assume  friend  arrives  beginning  minute  system  run  water  beginning  minute  friend  pours  water  fast  enough  system  doe  stop  working  course  adilbek  doe  want  pay  friend  ha  water  garden  ha  tell  friend  much  water  bring  formally  adilbek  want  choose  way  friend  brings  exactly  liter  water  watering  system  work  whole  time  required  water  garden  sum  minimum  possible  help  adilbek  determine  minimum  amount  ha  pay  friend  determine  adilbek  able  water  garden  minute  answer  independent  query  contains  query  query  contains  friend  minute  watering  capacity  watering  system  liter  poured  adilbek  next  contains  friend  arrival  time  maximum  amount  water  friend  bring  cost  liter  friend  guaranteed  sum  query  doe  exceed  query  print  minimum  amount  adilbek  ha  pay  friend  adilbek  able  water  garden  minute
1185/F __label__brute  force  company  friend  want  order  exactly  pizza  known  total  pizza  ingredient  nature  denoted  friend  ha  favorite  ingredient  friend  ha  favorite  ingredient  equal  favorite  ingredient  form  sequence  website  codepizza  restaurant  ha  exactly  pizza  pizza  characterized  set  ingredient  included  price  help  friend  choose  exactly  pizza  way  please  maximum  people  company  known  person  pleased  choice  favorite  ingredient  least  ordered  pizza  several  way  choose  pizza  please  maximum  friend  choose  minimizes  total  price  pizza  input  contains  friend  company  pizza  respectively  next  description  favorite  ingredient  friend  contains  favorite  ingredient  sequence  distinct  next  pizza  description  contains  price  pizza  ingredient  ingredient  sequence  distinct  output  denoting  index  pizza  required  set  several  solution  output  pizza  index  printed  order
673/B __label__implementation  __label__greedy  problem  prepared  next  codeforces  round  arranged  ascending  order  difficulty  problem  difficulty  moreover  pair  similar  problem  author  want  split  problem  division  according  following  rule  problemset  division  non  empty  problem  used  exactly  division  yes  unusual  requirement  problem  used  division  harder  problem  used  division  problem  similar  used  different  division  goal  count  way  split  problem  division  satisfy  rule  way  split  problem  considered  different  least  problem  belongs  division  division  note  relation  similarity  transitive  problem  similar  problem  problem  similar  problem  follow  similar  input  contains  problem  prepared  round  pair  similar  problem  respectively  following  contains  pair  similar  problem  ii  guaranteed  pair  problem  meet  twice  input  print  way  split  problem  division
1137/A __label__implementation  __label__sortings  dora  love  adventure  quite  lot  journey  encountered  amazing  city  formed  street  along  eastern  direction  street  southern  direction  naturally  city  ha  intersection  intersection  eastern  street  southern  street  monumental  skyscraper  dora  instantly  became  curious  decided  explore  height  city  building  dora  pass  intersection  eastern  southern  street  examines  street  dora  learns  height  skyscraper  street  wonder  reassign  height  skyscraper  street  maximum  height  would  small  possible  result  comparing  height  skyscraper  street  change  formally  every  intersection  dora  solves  independent  problem  see  skyscraper  know  real  height  moreover  height  compared  get  result  greater  smaller  equal  dora  want  select  assign  every  skyscraper  height  assigning  height  dora  want  preserve  relative  order  skyscraper  street  result  comparison  height  skyscraper  current  eastern  street  change  result  comparison  height  skyscraper  current  southern  street  change  well  note  skyscraper  located  southern  street  compared  skyscraper  located  eastern  street  skyscraper  located  street  intersection  compared  southern  eastern  skyscraper  every  intersection  dora  want  independently  calculate  minimum  possible  example  intersection  street  corresponding  look  follows  optimal  replace  height  skyscraper  follows  note  comparison  le  equal  greater  inside  eastern  street  inside  southern  street  preserved  largest  used  hence  answer  intersection  would  help  dora  compute  answer  intersection  contains  street  going  eastern  direction  street  going  southern  direction  following  contains  located  position  denotes  height  skyscraper  intersection  eastern  street  southern  direction  print  containing  located  position  inside  answer  problem  intersection  eastern  street  southern  street
596/D __label__math  __label__dp  __label__sortings  wilbur  pig  really  want  beaver  decided  today  pretend  beaver  bite  tree  cut  tree  located  various  position  tree  located  position  given  position  tree  distinct  tree  equal  tree  ha  height  due  wind  tree  cut  either  fall  left  probability  fall  right  probability  tree  hit  another  tree  falling  tree  fall  direction  tree  hit  tree  hit  another  tree  distance  strictly  le  example  imagine  tree  located  position  tree  position  fall  right  hit  tree  position  start  fall  turn  hit  tree  position  start  fall  distance  exactly  tree  position  fall  long  still  tree  standing  wilbur  select  either  leftmost  standing  tree  probability  rightmost  standing  tree  probability  selected  tree  cut  tree  remaining  wilbur  always  selects  ground  covered  grass  wilbur  want  know  expected  total  length  ground  covered  fallen  tree  cut  concerned  grass  eating  cow  friend  please  help  wilbur  input  contains  real  given  decimal  place  second  input  contains  particular  order  print  single  real  expected  total  length  ground  covered  tree  fallen  answer  considered  correct  absolute  relative  error  doe  exceed
615/D __label__math  __label__number  theory  ayrat  ha  represented  prime  factorization  size  p  ayrat  got  secret  information  product  divisor  taken  modulo  password  secret  data  base  want  calculate  value  input  contains  single  prime  factorization  second  contains  prime  print  product  divisor  modulo
533/B __label__dp  __label__dfs  __label__graphs  __label__trees  __label__strings  big  software  company  ha  employee  numbered  director  assigned  every  employee  company  except  director  ha  exactly  immediate  superior  director  course  superior  call  person  subordinate  another  person  either  immediate  supervisor  immediate  supervisor  subordinate  person  particular  subordinate  head  employee  company  solve  achieve  important  goal  need  form  workgroup  every  person  ha  efficiency  expressed  positive  person  efficiency  workgroup  defined  total  efficiency  people  included  employee  big  software  company  obsessed  modern  way  work  process  organization  today  pair  programming  peak  popularity  workgroup  formed  following  condition  person  entering  workgroup  able  sort  subordinate  workgroup  pair  word  member  workgroup  subordinate  workgroup  even  task  determine  maximum  possible  efficiency  workgroup  formed  observing  given  condition  person  including  director  company  enter  workgroup  contains  worker  big  software  company  follow  describing  company  employee  contains  person  employee  immediate  superior  employee  efficiency  director  people  condition  fulfilled  print  single  maximum  possible  efficiency  workgroup
912/A __label__implementation  winter  holiday  demand  christmas  ball  exceptionally  high  since  already  advance  alchemy  allow  easy  efficient  ball  creation  utilizing  magic  crystal  grisha  need  obtain  yellow  green  blue  ball  known  produce  yellow  ball  need  yellow  crystal  green  yellow  blue  blue  ball  blue  crystal  enough  right  yellow  blue  crystal  grisha  disposal  find  many  additional  crystal  acquire  order  produce  required  ball  feature  denoting  yellow  blue  crystal  respectively  grisha  disposal  next  contains  respective  amount  yellow  green  blue  ball  obtained  print  single  minimum  crystal  grisha  acquire  addition
1106/C __label__math  __label__implementation  __label__greedy  __label__sortings  lunar  new  year  approaching  bob  struggling  homework  division  problem  positive  bob  homework  paper  always  even  bob  asked  divide  group  group  must  least  suppose  divided  group  sum  group  bob  aim  minimize  sum  square  msj  bob  puzzled  hard  problem  could  please  help  solve  contains  even  denoting  bob  homework  paper  second  contains  describing  need  deal  single  containing  denoting  minimum  sum  square  jmsj  group
573/D __label__dp  __label__data  structures  would  want  fight  bear  riding  horse  neither  limak  grizzly  bear  general  dreadful  army  bearland  important  part  army  cavalry  course  cavalry  bearland  consists  warrior  horse  warrior  ha  strength  horse  ha  strength  warrior  together  horse  called  unit  strength  unit  equal  multiplied  strength  warrior  horse  total  strength  cavalry  equal  sum  strength  unit  good  assignment  warrior  horse  make  cavalry  truly  powerful  initially  warrior  ha  horse  given  query  query  warrior  swap  horse  general  limak  must  ready  every  possible  situation  warrior  allowed  ride  horse  query  find  maximum  possible  strength  cavalry  consider  assignment  warrior  horse  warrior  assigned  horse  proven  n  always  least  correct  assignment  note  leave  warrior  without  horse  contains  space  separated  second  contains  space  separated  strength  warrior  third  contains  space  separated  strength  horse  next  describe  query  contains  space  separated  aii  index  warrior  swap  horse  print  answer  query  print  maximum  possible  strength  cavalry  query
717/A __label__math  __label__number  theory  prodiggers  quite  cool  band  reason  surprise  guest  enter  festival  past  year  beginning  career  successful  spend  time  digging  channel  earn  money  hence  name  anyway  like  tour  lot  surprising  amount  energy  extremely  long  tour  hate  spending  consecutive  day  without  concert  would  like  avoid  tour  defined  sequence  concert  day  need  count  many  way  prodiggers  select  different  tour  length  example  define  concert  day  day  possible  tour  tour  selected  ha  day  row  need  count  many  way  select  tour  length  range  since  schedule  quite  busy  want  tell  many  way  modulo  input  contains  output  single  way  select  different  tour  length  modulo
907/A __label__implementation  __label__brute  force  family  consisting  father  bear  mother  bear  son  bear  owns  car  father  bear  climb  largest  car  like  mother  bear  climb  middle  car  like  moreover  son  bear  climb  smallest  car  like  known  largest  car  strictly  larger  middle  car  middle  car  strictly  larger  smallest  car  masha  came  test  car  could  climb  car  liked  smallest  car  known  character  size  climb  car  size  like  climb  car  given  size  bear  masha  find  possible  non  negative  size  car  given  size  father  bear  mother  bear  son  bear  masha  respectively  guaranteed  output  size  father  bear  car  mother  bear  car  son  bear  car  respectively
1009/E __label__math  leha  planning  journey  moscow  saratov  hate  train  ha  decided  get  city  another  car  path  moscow  saratov  represented  straight  well  straight  reality  problem  consider  straight  distance  moscow  saratov  let  say  moscow  situated  point  coordinate  saratov  coordinate  driving  long  time  really  difficult  formally  leha  ha  already  covered  kilometer  since  stopped  rest  considers  difficulty  covering  kilometer  guaranteed  every  difficulty  journey  denoted  sum  difficulty  kilometer  journey  fortunately  rest  site  moscow  saratov  every  point  rest  site  leha  enters  rest  site  rest  next  kilometer  difficulty  kilometer  difficulty  example  rest  site  coordinate  difficulty  journey  kilometer  difficulty  second  leha  rest  third  kilometer  difficulty  fourth  last  another  example  rest  site  coordinate  difficulty  leha  journey  leha  know  point  rest  site  ha  consider  every  possible  situation  obviously  different  distribution  rest  site  distribution  different  exists  point  contains  rest  site  exactly  distribution  leha  considers  distribution  equiprobable  want  calculate  expected  value  difficulty  journey  obviously  calculate  modulo  contains  distance  moscow  saratov  second  contains  difficulty  kilometer  leha  ha  rested  print  taken  modulo
665/B __label__brute  force  ayush  cashier  shopping  center  recently  department  ha  started  click  collect  service  allows  user  shop  online  store  contains  item  customer  already  used  service  user  paid  item  let  aij  denote  item  person  order  due  space  limitation  item  arranged  single  row  ayush  receives  order  find  item  aij  row  let  po  denote  position  item  row  moment  collection  ayush  take  time  equal  po  ai  ai  aim  customer  ayush  access  element  keep  new  stock  front  row  take  away  element  thus  value  updating  task  calculate  total  time  take  ayush  process  order  assume  market  ha  endless  stock  contains  user  item  user  want  buy  total  item  market  next  contains  distinct  l  denoting  initial  position  item  store  item  numbered  next  contains  distinct  aij  ij  order  person  print  total  time  needed  ayush  process  order
787/A __label__math  __label__brute  force  __label__number  theory  monster  chasing  rick  morty  another  planet  frightened  sometimes  scream  accurately  rick  scream  time  morty  scream  time  monster  catch  point  scream  time  want  know  catch  time  scream  time  never  scream  time  input  contains  second  contains  print  time  rick  morty  scream  time  never  scream  time
569/A __label__math  __label__implementation  little  lesha  love  listening  music  via  smartphone  smartphone  much  memory  lesha  listens  favorite  song  well  known  social  network  intalk  unfortunately  internet  fast  city  ekaterinozavodsk  song  take  lot  time  download  lesha  quite  impatient  song  duration  second  lesha  downloads  second  song  play  playback  reach  point  ha  downloaded  lesha  immediately  play  song  start  loaded  part  song  stay  phone  download  continued  place  happens  song  downloaded  completely  lesha  listens  end  second  real  time  internet  allows  download  second  track  tell  lesha  many  time  start  song  including  start  single  contains  print  single  time  song  restarted
377/D __label__data  structures  pavel  going  make  game  dream  know  make  founded  development  company  hired  worker  staff  want  pick  worker  staff  directly  responsible  developing  game  worker  ha  certain  skill  level  besides  worker  want  work  whose  skill  different  word  worker  work  whose  skill  le  whose  skill  pavel  understands  game  dream  hard  develop  worker  skill  equally  useful  want  pick  team  maximum  possible  size  help  pick  team  contains  single  worker  pavel  hired  following  contains  space  separated  iii  minimum  skill  value  worker  worker  work  worker  skill  maximum  skill  value  worker  worker  work  print  single  worker  pavel  must  pick  developing  game
720/A __label__greedy  closing  ceremony  squanch  code  cup  held  big  hall  n  seat  arranged  row  seat  row  seat  ha  coordinate  queue  people  waiting  enter  hall  people  standing  people  standing  person  ticket  specific  seat  person  ha  ticket  seat  walk  get  seat  person  ha  stamen  maximum  distance  person  agrees  walk  find  possible  distribute  ticket  way  person  ha  enough  stamen  get  seat  input  contains  size  hall  second  contains  several  people  following  indicate  stamen  person  third  contains  several  people  following  indicate  stamen  person  stamen  person  positive  le  equal  possible  distribute  ticket  people  described  manner  print  yes  otherwise  print
939/F __label__dp  __label__data  structures  arkady  want  dinner  ha  returned  shop  ha  bought  semifinished  cutlet  need  fry  cutlet  fried  second  particular  fried  second  side  second  side  arkady  ha  already  got  frying  pan  turn  fire  understood  maybe  able  flip  cutlet  exactly  second  beginning  cooking  arkady  busy  sorting  sticker  pack  favorite  messenger  flip  cutlet  period  time  namely  period  time  interval  time  second  start  cooking  till  second  inclusive  arkady  decided  required  flip  cutlet  exactly  middle  cooking  instead  flip  several  time  way  cutlet  fried  exactly  second  side  second  side  total  help  arkady  find  possible  cook  cutlet  able  flip  cutlet  given  period  time  yes  find  minimum  flip  need  cook  cutlet  contains  second  cutlet  cooked  side  period  time  arkady  flip  next  description  interval  contains  ii  meaning  arkady  flip  cutlet  moment  starting  second  beginning  cooking  finishing  second  beginning  cooking  particular  arkady  flip  cutlet  moment  guaranteed  output  hungry  arkady  able  fry  cutlet  exactly  second  side  exactly  second  side
652/A __label__math  __label__implementation  grade  student  gabriel  noticed  caterpillar  tree  walking  around  forest  class  caterpillar  wa  height  ground  height  tree  hung  apple  caterpillar  wa  crawling  apple  gabriel  interested  caterpillar  get  apple  noted  caterpillar  go  per  hour  day  slip  per  hour  night  many  day  gabriel  return  forest  see  caterpillar  get  apple  consider  day  start  finish  gabriel  class  finish  consider  gabriel  noticed  caterpillar  class  note  forest  magic  caterpillar  slip  ground  lift  apple  contains  height  position  caterpillar  apple  centimeter  second  contains  distance  caterpillar  go  day  slip  night  centimeter  per  hour  print  day  gabriel  wait  return  forest  see  caterpillar  getting  apple
672/B __label__implementation  __label__constructive  algorithms  __label__strings  wise  man  told  kerem  different  good  kerem  want  thing  life  different  kerem  recently  got  string  consisting  lowercase  english  letter  since  kerem  like  thing  different  want  substring  string  distinct  substring  string  formed  consecutive  character  string  example  string  aba  ha  substring  empty  substring  aba  string  ha  least  equal  substring  kerem  change  character  position  lowercase  english  letter  changing  character  tiring  job  kerem  want  perform  change  possible  task  find  minimum  change  needed  make  substring  given  string  distinct  determine  impossible  input  contains  length  string  second  contains  string  length  consisting  lowercase  english  letter  impossible  change  string  substring  distinct  print  otherwise  print  minimum  required  change
571/C __label__greedy  __label__dfs  __label__graphs  __label__constructive  algorithms  boolean  logic  formula  conjunctive  normal  form  cnf  clausal  normal  form  conjunction  clause  clause  disjunction  literal  cited  http  wikipedia  org  wiki  conjunctivenormalform  word  cnf  formula  type  represents  logical  conjunction  represents  logical  disjunction  vij  boolean  variable  negation  statement  bracket  called  clause  vij  called  literal  given  cnf  containing  variable  negation  know  variable  occurs  clause  negation  without  negation  total  task  determine  whether  cnf  satisfiable  whether  value  variable  cnf  value  true  cnf  satisfiable  need  determine  value  variable  cnf  true  guaranteed  variable  occurs  clause  contains  clause  variable  correspondingly  next  description  clause  contains  ki  literal  clause  follow  space  separated  literal  vij  vij  literal  corresponds  vijvij  either  negation  vij  negative  without  negation  otherwise  cnf  satisfiable  print  single  without  quote  otherwise  print  string  string  yes  without  quote  string  value  variable  satisfying  assignment  order
460/C __label__greedy  __label__data  structures  __label__binary  search  little  beaver  beginner  programmer  informatics  favorite  subject  soon  informatics  teacher  going  birthday  beaver  ha  decided  prepare  present  planted  flower  row  windowsill  started  waiting  grow  time  beaver  noticed  flower  stopped  growing  beaver  think  bad  manner  present  little  flower  decided  come  solution  day  left  birthday  height  flower  assume  flower  row  numbered  left  right  equal  moment  remaining  day  beaver  take  special  watering  water  contiguous  flower  day  watered  flower  grows  height  unit  day  beaver  want  height  smallest  flower  large  possible  end  maximum  height  smallest  flower  get  contains  space  separated  second  contains  space  separated  print  single  maximum  final  height  smallest  flower
803/B __label__constructive  algorithms  given  array  element  find  distance  nearest  element  equal  least  element  given  array  contains  length  array  second  contains  element  array  separated  single  space  print  sequence  difference  index  nearest  possible
1152/D __label__dp  __label__greedy  __label__trees  neko  playing  toy  backyard  aki  house  aki  decided  play  prank  secretly  putting  catnip  neko  toy  unfortunately  went  overboard  put  entire  bag  catnip  toy  took  neko  entire  day  turn  back  normal  neko  reported  aki  saw  lot  weird  thing  including  trie  correct  bracket  sequence  length  definition  correct  bracket  sequence  follows  empty  sequence  correct  bracket  sequence  correct  bracket  sequence  correct  bracket  sequence  correct  bracket  sequence  correct  bracket  sequence  example  string  form  correct  bracket  sequence  aki  came  interesting  problem  size  maximum  matching  largest  set  edge  edge  common  vertex  trie  since  answer  quite  large  print  modulo  contains  single  print  exactly  size  maximum  matching  trie  since  answer  quite  large  print  modulo
356/D __label__dp  __label__greedy  __label__constructive  algorithms  child  must  told  puzzle  bag  coin  anyway  version  horse  ha  bag  bag  ha  coin  second  bag  ha  coin  third  bag  ha  coin  total  horse  ha  coin  bag  possible  answer  quite  simple  third  bag  contains  coin  bag  problem  generalization  childhood  puzzle  bag  know  bag  contains  coin  second  bag  contains  coin  bag  contains  coin  total  coin  find  way  arrange  bag  coin  match  described  scenario  else  state  impossible  contains  bag  total  coin  next  contains  show  coin  bag  answer  exist  print
733/A __label__implementation  day  grasshopper  wa  jumping  lawn  found  piece  paper  string  grasshopper  became  interested  minimum  jump  ability  order  able  reach  far  end  string  jumping  vowel  english  alphabet  jump  ability  maximum  possible  length  jump  formally  consider  begginning  grasshopper  located  directly  front  leftmost  character  string  goal  reach  position  right  rightmost  character  string  jump  grasshopper  could  jump  right  distance  value  jump  ability  picture  corresponds  example  following  letter  vowel  contains  non  empty  string  consisting  capital  english  letter  guaranteed  length  string  doe  exceed  print  single  minimum  jump  ability  grasshopper  symbol  needed  overcome  given  string  jumping  vowel
825/E __label__greedy  __label__data  structures  __label__dfs  __label__graphs  given  directed  acyclic  graph  vertex  edge  self  loop  multiple  edge  pair  vertex  graph  disconnected  assign  label  vertex  way  label  form  valid  permutation  length  sequence  appears  exactly  exists  edge  vertex  vertex  labelv  smaller  labelu  permutation  lexicographically  smallest  suitable  find  sequence  label  satisfy  condition  contains  next  edge  graph  edge  directed  graph  loop  multiple  edge  print  lexicographically  smallest  correct  permutation  label  vertex
6/B __label__implementation  president  berland  ha  vast  office  room  apart  work  subordinate  subordinate  well  president  ha  desk  unique  colour  desk  rectangular  side  parallel  office  wall  day  president  decided  establish  assembly  deputy  member  unfortunately  doe  remember  exact  amount  deputy  remembers  desk  deputy  adjacent  desk  say  desk  president  deputy  common  side  positive  length  office  room  plan  viewed  matrix  row  column  cell  matrix  either  empty  contains  part  desk  uppercase  latin  letter  stand  desk  colour  period  character  stand  empty  cell  contains  separated  space  length  width  office  room  character  president  desk  colour  following  character  office  room  description  guaranteed  colour  desk  unique  desk  represents  continuous  subrectangle  given  matrix  colour  marked  uppercase  latin  letter  print  amount  president  deputy
930/A __label__dfs  __label__graphs  __label__trees  arcady  garden  grows  peculiar  apple  tree  fruit  time  per  year  peculiarity  explained  following  way  inflorescence  numbered  inflorescence  situated  near  base  tree  inflorescence  situated  top  branch  bottom  inflorescence  tree  start  fruiting  appears  exactly  apple  inflorescence  moment  apple  appear  start  roll  along  branch  base  tree  second  apple  except  inflorescence  simultaneously  roll  branch  closer  tree  base  apple  inflorescence  get  inflorescence  apple  end  inflorescence  gathered  arcady  exactly  moment  second  peculiarity  tree  apple  inflorescence  annihilate  happens  pair  apple  apple  inflorescence  time  annihilated  apple  apple  annihilated  thus  apple  inflorescence  moment  time  help  arcady  counting  apple  able  collect  inflorescence  harvest  input  contains  single  inflorescence  second  input  contains  sequence  inflorescence  apple  inflorescence  roll  single  output  amount  apple  arcady  able  collect  inflorescence  harvest
553/B __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  __label__binary  search  let  define  permutation  length  array  consisting  distinct  range  say  permutation  map  value  value  value  value  kyota  ootori  ha  learned  cyclic  representation  permutation  cycle  sequence  element  sequence  mapped  next  element  sequence  last  element  cycle  mapped  element  cycle  cyclic  representation  representation  collection  cycle  forming  example  permutation  ha  cyclic  representation  look  like  replaced  replaced  replaced  swapped  remains  place  permutation  several  cyclic  representation  kyoya  defines  standard  cyclic  representation  permutation  follows  reorder  element  cycle  largest  element  reorder  cycle  sorted  element  example  standard  cyclic  representation  kyoya  notice  drop  parenthesis  standard  cyclic  representation  get  another  permutation  instance  become  kyoya  notice  permutation  change  applying  operation  described  wrote  permutation  length  change  list  lexicographic  order  unfortunately  friend  tamaki  suoh  lost  list  kyoya  wish  reproduce  list  need  help  given  print  permutation  wa  kyoya  list  length  kyoya  list  print  space  separated  representing  permutation  answer  question
371/A __label__math  __label__implementation  __label__greedy  task  exclusively  concentrate  array  element  equal  array  period  length  divisible  array  length  represented  array  written  exactly  time  consecutively  word  array  periodic  ha  period  length  example  array  periodic  array  length  array  time  periodic  periodic  array  time  periodic  periodic  given  array  consisting  find  minimum  element  change  make  array  periodic  array  already  periodic  required  value  equal  input  contains  pair  length  array  value  divisible  second  contains  sequence  element  given  array  element  array  print  minimum  array  element  need  change  make  array  periodic  array  already  periodic  print
507/D __label__dp  __label__implementation  amr  like  math  find  really  boring  usually  sleep  math  lecture  day  teacher  suspected  amr  sleeping  asked  question  make  sure  gave  amr  positive  asked  amr  many  exist  decimal  representation  without  leading  consists  exactly  digit  exists  decimal  representation  suffix  decimal  representation  answer  question  pretty  huge  teacher  asked  amr  output  remainder  modulo  help  amr  escape  embarrassing  situation  consists  print  required  modulo
350/E __label__dfs  __label__graphs  __label__constructive  algorithms  __label__brute  force  valera  conduct  experiment  algorithm  search  shortest  path  ha  recently  studied  floyd  algorithm  time  work  valera  already  written  code  count  shortest  distance  pair  vertex  non  directed  connected  graph  vertex  edge  containing  loop  multiple  edge  besides  valera  decided  mark  part  vertex  marked  exactly  vertex  valera  code  given  shortest  distance  pair  vertex  vertex  marked  valera  else  inf  inf  large  read  pair  vertex  non  directed  edge  min  valera  ha  seen  code  wrong  help  boy  given  set  marked  vertex  find  non  directed  connected  graph  consisting  vertex  edge  valera  code  count  wrong  shortest  distance  least  pair  vertex  valera  really  keen  get  graph  without  loop  multiple  edge  graph  exists  print  input  contains  vertex  edge  marked  vertex  second  input  contains  space  separated  marked  vertex  guaranteed  distinct  graph  exist  print  single  otherwise  print  containing  description  edge  graph  valera  looking
1060/H __label__constructive  algorithms  given  prime  mysterious  device  ha  memory  cell  contains  instruction  supported  addition  raising  power  modulo  modulo  memory  cell  numbered  initially  cell  respectively  cell  directly  access  value  cell  know  know  value  know  written  cell  mission  choose  accept  write  program  using  available  instruction  obtain  product  modulo  cell  program  work  possible  addition  instruction  evaluates  sum  value  cell  writes  third  cell  instruction  encoded  string  writes  sum  value  cell  cell  value  coincide  second  instruction  writes  power  value  cell  target  cell  instruction  encoded  string  value  coincide  case  value  cell  overwritten  last  instruction  special  return  instruction  encoded  string  target  mean  obtained  value  xymodp  cell  target  instruction  called  instruction  provide  program  obtains  xymodp  us  instruction  including  return  instruction  guaranteed  given  constrains  solution  exists  contains  space  separated  prime  output  instruction  instruction  per  format  last  return  instruction
1250/N __label__greedy  __label__dfs  __label__graphs  polycarpus  ha  complex  electronic  device  core  device  circuit  board  board  ha  contact  point  numbered  wire  numbered  connecting  distinct  contact  point  board  electric  signal  pas  wire  either  wire  share  contact  point  sequence  wire  starting  ending  pair  adjacent  wire  sequence  share  contact  point  picture  show  circuit  board  wire  contact  point  used  electrical  signal  pas  wire  wire  wire  currently  circuit  board  broken  polycarpus  think  board  could  fixed  wire  soldered  signal  could  pas  pair  wire  take  minute  polycarpus  solder  end  wire  take  minute  change  contact  point  wire  contact  point  range  used  new  contact  point  wire  end  must  always  soldered  distinct  contact  point  wire  end  solded  require  action  take  minute  total  find  minimum  amount  time  polycarpus  need  solder  wire  signal  pas  pair  wire  output  optimal  sequence  wire  soldering  input  contains  several  test  case  input  contains  single  test  case  test  case  follow  test  case  contains  single  wire  following  describe  wire  containing  space  separated  contact  point  connected  wire  couple  contact  point  connected  wire  sum  value  test  case  doe  exceed  test  case  print  single  minimum  minute  needed  solder  wire  signal  pas  pair  wire  following  print  description  soldering  soldering  described  triple  mean  soldering  end  wire  wa  soldered  contact  point  becomes  soldered  contact  point  instead  soldering  wire  must  connect  distinct  contact  point  multiple  optimal  soldering  print
925/A __label__binary  search  year  xx  participant  world  programming  championship  live  single  large  hotel  hotel  ha  floor  floor  ha  section  single  corridor  connecting  section  enumerated  along  corridor  section  equal  different  floor  located  exactly  thus  hotel  represented  rectangle  height  width  denote  section  pair  floor  section  floor  guest  walk  along  corridor  floor  use  stair  elevator  stair  elevator  occupies  section  section  occupied  stair  elevator  guest  room  take  time  unit  move  neighboring  section  floor  move  floor  using  stair  take  time  unit  move  floor  direction  using  elevator  assume  wait  elevator  time  needed  enter  exit  elevator  negligible  process  query  query  question  minimum  time  needed  room  section  room  section  contains  floor  section  floor  stair  elevator  maximum  speed  elevator  respectively  second  contains  increasing  order  denoting  position  stair  second  empty  third  contains  increasing  order  denoting  elevator  position  format  guaranteed  distinct  fourth  contains  single  query  next  describe  query  contains  coordinate  starting  finishing  section  query  guaranteed  starting  finishing  section  distinct  guaranteed  section  guest  room  print  per  answer  query
1195/E __label__data  structures  seryozha  conduct  course  dedicated  building  map  height  stepanovo  recreation  center  laid  rectangle  grid  size  nm  cell  map  row  grid  numbered  north  south  column  numbered  west  east  measured  average  height  cell  rybinsk  sea  level  obtained  matrix  height  size  nm  cell  lie  intersection  row  column  ha  height  seryozha  going  look  result  work  browser  screen  seryozha  laptop  fit  subrectangle  size  ab  matrix  height  seryozha  try  decide  weather  affect  recreation  center  example  rain  rainwater  gather  going  find  cell  minimum  height  cell  shown  screen  laptop  help  seryozha  calculate  sum  height  cell  possible  subrectangles  see  screen  word  calculate  sum  minimum  height  submatrices  size  ab  top  left  corner  consider  sequence  modz  given  miraculous  coincidence  index  input  contains  row  column  matrix  seryozha  ha  row  column  shown  screen  laptop  respectively  second  input  contains  print  single  answer  problem
1139/F __label__data  structures  people  living  city  dish  sold  city  dish  ha  price  standard  beauty  person  ha  income  preferred  beauty  pre  person  would  never  buy  dish  whose  standard  le  person  income  person  afford  dish  price  greater  income  person  word  person  buy  dish  person  buy  dish  word  price  dish  le  person  income  person  allow  absolute  difference  beauty  dish  preferred  beauty  print  dish  bought  person  city  contains  dish  available  city  people  living  city  second  contains  price  dish  third  contains  standard  dish  fourth  contains  beauty  dish  fifth  contains  n  income  every  person  sixth  contains  pre  preferred  beauty  every  person  guaranteed  following  condition  hold  print  dish  bought  every  person  living  city
38/G __label__data  structures  cold  winter  evening  hero  vasya  stood  railway  queue  buy  ticket  codeforces  championship  final  usually  happens  cashier  said  wa  going  away  minute  left  hour  vasya  get  bored  started  analyze  mechanism  queue  finding  astonished  vasya  every  man  characterized  importance  current  task  greater  important  task  picture  conscience  form  permutation  let  queue  consist  people  moment  let  look  way  person  came  behaves  stand  end  queue  doe  following  importance  task  man  front  le  swap  place  look  like  man  asks  erm  excuse  please  important  could  please  let  move  queue  pose  question  man  front  case  greater  moving  queue  stop  man  perform  operation  time  task  let  suppose  moment  man  join  queue  process  swap  stopped  swap  possible  necessarily  take  place  task  help  vasya  model  described  process  find  order  people  stand  queue  swap  stop  input  contains  people  ha  joined  queue  next  description  people  given  order  coming  space  separated  every  description  located  single  different  output  permutation  signifies  queue  formed  according  described  rule  starting  beginning  end  succession  stand  person  stand  place  swap  end  people  numbered  starting  order  given  input  separate  space
1015/F __label__dp  __label__strings  given  bracket  sequence  necessarily  regular  bracket  sequence  string  containing  character  regular  bracket  sequence  bracket  sequence  transformed  correct  arithmetic  expression  inserting  character  original  character  sequence  example  bracket  sequence  regular  resulting  expression  problem  calculate  regular  bracket  sequence  length  containing  given  bracket  sequence  substring  consecutive  sequence  character  modulo  input  contains  half  length  resulting  regular  bracket  sequence  resulting  sequence  must  length  equal  second  input  contains  string  string  substring  resulting  regular  bracket  sequence  length  print  regular  bracket  sequence  containing  given  bracket  sequence  substring  since  huge  print  modulo
747/D __label__dp  __label__greedy  __label__sortings  winter  berland  last  day  day  know  forecast  average  air  temperature  day  vasya  ha  new  set  winter  tire  allows  drive  safely  day  average  air  temperature  day  using  regardless  temperature  day  set  winter  tire  wear  used  necessary  day  form  continuous  segment  day  winter  day  vasya  still  us  summer  tire  possible  drive  safely  summer  tire  day  average  air  temperature  non  negative  impossible  drive  summer  tire  day  average  air  temperature  negative  vasya  change  summer  tire  winter  tire  vice  versa  beginning  day  find  minimum  time  vasya  need  change  summer  tire  winter  tire  vice  versa  drive  safely  winter  end  winter  car  set  tire  contains  positive  winter  day  day  winter  tire  used  allowed  drive  winter  tire  temperature  day  total  second  contains  sequence  average  air  temperature  winter  day  print  minimum  time  vasya  ha  change  summer  tire  winter  tire  vice  versa  drive  safely  winter  impossible  print
557/D __label__math  __label__dfs  __label__graphs  vitaly  wa  expelled  university  became  interested  graph  theory  vitaly  especially  liked  cycle  odd  length  vertex  occurs  vitaly  wa  wondering  solve  following  problem  given  undirected  graph  consisting  vertex  edge  necessarily  connected  without  parallel  edge  loop  need  find  minimum  edge  must  added  given  graph  order  form  simple  cycle  odd  length  consisting  vertex  moreover  must  find  way  add  edge  order  form  cycle  odd  length  consisting  vertex  prohibited  add  loop  parallel  edge  way  add  edge  graph  considered  equal  set  added  edge  since  vitaly  doe  study  university  asked  help  task  input  contains  vertex  graph  edge  graph  next  description  edge  graph  edge  per  edge  given  pair  vertex  connected  edge  separated  single  space  guaranteed  given  graph  loop  parallel  edge  graph  necessarily  connected  print  output  space  separated  minimum  edge  added  graph  form  simple  cycle  odd  length  consisting  vertex  vertex  occurs  way
1184/C1 __label__implementation  cybermen  daleks  long  doctor  main  enemy  everyone  know  specie  enjoy  destroying  everything  encounter  little  known  fact  love  taking  turing  test  heidi  designed  series  increasingly  difficult  task  spend  time  would  allow  doctor  enough  time  save  innocent  life  funny  part  task  would  easy  human  solve  task  follows  point  plane  boundary  axis  aligned  square  side  parallel  ax  identify  point  contains  following  contains  describing  coordinate  next  point  guaranteed  least  point  side  square  point  distinct  print  coordinate  point  boundary  square
843/B __label__brute  force  interactive  problem  given  sorted  increasing  order  singly  linked  list  find  minimum  list  greater  equal  formally  singly  liked  list  built  array  element  element  index  contains  valuei  value  element  nexti  index  next  element  singly  linked  list  current  element  last  list  sorted  nexti  valuenexti  aluei  given  element  list  index  element  start  make  query  following  type  ask  value  valuei  nexti  give  answer  problem  minimum  greater  equal  program  terminate  query  write  program  solves  problem  contains  start  tart  element  list  index  element  print  answer  problem  print  minimum  list  greater  equal
689/A __label__implementation  __label__constructive  algorithms  __label__brute  force  swimming  beach  mike  ha  accidentally  dropped  cellphone  water  wa  worry  bought  cheap  replacement  phone  old  fashioned  keyboard  keyboard  ha  digital  equal  sized  key  located  following  way  together  old  phone  lost  contact  remember  way  finger  moved  put  formally  consider  finger  movement  sequence  vector  connecting  center  key  pressed  consecutively  put  example  finger  movement  finger  movement  mike  ha  already  put  finger  memory  started  calling  worrying  sure  calling  correct  word  ha  finger  movement  input  contains  digit  phone  mike  put  second  contains  string  consisting  digit  character  representing  mike  put  phone  finger  movement  mike  sure  calling  correct  print  yes  without  quote
676/A __label__implementation  __label__constructive  algorithms  nicholas  ha  array  contains  distinct  word  nicholas  ha  permutation  size  nicholas  want  minimum  element  maximum  element  far  possible  want  perform  exactly  swap  order  maximize  distance  minimum  maximum  element  distance  element  considered  equal  absolute  difference  position  input  contains  single  size  permutation  second  input  contains  distinct  equal  element  position  print  single  maximum  possible  distance  minimum  maximum  element  nicholas  achieve  performing  exactly  swap
1178/B __label__dp  __label__strings  recall  string  subsequence  string  obtained  deletion  several  possibly  character  example  string  wowwo  following  string  subsequence  wowwo  wowo  wow  others  following  subsequence  owoo  owwwo  ooo  wow  factor  string  subsequence  equal  word  wow  bob  want  write  string  ha  large  wow  factor  key  keyboard  broken  type  instead  little  realise  introduced  thought  consider  instance  string  bob  would  type  vvvv  string  actually  contains  occurrence  vvvv  vvvv  vvvv  example  wow  factor  word  vvvovvv  equal  wow  vvvovvv  vvvovvv  vvvovvv  vvvovvv  note  subsequence  vvvovvv  doe  count  towards  wow  factor  consecutive  given  string  compute  output  wow  factor  note  guaranteed  possible  get  another  string  replacing  example  equal  vov  input  contains  single  non  empty  string  consisting  character  length  output  single  wow  factor
1182/E __label__math  __label__dp  __label__number  theory  let  x  given  find  mod  contains  print  mod
846/C __label__dp  __label__data  structures  __label__brute  force  given  array  let  sum  sum  position  non  inclusive  element  counted  element  counted  index  hold  index  array  numbered  example  sum  sum  sum  sum  choose  index  delimiters  delim  delim  delim  elim  elim  elim  divide  array  way  value  um  elim  sum  delim  elim  sum  delim  elim  sum  delim  maximal  note  expression  sum  correspond  empty  segment  segment  contains  second  contains  choose  index  value  maximal  multiple  answer  print
835/B __label__greedy  natural  wa  written  board  sum  digit  wa  le  distracted  bit  someone  changed  replacing  digit  others  known  length  change  find  minimum  digit  differ  contains  second  contains  leading  guaranteed  situation  possible  print  minimum  digit  initial  differ
1005/E2 __label__sortings  given  sequence  find  pair  index  value  median  exactly  given  median  sequence  value  element  middle  sequence  sorting  non  decreasing  order  length  sequence  even  left  middle  element  used  example  median  since  sorting  sequence  look  like  left  middle  element  equal  median  equal  since  sorting  value  middle  sequence  write  program  find  pair  index  value  median  exactly  given  contains  length  given  sequence  required  value  median  second  contains  sequence  print  required
755/B __label__greedy  __label__data  structures  __label__sortings  __label__strings  __label__binary  search  polandball  playing  game  enemyball  rule  simple  player  say  word  turn  say  word  wa  already  said  polandball  start  ball  say  new  word  loses  given  list  word  familiar  polandball  enemyball  determine  win  game  play  optimally  input  contains  word  polandball  enemyball  know  respectively  string  follow  per  word  familiar  polandball  string  follow  per  word  familiar  enemyball  note  ball  know  word  string  unique  word  known  player  word  non  empty  consists  lowercase  english  alphabet  letter  single  print  answer  yes  polandball  win  otherwise  ball  play  optimally
821/B __label__math  __label__brute  force  okabe  need  banana  experiment  strange  reason  decides  forest  cut  banana  tree  consider  point  plane  tree  point  ha  banana  tree  banana  point  okabe  draw  equation  okabe  select  single  rectangle  axis  aligned  side  point  cut  tree  point  inside  border  rectangle  take  banana  okabe  rectangle  degenerate  segment  even  point  help  okabe  find  maximum  banana  get  chooses  rectangle  wisely  okabe  sure  answer  doe  exceed  trust  input  contains  space  separated  print  maximum  banana  okabe  get  tree  cut
853/D __label__dp  __label__greedy  __label__binary  search  michael  ha  bought  new  electric  car  moving  city  michael  doe  like  overwork  day  drive  job  michael  day  start  charging  electric  car  getting  work  back  spends  burles  charge  go  job  burles  go  second  job  charging  station  us  loyalty  program  involves  bonus  card  bonus  card  non  negative  amount  bonus  burles  time  customer  going  buy  something  price  burles  allowed  pay  amount  burles  doe  exceed  bonus  card  balance  bonus  burles  case  pay  burles  cash  balance  bonus  card  decreased  bonus  burles  customer  pay  whole  price  cash  price  returned  back  bonus  card  mean  bonus  card  balance  increase  bonus  burles  initially  bonus  card  balance  equal  bonus  burles  michael  ha  planned  next  day  know  much  doe  charge  cost  day  help  michael  determine  minimum  amount  burles  cash  ha  spend  optimal  use  bonus  card  assume  michael  able  cover  part  price  cash  day  necessary  spend  bonus  burles  end  given  period  input  contains  single  day  michael  ha  planned  next  contains  denoting  charging  cost  day  output  minimum  amount  burles  michael  ha  spend
711/B __label__implementation  __label__constructive  algorithms  coder  chris  baboon  arrived  entrance  udayland  n  magic  grid  entrance  filled  chris  noticed  exactly  cell  grid  empty  enter  udayland  need  fill  positive  empty  cell  chris  tried  filling  random  work  coder  realizes  need  fill  positive  grid  form  magic  square  mean  ha  fill  positive  sum  row  grid  column  grid  long  diagonal  grid  main  diagonal  secondary  diagonal  equal  chris  know  fill  help  chris  find  correct  positive  fill  determine  impossible  input  contains  single  row  column  magic  grid  follow  contains  denotes  row  column  magic  grid  corresponding  cell  empty  equal  otherwise  positive  guaranteed  exactly  pair  output  single  positive  filled  empty  cell  whole  grid  becomes  magic  square  positive  doe  exist  output  instead
592/C __label__math  vector  willman  array  bolt  famous  athlete  byteforces  going  compete  race  distance  meter  today  willman  bolt  exactly  speed  compete  result  always  tie  problem  organizer  want  winner  watching  previous  race  organizer  noticed  willman  perform  step  length  equal  meter  bolt  perform  step  length  equal  meter  organizer  decided  slightly  change  rule  race  end  racetrack  abyss  winner  declared  athlete  manages  run  farther  starting  point  racetrack  subject  change  athlete  note  none  athlete  run  infinitely  far  moment  time  face  point  step  cause  fall  abyss  word  athlete  fall  abyss  total  length  step  le  equal  chosen  distance  since  organizer  fair  going  set  length  racetrack  chosen  randomly  uniformly  range  included  probability  willman  bolt  tie  today  input  contains  maximum  possible  length  racetrack  length  willman  step  length  bolt  step  respectively  print  answer  problem  irreducible  fraction  follow  format  sample  output
117/A __label__math  __label__implementation  numerous  qualifying  tournament  prestigious  russian  contest  russian  codec  cup  participant  made  final  found  huge  floored  star  hotel  course  thought  come  place  like  checking  elevator  hotel  elevator  move  floor  according  never  changing  scheme  initially  moment  time  elevator  located  floor  move  floor  floor  reach  floor  elevator  move  floor  floor  reach  floor  process  repeated  infinitely  know  elevator  ha  infinite  capacity  know  every  floor  people  get  elevator  immediately  moving  floor  take  unit  time  participant  given  represents  floor  participant  start  represents  floor  participant  want  reach  represents  time  participant  start  floor  participant  print  minimum  time  arrival  floor  elevator  stop  floor  time  participant  enter  elevator  immediately  participant  start  floor  floor  wanted  reach  initially  time  arrival  floor  participant  considered  equal  contains  space  separated  next  information  participant  form  space  separated  described  problem  statement  print  containing  time  arrival  participant  required  floor
958/C1 __label__brute  force  rebel  spy  heidi  ha  obtained  plan  death  star  empire  way  safety  trying  break  encryption  plan  course  encrypted  empire  evil  stupid  encryption  ha  several  level  security  look  heidi  presented  screen  show  sequence  positive  know  encryption  code  single  defined  follows  define  score  sum  element  modulo  heidi  given  sequence  consists  given  need  split  part  part  contains  least  element  part  consists  contiguous  element  part  overlap  total  sum  score  part  maximized  encryption  code  output  sum  encryption  code  input  contains  space  separated  element  modulo  computing  score  respectively  second  contains  space  separated  element  interval  output  described  problem  statement
911/E __label__implementation  __label__greedy  __label__data  structures  __label__constructive  algorithms  let  suppose  array  stack  initially  empty  array  initially  empty  perform  following  operation  empty  take  element  push  remove  empty  take  top  element  append  end  array  remove  empty  perform  operation  arbitrary  order  exists  way  perform  operation  array  sorted  non  descending  order  end  array  called  stack  sortable  example  stack  sortable  sorted  perform  following  operation  remove  push  remove  push  remove  append  end  remove  push  remove  append  end  remove  append  end  operation  stack  sortable  stack  sortable  given  element  permutation  size  recall  permutation  size  array  size  occurs  exactly  restore  remaining  element  permutation  stack  sortable  multiple  answer  choose  answer  lexicographically  maximal  array  lexicographically  greater  array  iff  exists  every  swap  change  element  permutation  print  lexicographically  maximal  permutation  obtain  exists  answer  output  contains  size  desired  permutation  element  given  respectively  second  contains  element  pairwise  distinct  possible  restore  stack  sortable  permutation  size  element  equal  element  given  input  print  lexicographically  maximal  permutation
132/D __label__dp  __label__greedy  __label__constructive  algorithms  shakespeare  widely  known  esoteric  programming  language  program  look  like  play  shakespeare  given  combination  ornate  epithet  problem  closer  look  way  described  shakespeare  constant  shakespeare  created  non  negative  power  using  arithmetic  operation  simplicity  allow  addition  subtraction  look  representation  given  requires  minimal  operation  given  represent  non  negative  power  possibly  multiplied  find  representation  minimizes  value  input  contains  positive  written  binary  notation  length  notation  digit  notation  guaranteed  output  required  minimal  output  ha  formatted  power  coefficient  corresponding  term  order  matter
543/A __label__dp  programmer  working  large  project  received  task  write  exactly  code  programmer  working  project  make  exactly  bug  every  code  writes  let  call  sequence  non  negative  plan  programmer  follow  plan  like  beginning  programmer  writes  given  task  second  programmer  writes  given  task  end  last  programmer  writes  remaining  code  let  call  plan  good  written  task  bug  total  task  determine  many  distinct  good  plan  plan  large  print  remainder  modulo  given  positive  mod  contains  mod  od  programmer  code  task  maximum  total  bug  respectively  modulo  use  printing  answer  next  contains  space  separated  bug  per  programmer  print  single  answer  problem  modulo  mod
1065/B __label__graphs  __label__constructive  algorithms  vasya  ha  got  undirected  graph  consisting  vertex  edge  graph  self  loop  multiple  edge  self  loop  edge  connecting  vertex  multiple  edge  pair  edge  connect  pair  vertex  since  graph  undirected  pair  edge  considered  multiple  edge  isolated  vertex  graph  vertex  edge  connecting  vertex  vertex  vasya  want  know  minimum  maximum  possible  isolated  vertex  undirected  graph  consisting  vertex  edge  contains  guaranteed  exists  graph  without  self  loop  multiple  edge  vertex  edge  print  min  max  minimum  maximum  isolated  vertex  respectively
1195/F __label__math  __label__data  structures  __label__sortings  __label__geometry  denis  hold  geometer  anonymous  club  meeting  si  ha  prepared  convex  polygon  numbered  club  plan  offer  member  club  calculate  minkowski  sum  polygon  precisely  plan  give  task  asks  calculate  sum  minkowski  polygon  index  inclusive  sum  minkowski  set  set  proven  convex  polygon  convex  polygon  sum  convex  polygon  calculate  sum  minkowski  polygon  need  calculate  sum  minkowski  polygon  calculate  sum  minkowski  resulting  polygon  polygon  convenience  checking  answer  denis  ha  decided  prepare  calculate  vertex  sum  minkowski  task  prepared  help  input  contains  convex  polygon  denis  prepared  convex  polygon  follow  description  polygon  start  vertex  polygon  next  coordinate  vertex  polygon  counterclockwise  order  guaranteed  consecutive  vertex  lying  total  vertex  polygon  doe  exceed  following  contains  task  next  description  task  description  task  contains  task  print  single  vertex  sum  minkowski  polygon  index
522/B __label__dp  __label__implementation  __label__data  structures  day  friend  met  party  seen  long  time  decided  make  group  photo  together  simply  speaking  process  taking  photo  described  follows  photo  photographed  friend  occupies  rectangle  pixel  occupies  rectangle  width  pixel  height  pixel  group  photo  everybody  stand  thus  minimum  pixel  size  photo  including  photographed  friend  w  total  sum  width  maximum  height  photographed  friend  usually  case  friend  made  photo  photo  everybody  except  friend  wa  photographer  print  minimum  size  made  photo  pixel  contains  friend  follow  contains  information  friend  contains  pair  width  height  pixel  corresponding  rectangle  print  space  separated  total  pixel  minimum  photo  containing  friend  expect
616/C __label__dfs  given  rectangular  field  n  cell  cell  either  empty  impassable  contains  obstacle  empty  cell  marked  impassable  cell  marked  let  call  empty  cell  adjacent  share  side  let  call  connected  component  non  extendible  set  cell  connected  path  adjacent  cell  typical  well  known  definition  connected  component  impassable  cell  imagine  empty  cell  cell  remain  unchanged  find  size  cell  connected  component  contains  impassable  cell  independently  answer  printed  matrix  row  column  symbol  row  cell  empty  start  otherwise  symbol  row  digit  answer  modulo  matrix  printed  without  space  make  output  faster  recommended  build  output  array  string  length  print  sequence  much  faster  writing  character  character  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  scanf  printf  instead  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  row  column  field  next  contains  symbol  empty  cell  impassable  cell  print  answer  matrix  described  see  example  precise  format  output
962/F __label__dfs  __label__graphs  __label__trees  given  undirected  graph  consisting  vertex  edge  graph  doe  necessarily  connected  guaranteed  graph  doe  multiple  edge  edge  pair  vertex  loop  edge  vertex  cycle  graph  called  simple  contains  vertex  exactly  simple  cycle  allow  visit  vertex  cycle  determine  edge  belong  exactly  simple  cycle  vertex  edge  following  description  edge  print  edge  belong  exactly  simple  cycle
1252/H __label__implementation  __label__greedy  might  already  know  space  ha  always  problem  icpc  jakarta  cope  icpc  jakarta  planning  build  new  building  building  shape  rectangle  size  problem  find  land  build  building  land  available  sale  land  ha  rectangular  shape  size  good  feng  shui  building  side  parallel  land  side  way  build  building  different  land  land  necessarily  orientation  building  size  ab  build  land  least  following  satisfied  alternatively  possible  build  building  ab  land  orientation  formally  possible  build  building  ab  land  least  following  satisfied  b  b  task  problem  help  icpc  jakarta  figure  largest  possible  building  build  given  available  land  note  icpc  jakarta  ha  build  building  ab  output  largest  possible  ab  begin  containing  representing  available  land  next  contains  representing  size  land  output  representing  largest  building  icpc  jakarta  build  exactly  decimal  point  see  sample  input  output  clarity
626/D __label__dp  __label__brute  force  andrew  jerry  playing  game  harry  scorekeeper  game  consists  round  round  andrew  jerry  draw  randomly  without  replacement  jar  containing  ball  labeled  distinct  positive  without  looking  hand  ball  harry  award  point  player  larger  return  ball  jar  winner  game  win  least  round  andrew  win  round  jerry  win  round  andrew  win  game  jerry  unhappy  system  claiming  often  lose  match  despite  higher  overall  total  probability  sum  ball  jerry  drew  strictly  higher  sum  ball  andrew  drew  input  contains  single  ball  jar  second  contains  written  ith  ball  guaranteed  ball  print  single  real  value  probability  jerry  ha  higher  total  given  andrew  win  round  jerry  win  third  answer  considered  correct  absolute  relative  error  doe  exceed
598/D __label__dfs  __label__graphs  igor  museum  want  see  many  picture  possible  museum  represented  rectangular  field  n  cell  cell  either  empty  impassable  empty  cell  marked  impassable  cell  marked  every  adjacent  cell  different  type  empty  impassable  divided  wall  containing  picture  beginning  igor  empty  cell  every  moment  move  empty  cell  share  side  current  several  starting  position  calculate  maximum  picture  igor  see  igor  able  see  picture  cell  adjacent  wall  picture  igor  lot  time  examine  every  picture  see  input  contains  museum  dimension  starting  position  process  next  contains  symbol  description  museum  guaranteed  border  cell  impassable  igor  museum  last  contains  row  column  igor  starting  position  respectively  row  numbered  top  bottom  column  left  right  guaranteed  starting  position  empty  cell  print  maximum  picture  igor  see  start  corresponding  position
793/F __label__dp  __label__data  structures  hard  work  igor  decided  rest  decided  snail  bought  aquarium  slippery  tree  trunk  center  put  snail  named  julia  aquarium  igor  noticed  sometimes  julia  want  climb  onto  trunk  trunk  slippery  help  snail  igor  put  rope  tree  fixing  lower  end  rope  trunk  height  ground  higher  end  height  ground  reason  rope  share  position  higher  end  distinct  julia  move  place  trunk  move  lower  end  rope  higher  end  igor  proud  work  sometimes  think  possible  movement  snail  namely  interested  following  question  suppose  snail  trunk  height  highest  position  trunk  snail  get  would  never  lower  higher  please  note  julia  move  rope  trunk  reach  higher  end  rope  igor  interested  highest  position  tree  trunk  igor  interested  many  question  always  answer  help  write  program  answer  question  contains  single  height  trunk  second  contains  single  rope  next  information  rope  contains  ii  height  lower  higher  end  rope  fixed  respectively  guaranteed  distinct  next  contains  single  question  next  information  question  height  julia  start  height  julia  get  lower  height  julia  get  higher  question  print  maximum  reachable  julia  height
383/B __label__implementation  __label__sortings  __label__binary  search  iahub  got  lost  big  desert  desert  represented  n  square  matrix  cell  zone  desert  cell  represents  cell  row  column  iahub  cell  right  cell  cell  occupied  volcano  iahub  enter  iahub  initially  cell  need  travel  cell  knowing  iahub  need  second  travel  cell  another  find  minimum  time  arrive  cell  contains  next  contains  pair  representing  coordinate  volcano  consider  matrix  row  numbered  top  bottom  matrix  column  numbered  left  right  volcano  cell  volcano  occupy  location  print  minimum  time  iahub  arrive  cell  solution  exists  path  final  cell  print
553/D __label__greedy  __label__graphs  __label__binary  search  nudist  beach  planning  military  operation  attack  life  fiber  operation  attack  capture  several  city  currently  control  life  fiber  city  labeled  bidirectional  road  currently  life  fiber  every  city  addition  city  fortress  life  fiber  captured  circumstance  nudist  beach  capture  arbitrary  non  empty  subset  city  fortress  operation  nudist  beach  defend  captured  city  counterattack  capture  city  connected  many  life  fiber  controlled  city  easily  defeated  nudist  beach  would  like  capture  set  city  captured  city  ratio  nudist  beach  controlled  neighbor  neighbor  city  high  possible  formally  would  like  capture  non  empty  set  city  fortress  life  fiber  strength  city  defined  neighbor  total  neighbor  city  called  neighbor  connnected  road  goal  maximize  strength  weakest  city  given  description  graph  city  fortress  find  non  empty  subset  maximizes  strength  weakest  city  input  contains  second  input  contains  representing  city  fortress  city  distinct  next  road  aii  every  city  least  road  adjacent  road  pair  city  denoting  size  optimum  set
835/C __label__dp  __label__implementation  cartesian  coordinate  system  set  sky  see  star  ha  coordinate  maximum  brightness  equal  star  initial  brightness  time  star  twinkle  moment  star  ha  brightness  let  moment  star  ha  brightness  moment  star  brightness  otherwise  want  look  sky  time  time  look  moment  see  rectangle  side  parallel  coordinate  ax  lower  left  corner  ha  coordinate  x  upper  right  x  view  want  know  total  brightness  star  lying  viewed  rectangle  star  lie  rectangle  lie  border  lie  strictly  inside  contains  star  view  maximum  brightness  star  next  star  description  contains  coordinate  star  initial  brightness  next  view  description  contains  x  x  moment  view  coordinate  viewed  rectangle  view  print  total  brightness  viewed  star
840/D __label__data  structures  leha  found  left  pocket  array  consisting  right  pocket  query  form  query  must  answered  answer  query  minimal  occurs  interval  strictly  time  help  leha  difficult  task  input  data  contains  element  array  query  respectively  next  contains  leha  array  next  contains  description  query  output  answer  query  new
1204/C __label__dp  __label__greedy  __label__graphs  main  character  omitted  short  given  directed  unweighted  graph  without  loop  vertex  path  path  necessary  simple  given  sequence  vertex  arc  define  sequence  vertex  good  subsequence  shortest  path  passing  vertex  order  sequence  subsequence  sequence  obtained  deletion  several  possibly  element  obvious  sequence  good  task  find  shortest  good  subsequence  multiple  shortest  good  subsequence  output  contains  single  vertex  graph  next  define  graph  adjacency  matrix  character  equal  arc  vertex  vertex  else  equal  guaranteed  graph  loop  next  contains  single  vertex  path  next  contains  sequence  vertex  path  guaranteed  arc  output  single  length  shortest  good  subsequence  second  output  vertex  subsequence  multiple  shortest  subsequence  print  consecutive  distinct
1090/D __label__constructive  algorithms  vasya  array  element  array  wa  chose  pair  different  position  wrote  sheet  paper  vasya  compared  element  position  wrote  result  comparison  another  sheet  paper  pair  wrote  either  greater  le  equal  several  year  ha  found  sheet  paper  find  second  remember  array  particular  remember  array  equal  element  ha  told  sad  story  informatics  teacher  helen  told  could  case  even  vasya  find  second  sheet  would  still  able  find  whether  array  equal  element  vasya  want  find  array  length  element  array  must  distinct  must  equal  element  second  array  pair  position  vasya  wrote  sheet  paper  result  comparison  must  corresponding  element  array  corresponding  element  second  array  help  vasya  find  array  length  find  array  set  pair  input  contains  element  array  comparison  made  vasya  following  contains  position  comparison  guaranteed  unordered  pair  given  input  output  must  yes  exist  array  result  comparison  would  distinct  second  contains  equal  otherwise  must
1220/G __label__geometry  working  gryzzl  company  headquartered  pawnee  indiana  new  national  park  ha  opened  near  pawnee  recently  implement  geolocation  system  people  get  lost  concept  developed  innovative  minimalistic  antenna  located  somewhere  park  someone  would  like  know  current  location  gryzzl  hologram  phone  communicate  antenna  obtain  distance  user  current  location  antenna  knowing  distance  antenna  location  easy  recover  user  location  right  well  almost  issue  way  distinguish  antenna  know  distance  corresponds  antenna  task  find  user  location  given  little  antenna  location  unordered  multiset  distance  input  contains  single  antenna  following  coordinate  antenna  guaranteed  antenna  coincide  next  input  contains  query  determine  location  user  following  form  multiset  squared  distance  unknown  user  location  antenna  test  case  except  example  guaranteed  user  location  chosen  uniformly  random  independently  possible  location  query  output  possible  user  location  matching  given  input  output  list  location  lexicographic  order
495/B __label__math  __label__number  theory  last  week  hamed  learned  new  type  equation  math  class  called  modular  equation  let  define  modulo  remainder  division  denote  modular  equation  hamed  teacher  described  equation  form  non  negative  variable  call  positive  solution  equation  hamed  pay  much  attention  class  since  wa  watching  movie  managed  understand  definition  equation  want  write  math  exercise  since  ha  idea  asked  help  ha  told  know  modular  equation  asked  write  program  given  determines  many  answer  modular  equation  ha  input  space  separated  given  infinite  answer  equation  print  infinity  without  quote  otherwise  print  solution  modular  equation
1037/E __label__graphs  person  initially  know  morning  friend  become  friend  want  plan  trip  every  evening  day  trip  select  group  people  trip  every  person  following  hold  either  person  doe  trip  least  friend  trip  note  friendship  transitive  friend  friend  doe  necessarily  imply  friend  day  find  maximum  people  trip  day  contains  people  day  friend  person  trip  group  next  contains  meaning  person  become  friend  morning  day  guaranteed  friend  print  exactly  contains  maximum  people  trip  evening  day
804/E __label__constructive  algorithms  seyyed  mojak  friend  sajjad  sajjad  like  permutation  seyyed  want  change  permutation  way  sajjad  like  seyyed  think  swap  yield  probability  make  mojak  perform  swap  every  pair  position  exactly  mojak  like  upset  sajjad  given  permutation  determine  whether  possible  swap  pair  position  permutation  stay  possible  find  contains  single  size  permutation  permutation  important  consider  permutation  possible  swap  pair  position  permutation  stay  print
1231/E __label__greedy  __label__constructive  algorithms  __label__strings  problem  wa  inspired  pied  piper  story  challenge  hooli  compression  competitor  nucleus  richard  pulled  nighter  invent  new  approach  compression  middle  given  string  length  character  numbered  left  right  beginning  end  single  move  following  sequence  action  choose  valid  index  move  character  position  beginning  string  move  character  position  end  string  note  move  change  length  string  apply  move  string  example  test  move  obtain  move  beginning  result  test  string  change  move  beginning  result  etst  move  beginning  result  stet  move  beginning  result  ttes  move  end  result  estt  move  end  result  tste  move  end  result  tet  move  end  result  test  string  change  want  make  string  equal  string  minimum  move  need  impossible  transform  print  contains  independent  test  case  input  test  case  given  test  case  contains  length  string  second  contains  third  contains  string  length  lowercase  latin  letter  constraint  sum  test  input  allowed  every  test  print  minimum  possible  move  needed  transform  impossible
1178/F2 __label__dp  second  subtask  problem  difference  subtask  constraint  value  time  limit  sufficient  solve  subtask  order  hack  need  solve  subtasks  order  hack  distinct  colour  universe  numbered  strip  paper  centimetre  long  initially  painted  colour  alice  took  brush  painted  strip  using  following  process  order  pick  segment  currently  painted  single  colour  repaints  colour  alice  chose  segment  way  centimetre  painted  colour  formally  segment  painted  colour  every  colour  visible  strip  count  different  pair  sequence  result  configuration  since  large  output  modulo  contains  colour  excluding  colour  length  paper  respectively  second  contains  space  separated  colour  visible  segment  process  end  guaranteed  index  output  single  way  alice  perform  painting  modulo
459/E __label__dp  __label__sortings  pashmak  homework  problem  graph  although  always  try  homework  completely  solve  problem  know  really  weak  graph  theory  try  help  solving  problem  given  weighted  directed  graph  vertex  edge  need  find  path  perhaps  non  simple  maximum  edge  weight  edge  increase  along  path  word  edge  path  must  strictly  greater  weight  previous  edge  path  help  pashmak  print  edge  required  path  contains  follows  contains  space  separated  indicates  directed  edge  weight  vertex  vertex  guaranteed  graph  self  loop  multiple  edge  print  single  answer  problem
383/A __label__greedy  __label__data  structures  iahub  help  grandfather  farm  today  must  milk  cow  cow  sitting  row  numbered  left  right  cow  either  facing  left  facing  right  iahub  milk  cow  cow  see  current  cow  get  scared  lose  unit  quantity  milk  give  cow  facing  left  see  cow  lower  index  index  cow  facing  right  see  cow  higher  index  index  cow  got  scared  get  scared  lose  unit  milk  cow  ha  milked  get  scared  lose  milk  assume  cow  never  loses  milk  give  cow  give  infinitely  amount  milk  iahub  decide  order  milk  cow  must  milk  cow  exactly  iahub  want  lose  little  milk  possible  print  minimum  amount  milk  lost  contains  second  contains  cow  facing  left  facing  right  print  single  minimum  amount  lost  milk
946/G __label__dp  __label__data  structures  call  array  almost  increasing  erase  element  array  becomes  strictly  increasing  every  element  striclty  greater  every  element  given  array  consisting  element  allowed  replace  element  time  need  minimum  replacement  perform  order  make  array  almost  increasing  contains  element  second  contains  array  print  minimum  replaces  perform  almost  increasing
1149/C __label__implementation  __label__data  structures  __label__trees  owl  pacino  ha  always  tree  unweighted  rooted  tree  particular  love  determining  diameter  every  tree  see  maximum  length  simple  path  tree  owl  pacino  owl  friend  decided  present  tree  generator  powerful  machine  creating  rooted  tree  description  vertex  rooted  tree  described  bracket  sequence  length  following  way  find  walk  starting  finishing  root  traverse  edge  exactly  twice  tree  later  tree  follow  path  write  opening  parenthesis  edge  followed  tree  closing  parenthesis  otherwise  following  figure  show  sample  rooted  tree  description  owl  wrote  description  vertex  rooted  tree  rewrote  description  time  time  wrote  new  description  picked  different  character  description  wrote  last  time  swapped  wrote  resulting  string  always  made  sure  written  string  wa  description  rooted  tree  pacino  used  tree  generator  description  wrote  diameter  constructed  tree  input  contains  vertex  tree  change  tree  description  following  contains  description  initial  tree  string  length  consisting  opening  closing  parenthesis  following  describes  single  change  description  contains  space  separated  n  identify  index  bracket  swapped  assume  description  change  query  change  tree  constructed  description  output  diameter  constructed  tree  order  description  written
734/D __label__implementation  anton  like  play  chess  like  programming  decided  write  program  play  chess  find  game  board  simple  us  infinite  instead  task  faced  check  whether  king  check  anton  know  implement  asks  help  consider  infinite  chess  board  contains  white  king  black  piece  rook  bishop  queen  piece  supported  white  king  said  check  least  black  piece  reach  cell  king  move  help  anton  write  program  given  position  determines  whether  white  king  check  remainder  chess  piece  move  bishop  move  cell  diagonally  leap  occupied  cell  rook  move  cell  horizontally  vertically  leap  occupied  cell  queen  able  move  cell  horizontally  vertically  diagonally  leap  input  contains  single  black  piece  second  contains  coordinate  white  king  follow  contains  character  type  piece  position  character  stand  bishop  rook  queen  guaranteed  piece  occupy  position  output  contains  yes  without  quote  white  king  check  without  quote  otherwise
627/D __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__trees  __label__binary  search  computer  science  class  jacob  build  model  tree  stick  ball  containing  node  shape  tree  jacob  ha  spent  minute  building  ball  tree  jacob  teacher  evaluate  model  grade  jacob  based  effort  ha  put  doe  enough  time  search  whole  tree  determine  jacob  know  examine  node  dfs  order  traversal  tree  assign  jacob  grade  equal  minimum  find  node  though  jacob  doe  enough  time  rebuild  model  choose  root  node  teacher  start  furthermore  rearrange  list  neighbor  node  order  like  help  jacob  find  best  grade  get  assignment  dfs  order  traversal  ordering  node  rooted  tree  built  recursive  dfs  procedure  initially  called  root  tree  called  given  node  procedure  doe  following  print  traverse  list  neighbor  node  order  iteratively  call  dfs  procedure  call  dfs  procedure  node  came  node  directly  input  contains  positive  ball  jacob  tree  ball  teacher  inspect  second  contains  time  jacob  used  build  ball  next  contains  uii  representing  connection  jacob  tree  ball  print  single  maximum  grade  jacob  get  picking  right  root  tree  rearranging  list  neighbor
712/C __label__math  __label__greedy  memory  interested  evolution  object  specifically  triangle  start  equilateral  triangle  side  length  wish  perform  operation  obtain  equilateral  triangle  side  length  single  second  modify  length  single  side  current  triangle  remains  non  degenerate  triangle  triangle  positive  area  moment  time  length  side  minimum  second  required  memory  obtain  equilateral  triangle  side  length  contains  starting  ending  equilateral  triangle  side  length  respectively  print  single  minimum  second  required  memory  obtain  equilateral  triangle  side  length  start  equilateral  triangle  side  length
1141/C __label__math  array  called  permutation  contains  exactly  example  following  array  permutation  following  array  permutation  polycarp  invented  really  cool  permutation  length  disappointing  forgot  permutation  remembers  array  length  given  help  polycarp  restore  invented  permutation  contains  length  permutation  restore  second  contains  print  permutation  length  corresponds  given  array  otherwise  exists  print  print  permutation  many
1158/F __label__math  __label__dp  let  positive  let  call  array  positive  array  condition  satisfied  let  call  array  subarray  array  exists  set  index  let  define  density  array  maximal  non  negative  array  contains  subarray  given  array  find  sequence  index  density  array  equal  find  modulo  large  contains  separated  space  c  second  contains  separated  space  print  equal  sequence  index  modulo  density  array  equal
429/D __label__data  structures  __label__geometry  iahub  sorin  best  competitive  programmer  town  qualify  important  contest  selection  made  help  single  problem  blatnatalag  friend  iahub  managed  get  hold  problem  contest  want  make  sure  iahub  qualified  tell  iahub  following  task  given  based  array  element  let  define  function  function  calculated  following  pseudo  code  int  int  int  int  sum  int  min  max  sum  sum  return  sum  find  value  mini  probably  iahub  already  figured  solution  problem  input  contains  single  next  contains  output  single  value  mini
961/G __label__math  __label__number  theory  given  set  element  indexed  weight  element  weight  subset  given  set  denoted  weight  partition  given  set  subset  recall  partition  given  set  set  subset  every  element  given  set  belongs  exactly  subset  partition  calculate  sum  weight  partition  given  set  exactly  non  empty  subset  print  modulo  partition  considered  different  iff  exist  element  belong  set  partition  different  set  another  partition  contains  element  subset  partition  respectively  second  contains  weight  element  set  print  sum  weight  partition  given  set  non  empty  subset  taken  modulo
1119/A __label__implementation  __label__greedy  ilya  life  beautiful  city  chordalsk  house  street  ilya  life  numerated  left  right  distance  every  neighboring  house  equal  unit  neighboring  house  house  neighboring  house  colored  color  house  colored  color  everyone  know  chordalsk  boring  least  house  colored  different  color  ilya  want  select  house  different  color  walk  house  house  distance  unit  ilya  love  long  walk  want  choose  house  distance  maximum  possible  help  ilya  find  maximum  possible  distance  contains  single  city  street  second  contains  color  house  guaranteed  least  pair  index  print  single  maximum  possible  distance  ilya  walk
977/B __label__implementation  __label__strings  gram  ordered  pair  string  length  capital  latin  letter  example  distinct  gram  given  string  consisting  capital  latin  letter  task  find  gram  contained  given  string  substring  consecutive  character  string  maximal  time  example  string  bbaabbba  answer  gram  contained  time  word  find  frequent  gram  note  occurrence  gram  overlap  input  contains  length  string  second  input  contains  string  consisting  capital  latin  letter  print  containing  exactly  capital  latin  letter  gram  contained  given  string  substring  consecutive  character  string  maximal  time
421/A __label__implementation  __label__constructive  algorithms  pasha  ha  hamster  arthur  alexander  pasha  put  apple  front  pasha  know  apple  arthur  like  similarly  pasha  know  apple  alexander  like  pasha  want  conflict  hamster  like  apple  decided  distribute  apple  hamster  going  give  apple  arthur  apple  alexander  matter  many  apple  hamster  get  important  hamster  get  apple  like  possible  somebody  get  apple  help  pasha  distribute  apple  hamster  note  pasha  want  distribute  apple  contains  apple  pasha  ha  apple  arthur  like  apple  alexander  like  correspondingly  next  contains  distinct  apple  arthur  like  next  contains  distinct  apple  alexander  like  assume  apple  numbered  input  answer  exists  print  character  equal  either  character  equal  apple  given  arthur  otherwise  given  alexander  multiple  correct  answer  allowed  print
1228/F __label__implementation  __label__trees  __label__constructive  algorithms  let  define  following  tree  generation  mcdic  generation  make  complete  full  binary  tree  vertex  complete  full  binary  tree  mean  tree  exactly  vertex  root  leaf  depth  distance  root  non  leaf  node  exactly  child  node  select  non  root  vertex  binary  tree  remove  tree  make  new  edge  parent  direct  child  ha  child  new  edge  made  tree  determine  tree  made  mcdic  generation  yes  find  parent  vertex  removed  vertex  tree  contains  next  contains  meaning  edge  guaranteed  given  edge  form  tree  print
362/D __label__greedy  __label__data  structures  __label__dfs  __label__graphs  must  heard  foolland  geography  lesson  specifically  must  know  federal  structure  country  ha  many  century  country  consists  city  pair  city  connected  bidirectional  road  road  described  length  fool  lived  land  joyfully  recent  revolution  changed  king  king  vasily  bear  vasily  divided  country  city  region  city  region  path  along  road  city  different  region  path  vasily  decided  upgrade  road  network  construct  exactly  new  road  country  constructing  road  go  like  choose  pair  distinct  city  connected  new  road  possible  already  road  city  define  length  new  road  city  belong  distinct  region  length  calculated  min  total  length  road  exist  linked  region  otherwise  assume  length  equal  build  road  specified  length  chosen  city  new  road  connects  distinct  region  construction  road  region  combined  new  region  vasily  want  road  constructing  process  result  country  consists  exactly  region  task  come  road  constructing  plan  vasily  meet  requirement  minimizes  total  length  built  road  contains  city  foolland  existing  road  road  planned  construct  required  region  next  describe  road  exist  moment  upgrading  road  begun  contains  city  connected  road  ii  length  road  note  pair  city  connected  multiple  road  constructing  road  required  way  impossible  print  single  string  without  quote  otherwise  print  word  yes  without  quote  next  print  road  construction  plan  plan  must  consist  distinct  giving  city  connected  road  road  must  occur  plan  order  need  constructed  multiple  optimal  solution  print
986/C __label__dfs  __label__graphs  given  set  size  element  inclusive  let  build  undirected  graph  following  way  connect  edge  bitwise  operation  count  connected  component  graph  input  second  element  set  distinct  print  connected  component
895/E __label__data  structures  vasya  petya  tired  studying  decided  play  game  game  begin  vasya  look  array  consisting  soon  remembers  element  game  begin  vasya  close  eye  petya  doe  action  type  petya  say  boundary  non  intersecting  segment  swap  random  element  segment  another  random  element  segment  petya  asks  vasya  sum  element  segment  vasya  mathematician  answer  petya  mathematical  expectation  sum  element  segment  task  write  program  answer  second  type  question  vasya  would  word  program  print  mathematical  expectation  sum  element  segment  every  second  type  query  contains  element  array  query  need  handle  second  contains  element  array  next  petya  action  type  type  action  contains  type  query  contains  guaranteed  least  type  query  segment  common  element  type  query  print  real  mathematical  expectation  sum  element  segment
358/D __label__dp  __label__greedy  dima  liked  present  got  inna  much  liked  present  got  seryozha  even  dima  felt  grateful  inna  present  decided  buy  hare  inna  wa  happy  lined  hare  row  numbered  left  right  started  feeding  carrot  inna  wa  determined  feed  hare  exactly  order  feed  inna  noticed  hare  radiates  joy  feed  joy  specific  hare  depends  whether  inna  fed  adjacent  hare  feeding  inna  know  much  joy  hare  radiates  eats  either  adjacent  hare  hungry  adjacent  hare  full  ha  fed  adjacent  hare  full  please  note  hare  left  right  adjacent  hare  correspondingly  never  full  adjacent  hare  help  inna  maximize  total  joy  hare  radiate  input  contains  hare  follow  ha  contains  second  contains  third  contains  following  limit  fulfilled  show  joy  hare  get  adjacent  hare  hungry  second  show  joy  hare  radiates  ha  exactly  full  adjacent  hare  third  show  joy  hare  radiates  adjacent  hare  full  single  print  maximum  possible  total  joy  hare  inna  get  feeding
1139/C __label__math  __label__dfs  __label__graphs  __label__trees  given  tree  connected  undirected  graph  without  cycle  vertex  edge  tree  colored  either  black  red  given  consider  sequence  vertex  let  call  sequence  good  satisfies  following  criterion  walk  path  possibly  visiting  edge  vertex  multiple  time  tree  starting  ending  start  using  shortest  path  similar  way  travel  shortest  path  walked  least  black  edge  process  sequence  good  consider  tree  picture  following  sequence  good  following  sequence  good  sequence  vertex  count  many  good  since  quite  large  print  modulo  contains  size  tree  length  vertex  sequence  next  contains  denote  endpoint  corresponding  edge  color  edge  denotes  red  edge  denotes  black  edge  print  good  sequence  modulo
712/A __label__math  __label__implementation  written  row  value  defined  crow  performing  following  procedure  crow  set  initially  crow  add  subtracts  add  thus  memory  give  value  want  find  initial  written  row  input  contains  single  written  row  next  contains  value  print  corresponding  sequence  guaranteed  answer  unique  fit  bit  type
529/B __label__greedy  __label__sortings  __label__brute  force  many  year  passed  friend  met  party  technology  leaped  forward  since  last  meeting  camera  timer  appeared  obligatory  friend  stand  camera  thus  absent  photo  simply  speaking  process  photographing  described  follows  friend  occupies  rectangle  pixel  photo  standing  state  occupies  pixel  wide  pixel  high  rectangle  person  lie  photo  occupy  pixel  wide  pixel  high  rectangle  total  photo  size  w  total  width  people  rectangle  maximum  height  friend  want  determine  minimum  area  group  photo  obtain  lie  ground  would  strange  gentleman  lie  ground  together  help  achieve  goal  contains  friend  next  representing  size  rectangle  corresponding  friend  print  single  equal  minimum  possible  area  photo  containing  friend  lie  ground
938/E __label__math  given  array  length  define  following  way  initially  every  set  set  calculate  sum  permutation  array  modulo  note  element  considered  different  index  differ  every  array  exactly  permutation  contains  size  array  second  contains  print  sum  permutation  array  modulo
250/E __label__brute  force  joe  ha  hurt  internet  storming  around  house  destroying  everything  path  joe  house  ha  floor  floor  segment  cell  cell  either  contains  nothing  empty  cell  ha  brick  concrete  wall  always  something  believed  floor  surrounded  concrete  wall  left  right  joe  floor  cell  counting  left  right  moment  time  joe  ha  direction  gaze  right  left  always  direction  initially  joe  look  right  joe  move  particular  algorithm  every  second  make  following  action  cell  directly  joe  empty  joe  fall  move  cell  gaze  direction  preserved  otherwise  consider  next  cell  current  direction  gaze  cell  empty  joe  move  gaze  direction  preserved  cell  ha  brick  joe  break  forehead  cell  becomes  empty  change  direction  gaze  opposite  cell  ha  concrete  wall  joe  change  direction  gaze  opposite  concrete  withstand  forehead  hit  joe  calm  soon  reach  cell  floor  figure  show  example  joe  movement  around  house  determine  many  second  joe  need  calm  contains  next  description  joe  house  contains  description  floor  house  consists  character  mean  empty  cell  mean  brick  mean  concrete  wall  guaranteed  cell  floor  empty  print  single  second  joe  need  reach  floor  else  print  word  never  without  quote  never  happen
895/C __label__math  __label__dp  petya  wa  late  lesson  teacher  gave  additional  task  array  petya  find  different  way  select  non  empty  subset  element  way  product  equal  square  way  considered  different  set  index  element  chosen  way  different  since  answer  large  find  answer  modulo  contains  element  array  second  contains  element  array  print  different  way  choose  element  product  square  certain  modulo
364/B __label__dp  __label__greedy  john  doe  ha  recently  found  free  market  city  place  exchange  possession  thing  free  john  know  city  ha  item  total  item  unique  bring  item  market  exchange  note  item  kind  mean  exchange  set  set  always  exchange  set  set  unless  item  occurs  occurs  item  john  know  value  john  sense  justice  let  exchange  set  item  set  item  total  price  item  set  day  john  exchange  set  item  something  else  initially  ha  item  john  want  get  set  item  maximum  total  price  find  cost  set  minimum  day  john  get  contains  space  separated  item  market  john  sense  justice  value  correspondingly  second  contains  space  separated  print  space  separated  maximum  possible  price  set  item  john  get  minimum  day  needed  get  set
1100/C __label__math  __label__binary  search  __label__geometry  experienced  internet  user  mean  spends  lot  time  social  medium  found  following  image  net  asked  compare  size  inner  circle  turned  circle  equal  wa  surprised  fact  decided  create  similar  picture  managed  calculate  outer  circle  radius  inner  circle  think  using  information  exactly  determine  radius  outer  circle  inner  circle  touch  outer  externally  pair  neighboring  outer  circle  touch  tried  hard  guess  required  radius  manage  help  find  required  radius  building  required  picture  input  file  contains  outer  circle  radius  inner  circle  respectively  output  single  radius  outer  circle  required  building  required  picture
794/F __label__data  structures  bankopolis  city  already  know  finally  got  new  bank  opened  unfortunately  security  system  working  fine  meanwhile  hacker  leha  arrived  bankopolis  decided  test  system  bank  ha  cell  client  money  sequence  describes  amount  money  client  ha  leha  want  make  request  database  bank  finding  total  amount  money  subsegments  sequence  changing  value  sequence  subsegments  using  bug  system  leha  request  type  query  database  denoting  leha  change  digit  digit  element  sequence  l  hold  example  change  digit  get  worth  noting  leha  order  stay  shadow  never  change  digit  database  denoting  leha  asks  calculate  print  sum  element  sequence  l  hold  leha  white  hat  hacker  want  test  vulnerability  real  database  write  similar  database  leha  test  input  contains  denoting  amount  cell  bank  total  amount  query  respectively  following  contains  denoting  amount  money  cell  initially  leading  following  ha  format  denoting  leha  asks  change  digit  digit  element  sequence  l  hold  denoting  calculate  print  sum  element  l  hold  second  type  query  print  single  denoting  required  sum
1032/F __label__dp  __label__trees  vasya  ha  got  tree  consisting  vertex  want  delete  possibly  edge  tree  maximum  matching  resulting  graph  unique  asks  calculate  way  choose  set  edge  remove  matching  graph  subset  edge  vertex  incident  edge  subset  maximum  matching  matching  edge  subset  maximum  possible  matchings  graph  since  answer  large  output  modulo  contains  vertex  tree  next  contains  denoting  edge  vertex  vertex  guaranteed  edge  form  tree  print  way  delete  possibly  empty  subset  edge  maximum  matching  resulting  graph  unique  print  answer  modulo
869/B __label__math  even  world  full  counterfeit  still  regard  wonderful  pile  herb  incense  arise  flame  ash  predecessor  known  many  phoenix  doe  like  phoenix  ha  rather  long  lifespan  reincarnates  every  year  denotes  factorial  specifically  koyomi  care  much  get  another  mess  oddity  interested  time  phoenix  reincarnate  timespan  year  note  b  value  always  answer  quite  large  would  enough  koyomi  know  last  digit  answer  decimal  representation  provide  koyomi  knowledge  input  contains  space  separated  output  containing  single  decimal  digit  last  digit  value  interest  koyomi
466/C __label__dp  __label__data  structures  __label__brute  force  __label__binary  search  got  array  consisting  count  way  split  element  array  contiguous  part  sum  element  part  formally  need  find  pair  index  contains  showing  many  array  second  contains  element  array  print  single  way  split  array  part  sum
1193/C __label__constructive  algorithms  __label__geometry  given  piece  paper  shape  simple  polygon  task  turn  simple  polygon  ha  area  use  tool  scissors  tape  scissors  used  cut  polygon  smaller  polygonal  piece  tape  used  combine  smaller  piece  larger  polygon  use  tool  multiple  time  order  polygon  given  input  coordinate  allowed  produce  shape  non  coordinate  output  formal  definition  task  follows  shape  sequence  point  plane  closed  polyline  never  touch  intersects  therefore  form  boundary  simple  polygon  polyline  go  around  boundary  polygon  counter  clockwise  direction  polygon  whose  boundary  shape  denoted  shape  called  equivalent  translated  rotated  become  identical  note  mirroring  shape  allowed  note  order  point  matter  shape  necessarily  equivalent  shape  figure  left  shape  equivalent  shape  equivalent  point  given  different  order  regardless  order  point  fourth  shape  equivalent  previous  either  flipping  shape  allowed  input  output  shape  point  represented  single  contains  space  separated  followed  coordinate  point  shape  identification  id  given  shape  ha  shape  produce  solution  given  id  order  produced  shape  form  subdivision  shape  union  exactly  area  intersection  scissors  operation  destroys  existing  shape  produce  shape  form  subdivision  figure  shape  square  subdivided  shape  triangle  valid  way  describe  tape  operation  destroys  existing  shape  produce  new  shape  order  perform  operation  must  specify  shape  final  shape  shape  must  satisfy  following  shape  equivalent  shape  shape  form  subdivision  shape  informally  choose  shape  show  move  existing  correct  location  note  shape  get  new  shape  contains  source  shape  second  contains  target  shape  shape  ha  point  inclusive  shape  given  format  specified  coordinate  input  inclusive  shape  point  form  angle  smaller  degree  includes  non  consecutive  point  implies  point  collinear  polygon  area  whenever  use  scissors  operation  output  block  form
773/F __label__math  __label__dp  __label__number  theory  test  data  generation  easy  task  often  generating  big  random  test  case  enough  ensure  thorough  testing  solution  correctness  example  consider  problem  old  codeforces  round  input  format  look  roughly  follows  contains  single  axn  size  set  second  contains  distinct  iaxa  element  set  increasing  order  pay  attention  problem  solution  look  fairly  easy  generate  good  test  case  problem  let  axn  take  random  distinct  maxa  sort  soon  understand  easy  actual  problem  solution  let  greatest  common  divisor  let  correct  solution  output  alice  odd  bob  even  consider  wrong  solution  problem  differ  correct  formula  calculating  wrong  solution  calculates  without  subtracting  second  wrong  solution  calculates  without  dividing  test  case  interesting  make  wrong  solution  output  incorrect  answer  given  maxn  maxa  find  interesting  test  case  satisfying  constraint  output  modulo  contains  maxn  maxa  axn  maxnaxa  output  single  test  case  satisfy  constraint  make  wrong  solution  output  incorrect  answer  modulo
859/D __label__dp  __label__trees  annual  college  sport  ball  tournament  approaching  trademark  reason  refer  third  month  insanity  total  team  participating  tournament  numbered  tournament  last  round  round  eliminating  half  team  round  consists  game  numbered  starting  game  team  play  team  loser  eliminated  winner  advance  next  round  tie  subsequent  round  ha  half  many  game  previous  round  game  winner  previous  round  game  play  winner  previous  round  game  every  year  office  ha  pool  see  create  best  bracket  bracket  set  winner  prediction  every  game  game  round  predict  either  team  win  game  later  round  winner  predict  must  predicted  winner  previous  round  note  bracket  fully  constructed  game  actually  played  correct  prediction  round  worth  point  correct  prediction  subsequent  round  worth  twice  many  point  previous  correct  prediction  final  game  worth  point  every  pair  team  league  estimated  probability  team  winning  play  want  construct  bracket  maximum  possible  expected  score  begin  containing  follow  column  row  indicates  percentage  chance  team  defeat  team  unless  case  value  guaranteed  column  row  plus  column  row  add  exactly  print  maximum  possible  expected  score  possible  bracket  answer  must  correct  absolute  relative  error
379/E __label__sortings  __label__geometry  due  atheistic  soviet  past  christmas  officially  celebrated  russia  twentieth  century  result  russian  tradition  christmas  new  year  mixed  event  celebrated  new  year  including  tree  santa  like  grandfather  frost  present  huge  family  reunion  dinner  party  country  bying  tree  new  year  installing  house  tradition  usually  whole  family  decorates  tree  new  year  eve  hope  codeforces  big  loving  family  problem  going  decorate  tree  well  decoration  consists  piece  piece  piece  colored  paper  border  closed  polyline  special  shape  piece  shown  picture  piece  polyline  go  point  width  piece  equal  figure  left  show  decoration  figure  right  show  individual  piece  consists  piece  shown  red  figure  outer  piece  see  completely  piece  shown  yellow  follows  see  completely  partially  closed  piece  programmer  quite  curious  guy  moment  hung  decoration  new  year  tree  started  wonder  area  piece  people  see  contains  following  contains  description  polyline  contains  ontegers  mean  polyline  piece  go  point  print  real  polyline  area  visible  part
275/A __label__implementation  lenny  playing  game  grid  light  beginning  game  light  switched  pressing  light  toggle  side  adjacent  light  goal  game  switch  light  consider  toggling  follows  light  wa  switched  switched  wa  switched  switched  lenny  ha  spent  time  playing  grid  ha  pressed  light  certain  time  given  time  light  pressed  print  current  state  light  input  consists  row  row  contains  inclusive  row  time  light  row  grid  pressed  print  containing  character  character  corresponding  light  switched  otherwise
468/E __label__math  __label__dp  little  ha  solved  complete  problem  polynomial  time  recently  give  task  special  n  matrix  calculate  permanent  modulo  special  property  matrix  almost  element  equal  element  specified  value  find  definition  permanent  link  http  wikipedia  org  wiki  permanent  contains  space  separated  next  description  matrix  contains  space  separated  denote  axi  element  matrix  except  given  element  equal  guaranteed  position  distinct  print  permanent  matrix  modulo
1062/A __label__implementation  __label__greedy  jatc  friend  giraffe  currently  room  solving  problem  giraffe  ha  written  board  array  went  bathroom  jatc  decided  prank  friend  erasing  consecutive  element  array  since  want  prank  far  erase  way  giraffe  still  restore  array  using  information  remaining  element  giraffe  ha  created  array  aware  increasing  array  element  range  jatc  wonder  greatest  element  erase  input  contains  single  element  array  second  input  contains  array  written  giraffe  print  single  maximum  consecutive  element  array  jatc  erase
1256/F __label__sortings  __label__constructive  algorithms  __label__strings  given  string  length  consisting  lowercase  latin  letter  move  choose  length  len  perform  following  operation  choose  contiguous  substring  string  length  len  reverse  time  choose  contiguous  substring  string  length  len  reverse  well  note  move  reverse  exactly  substring  string  exactly  substring  string  note  border  substring  reverse  different  restriction  reverse  substring  equal  length  example  len  reverse  task  say  possible  make  string  equal  possibly  empty  sequence  move  answer  independent  test  case  input  contains  test  case  test  case  follow  test  case  contains  length  second  test  case  contains  string  consisting  lowercase  latin  letter  third  test  case  contains  string  consisting  lowercase  latin  letter  guaranteed  sum  test  case  doe  exceed  test  case  print  answer  yes  without  quote  possible  make  string  equal  possibly  empty  sequence  move  otherwise
709/B __label__implementation  __label__greedy  __label__sortings  vasya  take  part  orienteering  competition  checkpoint  located  along  coordinate  vasya  start  point  coordinate  goal  visit  least  checkpoint  order  finish  competition  participant  allowed  visit  checkpoint  arbitrary  order  vasya  want  pick  checkpoint  order  visiting  total  distance  travelled  minimized  asks  calculate  minimum  possible  value  input  contains  checkpoint  vasya  starting  position  respectively  second  contains  coordinate  checkpoint  print  minimum  distance  vasya  ha  travel  order  visit  least  checkpoint
658/A __label__implementation  limak  radewoosh  going  compete  upcoming  algorithmic  contest  equally  skilled  solve  problem  order  problem  problem  ha  initial  score  take  exactly  minute  solve  problem  sorted  difficulty  guaranteed  constant  given  representing  speed  loosing  point  submitting  problem  time  minute  start  contest  give  max  point  limak  going  solve  problem  order  sorted  increasingly  radewoosh  going  solve  order  sorted  decreasingly  task  predict  outcome  print  name  winner  person  get  point  end  word  tie  case  tie  assume  duration  competition  greater  equal  sum  mean  limak  radewoosh  accept  problem  contains  problem  constant  representing  speed  loosing  point  second  contains  initial  score  third  contains  denotes  minute  need  solve  problem  print  limak  without  quote  limak  get  point  total  print  radewoosh  without  quote  radewoosh  get  point  total  print  tie  without  quote  limak  radewoosh  get  total  point
932/C __label__constructive  algorithms  __label__brute  force  permutation  function  defined  follows  let  minimum  positive  show  always  exists  given  find  permutation  equal  either  contains  permutation  exists  output  otherwise  output  permutation
1220/B __label__math  __label__number  theory  sasha  grew  went  grade  celebrate  event  mother  bought  multiplication  table  row  column  sequence  positive  course  girl  decided  take  school  wa  lunch  hooligan  grisha  erased  main  diagonal  threw  away  array  help  sasha  restore  array  contains  single  size  table  next  contains  table  ha  main  diagonal  single  print  original  array  guaranteed  answer  exists  multiple  answer  print
223/E __label__graphs  __label__geometry  graph  called  planar  drawn  way  edge  intersect  vertex  articulation  point  vertex  undirected  graph  removed  increase  connected  component  graph  bridge  edge  undirected  graph  removed  increase  connected  component  graph  got  connected  undirected  planar  graph  consisting  vertex  numbered  drawn  plane  graph  ha  bridge  articulation  point  loop  multiple  edge  given  query  query  cycle  graph  query  response  graph  vertex  draw  graph  cycle  plane  located  either  inside  cycle  write  program  given  graph  query  answer  query  contains  space  separated  vertex  edge  graph  next  edge  graph  contains  space  separated  vertex  connecting  edge  next  position  planar  graph  vertex  plane  contains  pair  space  separated  coordinate  vertex  graph  plane  next  contains  query  follow  describe  query  contains  sequence  space  separated  aki  j  cycle  length  query  vertex  form  cycle  vertex  cycle  given  clockwise  counterclockwise  order  given  cycle  simple  graph  vertex  total  length  cycle  query  doe  exceed  guaranteed  given  graph  contains  bridge  articulation  point  loop  multiple  edge  guaranteed  edge  segment  common  point  graph  vertex  query  print  single  vertex  inside  cycle  print  answer  order  query  follow  input  separate  space
572/B __label__implementation  __label__greedy  __label__data  structures  __label__sortings  task  need  process  set  stock  exchange  order  use  create  order  book  order  instruction  participant  buy  sell  stock  stock  exchange  order  ha  price  direction  buy  sell  mean  participant  ready  buy  sell  stock  price  stock  value  known  volume  order  order  price  direction  merged  aggregated  order  price  direction  volume  order  sum  volume  initial  order  order  book  list  aggregated  order  part  contains  sell  order  sorted  price  descending  order  second  contains  buy  order  sorted  price  descending  order  order  book  depth  contains  best  aggregated  order  direction  buy  order  better  ha  higher  price  sell  order  better  ha  lower  price  le  aggregated  order  direction  final  order  book  given  stock  exhange  order  task  print  order  book  depth  order  input  start  positive  order  book  depth  next  contains  letter  either  direction  price  volume  respectively  letter  mean  buy  mean  sell  price  sell  order  higher  price  buy  order  print  aggregated  order  order  book  depth  output  format  order  input
1252/G __label__data  structures  randall  software  engineer  company  employee  every  year  company  evaluates  employee  end  every  year  company  replaces  several  worst  performing  employee  replaces  new  employee  company  keep  employee  person  ha  constant  performance  represented  higher  mean  better  performance  people  performance  performance  initial  employee  represented  array  performance  employee  randall  employee  performance  consider  year  end  year  company  replaces  worst  performing  employee  replaces  new  employee  performance  new  employee  represented  array  performance  new  employee  consider  scenario  scenario  change  value  scenario  randall  wondering  whether  still  company  year  note  change  scenario  kept  subsequent  scenario  begin  containing  q  representing  employee  year  considered  scenario  respectively  next  contains  representing  performance  initial  employee  next  contains  several  representing  employee  replaced  performance  new  employee  respectively  guaranteed  sum  doe  exceed  next  contains  representing  scenario  guaranteed  combined  together  distinct  scenario  order  input  output  randall  company  year  randall  still  company  year
911/C __label__constructive  algorithms  __label__brute  force  mishka  decorating  christmas  tree  ha  got  garland  put  tree  mishka  switch  garland  garland  switched  periodically  change  state  sometimes  lit  sometimes  formally  garland  switched  second  lit  second  ki  ki  mishka  want  switch  garland  way  second  switching  garland  would  least  lit  garland  formally  mishka  want  choose  necessarily  distinct  switch  garland  second  second  second  third  second  respectively  second  starting  max  least  garland  lit  help  mishka  telling  possible  contains  time  interval  garland  mishka  choose  moment  time  switch  garland  way  second  switching  garland  least  garland  lit  print  yes
61/D __label__greedy  __label__dfs  __label__graphs  __label__trees  valerian  wa  captured  shapur  victory  wa  great  shapur  decided  carve  scene  valerian  defeat  mountain  find  best  place  make  victory  eternal  decided  visit  city  persia  find  best  available  mountain  recent  war  wa  tired  want  traverse  lot  wanted  visit  city  least  smallest  possible  traverse  persian  city  connected  bidirectional  road  city  using  road  unique  path  city  city  numbered  shapur  currently  city  want  visit  city  minimum  possible  traverse  finish  travel  city  help  shapur  find  much  travel  contains  single  natural  amount  city  next  end  road  length  road  single  minimal  length  shapur  travel
677/B __label__math  __label__implementation  vanya  smash  potato  vertical  food  processor  moment  time  height  potato  processor  exceed  processor  smash  centimeter  potato  second  le  centimeter  remaining  second  processor  smash  remaining  potato  vanya  ha  piece  potato  height  piece  equal  put  food  processor  starting  piece  finishing  piece  formally  second  following  happens  least  piece  potato  remaining  vanya  put  processor  enough  space  next  piece  processor  smash  centimeter  potato  everything  inside  provided  information  parameter  food  processor  size  potato  row  compute  long  take  potato  become  smashed  input  contains  piece  potato  height  food  processor  amount  potato  smashed  second  respectively  second  contains  height  piece  print  single  second  required  smash  potato  following  process  described  problem  statement
590/B __label__math  __label__binary  search  __label__geometry  team  furry  rescue  ranger  wa  sitting  idle  hollow  tree  suddenly  received  signal  distress  moment  ready  dirigible  rescue  chipmunk  hit  road  assume  action  take  place  cartesian  plane  headquarters  rescuer  located  point  distress  signal  came  point  due  gadget  engineering  talent  rescuer  dirigible  instantly  change  current  velocity  direction  movement  moment  many  time  needed  limitation  speed  aircraft  relative  air  exceed  meter  per  second  course  gadget  true  rescuer  want  reach  destination  soon  possible  matter  complicated  fact  wind  blowing  air  affect  movement  dirigible  according  weather  forecast  wind  defined  vector  nearest  second  change  vector  give  direction  velocity  wind  formally  dirigible  located  point  velocity  relative  air  equal  wind  blowing  second  new  position  dirigible  gadget  busy  piloting  aircraft  asked  chip  calculate  long  take  reach  destination  fly  optimally  coped  task  easily  dale  convinced  chip  ha  given  random  value  aiming  lose  face  front  gadget  dale  ha  asked  find  right  answer  guaranteed  speed  wind  moment  time  strictly  le  maximum  possible  speed  airship  relative  air  input  contains  coordinate  rescuer  headquarters  point  signal  distress  came  respectively  second  contains  denoting  maximum  speed  chipmunk  dirigible  relative  air  moment  time  wind  change  according  weather  forecast  respectively  next  follow  per  pair  describing  wind  second  wind  blow  remaining  time  respectively  guaranteed  print  single  real  value  minimum  time  rescuer  need  get  point  answer  considered  correct  absolute  relative  error  doe  exceed
390/D __label__constructive  algorithms  inna  love  sweet  much  decided  play  game  called  sweet  matrix  inna  see  n  matrix  candy  index  matrix  row  matrix  column  represent  cell  row  column  cell  matrix  adjacent  path  sequence  matrix  cell  pair  neighbouring  cell  sequence  adjacent  call  cell  sequence  path  length  cell  matrix  candy  initiallly  cell  empty  inna  trying  place  candy  matrix  candy  inna  chooses  cell  contains  candy  chooses  path  start  cell  end  cell  candy  inna  move  candy  along  path  cell  cell  candy  stay  forever  moment  inna  choose  path  candy  loses  inna  place  candy  matrix  described  manner  penalty  equal  sum  length  path  ha  used  help  inna  minimize  penalty  game  input  contains  print  inna  minimum  penalty  game
575/A __label__math  __label__data  structures  fibonotci  sequence  recursive  sequence  defined  recurrence  relation  sequence  infinite  almost  cyclic  sequence  cycle  length  sequence  called  almost  cyclic  cycle  length  except  finite  value  following  example  almost  cyclic  sequence  cycle  length  notice  value  equality  doe  hold  given  value  sequence  find  contains  second  contains  single  third  contains  separated  space  represent  sequence  fourth  contains  single  value  sequence  following  contains  indicating  distinct  n  value  output  single  equal
746/C __label__math  __label__implementation  __label__constructive  algorithms  tram  berland  go  along  straight  point  point  back  passing  meter  per  second  direction  mean  tram  always  state  uniform  rectilinear  motion  instantly  turning  around  point  igor  point  reach  point  igor  pass  meter  per  second  task  determine  minimum  time  igor  need  get  point  point  known  tram  direction  go  moment  igor  come  point  igor  enter  tram  unlimited  time  moment  tram  position  coincide  obligatory  point  igor  enter  exit  tram  assume  boarding  unboarding  happens  instantly  igor  move  arbitrary  along  faster  meter  per  second  stand  point  time  contains  x  maximum  coordinate  point  tram  go  point  igor  point  come  second  contains  time  second  tram  pass  meter  time  second  igor  pass  meter  third  contains  either  position  tram  moment  igor  came  point  direction  tram  moment  tram  go  direction  point  point  tram  go  direction  point  point  print  minimum  time  second  igor  need  get  point  point
911/A __label__implementation  given  array  find  distance  closest  nearest  minimum  guaranteed  array  minimum  occurs  least  time  contains  positive  size  given  array  second  contains  element  array  guaranteed  array  minimum  occurs  least  time  print  distance  nearest  minimum  array
452/B __label__trees  __label__constructive  algorithms  __label__brute  force  __label__geometry  given  rectangular  grid  lattice  point  inclusive  choose  exactly  different  point  build  polyline  possibly  self  intersection  self  touching  polyline  long  possible  polyline  defined  point  consists  segment  p  length  sum  length  individual  segment  input  contains  guaranteed  grid  contains  least  different  point  print  per  separated  space  coordinate  point  order  represent  longest  possible  polyline
1245/B __label__dp  __label__greedy  __label__constructive  algorithms  let  positive  let  nonnegative  alice  bob  gon  na  play  rock  paper  scissors  time  alice  know  sequence  hand  bob  play  alice  ha  play  rock  time  paper  time  scissors  time  alice  win  beat  bob  least  rounded  nearest  hand  otherwise  alice  loses  note  rock  paper  scissors  rock  beat  scissors  paper  beat  rock  scissors  beat  paper  task  given  sequence  hand  bob  play  determine  whether  alice  win  find  possible  sequence  hand  alice  use  win  multiple  answer  print  contains  single  test  case  testcases  follow  consisting  contains  single  second  contains  guaranteed  third  contains  string  length  made  character  bob  play  rock  paper  scissors  testcase
1182/B __label__implementation  __label__dfs  __label__strings  given  picture  size  wh  determine  given  picture  ha  single  shape  shape  described  shape  ha  center  nonempty  cell  least  consecutive  non  empty  cell  direction  left  right  center  word  ray  direction  cell  empty  find  given  picture  ha  single  shape  contains  w  height  width  picture  next  contains  string  length  consisting  denotes  empty  space  denotes  non  empty  space  given  picture  satisfies  condition  print  yes  otherwise  print
1250/A __label__implementation  polycarp  recently  signed  new  social  network  berstagram  immediately  published  post  assigned  post  published  publishing  polycarp  news  feed  contained  post  highest  post  next  lowest  post  wrote  like  friend  like  coming  consecutively  till  given  sequence  post  received  like  news  feed  berstagram  work  following  manner  let  assume  like  wa  given  post  post  highest  change  position  highest  post  nothing  change  example  polycarp  news  feed  following  state  like  like  second  like  third  like  fourth  like  fifth  like  polycarp  want  know  highest  minimum  lowest  maximum  position  post  polycarp  considers  moment  time  including  moment  like  contains  post  like  second  contains  post  received  like  print  pair  highest  minimum  lowest  maximum  position  post  take  account  position  moment  time  like  like  like  position  numbered  highest  lowest
596/C __label__greedy  __label__sortings  wilbur  playing  set  point  coordinate  plane  point  non  negative  coordinate  moreover  point  belongs  set  point  belong  set  wilbur  want  point  set  ha  assign  distinct  order  make  numbering  aesthetically  pleasing  wilbur  imposes  condition  point  get  set  must  assigned  le  example  set  point  aesthetically  pleasing  numbering  another  wilbur  friend  come  along  challenge  wilbur  point  defines  special  value  give  wilbur  asks  find  aesthetically  pleasing  numbering  point  set  point  get  ha  special  value  equal  wilbur  asks  help  challenge  input  consists  single  point  set  wilbur  playing  next  follow  point  description  contains  give  point  wilbur  set  guaranteed  point  distinct  guaranteed  point  present  input  point  present  input  last  input  contains  required  special  value  point  get  aesthetically  pleasing  numbering  exists  aesthetically  pleasant  numbering  point  set  print  yes  output  otherwise  print
676/D __label__implementation  __label__graphs  theseus  ha  arrived  crete  fight  minotaur  found  labyrinth  ha  form  rectangular  field  size  n  consists  block  size  block  labyrinth  ha  button  rotates  block  degree  clockwise  block  rotates  around  center  change  position  labyrinth  block  ha  door  possibly  none  minute  theseus  either  push  button  order  rotate  block  degree  clockwise  pas  neighbouring  block  theseus  block  neighbouring  block  block  ha  door  lead  block  block  ha  door  lead  block  theseus  found  entrance  labyrinth  located  block  block  row  column  theseus  know  minotaur  hiding  block  want  know  minimum  minute  required  get  theseus  hero  programmer  asks  help  input  contains  row  column  labyrinth  respectively  following  contains  character  describing  block  labyrinth  possible  character  mean  block  ha  door  door  neighbouring  block  mean  block  ha  door  left  right  neighbour  mean  block  ha  door  top  bottom  neighbour  mean  block  ha  door  top  neighbour  mean  block  ha  door  right  neighbour  mean  block  ha  door  left  neighbour  mean  block  ha  door  bottom  neighbour  mean  block  ha  door  neighbour  except  left  mean  block  ha  door  neighbour  except  right  mean  block  ha  door  neighbour  except  top  mean  block  ha  door  neighbour  except  bottom  mean  block  wall  ha  door  left  right  top  bottom  defined  representing  labyrinth  table  row  numbered  top  bottom  column  numbered  left  right  next  contains  coordinate  block  theseus  initially  located  last  contains  coordinate  block  minotaur  hide  guaranteed  block  theseus  start  block  minotaur  hiding  least  door  theseus  minotaur  initially  located  block  theseus  able  get  minotaur  print  output  otherwise  print  minimum  minute  required  get  block  minotaur  hiding
1238/A __label__math  __label__number  theory  given  guaranteed  choose  prime  subtract  time  possible  make  equal  recall  prime  positive  ha  exactly  positive  divisor  sequence  prime  start  program  solve  independent  test  case  contains  test  case  follow  describing  test  case  contains  test  case  print  yes  possible  choose  prime  subtract  time  becomes  equal  otherwise  print
489/E __label__dp  __label__binary  search  traveler  planning  water  hike  along  river  noted  suitable  rest  point  night  wrote  distance  starting  point  location  characterized  picturesqueness  rest  point  distance  start  equal  picturesqueness  equal  traveler  move  river  direction  assume  start  point  coordinate  axis  rest  point  point  coordinate  every  day  traveler  want  cover  distance  practice  turn  always  possible  need  end  day  resting  point  addition  traveler  choosing  desire  cover  distance  every  day  visit  picturesque  place  let  assume  traveler  cover  distance  day  feel  frustration  total  frustration  hike  calculated  total  frustration  day  help  plan  route  minimize  relative  total  frustration  total  frustration  divided  total  picturesqueness  rest  point  used  traveler  path  must  end  farthest  rest  point  input  contains  rest  point  optimal  length  day  path  follow  describes  rest  point  pair  rest  point  given  order  strictly  increasing  print  traveler  path  sequence  resting  point  used  order  used  point  order  increasing  last  printed  must  equal
798/E __label__data  structures  __label__sortings  __label__graphs  __label__constructive  algorithms  mike  ha  discovered  new  way  encode  permutation  ha  permutation  encode  following  way  denote  sequence  length  represent  code  permutation  sequentially  choose  smallest  unmarked  assign  word  performs  mark  assign  performs  mike  forgot  original  permutation  remembers  code  task  simple  find  permutation  code  code  mike  original  permutation  assume  always  least  valid  permutation  contains  single  length  permutation  second  contains  space  separated  code  mike  permutation  assume  positive  value  different  print  permutation  ha  code  given  note  permutation  distinct
1062/C __label__math  __label__implementation  __label__greedy  jatc  love  banh  vietnamese  food  affection  banh  much  always  ha  breakfast  morning  usual  buy  banh  decides  enjoy  special  way  split  banh  part  place  row  part  defines  deliciousness  part  jatc  going  eat  part  step  chooses  arbitrary  remaining  part  eats  suppose  part  part  enjoyment  banh  increase  deliciousness  remaining  part  increase  initial  enjoyment  jatc  equal  example  suppose  deliciousness  part  jatc  eats  second  part  enjoyment  become  deliciousness  remaining  part  become  next  eats  part  enjoyment  become  remaining  part  become  eating  last  part  jatc  enjoyment  become  jatc  want  eat  part  save  later  give  query  consisting  query  let  know  maximum  enjoyment  get  eats  part  index  range  order  query  independent  since  answer  query  could  large  print  modulo  contains  q  second  contains  string  character  character  either  character  defines  deliciousness  part  following  contains  segment  corresponding  query  print  contains  single  answer  query  modulo
542/F __label__dp  __label__greedy  polycarp  making  quest  friend  ha  already  made  task  task  boy  evaluated  interesting  time  minute  needed  complete  task  interesting  feature  quest  participant  get  task  best  suited  depending  preference  task  chosen  based  interactive  quiz  consists  question  player  answer  question  yes  depending  answer  question  participant  either  move  another  question  go  task  quest  word  quest  binary  tree  node  question  leaf  task  know  answering  question  asked  getting  task  take  exactly  minute  quest  player  polycarp  know  friend  busy  people  participate  quest  minute  polycarp  want  choose  task  made  invent  corresponding  set  question  use  form  interactive  quiz  binary  tree  matter  player  answer  quiz  question  spends  minute  completing  whole  quest  answering  question  completing  task  specifically  quest  question  straight  task  task  used  people  give  different  answer  question  get  different  task  polycarp  want  total  interest  value  task  involved  quest  large  possible  help  determine  maximum  possible  total  interest  value  task  considering  quest  completed  minute  variant  answering  question  contains  task  made  polycarp  maximum  time  quest  player  fit  next  time  minute  needed  complete  task  interest  value  print  single  maximum  possible  total  interest  value  task  quest
958/B2 __label__greedy  __label__data  structures  __label__dfs  __label__graphs  __label__trees  resistance  trying  take  control  many  planet  particular  solar  system  possible  princess  heidi  charge  fleet  must  send  ship  planet  order  maximize  controlled  planet  galaxy  contains  planet  connected  bidirectional  hyperspace  tunnel  way  unique  path  every  pair  planet  planet  controlled  resistance  resistance  ship  orbit  planet  lie  shortest  path  planet  resistance  ship  orbit  heidi  ha  made  mind  many  ship  use  therefore  asking  compute  every  maximum  planet  controlled  fleet  consisting  ship  input  contains  planet  galaxy  next  describe  hyperspace  tunnel  planet  contains  space  separated  indicating  bidirectional  hyperspace  tunnel  planet  guaranteed  every  planet  connected  path  tunnel  tunnel  connects  different  pair  planet  single  print  space  separated  correspond  maximum  planet  controlled  resistance  using  fleet  ship
912/B __label__constructive  algorithms  __label__number  theory  since  grisha  behaved  well  last  year  new  year  eve  wa  visited  ded  moroz  brought  enormous  bag  gift  bag  contains  sweet  candy  good  bakery  labeled  corresponding  tastiness  candy  tastiness  choice  candy  ha  direct  effect  grisha  happiness  assume  take  tastiest  holiday  magic  turn  thing  upside  xor  sum  tastiness  matter  ordinary  sum  xor  sum  sequence  defined  bitwise  xor  element  denotes  bitwise  xor  operation  bitwise  xor  found  ded  moroz  warned  grisha  ha  house  visit  grisha  take  candy  bag  help  grisha  determine  largest  xor  sum  largest  xor  sum  mean  maximum  happiness  obtain  sole  string  contains  output  largest  possible  xor  sum
616/D __label__data  structures  __label__binary  search  array  given  let  call  sequence  consecutive  element  segment  let  call  segment  good  contains  different  value  find  longest  good  segment  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  scanf  printf  instead  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  element  parameter  second  contains  element  array  print  index  left  index  right  end  good  longest  segment  several  longest  segment  print  element  numbered  left  right
765/A __label__math  __label__implementation  literally  dozen  snooker  competition  held  year  team  jinotega  try  attend  reason  prefer  name  snookah  competition  take  place  somewhere  far  hometown  ivan  artsem  konstantin  take  flight  contest  back  jinotega  best  friend  team  base  found  list  itinerary  receipt  information  departure  arrival  airport  wonder  jinotega  home  competition  far  away  know  list  contains  jinotega  flight  year  arbitrary  order  jinotega  ha  flown  hometown  snooker  contest  back  competition  jinotega  fly  back  home  though  attend  competition  place  several  time  finally  beginning  year  jinotega  wa  home  please  help  determine  jinotega  location  input  single  jinotega  flight  second  string  capital  latin  letter  name  jinotega  home  airport  next  flight  information  flight  per  form  xxx  yyy  xxx  name  departure  airport  yyy  name  arrival  airport  exactly  airport  jinotega  home  airport  guaranteed  flight  information  consistent  knowledge  jinotega  friend  described  main  part  statement  jinotega  home  print  home  without  quote  otherwise  print  contest
1031/E __label__constructive  algorithms  given  array  length  consists  perform  following  operation  multiple  time  operation  consists  step  choose  form  arithmetic  progression  flip  value  change  change  determine  possible  make  element  array  equal  yes  print  operation  lead  state  solution  operation  denotes  rounded  show  possible  make  element  equal  operation  whenever  possible  contains  single  length  array  second  contains  element  array  print  yes  without  quote  answer  exists  otherwise  print  without  quote  print  letter  case  upper  lower
487/A __label__implementation  __label__brute  force  __label__binary  search  monster  attacking  cyberland  master  yang  braver  going  beat  monster  yang  monster  attribute  hitpoints  offensive  power  atk  defensive  power  def  battle  every  second  monster  decrease  max  tky  efm  yang  decrease  max  tkm  efy  index  denotes  master  yang  index  denotes  monster  decrease  happen  simultaneously  monster  hp  time  master  yang  master  yang  win  master  yang  buy  attribute  magic  shop  cyberland  bitcoins  per  bitcoins  per  atk  bitcoins  per  def  master  yang  want  know  minimum  bitcoins  spend  order  win  contains  hpy  tky  efy  separated  space  denoting  initial  atk  def  master  yang  second  contains  hpm  tkm  efm  separated  space  denoting  atk  def  monster  third  contains  separated  space  denoting  price  atk  def  input  lie  inclusively  output  denoting  minimum  bitcoins  master  yang  spend  order  win
1136/B __label__math  __label__constructive  algorithms  finished  homework  nastya  decided  play  computer  game  passing  level  nastya  eventually  faced  problem  mission  leave  room  lot  monster  live  quickly  possible  manhole  room  situated  unfortunately  manhole  closed  stone  every  manhole  exactly  coin  every  manhole  win  game  nastya  pick  coin  initially  nastya  stand  near  manhole  left  thinking  turn  nastya  following  least  stone  manhole  nastya  stand  near  throw  exactly  stone  onto  manhole  yes  nastya  strong  neighboring  manhole  stone  manhole  nastya  stay  near  open  pick  coin  must  close  manhole  immediately  require  additional  move  figure  show  intermediate  state  game  current  position  nastya  throw  stone  manhole  move  left  right  neighboring  manhole  near  leftmost  manhole  could  open  since  stone  nastya  leave  room  pick  coin  monster  everywhere  need  compute  minimum  move  nastya  ha  make  pick  coin  note  time  nastya  open  manhole  stone  onto  contains  separated  space  manhole  index  manhole  left  near  nastya  stay  initially  initially  exactly  stone  near  manhole  print  single  minimum  move  lead  nastya  pick  coin
635/A __label__implementation  __label__brute  force  paul  orchestra  string  section  arranged  r  rectangular  grid  filled  violinist  exception  violist  paul  really  like  viola  would  like  take  picture  including  least  paul  take  picture  axis  parallel  rectangle  orchestra  count  possible  picture  paul  take  picture  considered  different  coordinate  corresponding  rectangle  different  input  contains  space  separated  row  column  string  section  total  viola  minimum  viola  paul  would  like  photograph  respectively  next  position  viola  guaranteed  location  appears  input  print  single  photograph  paul  take  include  least  viola
771/C __label__dp  __label__dfs  __label__trees  tree  undirected  connected  graph  without  cycle  distance  vertex  edge  simple  path  limak  little  polar  bear  life  tree  consists  vertex  numbered  limak  recently  learned  jump  jump  vertex  vertex  distance  pair  vertex  define  minimum  jump  limak  need  get  task  find  sum  pair  vertex  input  contains  vertex  tree  maximum  allowed  jump  distance  respectively  next  describe  edge  tree  contains  index  vertex  connected  edge  guaranteed  given  edge  form  tree  print  denoting  sum  pair  vertex
1249/E __label__dp  planning  buy  apartment  floor  building  floor  numbered  bottom  top  floor  want  know  minimum  total  time  reach  bottom  floor  let  time  required  floor  well  using  stair  time  required  floor  well  using  elevator  value  time  overhead  elevator  usage  need  wait  elevator  door  slow  move  floor  staying  floor  different  way  using  stair  sum  corresponding  value  formally  take  min  max  time  unit  using  elevator  sum  corresponding  value  formally  take  min  max  time  unit  perform  many  move  want  possibly  task  determine  minimum  total  time  take  reach  floor  bottom  floor  input  contains  floor  building  time  overhead  elevator  ride  second  input  contains  time  required  floor  well  using  stair  third  input  contains  time  required  floor  well  using  elevator  print  minimum  total  time  reach  floor  floor  perform  many  move  want
1189/B __label__math  __label__greedy  __label__sortings  given  possible  arrange  circle  way  every  strictly  le  sum  neighbor  example  array  arrangement  left  valid  arrangement  right  contains  single  second  contains  given  necessarily  distinct  duplicate  allowed  solution  output
333/C __label__constructive  algorithms  __label__brute  force  gerald  ha  friend  pollard  pollard  interested  lucky  ticket  ticket  sequence  digit  thought  ticket  lucky  digit  add  arithmetic  sign  bracket  result  obtained  arithmetic  expression  wa  quickly  analyzed  ticket  moved  general  question  explores  lucky  ticket  pollard  sais  ticket  lucky  add  arithmetic  operation  sign  digit  left  right  bracket  obtain  correct  arithmetic  expression  whose  value  would  equal  example  ticket  lucky  pollard  wa  carried  away  lucky  ticket  signed  seminar  lucky  ticket  far  gerald  know  pollard  attend  daily  famous  institute  commute  tram  day  tram  ticket  digit  gerald  want  make  surprise  pollard  day  pollard  receive  tram  lucky  ticket  conductor  ha  already  agreed  give  pollard  certain  ticket  day  want  gerald  tell  kind  ticket  give  regard  help  gerald  pick  exactly  distinct  lucky  ticket  single  contains  print  must  exactly  digit  winning  ticket  ticket  begin  ticket  must  distinct  distinct  lucky  ticket  print  guaranteed  least  distinct  lucky  ticket  exist  ticket  printed  order
1081/C __label__math  __label__dp  free  time  chouti  like  housework  ha  got  new  task  paint  brick  yard  brick  lined  row  ground  chouti  ha  got  paint  bucket  different  color  hand  painted  brick  color  finished  painting  brick  chouti  wa  satisfied  stood  back  decided  find  something  fun  brick  counting  found  brick  color  different  color  brick  left  brick  counted  sure  usual  need  help  counting  many  way  could  paint  brick  way  painting  brick  different  least  brick  painted  different  color  way  answer  might  quite  big  need  output  way  modulo  contains  brick  color  brick  color  differs  color  brick  left  print  way  color  brick  modulo
1225/D __label__math  __label__number  theory  given  positive  count  pair  exists  contains  second  contains  print  single  suitable  pair
559/A __label__math  __label__brute  force  __label__geometry  gerald  got  curious  hexagon  birthday  boy  found  angle  hexagon  equal  measured  length  side  found  equal  centimeter  property  hexagon  ended  gerald  decided  draw  painted  parallel  side  hexagon  split  hexagon  regular  triangle  side  centimeter  gerald  wonder  many  triangle  ha  got  many  gerald  lost  track  counting  help  boy  count  triangle  single  input  contains  space  separated  length  side  hexagon  centimeter  clockwise  order  guaranteed  hexagon  indicated  property  exactly  side  exists  print  single  triangle  side  centimeter  hexagon  split
883/I __label__dp  __label__binary  search  evlampiy  ha  found  cool  application  process  photo  application  ha  certain  limitation  photo  ha  contrast  order  processing  truly  high  quality  application  must  receive  least  photo  contrast  differ  little  possible  evlampiy  already  know  contrast  photo  want  split  photo  group  group  contains  least  photo  result  photo  must  belong  exactly  group  considers  processing  time  group  difference  maximum  minimum  value  group  multithreading  processing  time  division  group  maximum  processing  time  group  split  photo  group  way  processing  time  division  minimum  possible  maximum  processing  time  group  least  possible  contains  photo  minimum  size  group  second  contains  contrast  photo  print  minimal  processing  time  division  group
961/A __label__implementation  given  following  process  platform  column  square  appearing  another  column  platform  square  column  square  occupy  bottom  row  otherwise  square  appear  top  highest  square  column  column  least  square  bottom  row  removed  receive  point  square  left  fall  row  task  calculate  amount  point  receive  input  length  platform  square  next  column  square  appear  print  amount  point  receive
1045/E __label__constructive  algorithms  __label__geometry  surface  newly  discovered  planet  model  plane  explorer  found  remains  different  civilization  various  location  would  like  learn  civilization  explore  area  need  build  road  location  always  restriction  every  location  civilization  connected  unique  path  road  location  different  civilization  road  explorer  want  accidentally  mix  civilization  currently  exploring  road  must  straight  segment  since  intersection  expensive  build  want  road  intersect  common  point  road  location  obviously  location  different  point  plane  explorer  found  interesting  information  help  location  lie  help  explorer  find  solution  problem  report  impossible  location  discovered  next  coordinate  location  civilization  belongs  print  road  built
702/C __label__implementation  __label__binary  search  given  point  straight  position  coordinate  city  point  position  coordinate  cellular  tower  tower  work  way  provide  cellular  network  city  located  distance  tower  task  find  minimal  city  ha  provided  cellular  network  city  least  cellular  tower  distance  tower  provides  cellular  network  point  located  tower  provide  cellular  network  city  city  must  distance  tower  contains  positive  city  cellular  tower  second  contains  sequence  coordinate  city  allowed  city  point  coordinate  given  non  decreasing  order  third  contains  sequence  j  coordinate  cellular  tower  allowed  tower  point  coordinate  given  non  decreasing  order  print  minimal  city  covered  cellular  network
936/B __label__dp  __label__dfs  __label__graphs  petya  vasya  arranged  game  game  run  following  rule  player  directed  graph  consisting  vertex  edge  vertex  contains  chip  initially  chip  located  vertex  player  take  turn  moving  chip  along  edge  graph  petya  go  player  move  chip  loses  game  last  turn  draw  announced  vasya  wa  performing  big  laboratory  work  spelling  part  speech  night  game  fell  asleep  beginning  game  petya  decided  take  advantage  situation  make  petya  vasya  move  task  help  petya  find  win  game  least  draw  tie  input  vertex  edge  graph  next  information  edge  graph  contains  nonnegative  vertex  edge  vertex  distinct  index  vertex  guaranteed  total  sum  equal  next  contains  index  vertex  initial  position  chip  petya  win  print  win  next  print  sequence  vertex  petya  visit  winning  vertex  coincide  edge  graph  must  possible  move  vertex  sequence  petya  win  game
474/D __label__dp  saw  little  game  marmot  made  mole  lunch  marmot  dinner  time  know  marmot  eats  flower  every  dinner  eats  red  white  flower  therefore  dinner  represented  sequence  several  flower  white  red  dinner  tasty  rule  marmot  want  eat  white  flower  group  size  marmot  wonder  many  way  eat  flower  way  could  large  print  modulo  contains  several  test  case  contains  represents  test  case  next  ii  describing  test  print  standard  output  way  marmot  eat  flower  dinner  modulo
611/A __label__implementation  today  wednesday  third  day  week  interesting  tomorrow  last  day  year  limak  little  polar  bear  enjoyed  year  lot  eager  coming  year  limak  want  prove  responsible  bear  going  regularly  save  candy  entire  year  considers  various  saving  plan  save  candy  either  fixed  day  week  fixed  day  month  limak  chose  particular  plan  sure  many  candy  save  plan  please  calculate  tell  input  following  format  week  denotes  day  week  day  monday  sunday  month  denotes  day  month  print  candy  limak  save  year
962/C __label__math  __label__implementation  __label__brute  force  given  positive  written  without  leading  example  incorrect  operation  delete  digit  given  result  remains  positive  without  leading  determine  minimum  operation  need  consistently  apply  given  make  square  positive  report  impossible  square  positive  positive  contains  single  given  without  leading  impossible  make  square  positive  print  case  print  minimal  operation  required
416/D __label__math  __label__implementation  __label__greedy  polycarpus  develops  interesting  theory  interrelation  arithmetic  progression  everything  world  current  idea  population  capital  berland  change  time  like  arithmetic  progression  well  like  multiple  arithmetic  progression  polycarpus  belief  writes  population  capital  several  consecutive  year  sequence  convenient  consider  array  several  arithmetic  progression  written  example  sequence  considered  sequence  arithmetic  progression  written  another  unfortunately  polycarpus  data  consecutive  year  census  population  occur  every  year  reason  value  unknown  value  represented  given  sequence  consists  positive  value  find  minimum  arithmetic  progression  polycarpus  need  get  get  progression  need  written  value  correspond  arbitrary  positive  value  must  equal  corresponding  element  sought  consecutive  record  progression  let  remind  finite  sequence  called  arithmetic  progression  difference  consecutive  element  constant  definition  sequence  length  arithmetic  progression  input  contains  element  sequence  second  contains  value  separated  space  print  minimum  arithmetic  progression  need  write  another  get  sequence  position  marked  represented  positive
827/B __label__implementation  __label__greedy  __label__trees  __label__constructive  algorithms  arkady  need  help  time  decided  build  high  speed  internet  exchange  point  consist  node  connected  minimum  possible  wire  network  wire  directly  connects  node  exactly  node  exit  node  mean  connected  exactly  node  network  node  connected  least  node  order  increase  system  stability  arkady  want  make  system  fast  possible  want  minimize  maximum  distance  exit  node  distance  node  wire  package  need  node  help  arkady  find  way  build  network  distance  distant  exit  node  small  possible  contains  total  node  exit  node  note  always  possible  build  least  network  node  exit  node  given  constraint  print  minimum  possible  distance  distant  exit  node  next  print  id  node  connected  wire  description  wire  printed  exactly  print  wire  wire  end  arbitrary  order  node  numbered  exit  node  id
1201/B __label__math  __label__greedy  given  array  operation  choose  element  decrease  need  check  whether  possible  make  element  equal  contains  single  size  array  second  contains  element  array  print  yes  possible  make  element  otherwise  print
1172/F __label__data  structures  nauuo  girl  love  coding  day  wa  solving  problem  requires  calculate  sum  modulo  wrote  following  code  got  verdict  wrong  answer  soon  discovered  bug  modadd  function  worked  range  problem  range  wa  curious  wrong  function  wanted  know  result  original  code  worked  slow  asked  help  given  array  nauuo  make  query  query  given  calculate  result  sum  see  definition  sum  function  pseudocode  note  overflow  code  contains  length  given  array  query  modulus  note  modulus  used  modadd  function  second  contains  given  array  following  contains  calculate  result  sum  output  contains  answer  query  given  order
1060/E __label__dp  __label__dfs  __label__trees  sergey  semyonovich  mayor  county  city  used  spend  day  night  thought  improvement  nkers  life  unfortunately  anything  everything  ha  done  already  possible  improvement  think  day  prefers  sleep  night  assistant  found  solution  draw  imaginary  city  paper  sheet  suggest  mayor  propose  improvement  right  ha  map  imaginary  city  subway  station  station  directly  connected  tunnel  way  whole  map  tree  assistant  short  time  enthusiasm  mean  exists  exactly  simple  path  pair  station  call  path  simple  us  tunnel  sergey  semyonovich  favorite  quality  objective  sum  pairwise  distance  every  pair  station  distance  station  minimum  possible  tunnel  path  sergey  semyonovich  decided  add  new  tunnel  subway  map  particular  connected  station  connected  direct  tunnel  share  common  neighbor  exists  station  original  map  ha  tunnel  tunnel  given  task  compute  sum  pairwise  distance  pair  station  new  map  input  contains  single  subway  station  imaginary  city  drawn  mayor  assistant  following  contains  meaning  station  index  connected  direct  tunnel  guaranteed  station  tunnel  form  tree  print  equal  sum  distance  pair  station  sergey  semyonovich  draw  new  tunnel  pair  station  share  common  neighbor  original  map
761/D __label__greedy  __label__sortings  __label__constructive  algorithms  __label__brute  force  __label__binary  search  dasha  logged  system  began  solve  problem  follows  given  sequence  length  need  write  sequence  length  element  calculated  follows  sequence  know  element  range  formally  element  satisfy  following  condition  li  li  sequence  know  element  distinct  dasha  wrote  solution  problem  quickly  checking  work  standard  test  wa  easy  due  error  test  system  sequence  compressed  sequence  sequence  known  test  let  give  definition  compressed  sequence  compressed  sequence  sequence  length  sequence  length  equal  le  equal  sequence  example  sequence  compressed  sequence  pay  attention  distinct  consequently  compressed  sequence  contains  inclusively  help  dasha  find  sequence  calculated  compressed  sequence  sequence  correct  contains  length  sequence  boundary  segment  element  sequence  next  contains  n  li  element  sequence  next  contains  distinct  n  compressed  sequence  sequence  suitable  sequence  print
776/E __label__math  __label__number  theory  holmes  child  fighting  amongst  cleverest  mycroft  asked  sherlock  eurus  find  value  n  distinct  ordered  positive  pair  satisfy  gcd  gcd  greatest  common  divisor  sherlock  said  solving  wa  child  play  asked  mycroft  instead  get  value  summation  done  positive  divide  eurus  wa  quietly  observing  finally  came  problem  astonish  sherlock  mycroft  defined  composite  function  recursively  follows  want  tell  value  modulo  single  input  contains  space  separated  indicating  eurus  asks  sherlock  mycroft  find  value  modulo  output  single  value  modulo
429/E __label__graphs  iahub  well  prepared  geometry  problem  heard  year  lot  geometry  problem  ioi  selection  camp  scared  iahub  locked  basement  started  thinking  new  problem  kind  following  iahub  want  draw  distinct  segment  axis  draw  segment  either  red  blue  drawing  good  following  requirement  met  point  axis  consider  segment  contains  point  suppose  red  segment  blue  segment  point  point  inequality  must  satisfied  segment  contains  point  l  iahub  give  starting  ending  point  segment  find  good  drawing  input  contains  segment  next  contains  ii  border  segment  guaranteed  segment  distinct  good  drawing  given  test  output  single  otherwise  output  must  denotes  color  segment  red  blue
628/A __label__implementation  tennis  tournament  participant  running  participant  playing  olympic  system  winner  move  loser  drop  tournament  take  place  following  way  participant  current  round  let  maximal  power  k  participant  compete  current  round  half  pass  next  round  participant  pas  next  round  directly  participant  remains  tournament  finish  match  requires  bottle  water  participant  bottle  judge  besides  towel  given  participant  whole  tournament  find  bottle  towel  needed  tournament  note  tennis  tournament  match  participant  compete  win  lose  contains  participant  parameter  described  problem  statement  print  bottle  towel  need  tournament
1043/A __label__math  __label__implementation  awruk  taking  part  election  school  final  round  ha  opponent  elodreip  student  school  student  ha  exactly  vote  obligated  use  awruk  know  person  give  vote  elodreip  get  exactly  vote  person  course  hold  awruk  know  loses  life  ha  speaking  lot  friend  know  many  vote  elodreip  student  want  give  want  change  win  election  course  know  bigger  mean  bigger  chance  somebody  notice  ha  changed  something  disqualified  awruk  know  many  vote  student  give  opponent  help  select  smallest  winning  order  win  awruk  need  get  strictly  vote  elodreip  contains  student  school  second  contains  vote  student  give  elodreip  output  smallest  kax  give  awruk  victory  order  win  awruk  need  get  strictly  vote  elodreip
556/A __label__greedy  andrewid  android  galaxy  famous  detective  free  time  like  think  string  containing  thought  string  length  consisting  consider  following  operation  choose  adjacent  position  string  contains  contains  allowed  remove  digit  string  obtaining  string  length  result  andreid  think  minimum  length  string  remain  applying  described  operation  several  time  possibly  help  calculate  input  contains  single  length  string  andreid  ha  second  contains  string  length  consisting  output  minimum  length  string  remain  applying  described  operation  several  time
864/C __label__math  __label__implementation  __label__greedy  bus  move  along  coordinate  point  point  starting  point  reach  point  immediately  turn  back  move  point  returning  point  immediately  go  back  point  thus  bus  move  back  moving  point  point  called  bus  journey  total  bus  must  make  journey  petrol  tank  bus  hold  liter  gasoline  pas  single  unit  distance  bus  need  spend  exactly  liter  gasoline  bus  start  journey  full  petrol  tank  gas  station  point  point  point  gas  station  bus  route  passing  gas  station  either  direction  bus  stop  completely  refuel  tank  thus  stopping  refuel  tank  liter  gasoline  minimum  time  bus  need  refuel  point  make  journey  journey  start  point  contains  endpoint  bus  journey  capacity  fuel  tank  bus  point  gas  station  located  required  journey  print  minimum  time  bus  need  refuel  make  journey  impossible  bus  make  journey  print
1197/A __label__math  __label__greedy  __label__sortings  let  denote  step  ladder  following  structure  exactly  wooden  plank  plank  length  least  base  ladder  plank  length  least  step  ladder  note  neither  base  plank  step  plank  required  equal  example  ladder  correct  step  ladder  ladder  correct  step  ladder  picture  length  plank  base  step  second  picture  length  base  step  third  picture  length  base  step  plank  length  plank  saw  cut  plank  though  hammer  nail  assemble  improvised  ladder  plank  question  maximum  choose  subset  given  plank  assemble  step  ladder  using  contains  single  query  query  independent  query  consists  contains  single  plank  second  contains  length  corresponding  plank  guaranteed  total  plank  query  exceed  print  per  query  maximum  choose  subset  plank  given  query  assemble  step  ladder  using
1062/E __label__greedy  __label__data  structures  __label__dfs  __label__trees  __label__binary  search  company  ha  employee  numbered  employee  ha  direct  bos  except  employee  ha  bos  guaranteed  value  form  tree  employee  said  charge  employee  direct  bos  employee  charge  direct  bos  employee  considered  charge  addition  employee  define  level  follow  near  future  possible  plan  company  operate  plan  consists  meaning  employee  range  involved  plan  operate  plan  smoothly  must  project  manager  employee  charge  involved  employee  precise  employee  chosen  project  manager  plan  every  employee  must  charge  note  necessary  range  always  chosen  way  large  possible  higher  level  lower  salary  company  ha  pay  employee  plan  operated  company  ha  jatc  take  look  plan  glance  tell  company  every  plan  possible  reduce  involved  employee  exactly  without  affecting  plan  greedy  company  asks  jatc  employee  kick  plan  level  project  manager  required  large  possible  jatc  ha  already  figured  answer  challenge  contains  employee  plan  respectively  second  contains  meaning  direct  bos  employee  guaranteed  value  form  directed  tree  root  following  contains  range  employee  involved  corresponding  plan  print  containing  employee  kicked  corresponding  plan  maximum  possible  level  project  manager  case
894/D __label__data  structures  __label__trees  __label__brute  force  ralph  binary  country  binary  country  consists  city  bidirectional  road  connecting  city  road  numbered  road  connects  city  labeled  denotes  rounded  nearest  city  labeled  length  road  ralph  give  query  query  tell  city  want  make  tour  starting  city  choose  city  binary  country  including  terminal  city  tour  gain  happiness  tour  distance  city  terminal  city  ralph  interested  tour  gain  positive  happiness  query  compute  sum  happiness  gain  tour  ralph  never  take  tour  twice  query  never  pas  city  twice  tour  contains  follow  contains  denotes  length  road  follow  contains  print  print  answer  query
756/A __label__dfs  __label__constructive  algorithms  pavel  cook  barbecue  skewer  lay  brazier  row  position  pavel  want  skewer  cooked  time  every  position  direction  wa  directed  originally  reversed  direction  pavel  ha  plan  permutation  sequence  consisting  second  pavel  move  skewer  position  position  equal  revers  hope  every  skewer  visit  every  position  direction  unfortunately  every  pair  permutation  sequence  suit  pavel  minimum  total  element  given  permutation  given  sequence  need  change  every  skewer  visit  placement  note  changing  permutation  remain  permutation  well  problem  pavel  skewer  visit  placement  several  time  end  cook  word  permutation  sequence  suit  k  n  second  skewer  visit  placement  shown  suitable  pair  permutation  sequence  exists  skewer  second  contains  sequence  permutation  according  pavel  want  move  skewer  third  contains  sequence  consisting  according  pavel  want  reverse  skewer  print  single  minimum  total  element  given  permutation  given  sequence  need  change  every  skewer  visit  placement
452/E __label__data  structures  __label__strings  given  string  need  find  many  triple  exist  string  pairwise  equal  print  found  modulo  see  note  sure  denotions  used  statement  non  empty  input  string  sum  length  string  string  consist  lowercase  english  letter  need  output  min  separated  space  answer  problem  modulo
710/F __label__data  structures  __label__brute  force  __label__strings  process  query  set  string  query  kind  add  string  set  guaranteed  string  wa  added  delete  string  set  guaranteed  string  set  given  string  find  occurrence  string  set  string  ha  several  occurrence  count  note  solve  problem  online  mode  mean  read  whole  input  read  query  writing  answer  last  query  third  type  use  function  fflush  bufferedwriter  flush  java  language  writing  program  contains  query  next  contains  nonempty  string  kind  query  string  process  string  consist  lowercase  english  letter  sum  length  string  input  exceed  query  third  kind  print  desired  occurrence  string
113/C __label__math  __label__brute  force  __label__number  theory  math  lesson  teacher  asked  pupil  come  lucky  fan  theory  peter  chose  prime  bob  wa  original  said  lucky  represented  arbitrary  positive  boy  decided  find  many  day  interval  l  suitable  pair  programming  decided  day  l  suitable  pair  programming  lucky  peter  lucky  bob  time  help  boy  find  day  input  contains  print  day  segment  lucky  peter  bob  time
809/C __label__dp  wonderful  evening  restaurant  time  home  came  leha  true  gentleman  suggested  noora  give  lift  certainly  girl  agreed  pleasure  suddenly  problem  appeared  leha  find  car  huge  parking  near  restaurant  decided  turn  watchman  help  formally  parking  represented  matrix  exactly  car  every  cell  matrix  car  machine  represented  positive  let  index  column  matrix  left  right  row  top  bottom  coincidence  turned  every  cell  car  stand  cell  equal  minimum  positive  found  cell  upper  left  fragment  parking  leha  want  ask  watchman  request  help  find  car  every  request  represented  watchman  consider  cell  matrix  x  car  cell  doe  exceed  increase  answer  request  car  cell  request  leha  asks  watchman  tell  resulting  sum  due  fact  sum  turn  quite  large  hacker  asks  calculate  modulo  request  seem  impracticable  watchman  help  watchman  answer  leha  request  contains  leha  request  next  parameter  leha  request  print  exactly  print  answer  request  second  answer  second  request
748/B __label__implementation  __label__strings  santa  claus  decided  disassemble  keyboard  clean  returned  key  back  suddenly  realized  pair  key  took  place  santa  suspect  key  either  place  place  another  key  located  exactly  key  order  make  sure  right  restore  correct  order  key  santa  typed  favorite  patter  looking  keyboard  given  santa  favorite  patter  string  actually  typed  determine  pair  key  could  mixed  key  must  occur  pair  input  consists  string  denoting  favorite  santa  patter  resulting  string  empty  length  string  consist  lowercase  english  letter  santa  wrong  way  divide  key  pair  swap  key  pair  keyboard  fixed  print  without  quote
476/C __label__math  dreamoon  love  summing  something  reason  day  obtains  occasionally  want  calculate  sum  nice  positive  called  nice  range  denote  quotient  division  denote  remainder  division  read  operation  http  goo  acsxht  answer  large  please  print  remainder  modulo  compute  faster  dreamoon  single  input  contains  print  single  representing  answer  modulo
725/B __label__math  __label__implementation  new  airplane  superpuperjet  ha  infinite  row  numbered  positive  starting  cockpit  tail  seat  row  denoted  letter  seat  located  left  aisle  look  direction  cockpit  seat  located  right  seat  located  near  window  seat  located  near  aisle  lunch  time  flight  attendant  started  serve  food  move  row  tail  always  maintaining  distance  row  food  trolley  thus  beginning  attendant  serf  row  second  attendant  serf  row  row  done  move  row  forward  attendant  serf  row  second  attendant  serf  row  move  row  forward  attendant  serf  row  second  attendant  serf  row  move  row  forward  flight  attendant  work  speed  take  exactly  second  serve  passenger  second  move  row  forward  attendant  serf  passenger  seat  right  aisle  serf  passenger  seat  left  aisle  look  direction  cockpit  moreover  always  serve  passenger  order  window  aisle  thus  passenger  receive  food  row  located  seat  last  seat  assume  seat  occupied  vasya  ha  seat  row  want  know  many  second  pas  get  lunch  input  contains  description  vasya  seat  format  index  row  seat  row  denoted  letter  index  row  seat  separated  space  print  second  vasya  ha  wait  get  lunch
1214/F __label__greedy  __label__sortings  large  company  cecsi  poca  pola  fighting  long  time  order  overcome  competitor  poca  pola  started  super  secret  project  ha  total  vacancy  office  many  test  interview  candidate  selected  thing  left  wa  employment  candidate  skill  matter  work  company  decided  distribute  candidate  workplace  total  distance  home  workplace  candidate  minimal  well  known  earth  round  described  circle  city  earth  described  point  circle  city  enumerated  city  index  neighbor  city  index  neighbor  well  people  move  along  circle  distance  city  equal  minimal  transition  neighboring  city  perform  get  city  another  particular  distance  city  equal  poca  pola  vacancy  located  office  city  candidate  live  city  possible  vacancy  located  city  candidate  live  city  poca  pola  manager  busy  super  secret  project  asked  help  poca  pola  distribute  candidate  workplace  sum  distance  home  workplace  candidate  minimum  possible  contains  city  earth  vacancy  second  contains  city  vacancy  located  third  contains  city  candidate  live  minimum  total  distance  home  workplace  candidate
633/H __label__implementation  __label__data  structures  yash  finally  tired  computing  length  longest  fibonacci  ish  sequence  play  around  complex  thing  fibonacci  ish  potential  fibonacci  ish  potential  array  computed  follows  remove  element  exists  sort  remaining  element  ascending  order  compute  potential  n  fibonacci  see  note  clarification  given  array  length  range  range  compute  fibonacci  ish  potential  array  composed  using  element  inclusive  find  potential  modulo  input  contains  length  initial  array  modulo  respectively  next  contains  element  array  follow  range  last  pair  index  ii  range  compute  fibonacci  ish  potential  print  must  fibonacci  ish  potential  range  modulo
1098/D __label__data  structures  vasya  big  fish  lover  parent  gave  aquarium  new  year  vasya  doe  degree  ichthyology  think  filling  new  aquarium  eel  good  idea  unfortunately  eel  predator  vasya  decided  find  dangerous  idea  wa  getting  aquarium  eel  fight  exactly  fish  remains  eel  fight  big  eats  smaller  weight  equal  still  eat  namely  let  eel  initially  aquarium  weight  battle  occur  result  eel  survive  battle  eel  weight  eel  weight  eaten  disappear  aquarium  eel  weight  increase  weight  battle  eel  weight  considered  dangerous  b  given  set  eel  danger  defined  maximum  dangerous  battle  occur  eel  placed  aquarium  vasya  planning  eel  want  put  aquarium  ha  set  eel  initially  empty  make  series  operation  set  operation  either  add  eel  set  remove  eel  set  vasya  asks  calculate  danger  current  set  eel  operation  input  contains  single  operation  vasya  make  next  describe  operation  operation  ha  type  describes  addition  eel  weight  set  note  set  several  eel  weight  describes  removal  eel  weight  set  guaranteed  eel  weight  set  operation  output  single  danger  set  eel  operation
707/A __label__implementation  small  brave  mouse  brain  wa  accepted  summer  school  young  villain  wa  upset  decided  postpone  plan  taking  world  become  photographer  instead  know  coolest  photo  film  specify  hashtag  film  brain  took  lot  colourful  picture  colored  black  white  film  developed  translated  digital  form  color  black  white  photo  folder  sort  need  spend  hour  soon  brain  photographer  programmer  asks  help  determine  single  photo  whether  colored  black  white  photo  represented  matrix  sized  n  element  matrix  store  symbol  indicating  corresponding  pixel  color  color  cyan  magenta  yellow  white  grey  black  photo  considered  black  white  ha  white  black  grey  pixel  cyan  magenta  yellow  pixel  photo  considered  colored  input  contains  photo  pixel  matrix  row  column  respectively  describing  matrix  row  follow  contains  space  separated  character  describing  color  pixel  row  character  print  black  white  without  quote  photo  black  white  color  without  quote  colored
1220/C __label__greedy  __label__strings  mike  ann  sitting  classroom  lesson  boring  decided  play  interesting  game  fortunately  need  play  game  string  beginning  game  player  given  substring  left  border  right  border  equal  initially  player  start  make  move  according  following  rule  player  chooses  lexicographically  le  player  change  way  ann  move  player  make  move  loses  recall  substring  string  continuous  segment  letter  start  position  end  position  example  ehn  substring  aaaehnsvz  ahz  mike  ann  playing  enthusiastically  notice  teacher  approached  surprisingly  teacher  scold  instead  said  figure  winner  game  start  even  know  unfortunately  mike  ann  keen  game  theory  ask  write  program  take  determines  winner  possible  input  contains  single  string  consisting  lowercase  english  letter  print
894/C __label__math  __label__constructive  algorithms  dream  marco  met  elderly  man  pair  black  glass  man  told  key  immortality  disappeared  wind  time  woke  remembered  key  wa  sequence  positive  length  forgot  exact  sequence  let  element  sequence  remembered  calculated  gcd  every  put  set  gcd  mean  greatest  common  divisor  note  even  put  set  twice  appears  set  marco  give  set  asks  help  figure  initial  sequence  many  solution  print  possible  sequence  produce  set  case  print  contains  single  size  set  second  contains  element  set  guaranteed  element  set  given  strictly  increasing  order  mean  solution  print  single  containing
1055/C __label__math  __label__number  theory  bob  alice  often  participating  various  programming  competition  like  many  competitive  programmer  alice  bob  good  bad  day  noticed  lucky  unlucky  day  repeating  period  example  alice  day  lucky  unlucky  day  lucky  day  word  day  lucky  alice  lie  segment  non  negative  bob  lucky  day  similar  structure  parameter  sequence  different  day  lucky  bob  lie  segment  non  negative  alice  bob  want  participate  team  competition  together  want  find  largest  possible  consecutive  day  lucky  alice  bob  contains  describes  alice  lucky  day  second  contains  describes  bob  lucky  day  guaranteed  alice  bob  unlucky  day  print  maximum  day  row  lucky  alice  bob
630/F __label__math  company  city  decided  create  group  innovative  development  consisting  people  hire  new  employee  placing  advertisment  company  received  resume  department  ha  evaluate  possible  group  composition  select  task  count  variant  group  composition  evaluate  input  contains  potential  employee  sent  resume  output  different  variant  group  composition
518/A __label__constructive  algorithms  __label__strings  vitaly  diligent  student  never  missed  lesson  year  studying  university  always  doe  homework  time  pass  exam  time  last  lesson  teacher  ha  provided  string  vitaly  string  length  consist  lowercase  english  letter  string  lexicographically  smaller  string  vitaly  wondered  string  lexicographically  larger  string  lexicographically  smaller  string  string  consist  lowercase  english  letter  length  equal  length  string  let  help  vitaly  solve  easy  problem  contains  string  consisting  lowercase  english  letter  denotes  length  string  second  contains  string  consisting  lowercase  english  letter  guaranteed  length  string  string  lexicographically  le  string  string  meet  given  requirement  exist  print  single  string  string  without  quote
1051/G __label__greedy  __label__data  structures  suppose  given  sequence  pair  perform  following  operation  choose  position  increase  performed  exists  least  position  cost  operation  choose  position  decrease  performed  exists  least  position  cost  operation  operation  performed  arbitrary  time  possibly  let  minimum  possible  exists  sequence  operation  total  cost  pairwise  distinct  task  given  sequence  consisting  pair  pairwise  distinct  let  sequence  consisting  pair  task  calculate  value  contains  single  pair  sequence  next  element  next  contains  guaranteed  value  pairwise  distinct  print  equal
1172/C1 __label__dp  difference  easy  hard  version  constraint  nauuo  girl  love  random  picture  website  day  made  random  picture  website  includes  picture  nauuo  visit  website  see  exactly  picture  website  doe  display  picture  equal  probability  picture  ha  non  negative  weight  probability  picture  displayed  say  probability  picture  displayed  proportional  weight  nauuo  discovered  picture  doe  like  displayed  often  solve  problem  came  great  idea  saw  picture  like  would  add  weight  otherwise  would  subtract  weight  nauuo  visit  website  time  want  know  expected  weight  picture  visit  modulo  help  expected  weight  picture  denoted  gcd  gcd  need  print  satisfying  mod  proved  exists  unique  contains  picture  visit  website  second  contains  either  nauuo  doe  like  picture  otherwise  nauuo  like  picture  guaranteed  least  picture  nauuo  like  third  contains  initial  weight  picture  output  contains  expected  weight  modulo
758/D __label__math  __label__dp  __label__greedy  __label__constructive  algorithms  __label__strings  alexander  learning  convert  decimal  system  know  english  letter  writes  decimal  mean  instead  letter  write  thus  converting  decimal  hexadecimal  system  get  alexander  lived  calmly  tried  convert  back  decimal  system  alexander  remembers  worked  little  asks  find  minimum  decimal  converting  system  base  get  contains  second  contains  guaranteed  contains  symbol  digit  second  strictly  le  alexander  guarantee  answer  exists  doe  exceed  leading  print  answer  problem
980/B __label__constructive  algorithms  city  fishtopia  imagined  grid  row  odd  column  ha  main  village  located  top  left  cell  people  stay  love  fishing  tuna  pond  bottom  right  cell  second  village  located  people  love  salmon  pond  mayor  fishtopia  want  place  hotel  city  occupying  cell  allow  people  enter  city  anywhere  hotel  placed  border  cell  person  move  cell  another  cell  occupied  hotel  share  side  help  mayor  place  hotel  way  equal  shortest  path  village  preferred  pond  input  odd  width  city  hotel  placed  respectively  print  yes  possible  place  hotel  way  satisfies  problem  statement  otherwise  print
1198/F __label__greedy  __label__number  theory  given  array  need  split  group  gcd  group  equal  gcd  second  group  equal  gcd  group  largest  non  negative  divide  group  group  non  empty  contains  single  second  contains  element  array  print  yes  without  quote  possible  split  group  required  without  quote  otherwise
592/B __label__math  ari  monster  always  wake  early  ray  sun  thing  doe  feeding  squirrel  ari  draw  regular  convex  polygon  floor  vertex  clockwise  order  starting  vertex  draw  ray  direction  vertex  ray  stop  reach  vertex  intersects  another  ray  drawn  ari  repeat  process  vertex  particular  order  put  walnut  region  inside  polygon  ada  squirrel  want  collect  walnut  allowed  step  drawn  ari  mean  ada  perform  small  jump  want  region  another  ada  jump  region  another  region  share  side  corner  assuming  ada  start  outside  picture  minimum  jump  ha  perform  order  collect  walnut  input  contains  single  vertex  regular  polygon  drawn  ari  print  minimum  jump  ada  make  collect  walnut  note  need  leave  polygon
1242/C __label__dp  __label__dfs  __label__graphs  ujan  ha  lot  box  like  order  balance  decided  reorder  box  numbered  box  contains  negative  distinct  ujan  lazy  following  reordering  exactly  pick  single  box  total  insert  chosen  box  box  beginning  note  insert  picked  box  back  box  ujan  happy  sum  box  achieve  make  box  perfectly  balanced  like  thing  contains  single  box  next  contains  single  box  contains  box  guaranteed  distinct  ujan  achieve  goal  output  single  otherwise  output  yes  output  mean  ujan  pick  box  place  box  afterwards
385/E __label__math  bear  forest  ha  checkered  field  checkered  field  n  table  row  numbered  top  bottom  column  numbered  left  right  let  denote  cell  field  intersection  row  column  record  cell  field  contains  growing  raspberry  cell  field  contains  raspberry  bush  bear  came  walk  field  beginning  walk  speed  bear  spends  exactly  second  field  second  following  take  place  let  suppose  current  moment  bear  cell  bear  eats  raspberry  bush  ha  current  cell  bear  eats  raspberry  bush  increase  component  speed  word  eating  bush  raspberry  speed  wa  eating  berry  speed  equal  let  denote  current  speed  bear  wa  increased  previous  step  bear  move  cell  cell  mod  mod  additional  raspberry  bush  grows  cell  field  task  predict  bear  action  find  cell  end  start  cell  assume  bush  ha  infinitely  much  raspberry  bear  never  eat  input  contains  space  separated  x  x  print  coordinate  cell  bear  end  second
1051/D __label__dp  given  grid  consisting  row  column  cell  grid  colored  either  black  white  cell  considered  neighbour  common  border  share  color  cell  belong  component  neighbour  neighbour  belongs  component  let  call  bicoloring  beautiful  ha  exactly  component  count  beautiful  bicolorings  big  enough  print  answer  modulo  contains  n  column  grid  component  required  print  single  beautiful  bicolorings  modulo
76/D __label__math  __label__dp  __label__greedy  bitwise  exclusive  bitwise  addition  modulo  binary  operation  equivalent  applying  logical  exclusive  every  pair  bit  located  position  binary  notation  operand  word  binary  digit  result  equal  bit  respective  position  operand  different  example  xor  write  program  take  non  negative  input  find  non  negative  satisfy  following  condition  xor  xor  bitwise  exclusive  smallest  condition  true  contains  second  contains  output  non  negative  print  answer
1140/C __label__data  structures  __label__sortings  __label__brute  force  playlist  consisting  song  song  characterized  length  beauty  respectively  pleasure  listening  set  song  equal  total  length  song  set  multiplied  minimum  beauty  example  pleasure  listening  set  song  length  beauty  value  equal  need  choose  song  playlist  pleasure  listening  set  song  maximum  possible  contains  song  playlist  maximum  song  choose  respectively  next  contains  length  beauty  song  print  maximum  pleasure  get
924/C __label__dp  __label__greedy  __label__data  structures  arkady  decides  observe  river  consecutive  day  river  water  level  day  equal  real  value  arkady  go  riverside  day  make  mark  side  channel  height  water  level  coincides  mark  made  new  mark  created  water  doe  wash  mark  away  arkady  writes  mark  strictly  water  level  day  day  value  equal  define  mark  strictly  water  level  day  find  minimum  possible  sum  day  mark  channel  day  contains  single  positive  day  second  contains  space  separated  mark  strictly  water  day  output  single  minimum  possible  sum  mark  strictly  water  level  day
893/A __label__implementation  alex  bob  carl  soon  participate  team  chess  tournament  since  team  decided  practise  really  hard  tournament  bit  difficult  chess  game  player  play  according  following  rule  alex  bob  play  game  carl  spectating  game  end  lost  game  becomes  spectator  next  game  wa  spectating  play  winner  alex  bob  carl  play  way  draw  today  played  game  game  remember  wa  winner  decided  make  log  game  describing  game  doubt  information  log  correct  want  know  situation  described  log  made  wa  possible  game  someone  spectating  alex  bob  carl  play  according  rule  help  check  contains  game  alex  bob  carl  played  follow  describing  game  log  contains  equal  alex  game  bob  game  carl  game  print  yes  situation  described  log  wa  possible  otherwise  print
578/D __label__dp  __label__greedy  given  string  length  character  lowercase  english  letter  calculate  many  different  string  length  composed  lowercase  english  letter  exist  length  lcs  longest  common  subsequence  recall  lcs  string  longest  string  subsequence  contains  denoting  length  string  english  lowercase  character  forming  character  set  string  second  contains  string  print  containing  answer
620/F __label__data  structures  given  array  query  query  described  let  define  function  function  defined  u  query  print  maximal  value  function  lj  j  axy  contains  size  array  query  second  contains  element  array  next  contains  jj  parameter  query  query  print  value  separate  maximal  value  function  lj  j  axy
901/E __label__math  senor  vorpal  kickass  invented  innovative  method  encrypt  sequence  length  encrypt  sequence  ha  choose  secret  sequence  act  key  vorpal  selective  key  sequence  cyclic  shift  linearly  independent  non  set  coefficient  time  sequence  build  following  cipher  word  compute  quadratic  deviation  cyclic  shift  sequence  resulting  sequence  kickass  cipher  cipher  development  right  vorpal  want  decipher  sequence  ha  encrypted  solve  problem  given  sequence  find  suitable  sequence  contains  single  second  contains  third  contains  guaranteed  cyclic  shift  sequence  linearly  independent  print  single  sequence  encrypting  key  get  sequence
1186/C __label__math  __label__implementation  vus  cossack  ha  binary  string  string  consist  call  string  known  length  length  cossack  considers  every  substring  length  string  let  call  substring  match  corresponding  character  count  position  string  different  call  function  example  let  string  second  third  fourth  position  different  vus  cossack  count  substring  even  example  let  ha  substring  length  since  substring  even  answer  vus  find  answer  big  string  asking  help  contains  binary  string  string  second  contains  binary  string  second  string  print  answer
498/C __label__number  theory  written  piece  paper  array  positive  good  pair  good  pair  meet  following  condition  odd  k  k  operation  perform  sequence  action  take  good  pair  divide  divide  perform  assignment  determine  maximum  operation  sequentially  perform  given  array  note  pair  used  several  time  described  operation  contains  space  separated  second  contains  space  separated  description  array  following  description  good  pair  contains  space  separated  k  k  odd  guaranteed  good  pair  distinct  output  answer  problem
612/C __label__math  __label__data  structures  given  string  consists  opening  closing  bracket  kind  type  bracket  opening  closing  replace  bracket  another  type  example  replace  bracket  replace  following  definition  regular  bracket  sequence  well  known  familiar  let  define  regular  bracket  sequence  rb  empty  string  rb  let  rb  string  rb  example  string  rb  string  determine  least  replaces  make  string  rb  contains  non  empty  string  consisting  opening  closing  bracket  kind  length  doe  exceed  impossible  get  rb  print  impossible
614/A __label__implementation  __label__brute  force  programmer  rostislav  got  seriously  interested  link  cut  tree  data  structure  based  splay  tree  specifically  studying  expose  procedure  unfortunately  rostislav  unable  understand  definition  procedure  decided  ask  programmer  serezha  help  serezha  agreed  help  rostislav  solves  simple  task  would  need  splay  tree  anyway  given  need  print  power  range  inclusive  rostislav  want  spent  time  got  interested  playing  network  game  called  agar  gleb  help  input  contains  space  separated  print  power  lie  range  increasing  order  print  without  quote
798/D __label__sortings  __label__constructive  algorithms  mike  ha  always  thinking  harshness  social  inequality  obsessed  sometimes  even  affect  solving  problem  moment  mike  ha  sequence  positive  length  us  ask  people  quite  peculiar  question  test  good  spotting  inequality  life  want  find  unfair  subset  original  sequence  precise  want  select  element  distinct  sequence  represent  index  element  select  sequence  call  subset  unfair  following  condition  satisfied  ap  pk  greater  sum  element  sequence  bp  pk  greater  sum  element  sequence  smaller  equal  easy  find  sequence  allowed  select  many  element  mike  guarantee  solution  always  exist  given  condition  described  please  help  satisfy  curiosity  contains  element  sequence  second  space  separated  element  sequence  third  space  separated  element  sequence  output  represents  size  found  subset  le  equal
996/A __label__dp  __label__greedy  allen  ha  lot  money  ha  dollar  bank  security  reason  want  withdraw  cash  disclose  reason  denomination  dollar  bill  minimum  bill  allen  could  receive  withdrawing  entire  balance  input  contains  single  output  minimum  bill  allen  could  receive
448/E __label__implementation  __label__dfs  __label__brute  force  __label__number  theory  bizon  champion  friendly  rigorous  coder  let  define  function  sequence  function  return  following  sequence  divisor  increasing  order  divisor  increasing  order  till  last  element  sequence  example  let  determine  sequence  sequence  consisting  single  example  get  given  find  sequence  answer  rather  large  find  element  sequence  single  contains  space  separated  print  element  sequence  single  separated  space  element  exceeds  print  element
735/B __label__greedy  __label__sortings  __label__number  theory  local  authority  heard  lot  combinatorial  ability  ostap  bender  decided  ask  help  question  urbanization  people  plan  move  city  wealth  equal  authority  plan  build  city  people  second  people  course  candidate  settle  city  thus  subset  candidate  size  settle  city  subset  size  chosen  remaining  candidate  move  second  city  candidate  receive  official  refuse  back  home  make  statistic  local  region  look  better  eye  boss  local  authority  decided  pick  subset  candidate  way  sum  arithmetic  mean  wealth  people  city  large  possible  arithmetic  mean  wealth  city  sum  wealth  resident  divided  depending  city  division  done  real  without  rounding  please  help  authority  find  optimal  way  pick  resident  city  input  contains  candidate  want  move  city  planned  resident  city  planned  resident  second  city  second  contains  equal  wealth  candidate  print  real  value  maximum  possible  sum  arithmetic  mean  wealth  city  resident  answer  considered  correct  absolute  relative  error  doe  exceed
540/E __label__implementation  __label__data  structures  __label__sortings  __label__trees  __label__binary  search  infinite  sequence  consisting  positive  increasing  order  performed  swap  operation  sequence  swap  operation  swapping  element  sequence  position  task  find  inversion  resulting  sequence  index  pair  contains  single  swap  operation  applied  sequence  next  contains  aii  argument  swap  operation  print  single  inversion  resulting  sequence
440/A __label__implementation  polycarpus  adores  series  right  ready  finish  watching  season  popular  sitcom  graph  theory  total  season  ha  episode  numbered  polycarpus  watch  episode  random  order  ha  already  watched  episode  except  episode  ha  polycaprus  forgotten  watch  input  contains  episode  season  assume  episode  numbered  second  contains  episode  polycarpus  ha  watched  value  distinct  print  episode  polycarpus  watched
1203/F2 __label__dp  __label__greedy  difference  easy  hard  version  complete  project  easy  version  necessary  hard  version  polycarp  famous  freelancer  current  rating  unit  rich  customer  asked  complete  project  company  complete  project  polycarp  need  least  unit  rating  completes  project  rating  change  rating  increase  decrease  positive  negative  polycarp  rating  fall  people  trust  low  rated  freelancer  polycarp  choose  order  completes  project  furthermore  even  skip  project  altogether  gain  experience  money  course  polycarp  want  choose  subset  project  maximum  possible  size  order  complete  ha  enough  rating  starting  project  ha  non  negative  rating  completing  project  task  calculate  maximum  possible  size  subset  project  input  contains  project  initial  rating  polycarp  respectively  next  project  per  project  represented  pair  rating  required  complete  project  rating  change  project  completion  print  size  maximum  possible  subset  possibly  empty  project  polycarp  choose
191/C __label__data  structures  __label__dfs  __label__trees  say  berland  ha  exactly  problem  fool  road  besides  berland  ha  city  populated  fool  connected  road  berland  road  bidirectional  many  fool  berland  pair  city  path  else  fool  would  get  upset  pair  city  simple  path  else  fool  would  get  lost  end  berland  special  feature  country  fool  sometimes  visit  thus  spoil  road  fool  smart  always  use  simple  path  simple  path  path  go  every  berland  city  berland  government  know  path  fool  use  help  government  count  road  many  distinct  fool  note  fool  path  given  input  contains  single  city  next  contains  space  separated  uii  mean  road  connecting  city  next  contains  pair  fool  visit  next  space  separated  contains  mean  fool  life  city  visit  fool  life  city  given  pair  describe  simple  path  every  pair  city  simple  path  print  separated  space  equal  fool  road  road  numbered  starting  order  occur  input
928/D __label__trees  __label__strings  arcady  copywriter  today  task  type  already  well  designed  story  using  favorite  text  editor  arcady  type  word  punctuation  sign  space  another  letter  sign  including  feed  requires  keyboard  click  order  printed  moreover  arcady  ha  non  empty  prefix  word  screen  editor  proposes  possible  autocompletion  word  precisely  already  printed  word  prefix  match  currently  printed  prefix  word  unique  example  arcady  ha  already  printed  codeforces  coding  codeforces  autocompletion  attempt  cod  proceeds  code  editor  propose  codeforces  single  click  arcady  follow  editor  proposal  transform  current  prefix  note  additional  symbol  printed  autocompletion  space  feed  etc  minimum  keyboard  click  arcady  ha  perform  print  entire  text  allowed  move  cursor  erase  already  printed  symbol  word  contiguous  sequence  latin  letter  bordered  space  punctuation  sign  text  beginning  end  arcady  us  lowercase  letter  example  word  well  known  tic  tac  toe  paper  pencil  game  player  contains  arcady  text  consisting  lowercase  latin  letter  space  feed  following  punctuation  sign  total  amount  symbol  exceed  guaranteed  non  empty  print  single  minimum  click
868/A __label__implementation  __label__brute  force  __label__strings  technology  develop  manufacturer  making  process  unlocking  phone  user  friendly  possible  unlock  new  phone  arkady  pet  dog  ha  bark  password  phone  represents  password  string  lowercase  english  letter  enemy  kashtanka  want  unlock  phone  steal  sensible  information  bark  distinct  word  represented  string  lowercase  english  letter  kashtanka  want  bark  several  word  necessarily  distinct  another  pronounce  string  containing  password  substring  tell  possible  unlock  phone  way  contains  lowercase  english  letter  password  phone  second  contains  single  word  kashtanka  know  next  lowercase  english  letter  representing  word  kashtanka  know  word  guaranteed  distinct  print  yes  kashtanka  bark  several  word  forming  string  containing  password  otherwise
686/A __label__implementation  __label__constructive  algorithms  adventure  magic  mirror  kay  gerda  returned  home  sometimes  give  free  ice  cream  kid  summer  start  day  ice  cream  pack  since  ice  cream  free  people  start  standing  queue  kay  gerda  house  even  night  person  queue  want  either  take  several  ice  cream  pack  friend  give  several  ice  cream  pack  kay  gerda  carrier  bring  ice  cream  stand  queue  carrier  ice  cream  pack  come  house  kay  gerda  take  pack  child  want  take  ice  cream  pack  come  house  kay  gerda  give  pack  enough  ice  cream  otherwise  child  get  ice  cream  leave  distress  kay  want  find  amount  ice  cream  people  leave  queue  gerda  want  find  distressed  kid  contains  space  separated  next  contains  character  separated  space  record  mean  carrier  ice  cream  pack  occupies  place  start  queue  record  mean  child  want  take  pack  stand  place  print  space  separated  ice  cream  pack  left  operation  kid  left  house  distress
394/E __label__geometry  minister  education  coming  naturally  nobody  want  perform  poorly  front  honored  guest  hour  arrival  turned  class  ha  malfunctioning  lightbulb  reason  get  enough  energy  solution  wa  found  quickly  got  change  location  lightbulb  got  maximum  amount  energy  everybody  know  power  lightbulb  equal  constant  value  euclidean  distance  bulb  generator  consequently  task  minimize  course  know  position  generator  bulb  ceiling  class  ceiling  class  form  strictly  convex  gon  class  ha  form  right  prism  strictly  convex  gon  bottom  help  find  optimum  location  bulb  assume  generator  plane  class  ceiling  consider  plane  class  ceiling  ha  cartesian  coordinate  system  introduced  contains  generator  next  contains  pair  representing  coordinate  generator  plane  class  ceiling  guaranteed  generator  location  next  contains  vertex  convex  polygon  describes  ceiling  class  following  contains  pair  representing  coordinate  point  polygon  clockwise  order  guaranteed  polygon  strictly  convex  absolute  value  coordinate  exceed  print  single  real  minimum  value  sum  square  distance  generator  point  lightbulb  optimal  position  answer  considered  valid  absolute  relative  error  exceed
377/B __label__greedy  __label__data  structures  __label__sortings  __label__binary  search  soon  held  world  largest  programming  contest  testing  system  still  ha  bug  contest  organizer  well  known  university  ha  choice  attract  university  student  fix  bug  university  ha  student  able  perform  work  student  realize  hope  organizer  want  work  free  student  want  get  pass  subject  regardless  volume  work  bug  like  student  every  bug  characterized  complexity  every  student  ha  level  ability  student  fix  bug  level  ability  le  complexity  bug  bij  doe  day  otherwise  bug  fixed  another  student  course  student  work  bug  day  bug  dependent  corrected  order  different  student  work  simultaneously  university  want  fix  bug  quickly  possible  giving  student  total  pass  determine  student  use  come  schedule  work  saying  student  fix  bug  contains  space  separated  student  bug  system  maximum  pass  university  ready  give  student  next  contains  space  separated  bug  complexity  next  contains  space  separated  level  student  ability  next  contains  space  separated  pass  student  want  get  help  university  correct  bug  print
1249/C1 __label__implementation  __label__greedy  __label__brute  force  difference  easy  hard  version  maximum  value  given  positive  really  love  good  want  find  smallest  good  greater  equal  positive  called  good  represented  sum  distinct  power  duplicate  power  allowed  example  good  good  good  good  represent  sum  distinct  power  good  represent  sum  distinct  power  example  representation  invalid  good  represent  sum  distinct  power  example  representation  invalid  note  exist  representation  sum  power  none  consists  distinct  power  given  positive  find  smallest  good  answer  independent  query  input  contains  query  query  follow  query  contains  query  print  smallest  good
758/B __label__implementation  __label__brute  force  __label__number  theory  nothing  eternal  world  kostya  understood  january  saw  partially  dead  color  garland  ha  goal  replace  dead  light  bulb  know  many  light  bulb  color  required  guaranteed  color  least  light  working  known  garland  contains  light  bulb  color  red  blue  yellow  green  garland  made  follows  take  consecutive  light  bulb  light  bulb  color  example  garland  look  like  rybgrybgry  ybgrybgrybg  bgryb  look  like  bgryg  ybgrybygr  bgybgy  letter  denote  color  red  blue  yellow  green  using  information  color  least  light  bulb  still  work  count  dead  light  bulb  color  contains  string  describes  garland  symbol  describes  color  light  bulb  order  beginning  garland  light  bulb  red  light  bulb  blue  light  bulb  yellow  light  bulb  green  light  bulb  dead  string  symbol  except  described  guaranteed  given  string  least  letter  guaranteed  string  correct  garland  blown  light  bulb  mean  example  grby  input  data  print  dead  light  bulb  red  blue  yellow  green  color  accordingly
1070/H __label__implementation  __label__brute  force  polycarp  working  new  operating  system  called  beros  asks  help  implementation  file  suggestion  feature  file  hard  drive  name  file  name  contains  character  inclusive  file  name  unique  file  suggestion  feature  handle  query  represented  string  query  count  file  containing  substring  continuous  segment  character  file  name  equal  suggest  file  name  example  file  name  read  host  ops  beros  query  matched  file  file  name  substring  suggested  file  name  either  host  beros  input  contains  total  file  following  file  name  per  contains  name  file  file  name  contains  character  inclusive  file  name  lowercase  latin  letter  digit  dot  character  sequence  valid  character  file  name  example  beros  valid  file  name  file  name  unique  following  contains  total  query  following  query  per  ha  length  character  inclusive  contains  lowercase  latin  letter  digit  dot  character  print  per  query  response  query  value
961/E __label__data  structures  day  polycarp  decided  rewatch  absolute  favourite  episode  well  known  series  tufurama  wa  pretty  surprised  got  result  season  episode  search  query  watch  tufurama  season  episode  online  full  free  got  polycarp  confused  decides  rewatch  entire  series  someday  able  find  right  episode  watch  polycarp  want  count  time  forced  search  episode  using  different  method  series  season  numbered  season  ha  episode  numbered  polycarp  think  pair  exist  season  episode  season  episode  search  query  include  wrong  result  help  polycarp  calculate  pair  contains  season  second  contains  separated  space  episode  season  print  pair  exist  season  episode  season  episode
958/C2 __label__dp  heidi  ha  broken  level  encryption  death  star  plan  staring  screen  presenting  description  next  code  ha  enter  look  surprisingly  similar  seems  like  empire  engineer  quite  lazy  heidi  given  sequence  given  need  find  encryption  key  let  sequence  positive  define  score  sum  element  modulo  heidi  given  sequence  consists  given  goal  split  part  part  contains  least  element  part  consists  contiguous  element  part  overlap  total  sum  score  part  maximized  output  sum  encryption  code  input  contains  space  separated  k  element  part  split  modulo  computing  score  respectively  second  contains  space  separated  element  interval  output  described  problem  statement
391/F2 __label__greedy  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  ha  developed  model  predict  stock  price  company  next  day  want  design  profit  maximizing  trading  algorithm  make  use  prediction  unfortunately  manao  trading  account  ha  following  restriction  allows  owning  either  share  stock  time  allows  buying  selling  share  stock  per  day  allows  maximum  buy  order  next  day  purpose  problem  define  trade  act  buying  share  stock  day  holding  stock  day  point  share  sold  restate  constraint  manao  permitted  make  non  overlapping  trade  course  day  trading  period  manao  model  ha  prediction  stock  price  even  though  restriction  limit  amount  profit  manao  make  compared  would  achievable  unlimited  trade  ability  hold  share  time  manao  still  ha  potential  make  lot  money  manao  model  perfectly  predicts  daily  price  stock  example  using  model  manao  could  wait  price  low  buy  share  hold  price  reach  high  value  sell  profit  repeat  process  time  day  passed  nevertheless  manao  satisfied  merely  good  trading  algorithm  want  develop  optimal  strategy  trading  subject  constraint  help  manao  achieve  goal  writing  program  determine  buy  sell  stock  achieve  greatest  possible  profit  day  trading  period  subject  constraint  contains  separated  single  space  following  contains  single  represents  price  someone  either  buy  sell  share  stock  day  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  inclusive  subproblem  point  inclusive  subproblem  point  inclusive  problem  program  report  amount  optimal  profit  rather  list  trade  achieve  profit
707/C __label__math  __label__number  theory  katya  study  fifth  grade  recently  class  studied  right  triangle  pythagorean  theorem  appeared  triple  positive  construct  right  triangle  segment  length  corresponding  triple  triple  called  pythagorean  triple  example  triple  pythagorean  triple  katya  wondered  specify  length  side  right  triangle  find  pythagorean  triple  corresponding  length  note  side  length  specified  cathetus  well  hypotenuse  katya  problem  completing  task  input  contains  single  length  side  right  triangle  print  form  pythagorean  triple
464/C __label__dp  andrew  eugene  playing  game  initially  andrew  ha  string  consisting  digit  eugene  sends  andrew  multiple  query  type  dii  mean  replace  digit  string  substring  equal  example  query  transforms  query  replace  empty  string  transforms  query  eugene  asks  andrew  find  remainder  division  decimal  representation  equal  represent  decimal  please  ignore  leading  empty  string  assumed  equal  andrew  got  tired  processing  eugene  request  manually  asked  write  program  help  contains  string  consisting  digit  string  processing  request  second  contains  single  query  next  description  query  query  described  string  exactly  digit  string  consisting  digit  empty  string  sum  length  query  exceed  query  written  order  need  performed  print  single  remainder  division  resulting
630/C __label__math  office  new  building  tax  office  city  lucky  lucky  consists  digit  find  maximum  office  new  building  tax  office  given  door  plate  hold  longer  digit  input  contains  maximum  length  door  plate  hold  output  maximum  office  unique  lucky  longer  digit
1077/B __label__greedy  house  flat  situated  main  street  berlatov  vova  watching  house  every  night  house  represented  array  flat  light  otherwise  vova  think  people  flat  disturbed  sleep  vova  concerned  following  question  minimum  people  exactly  pairwise  distinct  flat  turn  light  nobody  disturbed  task  find  input  contains  flat  house  second  input  contains  state  light  flat  print  minimum  people  exactly  pairwise  distinct  flat  turn  light  nobody  disturbed
1155/D __label__dp  __label__greedy  __label__data  structures  __label__brute  force  given  array  consisting  beauty  array  maximum  sum  consecutive  subarray  array  subarray  empty  example  beauty  array  beauty  array  choose  consecutive  subarray  multiply  value  contained  subarray  want  maximize  beauty  array  applying  operation  contains  length  array  respectively  second  contains  array  print  maximum  possible  beauty  array  multiplying  value  belonging  consecutive  subarray
1153/D __label__dp  __label__greedy  __label__dfs  __label__trees  __label__binary  search  serval  junior  high  school  student  japari  middle  school  still  thrilled  math  talented  boy  mathematics  like  play  time  want  play  rooted  tree  tree  connected  graph  without  cycle  rooted  tree  ha  special  vertex  called  root  parent  node  last  different  vertex  path  root  vertex  child  vertex  node  parent  vertex  leaf  ha  child  rooted  tree  serval  owns  ha  node  node  root  serval  write  node  tree  restriction  node  except  leaf  ha  operation  max  max  min  min  written  indicating  node  equal  maximum  minimum  son  respectively  assume  leaf  tree  serval  want  put  leaf  used  exactly  love  large  want  maximize  root  best  friend  help  contains  size  tree  second  contains  represents  operation  node  represents  min  min  represents  max  max  node  leaf  still  ignore  third  contains  represents  parent  node  output  maximum  possible  root  tree
1073/A __label__implementation  __label__strings  given  string  consisting  lowercase  latin  letter  substring  string  continuous  segment  letter  example  defor  substring  codeforces  fors  length  substring  letter  let  call  string  length  diverse  letter  appear  strictly  time  example  string  abc  iltlml  diverse  string  aab  task  find  diverse  substring  string  report  none  note  required  maximize  minimize  length  resulting  substring  contains  single  length  string  second  string  consisting  exactly  lowercase  latin  letter  print  diverse  substring  string
1046/I __label__geometry  friend  travelling  bubble  galaxy  say  hello  via  signal  distance  smaller  equal  time  speak  point  time  last  talk  distance  wa  greater  need  calculate  many  time  friend  said  hello  moment  array  point  friend  representing  position  moment  person  stay  position  moment  time  person  made  move  assume  movement  movement  constant  speed  constant  direction  contains  representing  moment  captured  position  friend  second  contains  next  contains  representing  coordinate  friend  captured  moment  output  contains  represents  many  time  friend  say  hello
852/E __label__dp  john  ha  bought  new  car  planning  journey  around  country  country  ha  city  connected  bidirectional  road  road  every  city  reachable  city  city  labeled  john  ha  select  city  start  journey  spends  day  city  travel  randomly  choosen  city  directly  connected  current  ha  visited  doe  continue  obeying  rule  select  starting  city  call  friend  jack  advice  jack  starting  big  casino  business  want  open  casino  city  max  per  city  maybe  nowhere  jack  know  john  well  know  visit  city  casino  gamble  exactly  continuing  journey  know  john  enters  casino  good  mood  leave  bad  mood  vice  versa  since  john  friend  want  good  mood  moment  finish  journey  john  good  mood  starting  journey  many  way  jack  select  starting  city  john  city  build  casino  matter  john  travel  good  mood  end  print  answer  modulo  positive  city  next  separated  single  space  meaning  city  connected  bidirectional  road  output  answer  problem  modulo
1051/F __label__graphs  __label__trees  given  weighed  undirected  connected  graph  consisting  vertex  edge  answer  query  query  find  shortest  distance  vertex  contains  vertex  edge  graph  next  edge  edge  triple  triple  mean  edge  vertex  weight  guaranteed  graph  contains  self  loop  multiple  edge  next  contains  single  query  next  contains  description  query  pay  attention  restriction  print
363/D __label__greedy  __label__binary  search  group  schoolboy  decided  ride  bike  nobody  ha  bike  boy  need  rent  renting  site  offered  bike  renting  price  different  different  bike  renting  bike  cost  ruble  total  boy  shared  budget  ruble  besides  ha  personal  money  boy  ha  personal  ruble  shared  budget  spent  schoolchildren  arbitrarily  boy  personal  money  spent  renting  boy  bike  boy  rent  bike  give  bike  somebody  else  maximum  schoolboy  able  ride  bike  minimum  sum  personal  money  spend  total  let  many  schoolchildren  ride  bike  possible  input  contains  second  contains  sequence  amount  boy  personal  money  third  contains  sequence  j  price  renting  bike  print  maximum  schoolboy  rent  bike  minimum  total  personal  money  needed  rent  bike  schoolchildren  rent  bike
724/D __label__greedy  __label__data  structures  __label__strings  given  string  consisting  lowercase  english  letter  choose  symbol  given  string  contiguous  subsegment  length  ha  least  selected  symbol  note  choose  position  symbol  symbol  us  chosen  symbol  form  new  string  symbol  chosen  position  used  allowed  rearrange  order  formally  choose  subsequence  index  selected  sequence  must  meet  following  condition  every  must  least  selected  index  belongs  segment  exist  jk  take  permutation  selected  index  form  new  string  sip  sip  sipt  find  lexicographically  smallest  string  obtained  using  procedure  input  contains  single  second  contains  string  consisting  lowercase  english  letter  guaranteed  string  non  empty  length  exceed  guaranteed  exceed  length  string  print  single  containing  lexicographically  smallest  string  obtained  using  procedure  described
765/B __label__implementation  __label__greedy  __label__strings  kostya  like  codeforces  contest  much  disappointed  solution  frequently  hacked  decided  obfuscate  intentionally  make  le  readable  code  upcoming  contest  obfuscate  code  kostya  look  variable  name  used  program  replaces  occurrence  single  symbol  look  second  variable  name  ha  replaced  replaces  occurrence  kostya  well  mannered  use  letter  name  obfuscation  moreover  unique  identifier  program  given  list  identifier  program  removed  space  break  check  program  result  kostya  obfuscation  input  string  lowercase  english  letter  identifier  program  removed  whitespace  character  program  result  kostya  obfuscation  print  yes  without  quote  otherwise  print
269/C __label__greedy  __label__graphs  __label__constructive  algorithms  emuskald  considers  master  flow  algorithm  ha  completed  ingenious  program  calculates  maximum  flow  undirected  graph  graph  consists  vertex  edge  vertex  numbered  vertex  source  sink  respectively  max  flow  algorithm  seems  little  flaw  find  flow  volume  edge  direction  help  find  edge  direction  flow  edge  note  resulting  flow  correct  maximum  flow  formally  given  undirected  graph  undirected  edge  given  flow  volume  direct  edge  way  following  condition  hold  vertex  sum  incoming  edge  equal  sum  outcoming  edge  vertex  ha  incoming  edge  obtained  directed  graph  doe  cycle  input  contains  space  separated  vertex  edge  graph  following  space  separated  aii  mean  undirected  edge  flow  volume  guaranteed  edge  connecting  vertex  given  graph  connected  solution  always  exists  output  containing  direction  edge  aii  flow  go  vertex  vertex  otherwise  edge  numbered  order  given  input
1203/A __label__implementation  student  standing  circle  order  index  student  guaranteed  index  student  distinct  form  permutation  student  want  start  round  dance  clockwise  round  dance  started  student  come  right  student  clockwise  order  student  student  come  right  student  clockwise  order  student  come  right  student  clockwise  order  counterclockwise  round  dance  almost  thing  difference  student  right  student  counterclockwise  order  condition  met  every  example  index  student  listed  clockwise  order  start  clockwise  round  dance  student  index  clockwise  order  start  counterclockwise  round  dance  task  determine  whether  possible  start  round  dance  note  student  change  position  starting  dance  swap  leave  circle  student  enter  circle  answer  independent  query  input  contains  query  query  follow  query  contains  student  second  query  contains  permutation  index  index  student  clockwise  order  guaranteed  distinct  form  permutation  query  print  answer  round  dance  started  given  order  student  print  yes  otherwise  print
469/A __label__implementation  __label__greedy  game  called  wan  na  guy  consisting  level  little  friend  little  addicted  game  want  pas  whole  game  little  pas  level  game  little  pas  level  game  given  index  level  little  pas  index  level  little  pas  little  little  pas  whole  game  cooperate  contains  single  next  contains  follows  distinct  denote  index  level  little  pas  next  contains  level  little  pas  format  assumed  level  numbered  pas  level  print  become  guy  impossible  print  keyboard  without  quote
457/C __label__brute  force  running  governor  small  city  russia  ran  poll  research  every  person  city  know  vote  much  cost  bribe  person  vote  instead  whomever  want  vote  right  curious  smallest  amount  money  need  spend  bribing  win  election  win  election  need  strictly  vote  candidate  contains  voter  city  next  describes  voter  contains  candidate  voter  going  vote  amount  money  need  pay  change  mind  candidate  voter  want  vote  equal  case  equal  print  smallest  amount  money  need  spend  win  election
1175/F __label__math  __label__data  structures  __label__brute  force  array  let  call  subarray  array  subpermutation  contains  exactly  example  array  contains  subarrays  subpermutations  asked  calculate  subpermutations  contains  second  contains  array  print  subpermutations  array
862/C __label__constructive  algorithms  mahmoud  ehab  third  stage  adventure  know  evil  like  set  time  show  set  large  collection  ask  create  new  set  replenish  beautiful  collection  set  evil  ha  favorite  evil  asks  mahmoud  ehab  find  set  distinct  non  negative  bitwise  xor  sum  exactly  evil  like  big  set  greater  contains  element  set  desired  bitwise  xor  respectively  set  print  without  quote
868/F __label__dp  given  array  cost  subsegment  unordered  pair  distinct  index  subsegment  equal  element  split  given  array  non  intersecting  non  empty  subsegments  sum  cost  minimum  possible  element  present  exactly  subsegment  contains  length  array  segment  need  split  array  next  contains  element  array  print  single  minimum  possible  total  cost  resulting  subsegments
375/B __label__dp  __label__implementation  __label__data  structures  __label__sortings  given  matrix  consisting  digit  size  n  allowed  rearrange  row  maximum  area  submatrix  consists  obtained  given  problem  described  operation  let  assume  row  matrix  numbered  top  bottom  column  numbered  left  right  matrix  cell  intersection  row  column  represented  formally  submatrix  matrix  group  assume  submatrix  contains  cell  l  area  submatrix  cell  contains  contains  next  character  matrix  matrix  contains  character  note  element  matrix  follow  without  space  print  single  area  maximum  obtained  submatrix  obtain  matrix  print
390/B __label__implementation  inna  great  piano  player  dima  modest  guitar  player  dima  ha  recently  written  song  want  play  together  course  sereja  want  listen  song  much  song  sequence  note  dima  inna  want  play  note  time  play  note  volume  piano  guitar  retain  harmony  total  volume  note  wa  played  guitar  piano  must  equal  dima  inna  play  note  described  rule  skip  sereja  joy  drop  inna  dima  play  note  volume  correspondingly  sereja  joy  rise  xi  sereja  ha  returned  home  university  current  joy  help  dima  inna  play  song  maximize  sereja  total  joy  listening  whole  song  input  contains  note  song  second  contains  third  contains  single  print  maximum  possible  joy  sereja  feel  listens  song
1167/D __label__greedy  __label__constructive  algorithms  string  called  bracket  sequence  doe  character  bracket  sequence  called  regular  shortly  rb  possible  obtain  correct  arithmetic  expression  inserting  character  sequence  example  rb  see  opening  bracket  rb  paired  closing  bracket  using  fact  define  nesting  depth  rb  maximum  bracket  pair  pair  lie  inside  inside  example  nesting  depth  given  rb  even  length  color  bracket  color  red  blue  bracket  sequence  consisting  red  bracket  rb  bracket  sequence  consisting  blue  bracket  rb  empty  allowed  reorder  character  bracket  left  uncolored  possible  variant  choose  minimizes  maximum  nesting  depth  multiple  solution  print  contains  even  length  rb  second  contains  regular  bracket  sequence  print  single  string  length  consisting  equal  character  belongs  rb  otherwise  belongs
1228/D __label__implementation  __label__graphs  __label__constructive  algorithms  __label__brute  force  simple  undirected  graph  consisting  vertex  edge  graph  self  loop  edge  pair  vertex  given  graph  disconnected  let  make  definition  let  nonempty  subset  vertex  intersect  let  true  condition  satisfied  edge  endpoint  vertex  set  edge  endpoint  vertex  set  every  vertex  edge  create  vertex  set  satisfy  condition  vertex  set  empty  vertex  assigned  vertex  set  true  possible  create  vertex  set  possible  print  matching  vertex  set  vertex  contains  vertex  edge  graph  next  contains  mean  edge  graph  self  loop  edge  pair  vertex  given  graph  disconnected  answer  exists  print  mean  vertex  set  vertex  otherwise  print
914/H __label__dp  __label__trees  ember  storm  play  game  ember  pick  labelled  tree  vertex  degree  every  vertex  storm  pick  distinct  vertex  tree  writes  label  vertex  path  sequence  finally  ember  pick  index  array  performs  following  operation  exactly  flip  subrange  add  sequence  becomes  negate  subrange  add  array  becomes  ember  win  array  monotonically  increasing  decreasing  otherwise  storm  win  game  described  tuple  flip  negate  depending  action  ember  chose  last  turn  find  tuples  occur  ember  storm  play  optimally  play  optimally  multiple  move  guaranteed  win  play  winning  move  otherwise  someone  loses  matter  play  play  possible  move  report  answer  modulo  input  consists  single  containing  print  single  possible  tuples  ember  storm  play  described  modulo
501/B __label__data  structures  __label__strings  misha  hacked  codeforces  site  decided  let  user  change  handle  user  change  handle  time  new  handle  must  equal  handle  already  used  wa  used  point  misha  ha  list  handle  change  request  completing  request  want  understand  relation  original  new  handle  user  help  contains  handle  change  request  next  description  request  per  query  consists  non  empty  string  old  new  separated  space  string  consist  lowercase  uppercase  latin  letter  digit  string  old  new  distinct  length  string  exceed  request  given  chronologically  word  moment  query  single  person  handle  old  handle  new  used  ha  used  anyone  output  user  changed  handle  least
847/J __label__binary  search  soon  year  student  initiated  student  university  berland  organizer  initiation  come  program  holiday  opinion  would  good  year  student  presented  small  souvenir  voiced  idea  year  student  found  following  pair  new  student  already  know  new  student  agrees  give  souvenir  already  familiar  new  student  doe  want  present  many  souvenir  organizer  written  pair  year  friend  familiar  want  determine  new  student  give  souvenir  opinion  pair  familiar  student  exactly  student  must  present  souvenir  another  student  year  student  already  decided  call  unluckiest  present  greatest  souvenir  organizer  return  promised  unluckiest  unlucky  minimum  possible  degree  course  present  greatest  souvenir  compared  student  small  possible  organizer  busy  asked  determine  pair  year  friend  present  souvenir  contains  year  student  pair  student  know  student  numbered  following  contains  xii  student  pair  guaranteed  pair  present  list  exactly  guaranteed  pair  list  pair  print  single  smallest  souvenir  unluckiest  student  present
1010/E __label__data  structures  natasha  wa  already  going  fly  back  earth  remembered  need  martian  store  buy  martian  souvenir  friend  known  martian  year  last  max  month  month  last  max  day  day  last  max  second  natasha  know  store  work  according  following  schedule  month  year  selected  max  day  month  max  second  day  max  store  work  moment  month  day  second  simultaneously  unfortunately  natasha  doe  know  martian  told  natasha  went  store  time  time  wa  opened  time  closed  described  every  trip  store  month  day  second  trip  whether  store  wa  open  closed  moment  natasha  store  time  determine  whether  store  time  trip  open  closed  information  unknown  contains  max  max  max  max  max  max  month  year  day  month  second  day  time  store  according  martian  wa  opened  wa  closed  natasha  query  next  contains  max  max  max  month  day  second  time  store  according  martian  wa  opened  next  contains  max  max  max  month  day  second  time  store  according  martian  wa  closed  next  contains  max  max  max  month  day  second  natasha  query  martian  wa  mistaken  information  store  open  closed  inconsistent  print  single  incorrect  without  quote
643/A __label__implementation  bear  limak  ha  colored  ball  arranged  long  row  ball  numbered  left  right  possible  color  numbered  ball  ha  color  fixed  interval  set  consecutive  element  ball  define  dominant  color  color  occurring  biggest  time  interval  case  tie  color  smallest  index  chosen  dominant  non  empty  interval  total  color  task  count  interval  color  dominant  input  contains  single  ball  second  contains  color  ball  print  equal  interval  dominant  color
360/E __label__greedy  __label__graphs  levko  love  sport  pathfinding  competition  city  much  order  boost  performance  levko  spends  spare  time  practicing  practice  game  city  consists  intersection  connected  directed  road  road  connect  pair  intersection  besides  road  leading  intersection  levko  zenyk  playing  game  levko  stand  intersection  zenyk  stand  intersection  want  get  intersection  person  doe  quicker  win  get  time  game  end  draw  agreement  player  start  simultaneously  move  speed  levko  want  win  much  know  length  road  city  know  change  length  road  road  pay  government  government  change  length  road  value  segment  border  inclusive  levko  wondered  reconstruct  road  win  game  whether  hope  draw  win  consider  player  play  optimally  well  guaranteed  get  intersection  intersection  contains  second  contains  next  contains  description  road  changed  levko  contains  representing  road  intersection  intersection  length  next  contains  description  road  changed  levko  contains  ii  representing  road  intersection  intersection  levko  set  road  length  limit  consider  intersection  numbered  guaranteed  get  intersection  intersection  print  string  win  without  quote  levko  win  game  string  draw  without  quote  levko  end  game  draw  lose  without  quote  loses  sure
723/F __label__implementation  __label__greedy  __label__graphs  given  undirected  connected  graph  consisting  vertex  edge  loop  multiple  edge  graph  given  distinct  vertex  value  task  build  spanning  tree  given  graph  note  graph  weighted  degree  vertex  exceed  degree  vertex  exceed  determine  spanning  tree  spanning  tree  graph  subgraph  tree  contains  vertex  graph  word  connected  graph  contains  edge  obtained  removing  edge  degree  vertex  edge  incident  vertex  input  contains  vertex  edge  graph  next  description  graph  edge  contains  u  end  corresponding  edge  guaranteed  graph  contains  loop  multiple  edge  connected  last  contains  answer  exist  print  without  quote  output
1139/A __label__implementation  __label__strings  given  string  length  contains  digit  substring  string  substring  called  even  represented  even  find  even  substring  note  even  substring  equal  string  different  counted  different  substring  contains  length  string  second  contains  string  length  string  consists  digit  print  even  substring
447/B __label__implementation  __label__greedy  dzy  love  collecting  special  string  lowercase  letter  lowercase  letter  dzy  know  value  special  string  length  string  represents  value  function  dzy  ha  string  want  insert  lowercase  letter  string  order  get  largest  possible  value  resulting  string  help  calculate  largest  possible  value  could  get  contains  single  string  second  contains  single  third  contains  twenty  non  negative  exceed  print  single  largest  possible  value  resulting  string  dzy  could  get
908/F __label__implementation  __label__greedy  __label__graphs  roy  biv  set  point  infinite  point  ha  color  red  green  blue  roy  biv  would  like  connect  point  edge  edge  drawn  given  point  cost  edge  equal  distance  point  connects  want  way  see  point  connected  either  directly  indirectly  catch  roy  see  color  red  biv  see  color  blue  therefore  choose  edge  way  red  point  removed  remaining  blue  green  point  connected  similarly  blue  point  removed  remaining  red  green  point  connected  help  compute  minimum  cost  way  choose  edge  satisfy  constraint  point  next  token  uppercase  english  letter  denoting  position  point  color  point  mean  red  denotes  green  mean  blue  position  strictly  increasing  order  print  single  minimum  cost  way  solve  problem
939/A __label__graphs  could  know  male  plane  female  plane  plane  earth  like  plane  plane  earth  numbered  plane  like  plane  fi  call  love  triangle  situation  plane  like  plane  plane  like  plane  plane  like  plane  find  love  triangle  earth  contains  single  plane  second  contains  fi  meaning  plane  like  output  yes  love  triangle  consisting  plane  earth  otherwise  output
432/A __label__implementation  __label__greedy  __label__sortings  saratov  state  university  olympiad  programmer  training  center  ssu  optc  ha  student  student  know  time  ha  participated  acm  icpc  world  programming  championship  according  acm  icpc  rule  person  participate  world  championship  time  head  ssu  optc  recently  gathering  team  participate  world  championship  team  must  consist  exactly  people  person  member  team  maximum  team  head  make  want  team  participate  world  championship  member  least  time  contains  next  contains  show  time  person  participated  acm  icpc  world  championship  print  single  answer  problem
1185/G1 __label__dp  difference  easy  hard  version  constraint  polycarp  love  listen  music  never  leaf  player  even  way  home  university  polycarp  overcomes  distance  university  house  exactly  minute  player  polycarp  store  song  characterized  parameter  length  song  minute  genre  polycarp  want  create  playlist  listen  music  time  way  university  home  time  arrival  home  playlist  polycarp  never  interrupt  song  always  listens  beginning  end  thus  started  listening  song  would  spend  exactly  minute  listening  polycarp  doe  like  song  genre  play  row  successively  adjacently  song  playlist  repeated  help  polycarpus  count  different  sequence  song  order  matter  total  duration  exactly  consecutive  song  genre  song  playlist  different  input  contains  song  player  required  total  duration  respectively  next  description  song  contains  duration  song  genre  respectively  output  different  sequence  song  total  length  exactly  consecutive  song  genre  song  playlist  different  since  answer  huge  output  modulo  remainder  dividing  quantity
1081/D __label__sortings  __label__graphs  chouti  wa  tired  tedious  homework  opened  old  programming  problem  created  year  ago  given  connected  undirected  graph  vertex  weighted  edge  special  vertex  let  define  cost  path  maximum  weight  edge  distance  vertex  minimum  cost  path  connecting  special  vertex  find  another  special  vertex  farthest  term  previous  paragraph  corresponding  distance  maximum  possible  output  distance  original  constraint  really  small  thought  problem  wa  boring  raise  constraint  hope  solve  contains  n  vertex  edge  special  vertex  second  contains  distinct  following  contains  denoting  edge  weight  given  graph  undirected  edge  used  direction  graph  multiple  edge  self  loop  guaranteed  graph  connected  distance  farthest  special  vertex
827/F __label__dp  __label__data  structures  __label__graphs  arkady  like  walk  around  kitchen  labyrinthine  kitchen  consists  several  important  place  connected  passage  unfortunately  happens  passage  flooded  milk  impossible  pas  namely  possible  pas  passage  direction  time  interval  length  passage  equal  arkady  make  second  security  reason  arkady  never  stop  change  direction  going  passage  word  start  walking  passage  reach  end  immediately  leave  end  today  arkady  need  quickly  reach  important  place  place  plan  exit  place  time  moment  reach  place  early  please  find  minimum  time  spend  way  contains  important  place  passage  respectively  follow  describe  passage  contains  place  passage  connects  time  segment  possible  use  passage  print  minimum  time  arkady  spend  reach  destination  reach  place  print
1202/E __label__brute  force  __label__strings  given  string  string  string  consist  lowercase  latin  letter  let  occurences  string  string  example  aaabacaa  ababa  aba  calculate  value  concatenation  string  note  pair  include  answer  contains  string  second  contains  next  contains  string  guaranteed  string  consist  lowercase  english  letter  print  value
471/C __label__math  __label__greedy  __label__brute  force  __label__binary  search  polar  bear  menshykov  uslada  zoo  petersburg  elephant  horace  zoo  kiev  decided  build  house  card  already  found  hefty  deck  playing  card  let  describe  house  want  make  house  consists  non  floor  floor  consists  non  room  ceiling  room  card  leaned  towards  room  made  row  adjoining  room  share  ceiling  made  another  card  floor  besides  lowest  le  room  floor  please  note  house  end  floor  room  case  must  covered  ceiling  room  adjoining  floor  differ  difference  bear  practicing  put  card  horace  try  figure  many  floor  house  consist  height  house  floor  possible  make  lot  different  house  different  height  card  seems  elephant  solve  problem  asks  count  distinct  height  house  make  using  exactly  card  single  contains  card  print  distinct  height  house  made  exactly  card
1093/F __label__dp  vasya  ha  got  array  consisting  len  addition  array  either  inclusive  equal  array  good  segment  len  consecutive  equal  vasya  replace  inclusive  way  resulting  array  good  tell  way  replacement  since  answer  large  print  modulo  contains  len  en  second  contains  array  either  inclusive  print  way  replace  inclusive  array  good  answer  large  print  modulo
436/E __label__greedy  __label__data  structures  everyone  ha  played  cut  rope  know  full  well  gameplay  organized  level  game  divided  box  initially  box  level  available  player  complete  level  earn  star  collecting  star  open  new  box  level  imagine  playing  cut  rope  time  currently  level  box  way  called  cardboard  box  level  characterized  long  take  complete  level  star  long  take  complete  level  star  want  open  next  box  quickly  possible  need  earn  least  star  make  happen  note  level  passed  either  star  necessarily  need  pas  level  contains  n  level  box  star  need  open  another  box  following  contains  attribute  level  print  minimum  time  need  open  next  box
862/A __label__implementation  __label__greedy  evil  kidnapped  mahmoud  ehab  evil  land  performance  evil  olympiad  informatics  eoi  decided  give  problem  let  evil  interested  set  ha  set  evil  call  set  evil  mex  exactly  mex  set  minimum  non  negative  exist  example  mex  set  mex  set  evil  going  make  set  evil  perform  operation  operation  add  non  negative  set  erase  element  minimal  operation  evil  ha  perform  make  set  evil  contains  size  set  evil  owns  desired  mex  second  contains  distinct  non  negative  exceeding  represent  set  minimal  operation  evil  perform
844/A __label__implementation  __label__greedy  __label__strings  calculate  minimum  character  need  change  string  contains  least  different  letter  print  impossible  string  consists  lowercase  latin  letter  allowed  change  character  lowercase  latin  letter  input  contains  string  consisting  lowercase  latin  letter  denotes  length  second  input  contains  print  single  minimum  necessary  change  word  impossible  without  quote  impossible
702/E __label__data  structures  __label__graphs  given  functional  graph  directed  graph  vertex  go  exactly  arc  vertex  numerated  graph  given  array  vertex  go  arc  vertex  besides  given  array  weight  arc  arc  weight  graph  sample  test  given  length  path  need  find  vertex  sum  weight  arc  path  length  equal  start  vertex  minimal  weight  arc  path  length  start  vertex  length  path  arc  path  contains  second  contains  sequence  third  sequence  print  pair
768/A __label__sortings  __label__constructive  algorithms  night  gather  watch  begin  shall  end  death  shall  take  wife  hold  land  father  child  shall  wear  crown  win  glory  shall  live  die  post  sword  darkness  watcher  wall  shield  guard  realm  men  pledge  life  honor  night  watch  night  night  come  night  watch  oath  begin  watch  jon  snow  assigned  task  support  steward  time  ha  steward  ha  provide  support  steward  ha  strength  jon  snow  like  support  steward  exists  least  steward  ha  strength  strictly  le  least  steward  ha  strength  strictly  greater  find  many  steward  jon  support  consists  single  steward  jon  snow  second  consists  space  separated  representing  value  assigned  steward  output  single  representing  steward  jon  feed
461/C __label__implementation  __label__data  structures  appleman  ha  big  sheet  paper  sheet  ha  form  rectangle  dimension  task  help  appleman  folding  sheet  actually  need  perform  query  query  following  type  fold  sheet  paper  position  query  leftmost  part  paper  dimension  must  rightmost  part  paper  dimension  current  width  sheet  count  total  width  paper  piece  make  described  later  cut  consider  piece  cut  make  cut  distance  left  border  current  sheet  paper  distance  left  border  current  sheet  paper  please  look  explanation  test  example  better  understanding  problem  contains  width  paper  query  following  contains  described  query  following  format  current  width  sheet  type  query  current  width  sheet  second  type  query  query  second  type  output  answer
761/B __label__math  __label__implementation  __label__brute  force  running  barrier  circle  track  popular  country  dasha  life  wonder  way  class  saw  following  situation  track  circle  length  distinct  point  barrier  athlete  always  run  track  counterclockwise  direction  look  barrier  located  distance  along  track  friend  parrot  kefa  leopard  sasha  participated  competition  ran  lap  friend  started  integral  point  track  friend  wrote  distance  start  along  track  barrier  thus  wrote  ascending  order  wa  inclusively  consider  example  let  blue  point  barrier  green  point  kefa  start  sasha  start  kefa  writes  sequence  sasha  writes  several  track  country  length  barrier  position  barrier  differ  different  track  dasha  interested  possible  kefa  sasha  ran  track  participated  different  track  write  program  check  kefa  sasha  track  coincide  mean  obtained  changing  start  position  note  always  run  track  direction  counterclockwise  look  track  contains  n  barrier  track  length  second  contains  distinct  ascending  order  distance  kefa  start  barrier  order  appearance  range  inclusively  second  contains  distinct  ascending  order  distance  sasha  start  barrier  order  overcoming  range  inclusively  print  yes  without  quote  kefa  sasha  ran  coinciding  track  mean  position  barrier  coincides  start  running  point  track  otherwise  print  without  quote
576/C __label__greedy  __label__sortings  __label__constructive  algorithms  __label__geometry  plane  point  coordinate  distance  point  said  following  value  distance  calculated  formula  called  manhattan  distance  call  hamiltonian  path  permutation  say  length  path  value  find  hamiltonian  path  length  note  minimize  path  length  contains  contains  coordinate  point  guaranteed  point  coincide  print  permutation  sought  hamiltonian  path  permutation  must  meet  inequality
1108/D __label__dp  __label__greedy  __label__constructive  algorithms  garland  consisting  lamp  lamp  colored  red  green  blue  color  lamp  color  lamp  garland  recolor  lamp  garland  recoloring  lamp  mean  changing  initial  color  another  way  obtained  garland  diverse  garland  called  diverse  adjacent  consecutive  lamp  lamp  distance  position  distinct  color  word  obtained  garland  condition  satisfied  way  recolor  initial  garland  make  diverse  choose  minimum  recolored  lamp  multiple  optimal  solution  print  input  contains  lamp  second  input  contains  string  consisting  character  color  lamp  garland  output  print  minimum  recolors  needed  obtain  diverse  garland  given
1225/F __label__greedy  __label__trees  __label__constructive  algorithms  bytelandian  tree  factory  produce  tree  kind  industrial  application  tasked  optimizing  production  certain  type  tree  especially  large  important  order  tree  question  rooted  tree  vertex  labelled  distinct  vertex  labelled  root  tree  non  root  vertex  label  parent  le  label  tree  factory  made  bamboo  blank  bamboo  rooted  tree  vertex  ha  exactly  child  except  single  leaf  vertex  child  vertex  bamboo  blank  labelled  arbitrarily  processing  started  process  bamboo  another  tree  single  type  operation  made  choose  arbitrary  non  root  vertex  parent  root  either  operation  consists  changing  parent  parent  parent  note  parent  vertex  remain  unchanged  particular  subtree  doe  change  efficiency  crucial  hence  minimize  operation  make  desired  tree  bamboo  blank  construct  optimal  sequence  operation  produce  desired  tree  note  labelling  resulting  tree  ha  coincide  labelling  desired  tree  formally  label  root  equal  non  root  vertex  label  label  parent  guaranteed  test  present  problem  answer  exists  optimal  sequence  contains  operation  note  hack  doe  meet  condition  invalid  contains  single  vertex  tree  second  contains  index  parent  vertex  respectively  print  distinct  initial  labelling  bamboo  blank  starting  root  vertex
442/B __label__math  __label__greedy  andrey  need  problem  conduct  programming  contest  ha  friend  always  willing  help  ask  come  contest  problem  andrey  know  value  fiend  probability  friend  come  problem  andrey  asks  help  andrey  choose  people  ask  need  problem  andrey  going  really  upset  come  problem  get  problem  friend  need  choose  set  people  maximizes  chance  andrey  getting  upset  contains  single  andrey  friend  second  contains  real  probability  friend  come  problem  probability  given  digit  decimal  point  print  single  real  probability  andrey  get  upset  optimal  choice  friend  answer  considered  valid  differs  correct
1081/A __label__math  __label__constructive  algorithms  chouti  wa  competitive  programming  competition  problem  accepted  got  bored  decided  invent  small  game  came  following  game  player  ha  positive  initially  value  equal  player  able  following  operation  many  time  player  want  possibly  choose  positive  divisor  subtract  goal  player  minimize  value  end  soon  chouti  found  game  trivial  beat  game  input  contains  initial  value  output  single  minimum  value  player  get
1168/D __label__dp  __label__implementation  __label__trees  toad  ilya  ha  rooted  binary  tree  vertex  root  tree  connected  graph  without  cycle  tree  rooted  vertex  selected  called  root  vertex  child  vertex  connected  edge  closer  root  leaf  non  root  vertex  ha  child  tree  ilya  ha  vertex  ha  child  edge  ha  character  written  character  lowercase  english  letter  question  mark  ilya  time  update  tree  bit  update  replace  exactly  character  edge  update  ilya  need  find  tree  anagrammable  yes  find  anagramnity  letter  well  difficult  explain  try  start  string  anagram  string  possible  rearrange  letter  without  changing  letter  becomes  example  string  fortyfive  anagram  string  overfifty  string  aabb  anagram  string  bbba  consider  path  root  tree  leaf  character  edge  path  form  string  say  string  associated  leaf  tree  anagrammable  possible  replace  question  mark  lowercase  english  letter  pair  leaf  associated  string  leaf  anagram  tree  anagrammable  anagramnity  letter  maximum  possible  letter  string  associated  leaf  valid  replacement  question  mark  please  update  find  tree  anagrammable  yes  find  nd  letter  anagramnity  letter  ind  index  letter  alphabet  ind  ind  ind  input  contains  vertex  tree  query  next  describe  initial  tree  contains  character  lowercase  english  letter  question  mark  describing  edge  vertex  character  written  root  tree  vertex  vertex  ha  child  next  describe  query  contains  lowercase  english  letter  question  mark  meaning  updated  character  edge  updated  character  wa  written  output  print  fou  tree  anagrammable  update
1082/E __label__dp  __label__greedy  __label__binary  search  given  array  length  choose  segment  value  positive  negative  even  change  l  maximum  possible  element  value  obtained  operation  contains  length  array  value  obtain  second  contains  array  print  maximum  possible  element  value  obtained  performing  operation  described
1202/D __label__math  __label__constructive  algorithms  __label__strings  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  given  find  sequence  consisting  digit  ha  exactly  subsequence  equal  example  sequence  ha  subsequence  equal  remove  second  fifth  character  remove  third  fifth  character  remove  fourth  fifth  character  remove  second  sixth  character  remove  third  sixth  character  remove  fourth  sixth  character  note  length  sequence  must  exceed  answer  independent  query  contains  query  next  contains  description  query  contains  query  print  string  consisting  digit  string  must  exactly  subsequence  multiple  string  print
827/C __label__data  structures  __label__strings  everyone  know  dna  strand  consist  nucleotide  type  nucleotide  dna  strand  sequence  nucleotide  scientist  decided  track  evolution  rare  specie  dna  strand  wa  string  initially  evolution  specie  described  sequence  change  dna  every  change  change  nucleotide  example  following  change  happen  dna  strand  aagc  second  nucleotide  change  resulting  dna  strand  atgc  scientist  know  segment  dna  strand  affected  unknown  infection  represent  infection  sequence  nucleotide  scientist  interested  change  caused  infection  thus  sometimes  want  know  value  impact  infection  segment  dna  value  computed  follows  let  infection  represented  string  let  scientist  interested  dna  strand  segment  starting  position  position  inclusive  prefix  string  eee  string  consists  infinitely  many  repeat  string  written  string  position  position  inclusive  value  impact  position  letter  string  coincided  letter  written  developer  innokenty  interested  bioinformatics  scientist  asked  help  innokenty  busy  preparing  cup  decided  delegate  problem  competitor  help  scientist  contains  string  describes  initial  dna  strand  consists  capital  english  letter  next  contains  single  event  follow  describes  event  ha  format  letter  mean  change  dna  nucleotide  position  string  letter  mean  scientist  interested  value  impact  infection  segment  dna  strand  position  position  inclusive  scientist  query  second  type  query  print  single  new  value  impact  infection  dna
394/D __label__math  __label__implementation  __label__brute  force  physical  education  teacher  sesc  sort  mathematician  favorite  topic  mathematics  progression  teacher  want  student  lined  non  decreasing  height  form  arithmetic  progression  achieve  goal  gym  teacher  ordered  lot  magical  bun  dining  room  magic  bun  come  type  student  eats  magic  bun  type  height  increase  student  eats  magical  bun  second  type  height  decrease  physical  education  teacher  expected  care  health  student  doe  want  eat  lot  bun  precisely  want  maximum  bun  eaten  student  minimum  help  teacher  get  maximum  bun  pupil  eat  achieve  goal  teacher  get  possible  way  achieving  objective  namely  height  lowest  student  end  step  resulting  progression  single  contains  student  second  contains  space  separated  height  student  height  student  absolute  value  exceed  print  maximum  bun  eaten  student  achieve  teacher  aim  second  print  space  separated  height  lowest  student  end  step  progression  please  pay  attention  step  non  negative
633/G __label__math  __label__data  structures  __label__dfs  __label__number  theory  yash  love  playing  tree  get  especially  excited  something  prime  th  birthday  wa  granted  rooted  tree  node  answer  query  hearing  prime  tree  yash  get  intoxicated  excitement  asks  help  answer  query  tree  tree  rooted  node  node  ha  value  associated  given  query  type  given  node  value  increase  subtree  node  value  given  node  find  prime  le  exists  node  subtree  non  negative  value  input  contains  node  tree  value  problem  statement  respectively  second  consists  initial  value  node  follow  describe  tree  contains  index  node  connected  edge  next  contains  single  query  proceed  last  either  giving  query  second  type  respectively  guaranteed  least  query  second  type  query  second  type  print  suitable  prime
463/C __label__implementation  __label__greedy  gargari  jealous  friend  caisa  game  previous  problem  want  prove  genius  ha  n  chessboard  cell  chessboard  ha  written  gargari  want  place  bishop  chessboard  way  cell  attacked  consider  cell  written  cell  attacked  bishop  gargari  get  dollar  tell  gargari  place  bishop  chessboard  get  maximum  amount  money  assume  cell  attacked  bishop  cell  located  diagonal  bishop  cell  bishop  considered  attacked  contains  single  next  contains  aij  ij  description  chessboard  print  maximal  dollar  gargari  get  next  print  row  bishop  placed  column  bishop  placed  consider  row  numbered  top  bottom  column  numbered  left  right
1237/H __label__constructive  algorithms  string  equal  even  length  consisting  character  endgame  finally  make  universe  perfectly  balanced  need  make  string  equal  step  choose  prefix  even  length  reverse  formally  choose  positive  even  set  find  way  make  equal  using  reversal  kind  determine  way  exist  reversal  minimized  contains  single  denoting  test  case  test  case  consists  contains  string  length  second  contains  string  length  nmod  string  consist  character  sum  test  case  exceed  test  case  impossible  make  equal  reversal  output  single
309/D __label__brute  force  __label__geometry  professional  sport  hard  work  equipment  designed  top  engineer  example  let  take  tennis  great  shape  need  excellent  racket  problem  task  contribute  development  tennis  help  design  revolutionary  new  concept  racket  concept  triangular  racket  ant  triangle  regular  soon  chosen  shape  need  stretch  net  time  came  rocket  hole  drilled  side  hole  divide  side  equal  part  closest  apex  hole  side  made  better  ventilation  stretch  net  next  revolutionary  idea  stretch  net  obtuse  triangle  hole  triangle  apex  lay  different  side  moreover  need  net  stretched  along  every  possible  obtuse  triangle  need  help  help  count  triangle  net  going  consist  triangle  considered  different  picture  fixed  position  racket  different  input  contains  print  single  answer  problem
891/D __label__dp  __label__dfs  __label__trees  sloth  bad  mkay  decided  prepare  problem  punish  lazy  guy  given  tree  count  way  remove  edge  add  edge  final  graph  tree  ha  perfect  matching  way  operation  considered  different  removed  edge  added  edge  removed  edge  added  edge  equal  perfect  matching  subset  edge  vertex  endpoint  exactly  edge  contains  vertex  next  contains  endpoint  edge  guaranteed  graph  tree  output  single  answer  problem
571/D __label__data  structures  __label__trees  __label__binary  search  oscolcovo  city  ha  campus  consisting  student  dormitory  university  military  office  initially  dormitory  belongs  university  assigned  military  office  life  go  campus  continuously  going  change  change  type  university  merges  university  dormitory  belonged  university  assigned  university  university  disappears  military  office  merges  military  office  dormitory  assigned  military  office  assigned  military  office  military  office  disappears  student  university  move  dormitory  let  kxj  dormitory  belong  university  time  student  move  student  dormitory  university  increase  kxj  note  dormitory  belong  university  student  move  dormitory  university  military  office  conduct  raid  dormitory  assigned  take  student  thus  moment  time  dormitory  assigned  exactly  university  military  office  initially  dormitory  empty  task  process  change  take  place  campus  answer  query  many  people  currently  live  dormitory  contains  dormitory  query  respectively  next  query  given  following  format  bj  merging  university  dj  merging  military  office  xj  student  university  moving  dormitory  yj  raid  military  office  qj  query  asking  people  dormitory  query  positive  exceed  guaranteed  moment  query  university  military  office  present  query  exist  print  answer  query  asking  people  dormitory
754/E __label__trees  __label__brute  force  __label__strings  dasha  fond  challenging  puzzle  rubik  cube  time  ha  cyclic  table  size  n  cell  table  contains  lowercase  english  letter  cell  ha  coordinate  table  cyclic  mean  right  cell  cell  cell  dasha  ha  pattern  well  pattern  non  cyclic  table  size  r  cell  either  lowercase  english  letter  question  mark  cell  ha  coordinate  goal  puzzle  find  appearance  position  pattern  cyclic  table  say  cell  cyclic  table  appearance  position  every  pair  following  condition  hold  question  mark  cell  pattern  cell  cyclic  table  equal  cell  pattern  dasha  solved  puzzle  time  well  others  ever  tried  solve  contains  cyclic  table  size  next  contains  string  lowercase  english  character  description  cyclic  table  next  contains  size  pattern  next  contains  string  lowercase  english  letter  character  description  pattern  print  character  character  equal
526/F __label__data  structures  problem  meet  simplified  model  game  pudding  monster  important  process  developing  game  creating  level  game  field  pudding  monster  n  rectangular  grid  cell  monster  cell  game  object  gameplay  moving  monster  around  field  monster  touching  glue  together  single  big  pudding  remember  statistic  showed  interesting  map  appear  initially  row  column  contains  exactly  monster  rest  map  specific  set  correct  positioning  game  object  technique  widely  used  make  development  process  efficient  reusing  available  resource  example  large  n  map  choose  smaller  k  square  part  containing  exactly  monster  suggest  simplified  version  original  map  wonder  many  way  choose  initial  map  k  square  fragment  containing  exactly  pudding  monster  calculate  contains  single  size  initial  field  next  coordinate  cell  initially  containing  monster  next  contains  row  column  cell  initially  contains  monster  guaranteed  distinct  distinct  print  distinct  square  fragment  original  field  form  new  map
833/A __label__math  __label__number  theory  slastyona  loyal  dog  pushok  playing  meaningless  game  indeed  interesting  game  consists  multiple  round  rule  simple  round  natural  chosen  say  bark  faster  win  round  winner  score  multiplied  loser  score  multiplied  beginning  game  slastyona  pushok  score  equal  unfortunately  slastyona  lost  notepad  history  game  wa  recorded  managed  recall  final  result  game  though  memory  vague  help  slastyona  verify  correctness  put  another  way  given  pair  score  determine  whether  wa  possible  game  finish  result  string  game  given  game  represented  pair  score  result  slastyona  pushok  correspondingly  pair  score  answer  yes  possible  game  finish  given  score  otherwise
1243/B1 __label__strings  problem  different  hard  version  version  ujan  make  exactly  exchange  hack  problem  solve  problem  struggling  failing  many  time  ujan  decided  try  clean  house  decided  get  string  order  ujan  ha  distinct  string  length  consisting  lowercase  english  character  want  make  equal  since  ujan  lazy  perform  following  operation  exactly  take  position  value  equal  different  swap  character  succeed  note  ha  perform  operation  exactly  ha  perform  operation  contains  single  test  case  test  case  contains  single  length  string  next  contains  string  length  exactly  string  consist  lowercase  english  letter  guaranteed  string  different  test  case  output  yes  ujan  make  string  equal  otherwise
525/E __label__math  __label__dp  __label__brute  force  __label__binary  search  anya  love  fold  stick  today  decided  anya  ha  cube  lying  numbered  left  right  natural  written  ha  sticker  exclamation  mark  know  sticker  doe  exceed  cube  anya  stick  exclamation  mark  cube  get  factorial  written  cube  example  cube  read  sticking  read  equal  need  help  anya  count  many  way  choose  cube  stick  chosen  cube  exclamation  mark  sum  written  chosen  cube  sticking  becomes  equal  anya  stick  exclamation  mark  cube  way  considered  set  chosen  cube  set  cube  exclamation  mark  input  contains  space  separated  cube  sticker  anya  ha  sum  need  get  second  contains  positive  written  cube  cube  input  described  order  left  right  starting  multiple  cube  output  way  choose  cube  stick  exclamation  mark  sum  became  equal  given
1202/A __label__greedy  given  binary  string  binary  representation  let  denote  choose  calculate  expression  write  binary  representation  reverse  order  let  denote  example  let  chosen  since  given  need  choose  lexicographically  minimal  read  note  know  doe  lexicographically  mean  guaranteed  given  constraint  exists  finite  contains  single  query  next  description  query  per  query  contains  binary  string  consisting  character  character  either  second  contains  binary  string  consisting  character  character  either  guaranteed  represented  represented  representation  leading  total  length  query  exceed  total  length  query  exceed  print  per  query  query  print  lexicographically  minimal
678/A __label__math  __label__implementation  johny  like  much  johny  want  find  smallest  greater  divisible  contains  print  smallest  divisible
852/A __label__math  __label__implementation  __label__brute  force  john  gave  jack  hard  problem  wrote  big  positive  piece  paper  le  step  jack  allowed  put  sign  digit  maybe  none  current  calculate  sum  expression  perform  procedure  sum  resulting  sum  labeled  respectively  etc  task  get  single  digit  problem  much  blank  space  paper  space  perform  step  since  want  fill  paper  completely  perform  exactly  step  jack  must  add  leading  intermediate  result  put  sign  front  digit  example  current  valid  step  resulting  contains  positive  representing  digit  second  contains  string  length  representing  positive  character  digit  leading  output  exactly  step  jack  need  perform  solve  problem  output  sequence  step  result  single  digit  logically  consistent
547/B __label__dp  __label__data  structures  __label__binary  search  mike  president  country  fatherland  bear  living  country  besides  mike  standing  numbered  left  right  bear  exactly  foot  high  group  bear  non  empty  contiguous  segment  size  group  bear  group  strength  group  minimum  height  bear  group  mike  curious  know  maximum  strength  group  size  input  contains  bear  second  contains  separated  space  height  bear  print  print  maximum  strength  group  size
1056/G __label__data  structures  __label__graphs  __label__brute  force  problem  tram  route  morning  arkady  decided  return  home  metro  fortunately  arkady  metro  city  unfortunately  arkady  circular  mean  station  enumerated  tunnel  pair  consecutive  station  well  station  station  train  clockwise  direction  visit  station  order  n  train  counter  clockwise  direction  visit  station  reverse  order  station  interior  mostly  red  color  station  blue  interior  arkady  entered  metro  station  decided  use  following  algorithm  choose  way  home  initially  ha  positive  mind  current  station  ha  red  interior  take  clockwise  directed  train  otherwise  take  counter  clockwise  directed  train  ride  exactly  station  train  leaf  train  decrease  still  positive  return  step  otherwise  exit  metro  already  realized  algorithm  probably  bring  arkady  home  find  station  exit  metro  continue  helping  contains  total  station  station  red  interior  second  contains  starting  station  initial  value  output  station  arkady  exit  metro
570/E __label__dp  peppa  pig  wa  walking  walked  forest  strange  coincidence  forest  ha  shape  rectangle  consisting  row  column  enumerate  row  rectangle  top  bottom  column  left  right  let  denote  cell  intersection  row  column  initially  pig  stand  cell  end  want  cell  since  pig  hurry  get  home  cell  either  cell  leave  forest  forest  pig  unusual  cell  forest  similar  look  different  peppa  enjoys  taking  picture  every  step  take  picture  cell  path  forest  considered  beautiful  photograph  taken  way  viewed  forward  reverse  order  showing  sequence  photo  formally  formed  cell  order  visiting  palindrome  read  formal  definition  palindrome  previous  problem  count  beautiful  path  cell  cell  since  large  determine  remainder  dividing  contains  height  width  field  following  contains  lowercase  english  letter  identifying  type  cell  forest  identical  cell  represented  identical  letter  different  cell  represented  different  letter  print  single  beautiful  path  modulo
997/A __label__math  __label__implementation  __label__greedy  __label__brute  force  got  string  consisting  let  call  sequence  consecutive  element  substring  string  apply  following  operation  time  choose  substring  string  example  choose  entire  string  reverse  paying  coin  example  choose  substring  string  example  choose  entire  string  symbol  replace  symbol  opposite  replaced  paying  coin  example  apply  operation  order  allowed  apply  operation  multiple  time  substring  minimum  coin  need  spend  get  string  consisting  input  contains  length  string  cost  operation  substring  reverse  cost  second  operation  inverting  element  substring  second  contains  string  length  consisting  print  single  minimum  total  cost  operation  need  spend  get  string  consisting  print  need  perform  operation
962/G __label__data  structures  __label__trees  __label__geometry  petya  ha  polygon  consisting  vertex  side  petya  polygon  parallel  coordinate  ax  adjacent  side  petya  polygon  perpendicular  guaranteed  polygon  simple  self  intersection  self  touch  internal  area  polygon  border  included  wa  painted  black  color  petya  petya  ha  rectangular  window  defined  coordinate  look  polygon  rectangular  window  moved  side  rectangular  window  parallel  coordinate  ax  blue  color  represents  border  polygon  red  color  petya  window  answer  case  determine  black  connected  area  petya  polygon  seen  rectangular  window  coordinate  top  left  bottom  right  corner  rectangular  window  second  contains  single  vertex  petya  polygon  following  contains  coordinate  vertex  petya  polygon  counterclockwise  order  guaranteed  given  polygon  satisfies  condition  described  statement  coordinate  rectangular  window  coordinate  vertex  polygon  non  negative  exceed  print  black  connected  area  petya  polygon  seen  rectangular  window
792/C __label__math  __label__dp  __label__greedy  __label__number  theory  positive  written  blackboard  consists  digit  transform  beautiful  erasing  digit  want  erase  digit  possible  called  beautiful  consists  least  digit  leading  multiple  example  beautiful  write  program  given  find  beautiful  transformed  erasing  digit  possible  erase  arbitraty  set  digit  example  another  impossible  obtain  beautiful  print  multiple  answer  print  input  contains  positive  without  leading  print  beautiful  obtained  erasing  possible  digit  answer  print
472/A __label__math  __label__number  theory  way  create  task  learn  math  generate  random  math  statement  modify  theorem  get  something  new  build  new  task  example  statement  called  goldbach  conjecture  say  even  le  expressed  sum  prime  let  modify  statement  like  le  expressed  sum  composite  like  goldbach  conjecture  prove  theorem  given  le  express  sum  composite  contains  output  composite  multiple  solution  output
478/D __label__dp  red  green  block  construction  red  green  tower  red  green  tower  built  following  next  rule  red  green  tower  consisting  level  let  red  green  tower  consist  level  level  tower  consist  block  second  level  block  third  block  last  level  tower  consist  block  word  successive  level  block  le  previous  level  red  green  tower  block  color  let  maximum  possible  level  red  green  tower  built  red  green  block  meeting  rule  task  determine  many  different  red  green  tower  level  built  available  block  red  green  tower  considered  different  exists  level  consists  red  block  tower  consists  green  block  tower  write  program  find  different  red  green  tower  height  modulo  input  contains  separated  single  space  available  red  green  block  respectively  output  different  possible  red  green  tower  height  modulo
811/D __label__dfs  __label__graphs  __label__constructive  algorithms  interactive  problem  vladik  ha  favorite  game  play  free  time  game  field  could  represented  n  matrix  consists  cell  type  normal  cell  player  visit  finish  cell  player  ha  finish  way  win  exactly  cell  type  dangerous  cell  player  come  cell  loses  initially  player  located  left  top  cell  coordinate  player  ha  access  button  move  player  left  right  direction  respectively  easy  sometimes  friend  play  game  change  function  button  function  button  could  swapped  function  button  could  swapped  note  function  button  changed  beginning  game  help  vladik  win  game  contains  space  separated  row  column  respectively  next  contains  character  describing  corresponding  row  field  set  character  field  described  guaranteed  cell  coordinate  normal  least  way  initial  cell  finish  cell  without  dangerous  cell  press  button  time
1119/E __label__dp  __label__greedy  __label__brute  force  pavel  ha  several  stick  length  equal  power  ha  stick  length  stick  length  stick  length  pavel  want  make  maximum  possible  triangle  using  stick  triangle  strictly  positive  area  stick  used  triangle  forbidden  break  stick  triangle  consist  exactly  stick  find  maximum  possible  triangle  contains  single  different  length  stick  second  contains  stick  length  equal  print  single  maximum  possible  non  degenerate  triangle  pavel  make
788/D __label__constructive  algorithms  programming  contest  rom  decided  try  tourism  home  country  uzhlyandia  cartesian  plane  want  walk  along  main  straight  uzhlyandia  known  straight  parallel  ax  described  equation  called  coordinate  rom  lost  map  find  coordinate  uncle  anton  agreed  help  using  following  rule  initially  rom  know  vertical  horizontal  coordinate  rom  announce  coordinate  point  uzhlandia  anton  tell  minimum  distance  chosen  point  since  coordinate  exceed  absolute  value  rom  choose  point  coordinate  exceeding  absolute  value  uncle  anton  hurry  uoi  uzhlandian  olympiad  informatics  answer  question  problem  rom  know  find  coordinate  write  program  play  rom  role  find  coordinate  input  initially  program  make  query  get  information  guaranteed  horizontal  vertical  least  le  equal  type  make  query  print  coordinate  point  query  need  print  end  make  flush  operation  read  answer  query  minimum  distance  prom  point  main  straight  uzhlyandia
703/C __label__implementation  __label__geometry  mishka  enjoying  trip  chris  little  brown  bear  know  met  mishka  long  time  together  excluding  current  trip  best  friend  important  john  chris  best  friend  walking  friend  john  gave  chris  following  problem  infinite  horizontal  road  width  bounded  bus  moving  presented  convex  polygon  vertex  bus  move  continuously  constant  speed  straight  direction  decreasing  coordinate  thus  time  coordinate  point  changing  formally  time  coordinate  point  decreased  pedestrian  point  move  vertical  pedestrian  crossing  presented  segment  connecting  point  speed  exceeding  thus  pedestrian  move  straight  direction  speed  exceeding  leaving  road  border  pedestrian  instantly  change  speed  thus  example  stop  instantly  please  look  sample  note  picture  better  understanding  consider  pedestrian  hit  bus  moment  point  located  lie  strictly  inside  bus  polygon  mean  point  lie  polygon  vertex  edge  pedestrian  hit  bus  given  bus  position  moment  please  help  chris  determine  minimum  amount  time  pedestrian  need  cross  road  reach  point  hit  bus  input  contains  bus  polygon  vertex  road  width  bus  speed  pedestrian  speed  respectively  next  describes  polygon  vertex  counter  clockwise  order  contains  pair  coordinate  polygon  point  guaranteed  polygon  non  degenerate  print  single  real  time  pedestrian  need  croos  road  hit  bus  answer  considered  correct  relative  absolute  error  exceed
1088/E __label__math  __label__dp  __label__greedy  __label__trees  given  tree  consisting  node  every  node  ha  weight  want  choose  choose  connected  component  node  overlap  every  node  component  let  set  node  chose  want  maximize  au  word  want  maximize  sum  weight  node  divided  connected  component  chose  several  solution  want  maximize  note  adjacent  node  belong  different  component  refer  third  sample  contains  node  tree  second  contains  space  separated  weight  node  next  contains  space  separated  mean  edge  print  answer  non  reduced  fraction  represented  space  separated  fraction  maximized  several  possible  way  maximize  denominator  see  sample  better  understanding
830/E __label__math  __label__dp  __label__implementation  __label__graphs  __label__trees  __label__constructive  algorithms  developer  petr  think  invented  perpetual  motion  machine  namely  ha  lot  element  work  following  way  element  ha  controller  set  non  negative  real  value  controller  set  value  controller  consumes  energy  unit  per  second  time  element  connected  wire  produce  energy  unit  per  second  value  set  controller  petr  ha  limited  wire  ha  already  built  scheme  element  wire  interested  possible  set  controller  way  system  produce  least  much  power  consumes  least  controller  set  value  different  help  check  possible  find  required  value  set  guaranteed  exist  controller  setting  satisfying  condition  exist  required  value  greater  several  least  test  case  input  contains  single  test  case  empty  test  case  test  case  contains  element  scheme  wire  follow  contains  element  connected  wire  element  connected  element  connected  wire  guaranteed  sum  sum  test  case  exceed  hack  use  test  test  case  print  answer  test  case
472/F __label__math  __label__constructive  algorithms  task  following  structure  given  model  operation  use  operation  achive  goal  way  create  new  task  use  model  operation  change  goal  let  try  created  following  task  topcoder  srm  div  hard  given  allowed  perform  assignment  many  want  following  form  original  task  must  different  task  allow  equal  goal  maximize  sum  change  goal  given  make  exactly  equal  word  equal  contains  second  contains  third  contains  solution  output
594/E __label__strings  given  non  empty  following  operation  performed  exactly  split  non  empty  substring  string  represented  concatenation  set  string  string  replaced  string  tir  record  right  left  concatenated  back  order  get  string  equal  tir  task  determine  lexicographically  smallest  string  could  result  applying  given  operation  string  input  contains  string  consisting  lowercase  english  letter  second  contains  maximum  part  partition  single  print  lexicographically  minimum  string  obtained  result  performing  described  operation
427/B __label__implementation  __label__data  structures  prison  city  ha  prisoner  prison  accommodate  city  mayor  ha  decided  transfer  prisoner  prison  located  another  city  reason  made  prisoner  stand  written  chest  severity  crime  ha  committed  greater  severe  crime  wa  mayor  told  choose  prisoner  transferred  prison  imposed  condition  chosen  prisoner  ha  form  contiguous  segment  prisoner  chosen  prisoner  crime  level  greater  make  prisoner  severe  criminal  mayor  want  take  risk  running  away  transfer  find  way  choose  prisoner  input  space  separated  next  space  separated  ith  severity  ith  prisoner  crime  value  crime  severity  non  negative  exceed  print  single  way  choose  prisoner
403/E __label__implementation  __label__data  structures  __label__trees  rooted  undirected  tree  contains  vertex  let  vertex  tree  root  tree  vertex  edge  tree  painted  blue  edge  second  painted  red  simplicity  let  say  tree  blue  second  tree  red  edge  called  bad  edge  condition  fulfilled  color  edge  different  color  edge  let  consider  tree  color  edge  exactly  vertex  lie  subtree  vertex  subtree  vertex  problem  task  simulate  process  described  process  consists  several  stage  stage  edge  exactly  color  deleted  stage  exactly  blue  edge  deleted  let  assume  stage  deleted  edge  stage  delete  undeleted  bad  edge  edge  delete  undeleted  bad  edge  edge  reach  edge  stage  deleting  edge  determine  edge  removed  stage  note  definition  bad  edge  always  considers  initial  tree  edge  removed  contains  vertex  tree  next  contains  positive  ai  description  edge  tree  mean  tree  ha  edge  connecting  vertex  vertex  next  contains  positive  bi  description  edge  second  tree  mean  second  tree  ha  edge  connecting  vertex  vertex  next  contains  idx  dx  index  blue  edge  wa  removed  stage  assume  edge  tree  numbered  order  given  input  stage  removing  edge  print  description  description  must  consist  exactly  stage  blue  edge  deleted  description  must  word  blue  otherwise  word  red  second  print  index  edge  deleted  stage  increasing  order
1191/B __label__implementation  __label__brute  force  tokitsukaze  playing  game  derivated  japanese  mahjong  game  ha  tile  hand  tile  owns  suited  tile  mean  ha  suit  manzu  pinzu  souzu  digit  ranged  problem  use  digit  lowercase  letter  character  suit  represent  suited  tile  possible  suited  tile  represented  order  win  game  must  least  mentsu  described  hand  sometimes  draw  extra  suited  tile  drawing  tile  tile  increase  draw  tile  want  including  already  hand  know  minimum  extra  suited  tile  need  draw  win  useful  definition  game  mentsu  known  meld  formed  koutsu  shuntsu  koutsu  known  triplet  made  identical  tile  koutsu  shuntsu  known  sequence  made  sequential  numbered  tile  suit  shuntsu  example  contains  koutsu  shuntsu  includes  mentsu  contains  koutsu  shuntsu  includes  mentsu  contains  koutsu  shuntsu  includes  mentsu  note  order  tile  unnecessary  assume  type  suited  tile  draw  infinite  contains  string  tile  tokitsukaze  hand  string  character  digit  ranged  second  character  print  single  minimum  extra  suited  tile  need  draw
746/F __label__greedy  __label__data  structures  sasha  reach  work  car  take  exactly  minute  way  listens  music  song  playlist  listening  song  sasha  get  pleasure  equal  song  last  minute  beginning  way  sasha  turn  song  listens  song  song  song  song  listens  song  reach  work  listens  last  song  playlist  sasha  listen  song  end  partly  second  case  listens  song  minute  least  half  song  length  formally  length  song  equal  minute  sasha  listens  le  minute  immediately  switch  next  song  example  length  song  sasha  want  partly  listen  equal  minute  listen  least  minute  length  song  equal  minute  listen  least  minute  take  time  switch  song  sasha  want  listen  partly  song  last  listened  song  play  le  half  length  sasha  get  pleasure  song  included  list  partly  listened  song  allowed  skip  song  pleasure  song  doe  depend  listening  mode  song  value  equal  help  sasha  choose  song  partial  listening  get  maximum  pleasure  write  program  find  maximum  pleasure  sasha  get  listening  song  way  work  contains  song  playlist  song  sasha  listen  partly  time  minute  sasha  need  reach  work  second  contains  positive  equal  pleasure  sasha  get  listening  song  third  contains  positive  equal  length  song  minute  print  maximum  pleasure  sasha  get  listening  song  way  work
780/E __label__dfs  __label__graphs  __label__constructive  algorithms  evil  bumbershoot  corporation  produce  clone  gruesome  experiment  vast  underground  lab  occasion  corp  cloned  boy  andryusha  wa  smarter  comrade  immediately  andryusha  understood  something  fishy  wa  going  rallied  fellow  clone  feud  evil  corp  set  find  exit  lab  corp  reduce  destroy  lab  complex  lab  pictured  connected  graph  vertex  edge  clone  andryusha  start  looking  exit  vertex  clone  traverse  edge  per  second  clone  allowed  vertex  simultaneously  clone  allowed  stop  looking  time  moment  must  look  starting  vertex  least  exit  located  vertex  lab  hence  vertex  must  visited  least  clone  clone  visit  vertex  lab  explodes  task  choose  starting  vertex  searching  route  clone  route  vertex  contains  vertex  edge  lab  clone  next  contains  index  vertex  connected  respective  edge  graph  allowed  self  loop  multiple  edge  graph  guaranteed  connected  print  must  start  vertex  visited  clone  followed  index  vertex  visited  clone  order  visiting  print  vertex  every  time  visited  regardless  wa  visited  earlier
1025/B __label__greedy  __label__brute  force  __label__number  theory  research  property  greatest  common  divisor  gcd  set  ildar  famous  mathematician  introduced  brand  new  concept  weakened  common  divisor  wcd  list  pair  given  list  pair  wcd  arbitrary  greater  divide  least  element  pair  wcd  exist  list  example  list  look  like  wcd  equal  strictly  greater  divide  least  pair  currently  pursuing  phd  degree  ildar  mentorship  problem  wa  delegated  task  calculate  wcd  efficiently  contains  single  pair  next  contains  value  print  single  wcd  set  pair
1006/E __label__dfs  __label__graphs  __label__trees  problem  help  berland  army  organizing  command  delivery  system  officer  berland  army  officer  commander  army  doe  superior  every  officer  ha  exactly  direct  superior  officer  direct  superior  officer  say  officer  direct  subordinate  officer  officer  considered  subordinate  direct  indirect  officer  following  condition  hold  officer  direct  superior  officer  direct  superior  officer  subordinate  officer  example  picture  subordinate  officer  structure  berland  army  organized  way  every  officer  except  commander  subordinate  commander  army  formally  let  represent  berland  army  tree  consisting  vertex  vertex  corresponds  officer  parent  vertex  corresponds  direct  superior  officer  root  ha  index  corresponds  commander  army  berland  war  ministry  ha  ordered  give  answer  query  query  given  officer  positive  process  query  imagine  command  spread  subordinate  typical  dfs  depth  search  algorithm  used  suppose  current  officer  spread  command  officer  chooses  direct  subordinate  child  tree  ha  received  command  many  direct  subordinate  chooses  minimal  index  officer  give  command  officer  afterwards  us  exactly  algorithm  spread  command  subtree  finish  spreading  command  officer  chooses  next  direct  subordinate  using  strategy  officer  choose  direct  subordinate  still  received  command  officer  finish  spreading  command  let  look  following  example  officer  spread  command  officer  receive  following  order  officer  spread  command  officer  receive  following  order  officer  spread  command  officer  receive  following  order  officer  spread  command  officer  receive  following  order  answer  query  construct  sequence  describes  order  officer  receive  command  officer  spread  return  element  constructed  list  fewer  element  process  query  independently  query  affect  following  query  input  contains  officer  berland  army  query  second  input  contains  index  direct  superior  officer  index  commander  ha  index  superior  next  describe  query  query  given  pair  index  officer  start  spreading  command  index  required  officer  command  spreading  sequence  print  officer  position  list  describes  order  officer  receive  command  start  spreading  officer  print  officer  receive  command  le
493/E __label__math  vasya  studying  last  class  school  soon  take  exam  decided  study  polynomial  polynomial  function  x  nxn  called  coefficient  polynomial  non  negative  called  degree  polynomial  vasya  ha  made  bet  friend  solve  problem  polynomial  suggested  problem  determine  many  polynomial  exist  non  negative  coefficient  given  positive  vasya  doe  like  losing  bet  ha  idea  solve  task  please  help  solve  problem  input  contains  positive  greater  infinite  polynomial  print  inf  without  quote  otherwise  print  reminder  answer  modulo
727/A __label__math  __label__dfs  __label__brute  force  vasily  ha  want  turn  purpose  type  operation  multiply  current  replace  append  digit  right  current  replace  need  help  vasily  transform  using  operation  described  find  impossible  note  task  required  minimize  operation  suffices  find  way  transform  contains  positive  vasily  ha  want  way  get  print  without  quote
895/A __label__implementation  __label__brute  force  student  vasya  petya  studying  bsu  byteland  state  university  break  decided  order  pizza  problem  pizza  circle  radius  pizza  wa  delivered  already  cut  piece  piece  sector  angle  equal  vasya  petya  want  divide  piece  pizza  continuous  sector  way  difference  angle  sector  minimal  sector  angle  sum  angle  piece  pay  attention  sector  empty  contains  piece  delivered  pizza  wa  cut  second  contains  angle  sector  pizza  wa  cut  sum  print  minimal  difference  angle  sector  vasya  petya
898/A __label__math  __label__implementation  vasya  ha  non  negative  want  round  nearest  end  already  end  vasya  considers  already  rounded  example  answer  vasya  round  way  correct  given  find  vasya  round  contains  single  vasya  ha  print  result  rounding  pay  attention  case  answer  unique  case  print  correct  answer
755/C __label__dfs  __label__graphs  __label__trees  polandball  life  forest  family  tree  forest  tree  undirected  acyclic  graph  vertex  edge  note  vertex  valid  tree  exactly  relative  living  vertex  tree  unique  id  ball  know  distant  relative  living  tree  several  vertex  know  value  smallest  many  tree  forest  contains  single  ball  living  forest  second  contains  sequence  length  hold  denotes  distant  ball  relative  living  tree  several  distant  relative  living  tree  smallest  guaranteed  sequence  corresponds  valid  forest  hacking  hack  someone  provide  correct  forest  test  sequence  calculated  according  forest  given  solution  try  hack  input  use  following  format  output  ball  total  edge  forest  follow  represent  edge  vertex  relative  live  example  sample  written  follows  output  tree  forest  polandball  life
1085/A __label__implementation  __label__strings  polycarp  love  cipher  ha  invented  cipher  called  right  left  right  left  cipher  used  string  encrypt  string  polycarp  us  following  algorithm  writes  appends  current  word  writes  right  current  result  prepends  current  word  writes  left  current  result  appends  current  word  writes  right  current  result  prepends  current  word  writes  left  current  result  position  end  example  techno  process  cte  cteh  ncteh  ncteho  encrypted  techno  ncteho  given  string  result  encryption  string  task  decrypt  find  string  input  contains  result  encryption  string  contains  lowercase  latin  letter  length  inclusive  print  string  encryption  equal
981/G __label__data  structures  school  magic  dirtpolis  lot  interesting  object  studied  computer  science  lesson  consider  example  magic  multiset  try  add  already  presented  multiset  element  multiset  duplicate  example  try  add  multiset  get  try  add  presented  multiset  simply  added  example  try  add  multiset  get  consider  array  initially  empty  magic  multisets  enumerated  answer  query  form  add  multisets  index  compute  sum  size  multisets  index  answer  second  type  query  large  print  answer  modulo  contains  magic  multisets  array  query  respectively  next  describe  query  per  start  type  query  equal  followed  meaning  add  multisets  index  inclusive  equal  followed  meaning  compute  sum  size  multisets  index  inclusive  query  second  type  print  sum  size  multisets  given  segment
908/C __label__math  __label__implementation  __label__brute  force  __label__geometry  carol  currently  curling  ha  disk  radius  plane  initially  ha  disk  slide  disk  towards  order  slide  disk  place  center  point  push  disk  coordinate  continuously  decrease  coordinate  stay  constant  disk  stop  touch  touch  previous  disk  note  disk  stop  moving  move  even  hit  another  disk  compute  coordinate  center  disk  disk  pushed  disk  radius  disk  respectively  next  coordinate  disk  print  single  denotes  coordinate  center  disk  output  accepted  ha  absolute  relative  error
1205/B __label__graphs  __label__brute  force  given  consider  graph  node  node  connected  denotes  bitwise  operation  find  length  shortest  cycle  graph  determine  cycle  contains  second  contains  graph  cycle  output  else  output  length  shortest  cycle
749/B __label__constructive  algorithms  __label__brute  force  __label__geometry  long  time  ago  alex  created  interesting  problem  parallelogram  input  data  problem  contained  point  cartesian  plane  defined  set  vertex  non  degenerate  positive  area  parallelogram  point  necessary  given  order  clockwise  counterclockwise  traversal  alex  nice  test  problem  somehow  happened  last  input  wa  lost  ha  point  original  parallelogram  remembers  test  wa  good  asks  restore  given  point  input  consists  containing  pair  coordinate  guaranteed  point  lie  coincide  print  way  add  new  point  obtained  set  defines  parallelogram  positive  area  requirement  point  arranged  special  order  like  traversal  define  set  vertex
1083/B __label__greedy  __label__strings  recently  fair  nut  ha  written  string  length  consisting  letter  calculated  string  prefix  least  written  string  every  string  wa  counted  time  lost  sheet  string  remembers  written  string  lexicographically  smaller  string  bigger  string  interested  maximum  value  could  get  string  lexicographically  smaller  string  following  hold  prefix  position  differ  string  ha  letter  appears  earlier  alphabet  corresponding  letter  contains  second  contains  string  string  consisting  letter  third  contains  string  string  consisting  letter  guaranteed  string  lexicographically  bigger  print  maximal  value
773/C __label__math  __label__greedy  __label__constructive  algorithms  __label__binary  search  shown  positive  uniquely  represented  k  k  let  call  representation  prairie  partition  example  prairie  partition  alice  took  sequence  positive  possibly  repeating  element  replaced  every  element  sequence  summands  prairie  partition  arranged  resulting  non  decreasing  order  gave  borys  borys  wonder  many  element  alice  original  sequence  could  find  possible  option  contains  single  given  alice  borys  second  contains  n  given  alice  borys  output  increasing  order  possible  value  exists  sequence  positive  length  replace  every  element  summands  prairie  partition  arrange  resulting  non  decreasing  order  get  sequence  given  input
461/B __label__dp  __label__dfs  __label__trees  appleman  ha  tree  vertex  vertex  least  colored  black  vertex  colored  white  consider  set  consisting  edge  appleman  tree  appleman  deletes  edge  tree  split  part  note  part  tree  colored  vertex  appleman  wonder  set  splitting  tree  way  resulting  part  exactly  black  vertex  find  modulo  contains  tree  vertex  second  contains  description  tree  mean  edge  connecting  vertex  tree  vertex  consider  tree  vertex  numbered  third  contains  description  color  vertex  either  equal  vertex  colored  black  otherwise  vertex  colored  white  output  single  way  split  tree  modulo
1208/F __label__dp  __label__greedy  __label__dfs  given  array  need  find  maximum  value  triplet  denotes  bitwise  operation  denotes  bitwise  operation  input  contains  size  array  next  contains  space  separated  representing  element  array  output  single  maximum  value  expression  given  statement
1016/D __label__math  __label__constructive  algorithms  vasya  taking  exam  mathematics  order  get  good  mark  vasya  need  guess  matrix  teacher  ha  constructed  vasya  know  matrix  consists  row  column  row  know  xor  bitwise  excluding  element  row  sequence  denotes  xor  element  row  index  respectively  similarly  column  know  xor  element  column  sequence  denotes  xor  element  column  index  respectively  help  vasya  find  matrix  satisfying  given  constraint  tell  suitable  matrix  contains  dimension  matrix  second  contains  xor  element  row  third  contains  xor  element  column  matrix  satisfying  given  constraint  output
617/A __label__math  elephant  decided  visit  friend  turned  elephant  house  located  point  friend  house  located  point  coordinate  step  elephant  move  position  forward  determine  minimum  step  need  make  order  get  friend  house  input  contains  coordinate  friend  house  print  minimum  step  elephant  need  make  get  point  point
508/B __label__math  __label__greedy  __label__strings  berland  exchange  rate  currency  know  burle  ha  increased  much  simplify  calculation  fractional  part  wa  neglected  exchange  rate  assumed  reliable  source  informed  financier  anton  information  exchange  rate  currency  know  burle  tomorrow  anton  know  tomorrow  exchange  rate  even  obtained  present  rate  swapping  exactly  distinct  digit  possible  value  meet  condition  exchange  rate  tomorrow  maximum  possible  guaranteed  today  exchange  rate  odd  positive  help  anton  determine  exchange  rate  currency  know  tomorrow  contains  odd  positive  exchange  rate  currency  know  today  length  representation  range  inclusive  representation  leading  information  tomorrow  exchange  rate  inconsistent  meet  condition  print
633/B __label__math  __label__constructive  algorithms  __label__brute  force  __label__number  theory  santa  asks  great  programmer  world  solve  trivial  problem  give  asks  positive  factorial  end  exactly  great  programmer  solve  problem  input  contains  required  trailing  factorial  print  value  factorial  end  print  increasing  order
852/D __label__binary  search  competitor  bubble  cup  gathered  competition  discussed  best  way  get  know  host  country  city  exploring  map  serbia  competitor  came  following  fact  country  ha  city  indexed  directional  road  connect  cite  road  ha  weight  time  needed  cross  road  team  bubble  cup  competitor  came  following  plan  team  start  journey  city  team  share  starting  position  want  find  shortest  time  every  team  move  minute  different  city  end  least  get  know  city  end  team  move  time  like  particular  city  stay  wait  time  pas  please  help  competitor  determine  shortest  time  possible  end  least  different  city  print  impossible  matter  move  note  exist  multiple  road  city  contains  city  road  team  smallest  different  city  need  end  respectively  second  contains  city  team  start  journey  next  information  road  following  format  mean  road  connecting  city  need  minute  cross  road  output  single  represents  minimal  time  team  move  end  least  different  city  output  solution
846/A __label__implementation  __label__brute  force  hideo  kojima  ha  quit  job  konami  going  find  new  place  work  despite  well  known  person  still  need  apply  job  career  hideo  ha  produced  game  successful  hideo  want  remove  several  possibly  make  better  impression  employer  result  unsuccessful  game  come  right  successful  formally  given  array  corresponds  unsuccessful  game  successful  game  given  order  produced  hideo  swap  value  remove  element  array  way  come  right  besides  hideo  still  want  mention  much  game  possible  help  genius  man  determine  maximum  game  leave  contains  second  contains  space  separated  corresponds  unsuccessful  game  successful  print  maximum  game  hideo  leave  unsuccessful  game  come  successful
478/C __label__greedy  red  green  blue  balloon  decorate  single  table  banquet  need  exactly  balloon  balloon  attached  table  color  maximum  table  decorated  know  balloon  color  task  write  program  given  value  find  maximum  table  decorated  required  manner  single  contains  red  green  blue  baloons  respectively  separated  exactly  space  print  single  maximum  table  decorated  required  manner
756/E __label__math  __label__dp  type  coin  byteland  conveniently  denomination  coin  type  divide  denomination  coin  type  denomination  coin  type  equal  tugrick  ratio  denomination  coin  type  equal  known  coin  type  denomination  byteasar  ha  coin  type  need  pay  exactly  tugricks  known  byteasar  never  ha  coin  byteasar  want  know  many  way  pay  exactly  tugricks  way  different  amount  coin  type  differs  way  byteland  citizen  byteasar  want  know  way  modulo  contains  single  coin  type  second  contains  k  ratio  coin  type  denomination  guaranteed  coin  type  denomination  third  contains  non  negative  coin  type  byteasar  ha  guaranteed  sum  exceed  fourth  contains  single  amount  tugricks  byteasar  need  pay  print  single  way  pay  exactly  tugricks  modulo
981/D __label__dp  __label__greedy  keks  typical  white  collar  byteland  ha  bookshelf  office  book  book  ha  positive  price  keks  defines  value  shelf  sum  book  price  miraculously  keks  wa  promoted  moving  new  office  learned  new  office  single  bookshelf  exactly  bookshelf  decided  beauty  shelf  bitwise  value  shelf  decided  spend  time  reordering  book  place  several  book  shelf  several  next  book  next  shelf  course  place  least  book  shelf  way  put  book  shelf  way  beauty  shelf  large  possible  compute  maximum  possible  beauty  contains  book  shelf  new  office  second  contains  price  book  order  stand  old  shelf  print  maximum  possible  beauty  shelf  new  office
585/F __label__dp  __label__implementation  __label__strings  vasily  ha  recently  learned  amazing  property  article  ha  hypothesized  whatever  sequence  position  sequence  found  digit  thus  take  example  epic  novel  war  peace  famous  russian  author  leo  tolstoy  encode  find  novel  character  vasily  wa  absolutely  delighted  mean  book  song  program  already  written  encoded  digit  vasily  course  bit  wary  hypothesis  proved  decided  check  vasily  downloaded  internet  archive  sequence  digit  starting  certain  position  began  check  different  string  digit  presence  downloaded  archive  vasily  quickly  found  short  string  digit  time  took  longer  string  turned  archive  vasily  came  definition  string  length  half  occurrence  contains  substring  length  least  occurs  archive  complete  investigation  vasily  took  large  x  digit  want  find  interval  half  occurrence  archive  help  vasily  calculate  value  modulo  contains  string  consisting  decimal  digit  vasily  use  search  substring  according  hypothesis  sequence  digis  indeed  occurs  decimal  representation  although  guarantee  second  third  positive  length  x  leading  print  many  segment  half  occurrence  modulo
85/E __label__sortings  __label__graphs  __label__binary  search  __label__geometry  far  away  kingdom  life  greedy  king  defend  land  built  guard  tower  apart  tower  kingdom  ha  army  headed  tyrannical  narcissistic  general  general  stand  specifically  never  let  soldier  army  present  tower  defence  operation  manage  guard  tower  general  ha  send  part  army  tower  general  asks  fee  king  managing  tower  live  really  far  away  kingdom  general  evaluates  fee  following  weird  manner  find  remotest  distant  tower  soldier  army  situated  asks  fee  equal  distance  tower  represented  point  plane  coordinate  distance  point  coordinate  determined  kingdom  greedy  king  wa  exactly  satisfied  requirement  general  agreed  pay  fee  general  equal  maximum  demanded  fee  king  still  green  greed  way  arrange  tower  army  want  find  cheapest  tower  occupied  soldier  exactly  army  hired  find  minimum  amount  money  enough  pay  fee  king  scrupulous  count  arrangement  cost  amount  money  quite  large  enough  king  know  remainder  dividing  arrangement  distinct  set  tower  occupied  soldier  general  distinct  contains  guard  tower  follow  contains  coordinate  tower  tower  present  point  pretest  maximal  test  problem  print  smallest  possible  amount  money  enough  pay  fee  general
1225/E __label__dp  __label__binary  search  top  left  cell  nm  labyrinth  goal  get  bottom  right  cell  move  right  cell  per  step  moving  right  cell  take  cell  moving  take  cell  cell  labyrinth  rock  move  cell  rock  rock  pushed  next  cell  direction  moving  next  cell  contains  rock  get  pushed  labyrinth  surrounded  impenetrable  wall  thus  move  would  put  rock  outside  labyrinth  illegal  count  different  legal  path  take  start  goal  modulo  path  considered  different  least  cell  visited  path  visited  contains  dimension  labyrinth  next  describe  labyrinth  contains  character  character  equal  cell  contains  rock  cell  empty  guaranteed  starting  cell  empty  print  single  different  legal  path  modulo
400/D __label__graphs  dima  took  biology  bacteria  result  experiment  invented  type  bacteria  overall  bacteria  laboratory  right  bacteria  type  equal  convenience  assume  bacteria  numbered  bacteria  type  numbered  help  special  equipment  dima  move  energy  bacteria  course  use  equipment  free  dima  know  way  move  energy  bacteria  another  way  described  mean  way  allows  moving  energy  bacteria  bacteria  vice  versa  dollar  dima  chef  inna  call  type  distribution  correct  way  non  direct  move  energy  bacteria  particular  type  bacteria  type  bacteria  type  cost  correct  type  distribution  cost  moving  energy  depends  type  bacteria  help  inna  determine  type  distribution  correct  print  matrix  size  k  cell  matrix  must  equal  minimal  possible  cost  energy  moving  bacteria  type  bacteria  type  contains  next  contains  next  contains  guaranteed  dima  type  distribution  correct  print  string  yes  print  way  move  energy  bacteria  bacteria  appropriate  must  equal  type  distribution  correct  print
670/F __label__constructive  algorithms  __label__brute  force  __label__strings  vasya  decided  pas  large  kate  wrote  string  appended  right  digit  magically  shuffled  arbitrary  order  note  wa  passed  kate  thing  vasya  remembers  non  empty  substring  substring  sequence  consecutive  digit  vasya  know  way  restore  task  find  smallest  possible  initial  note  decimal  representation  contained  leading  except  case  wa  equal  case  single  digit  wa  used  input  contains  string  received  kate  digit  string  doe  exceed  second  contains  substring  vasya  remembers  string  leading  guaranteed  input  data  correct  answer  always  exists  print  smalles  vasya  could  pas  kate
254/A __label__sortings  __label__constructive  algorithms  petya  ha  got  card  card  contains  card  let  index  card  consecutive  denote  written  card  order  play  entertaining  game  friend  petya  need  split  card  pair  pair  equal  card  help  petya  contains  second  contains  sequence  positive  n  written  card  separated  single  space  impossible  divide  card  pair  card  pair  print  single  required  partition  exists  print  pair  pair  per  index  card  form  pair
1054/D __label__implementation  __label__greedy  break  vanya  came  class  saw  array  bit  board  called  bit  course  vanya  wa  able  resist  started  changing  written  board  ensure  note  anything  vanya  allowed  make  type  change  choose  index  array  replace  define  bit  bit  bit  differ  corresponding  bit  vanya  doe  like  therefore  like  segment  denotes  bitwise  xor  operation  determine  maximum  segment  like  vanya  get  applying  operation  described  input  contains  next  contains  separated  space  array  bit  print  maximum  possible  segment  xor  equal  obtained  making  several  possibly  operation  described  statement
1178/G __label__data  structures  __label__dfs  given  rooted  tree  vertex  vertex  numbered  root  vertex  vertex  ha  associated  denote  set  ancestor  including  awesomeness  vertex  defined  denotes  absolute  value  process  query  following  form  increase  positive  report  maximum  awesomeness  subtree  vertex  contains  vertex  tree  query  respectively  second  contains  mean  edge  vertex  third  contains  initial  value  vertex  fourth  contains  value  vertex  next  describes  query  ha  following  form  query  second  type  print  single  maximum  awesomeness  respective  subtree
494/B __label__dp  __label__strings  hamed  ha  recently  found  string  suddenly  became  quite  fond  spent  several  day  trying  find  occurrence  string  finally  became  tired  started  thinking  following  problem  given  string  many  way  extract  k  non  overlapping  substring  contains  string  substring  formally  need  calculate  way  choose  sequence  satisfying  following  requirement  k  substring  string  saisai  sbi  string  considered  indexed  way  rather  large  print  modulo  consists  containing  string  string  consists  lowercase  latin  letter  print  answer  single
637/A __label__implementation  __label__constructive  algorithms  celebrating  midcourse  student  faculty  berland  state  university  decided  conduct  vote  best  photo  published  photo  social  network  agreed  rule  choose  winner  photo  get  like  win  multiple  photoes  get  like  winner  photo  get  help  guy  determine  winner  photo  record  like  input  contains  single  total  like  published  photoes  second  contains  positive  identifier  photo  got  like  print  identifier  photo  election
1103/A __label__implementation  __label__constructive  algorithms  given  x  grid  play  game  sequence  tile  either  x  x  task  consequently  place  tile  given  sequence  grid  tile  placed  cell  located  fully  occupied  row  column  deleted  cell  deleted  time  independently  place  tile  grid  position  condition  tile  tile  part  overlap  goal  proceed  given  figure  avoid  crossing  time  contains  string  consisting  describes  vertical  tile  describes  horizontal  tile  output  tile  output  positive  exceeding  representing  smallest  row  column  intersecting
506/E __label__dp  __label__strings  kitayuta  ha  kindly  given  string  consisting  lowercase  english  letter  asked  insert  exactly  lowercase  english  letter  make  palindrome  palindrome  string  read  forward  backward  example  noon  testset  palindrome  test  kitayuta  choose  lowercase  english  letter  insert  position  possibly  beginning  end  insert  exactly  letter  even  possible  turn  palindrome  inserting  le  letter  find  palindrome  obtained  way  modulo  contains  string  character  lowercase  english  letter  second  contains  print  palindrome  obtained  modulo
1017/G __label__data  structures  abendsen  assigned  mission  juliana  mission  juliana  ha  rooted  tree  vertex  vertex  root  tree  vertex  either  black  white  vertex  white  juliana  asked  process  query  query  type  vertex  white  mark  black  otherwise  perform  operation  direct  son  instead  mark  vertex  subtree  including  white  find  color  vertex  example  operation  corresponds  example  test  vertex  already  black  operation  go  son  instead  help  juliana  process  query  contains  vertex  query  second  contains  mean  edge  vertex  next  contains  type  query  vertex  query  guaranteed  given  graph  tree  query  type  print  black  vertex  black  otherwise  print  white
643/G __label__data  structures  social  network  developer  recently  suggested  new  algorithm  choosing  ad  user  slot  advertiser  buy  possible  buy  segment  consecutive  slot  slot  bigger  chance  shown  user  every  time  needed  choose  ad  show  segment  slot  picked  secret  algorithm  advertiser  chosen  restriction  guaranteed  advertiser  least  slot  composing  segment  shown  side  user  like  ad  wa  decided  show  ad  asked  develop  system  sell  segment  slot  choose  ad  accordance  rule  described  input  contains  slot  query  system  threshold  display  guaranteed  next  contains  mean  advertiser  currently  owns  slot  next  query  description  description  following  form  advertiser  bought  slot  range  inclusive  need  choose  advertiser  segment  query  second  type  answer  printed  separate  answer  advertisement  shown  next  cnt  advertiser  id
1101/F __label__dp  __label__binary  search  city  along  road  represented  straight  city  situated  distance  kilometer  origin  city  situated  direction  origin  truck  travelling  city  another  truck  described  starting  city  finishing  city  fuel  consumption  possible  refueling  truck  spend  litre  fuel  per  kilometer  truck  arrives  city  refueled  refueling  impossible  middle  nowhere  truck  refueled  time  refueling  make  truck  gas  tank  full  truck  start  full  gas  tank  truck  gas  tank  size  litre  find  minimum  possible  truck  reach  destination  without  refueling  time  allowed  contains  city  truck  second  contains  position  city  ascending  order  next  contains  contains  description  truck  print  minimum  possible  size  gas  tank  truck  reach  destination
498/B __label__dp  turn  great  fan  rock  band  peter  learned  started  following  game  play  song  list  song  group  find  name  song  tell  song  name  peter  immediately  play  following  song  order  song  ha  recognizability  mean  song  ha  recognized  listen  exactly  second  probability  percent  recognize  tell  name  otherwise  continue  listening  note  try  guess  second  moment  song  start  playing  song  word  chorus  title  heard  second  song  chorus  start  immediately  guess  name  sure  example  song  highway  red  chorus  sound  pretty  late  song  ha  high  recognizability  song  back  blue  hand  word  title  sound  close  beginning  song  hard  name  hearing  word  name  song  second  determine  expected  song  recognize  game  last  exactly  second  make  last  guess  second  game  stop  song  recognized  faster  second  game  stop  last  song  recognized  input  contains  separated  space  next  pair  song  given  order  petya  list  output  single  expected  song  recognize  second  answer  considered  correct  absolute  relative  error  doe  exceed
1012/A __label__math  __label__implementation  __label__sortings  __label__brute  force  pavel  made  photo  favourite  star  sky  camera  take  photo  point  sky  belong  rectangle  side  parallel  coordinate  ax  strictly  speaking  make  photo  point  coordinate  coordinate  left  bottom  right  top  corner  rectangle  photographed  area  rectangle  taking  photo  pavel  wrote  coordinate  favourite  star  appeared  photo  point  necessarily  distinct  multiple  star  point  sky  pavel  ha  lost  camera  recently  want  buy  similar  specifically  want  know  dimension  photo  took  earlier  unfortunately  photo  lost  note  much  help  written  random  order  notepad  impossible  tell  specify  coordinate  point  pavel  asked  help  determine  possible  dimension  photo  according  note  multiple  possible  answer  find  dimension  minimal  possible  area  rectangle  input  contains  point  pavel  record  second  contains  coordinate  written  pavel  order  print  minimal  area  rectangle  could  contained  point  pavel  record
766/B __label__math  __label__greedy  __label__sortings  __label__constructive  algorithms  __label__number  theory  __label__geometry  mahmoud  ha  segment  ha  length  ehab  challenged  use  exactly  segment  form  non  degenerate  triangle  mahmoud  accept  challenge  unless  sure  win  asked  tell  accept  challenge  given  length  segment  check  choose  exactly  form  non  degenerate  triangle  mahmoud  use  exactly  segment  concatenate  segment  change  length  non  degenerate  triangle  triangle  positive  area  contains  single  segment  mahmoud  ha  second  contains  length  segment  mahmoud  ha  print  yes  choose  exactly  segment  form  non  degenerate  triangle  otherwise
704/B __label__dp  __label__greedy  __label__graphs  scott  lang  war  darren  cross  chair  hall  numbered  left  right  chair  located  coordinate  scott  chair  cross  chair  scott  jump  chair  neighboring  chair  want  start  position  chair  visit  chair  exactly  end  chair  cross  know  scott  shrink  grow  big  grow  big  normal  size  moment  time  either  small  large  normal  thing  shrink  grow  big  chair  air  jumping  another  chair  jumping  take  time  shrinking  growing  big  take  time  jumping  chair  chair  take  second  jumping  chair  landing  chair  take  extra  amount  time  scott  want  jump  chair  left  small  want  jump  chair  right  large  jumping  chair  take  extra  second  small  extra  second  otherwise  large  landing  chair  take  extra  second  small  extra  second  otherwise  large  simpler  word  jumping  chair  chair  take  exactly  second  second  otherwise  given  value  find  minimum  time  scott  get  cross  assuming  want  visit  chair  exactly  input  contains  total  chair  starting  ending  position  scott  second  contains  n  third  contains  n  fourth  contains  n  fifth  contains  n  sixth  contains  n  print  minimum  amount  time  scott  need  get  cross  visiting  chair  exactly
763/D __label__data  structures  __label__graphs  __label__trees  little  timofey  ha  big  tree  undirected  connected  graph  vertex  simple  cycle  like  walk  along  tree  flat  walk  along  see  entirely  quite  naturally  stand  vertex  see  tree  rooted  tree  root  vertex  timofey  assumes  non  isomorphic  subtrees  tree  beautiful  tree  subtree  vertex  subgraph  containing  vertex  descendant  tell  timofey  vertex  stand  see  beautiful  rooted  tree  subtrees  vertex  isomorphic  child  equal  child  child  arranged  way  subtree  son  isomorphic  subtree  son  subtree  second  son  isomorphic  subtree  second  son  particular  subtrees  consisting  single  vertex  isomorphic  contains  single  vertex  tree  next  contains  uii  denoting  vertex  edge  connects  guaranteed  given  graph  tree  print  single  index  vertex  timofey  stand  many  answer  print
797/A __label__math  __label__implementation  __label__number  theory  given  positive  find  necessary  distinct  strictly  greater  product  equal  contains  impossible  find  representation  product  print
509/A __label__implementation  __label__brute  force  n  table  defined  follows  row  column  remaining  table  equal  sum  left  word  remaining  element  defined  formula  condition  define  value  table  given  need  determine  maximum  value  n  table  defined  rule  input  contains  positive  row  column  table  print  single  containing  positive  maximum  value  table
1060/C __label__implementation  __label__binary  search  given  array  positive  length  respectively  let  nm  matrix  need  find  subrectangle  matrix  sum  element  area  total  element  largest  possible  formally  need  find  largest  possible  choose  subject  x  x  ci  contains  second  contains  third  contains  fourth  contains  single  possible  choose  output  largest  value  quadruplet  otherwise  output
787/B __label__math  __label__implementation  __label__greedy  since  giant  head  appeared  sky  humanity  danger  rick  mortys  parallel  universe  gathering  group  find  solution  get  rid  parallel  universe  participating  event  rick  mortys  universe  ha  rick  morty  gathering  group  person  many  group  group  arbitrary  member  rick  mortys  registered  online  group  person  joined  group  developer  website  considered  possibility  summer  universe  know  parallel  universe  including  exactly  rick  morty  universe  traitor  loyal  know  know  doomed  group  every  member  group  traitor  plan  destroy  world  summer  know  possibility  world  end  group  member  traitor  immediately  cancel  event  want  know  cancel  event  tell  yes  least  scenario  possible  scenario  possible  scenario  traitor  universe  scenario  world  end  input  contains  universe  group  respectively  next  information  group  contains  time  someone  joined  group  followed  negative  mean  rick  universe  ha  joined  group  otherwise  mean  morty  universe  ha  joined  sum  group  doe  exceed  single  print  answer  summer  question  print  yes  cancel  event  otherwise
1011/A __label__implementation  __label__greedy  __label__sortings  natasha  going  fly  mar  need  build  rocket  consists  several  stage  order  stage  defined  lowercase  latin  letter  way  rocket  described  string  concatenation  letter  correspond  stage  stage  available  rocket  must  exactly  stage  rocket  ordered  weight  stage  letter  stage  letter  least  position  alphabet  skipping  letter  even  example  letter  letter  letter  rocket  fly  far  possible  weight  minimal  weight  rocket  equal  sum  weight  stage  weight  stage  letter  alphabet  example  stage  weighs  ton  weighs  ton  ton  build  rocket  minimal  weight  determine  impossible  build  rocket  stage  used  input  contains  available  stage  stage  use  rocket  second  contains  string  consists  exactly  lowercase  latin  letter  letter  defines  new  stage  used  build  rocket  stage  used  print  single  minimal  total  weight  rocket  impossible  build  rocket
479/D __label__implementation  __label__greedy  __label__binary  search  valery  teacher  school  berland  soon  student  going  take  test  long  jump  valery  ha  lost  favorite  ruler  reason  disappointment  valery  ha  found  another  ruler  length  centimeter  ruler  already  ha  mark  make  measurement  assume  mark  numbered  order  appear  beginning  ruler  end  point  coincides  beginning  ruler  represents  origin  last  mark  coincides  end  ruler  distance  origin  ruler  repesented  increasing  sequence  denotes  distance  mark  origin  valery  belief  ruler  measure  distance  centimeter  pair  distance  mark  exactly  equal  word  rule  girl  able  jump  least  centimeter  boy  able  jump  least  centimeter  test  child  ability  valery  need  ruler  measure  distance  task  determine  minimum  additional  mark  need  add  ruler  used  measure  distance  valery  add  mark  non  negative  distance  origin  exceeding  length  ruler  contains  positive  space  separated  mark  length  ruler  jump  norm  girl  boy  correspondingly  second  contains  sequence  show  distance  mark  origin  print  single  non  negative  minimum  mark  need  add  ruler
755/A __label__math  __label__graphs  __label__brute  force  __label__number  theory  polandball  young  clever  ball  interested  prime  ha  stated  following  hypothesis  exists  positive  positive  prime  unfortunately  polandball  experienced  know  hypothesis  incorrect  could  prove  wrong  write  program  find  counterexample  input  polandball  hypothesis  output  prime  answer  considered  correct  output  suitable  guaranteed  answer  exists
698/A __label__dp  vasya  ha  day  vacation  decided  improve  skill  sport  vasya  know  following  information  day  whether  gym  opened  whether  contest  wa  carried  internet  day  day  option  day  gym  closed  contest  carried  day  gym  closed  contest  carried  day  gym  open  contest  carried  day  gym  open  contest  carried  day  vasya  either  rest  write  contest  carried  day  sport  gym  open  day  find  minimum  day  vasya  rest  mean  sport  write  contest  time  limitation  vasya  ha  doe  want  activity  consecutive  day  mean  sport  consecutive  day  write  contest  consecutive  day  contains  positive  day  vasya  vacation  second  contains  sequence  separated  space  equal  day  vacation  gym  closed  contest  carried  equal  day  vacation  gym  closed  contest  carried  equal  day  vacation  gym  open  contest  carried  equal  day  vacation  gym  open  contest  carried  print  minimum  possible  day  vasya  rest  remember  vasya  refuse
1073/G __label__data  structures  let  lcp  lcp  length  longest  common  prefix  string  let  substring  index  index  inclusive  example  abcde  abc  bcde  given  string  length  query  query  pair  set  calculate  lcp  query  contains  length  string  query  respectively  second  contains  string  consisting  lowercase  latin  letter  next  contains  description  query  per  query  query  contains  size  set  respectively  second  query  contains  set  third  query  contains  set  guaranteed  print  answer  query  order  query  given  input
768/F __label__math  __label__brute  force  __label__number  theory  tarly  ha  different  type  item  food  box  wine  barrel  food  box  wine  barrel  tarly  store  various  stack  stack  consist  either  food  box  wine  barrel  stack  placed  stack  food  box  together  stack  wine  barrel  together  height  stack  defined  item  stack  stack  considered  different  either  height  different  contains  food  contains  wine  jon  snow  like  arrangement  stack  wine  barrel  ha  height  le  equal  probability  jon  snow  like  arrangement  arrangement  equiprobably  arrangement  stack  considered  different  exists  stack  arrangement  different  stack  arrangement  input  contains  food  box  wine  barrel  described  guaranteed  ha  least  food  box  least  wine  barrel  output  probability  jon  snow  like  arrangement  probability  form  need  output  single  mod
1027/A __label__implementation  __label__strings  given  string  consisting  lowercase  latin  letter  even  position  string  required  change  letter  position  either  previous  letter  alphabetic  order  next  letter  option  letter  every  position  must  changed  exactly  example  letter  changed  either  letter  changed  letter  changed  way  string  codeforces  example  changed  dpedepqbft  string  called  palindrome  read  left  right  right  left  example  string  abba  palindrome  string  abca  goal  check  possible  make  string  palindrome  applying  aforementioned  change  every  position  print  yes  string  transformed  palindrome  otherwise  testcase  contains  several  string  required  solve  problem  separately  contains  single  string  testcase  follow  describe  string  pair  contains  single  even  length  corresponding  string  second  pair  contains  string  consisting  lowercase  latin  letter  print  answer  string  input  print  yes  possible  make  string  palindrome  applying  aforementioned  change  every  position  print  otherwise
1237/B __label__data  structures  __label__sortings  consider  tunnel  way  road  particular  day  car  numbered  entered  exited  tunnel  exactly  car  passed  tunnel  constant  speed  traffic  enforcement  camera  mounted  tunnel  entrance  another  traffic  enforcement  camera  mounted  tunnel  exit  perfectly  balanced  thanks  camera  order  car  entered  exited  tunnel  known  car  entered  exited  time  traffic  regulation  prohibit  overtaking  inside  tunnel  car  overtakes  car  inside  tunnel  car  must  fined  car  fined  formally  let  say  car  definitely  overtook  car  car  entered  tunnel  later  car  exited  tunnel  earlier  car  car  must  fined  definitely  overtook  least  car  find  car  must  fined  contains  single  denoting  car  second  contains  denoting  id  car  order  entering  tunnel  pairwise  distinct  third  contains  denoting  id  car  order  exiting  tunnel  pairwise  distinct  output  car  fined
490/D __label__math  __label__dfs  __label__brute  force  __label__number  theory  polycarpus  like  giving  present  paraskevi  ha  bought  chocolate  bar  ha  shape  segmented  rectangle  bar  segment  large  second  segment  large  polycarpus  want  give  paraskevi  bar  lunch  break  eat  besides  want  show  polycarpus  mind  paraskevi  beauty  equally  matched  bar  must  square  make  bar  square  polycarpus  eats  little  piece  chocolate  minute  minute  doe  following  either  break  bar  exactly  half  vertically  horizontally  eats  exactly  half  bar  chip  exactly  third  bar  vertically  horizontally  eats  exactly  third  bar  case  left  half  bar  second  case  left  third  bar  variant  always  possible  sometimes  polycarpus  chip  half  third  example  bar  polycarpus  chip  half  third  bar  polycarpus  chip  half  third  bar  polycarpus  chip  half  third  minimum  minute  polycarpus  need  make  bar  consist  square  find  required  minimum  minute  possible  size  bar  process  input  contains  initial  size  chocolate  bar  second  input  contains  initial  size  second  bar  use  data  type  int  pascal  long  long  long  java  process  large  exceeding  print  sought  minimum  minute  second  third  print  possible  size  bar  leveled  minute  print  size  using  format  identical  input  format  print  size  printed  pair  order  second  must  correspond  bar  third  must  correspond  second  bar  multiple  solution  print
689/C __label__math  __label__binary  search  bad  news  came  mike  village  thief  stole  bunch  chocolate  local  factory  horrible  aside  loving  sweet  thing  thief  area  known  greedy  thief  take  chocolate  next  thief  take  exactly  time  previous  value  secret  known  known  thief  bag  carry  chocolate  intend  take  deal  cancelled  exactly  thief  involved  sadly  thief  know  value  rumour  say  way  could  taken  chocolate  fixed  fixed  way  considered  different  thief  numbered  order  take  chocolate  took  different  chocolate  mike  want  track  thief  want  know  bag  value  help  please  find  smallest  possible  value  tell  rumor  false  single  input  contains  way  thief  might  steal  chocolate  rumour  say  print  maximum  amount  chocolate  thief  bag  carry  satisfying  rumor  print  smallest
1178/D __label__math  __label__greedy  __label__constructive  algorithms  __label__number  theory  every  person  like  prime  alice  person  thus  share  love  bob  wanted  give  affectionate  gift  think  anything  inventive  hence  giving  graph  original  bob  alice  surely  thrilled  building  graph  need  condition  satisfied  must  simple  undirected  graph  without  multiple  parallel  edge  self  loop  vertex  must  exactly  selected  necessarily  prime  total  edge  must  prime  degree  edge  connected  vertex  vertex  must  prime  example  graph  left  invalid  degree  vertex  equal  prime  second  graph  middle  invalid  total  edge  prime  third  graph  right  valid  answer  note  graph  disconnected  please  help  bob  find  graph  input  consists  single  vertex  graph  satisfying  condition  print  single  containing
1092/D2 __label__implementation  __label__data  structures  vova  family  building  great  vova  wall  named  vova  vova  parent  grandparent  grand  grandparent  contributed  totally  vova  put  finishing  touch  current  state  wall  respresented  sequence  height  part  wall  vova  use  brick  put  wall  ha  infinite  supply  vova  put  brick  horizontally  neighbouring  part  wall  equal  height  mean  current  height  part  part  vova  put  brick  thus  increase  height  obviously  vova  put  brick  way  part  turn  border  left  part  wall  right  part  note  vova  put  brick  vertically  vova  perfectionist  considers  wall  completed  part  wall  ha  height  wall  ha  empty  space  inside  vova  complete  wall  using  amount  brick  possibly  contains  single  part  wall  second  contains  initial  height  part  wall  print  yes  vova  complete  wall  using  amount  brick  possibly
907/B __label__implementation  bear  playing  tic  tac  toe  via  mail  boring  play  usual  tic  tac  toe  game  playing  modified  version  game  rule  game  played  following  field  player  making  move  turn  move  player  put  chip  cell  small  field  following  move  restriction  last  move  opposite  player  put  chip  cell  coordinate  small  field  next  move  done  cell  small  field  coordinate  example  move  player  put  chip  lower  left  cell  central  field  second  player  next  move  put  chip  cell  lower  left  field  pay  attention  test  case  free  cell  required  field  player  put  chip  empty  cell  field  given  current  state  game  coordinate  cell  last  move  wa  done  find  cell  current  player  put  chip  hare  work  postman  forest  like  foul  bear  sometimes  change  game  field  bit  current  state  game  could  unreachable  change  cell  last  move  wa  done  empty  need  find  state  unreachable  output  possible  next  move  according  rule  contains  description  table  row  column  divided  small  field  space  empty  small  field  described  character  without  space  empty  character  ascii  code  mean  cell  occupied  chip  player  character  ascii  code  denotes  field  occupied  chip  second  player  character  ascii  code  describes  empty  cell  table  contains  describe  coordinate  cell  table  last  move  wa  done  row  table  numbered  column  numbered  left  right  guaranteed  cell  last  move  wa  done  filled  guaranteed  least  empty  cell  guaranteed  current  state  game  reachable  output  field  format  character  ascii  code  position  current  player  put  chip  cell  modified
1184/E2 __label__dfs  __label__graphs  __label__trees  successful  field  test  heidi  considering  deploying  trap  along  corridor  possibly  want  avoid  meeting  daleks  inside  time  vortex  abundance  caution  considers  placing  trap  along  corridor  going  used  according  current  daleks  plan  use  minimum  spanning  tree  corridor  heidi  know  energy  requirement  different  corridor  different  daleks  single  unique  plan  intending  use  task  calculate  max  defined  way  easy  version  largest  changed  energy  corridor  daleks  might  use  every  corridor  heidi  considers  destination  time  corridor  n  next  destination  energy  pair  repeat  graph  guaranteed  connected  energy  requirement  distinct  output  containing  max  corridor  input  part  current  daleks  plan  minimum  spanning  tree
981/C __label__implementation  __label__trees  ramesses  know  lot  problem  involving  tree  undirected  connected  graph  without  cycle  created  new  useful  tree  decomposition  doe  know  construct  asked  help  decomposition  splitting  edge  tree  simple  path  way  path  least  common  vertex  edge  tree  exactly  path  help  remesses  find  decomposition  tree  derermine  decomposition  contains  single  node  tree  next  n  contains  edge  tree  guaranteed  given  edge  form  tree  decomposition  print  containing
902/B __label__greedy  __label__dfs  given  rooted  tree  vertex  vertex  numbered  root  vertex  vertex  ha  color  let  denote  color  vertex  initially  color  tree  given  color  using  smallest  possible  step  step  choose  vertex  color  color  vectices  subtree  including  color  word  every  vertex  path  root  pass  set  guaranteed  color  vertex  color  different  learn  rooted  tree  using  link  http  wikipedia  org  wiki  tree  graphtheory  contains  single  vertex  tree  second  contains  mean  edge  vertex  third  contains  color  color  vertex  guaranteed  given  graph  tree  print  single  minimum  step  perform  color  tree  given  color
847/L __label__dfs  __label__trees  computer  network  berland  state  university  router  numbered  pair  router  connected  patch  cord  information  transmitted  patch  cord  direction  network  arranged  way  communication  router  directly  router  possible  cycle  network  path  pair  router  patch  cord  unfortunately  exact  topology  network  wa  lost  administrator  order  restore  following  auxiliary  information  wa  collected  patch  cord  directly  connected  router  list  router  located  behind  patch  cord  relatively  known  word  router  path  router  go  known  router  list  patch  cord  connected  example  let  network  consists  router  connected  chain  router  single  patch  cord  connected  router  single  list  containing  router  router  patch  cord  connected  second  router  list  list  contains  router  router  router  single  patch  cord  connected  third  router  single  list  containing  router  task  help  administrator  restore  network  topology  identify  pair  router  directly  connected  patch  cord  contains  single  router  network  following  contains  description  list  router  description  list  begin  router  symbol  follows  router  list  given  separated  comma  list  separated  symbol  guaranteed  router  total  router  list  equal  list  router  distinct  router  list  print  solution  exists
1077/E __label__greedy  __label__sortings  polycarp  ha  prepared  competitive  programming  problem  topic  problem  problem  topic  coincide  polycarp  ha  host  several  thematic  contest  problem  contest  topic  contest  pairwise  distinct  topic  use  problem  possible  contest  topic  polycarp  want  host  competition  consecutive  day  contest  per  day  polycarp  want  host  set  contest  way  problem  contest  exactly  twice  much  previous  contest  day  ago  contest  arbitrary  problem  total  problem  contest  maximized  task  calculate  maximum  problem  set  thematic  contest  note  maximize  contest  input  contains  problem  polycarp  ha  prepared  second  input  contains  topic  problem  print  maximum  problem  set  thematic  contest
888/F __label__dp  __label__graphs  point  marked  plane  point  situated  way  form  regular  polygon  marked  point  vertex  numbered  counter  clockwise  order  draw  segment  connecting  marked  point  way  point  connected  directly  indirectly  restriction  firstly  pair  point  connected  directly  connected  undirectly  secondly  segment  draw  must  intersect  point  apart  marked  point  segment  intersect  intersection  marked  point  picture  drawn  invalid  many  way  connect  vertex  segment  way  considered  different  iff  exist  pair  point  segment  drawn  way  connection  drawn  point  second  since  answer  might  large  output  modulo  contains  marked  point  follow  containing  element  element  equal  iff  connect  point  directly  otherwise  guaranteed  pair  point  point  print  way  connect  point  modulo
584/D __label__math  __label__brute  force  __label__number  theory  dima  love  representing  odd  sum  multiple  prime  lisa  love  prime  help  represent  given  sum  prime  formally  given  odd  numer  find  set  prime  necessarily  distinct  guaranteed  least  possible  solution  exists  single  contains  odd  print  showing  many  representation  found
1054/G __label__math  __label__greedy  __label__constructive  algorithms  king  country  decided  completely  rebuild  road  network  people  living  country  enumerated  possible  construct  road  house  citizen  house  citizen  road  pair  citizen  road  network  must  connected  possible  reach  every  citizen  starting  anyone  using  road  save  fund  wa  decided  build  exactly  road  road  network  tree  easy  sound  king  addressed  help  secret  community  country  unites  non  empty  subset  citizen  king  doe  want  conflict  community  want  build  network  house  member  society  form  connected  subtree  network  set  vertex  form  connected  subtree  graph  remains  connected  delete  vertex  edge  connect  vertex  set  help  king  determine  possible  build  desired  road  network  build  test  consists  test  case  contains  single  test  case  following  describe  test  case  following  format  contains  citizen  secret  community  next  description  community  contains  string  length  consisting  character  citizen  member  community  guaranteed  string  contains  least  character  guaranteed  sum  test  case  doe  exceed  sum  test  case  doe  exceed  print  answer  test  case  order  given  input  following  format
1037/C __label__dp  __label__greedy  __label__strings  given  binary  string  length  perform  following  operation  string  swap  bit  index  respectively  cost  operation  absolute  difference  select  arbitrary  index  flip  change  bit  index  cost  operation  find  minimum  cost  make  string  equal  allowed  modify  string  contains  single  length  string  second  third  string  respectively  string  length  output  minimum  cost  make  string  equal
1129/A1 __label__greedy  __label__brute  force  simplified  version  task  toy  train  version  differ  constraint  hack  version  disabled  alice  received  set  toy  train  bob  consists  train  connected  railway  network  station  enumerated  train  occupies  station  time  travel  around  network  station  circular  manner  precisely  immediate  station  train  visit  station  station  station  take  train  second  travel  next  station  described  bob  gave  alice  fun  task  left  deliver  candy  initially  station  independent  destination  using  train  candy  enumerated  candy  station  delivered  station  blue  candy  correspond  value  image  corresponds  example  train  ha  infinite  capacity  possible  load  candy  station  candy  loaded  station  onto  train  leaf  station  choose  candy  station  time  take  move  candy  negligible  alice  wonder  much  time  needed  train  deliver  candy  task  find  station  minimum  time  train  would  need  deliver  candy  start  contains  space  separated  station  candy  respectively  following  contains  space  separated  station  initially  contains  candy  destination  station  candy  respectively  print  space  separated  minimum  time  second  train  would  need  deliver  candy  start  station
916/C __label__graphs  __label__constructive  algorithms  jamie  ha  recently  found  undirected  weighted  graph  following  property  interesting  graph  connected  contains  exactly  vertex  edge  edge  weight  range  inclusive  length  shortest  path  prime  sum  edge  weight  minimum  spanning  tree  mst  graph  prime  graph  contains  loop  multi  edge  familiar  term  statement  find  definition  note  section  help  jamie  construct  graph  given  vertex  edge  interesting  input  contains  required  vertex  edge  output  mstw  p  stw  length  shortest  path  sum  edge  weight  minimum  spanning  tree
1045/J __label__data  structures  __label__trees  __label__strings  since  astronaut  bubblecup  mission  finished  mission  moon  big  fan  famous  singer  decided  spend  fun  time  returning  earth  hence  created  called  moonwalk  challenge  game  team  astronaut  given  map  crater  moon  direct  bidirectional  path  crater  others  safe  moonwalking  direct  path  colored  color  unique  path  crater  goal  game  find  crater  given  array  color  appears  time  continuous  subarray  path  crater  overlapping  appearance  counted  help  favorite  team  win  make  program  given  map  answer  query  following  type  crater  array  color  answer  many  time  given  array  appears  continuous  subarray  path  crater  second  color  represented  lowercase  english  alphabet  letter  crater  moon  crater  numerated  next  value  denoting  direct  path  color  crater  next  contains  query  next  value  cratersfor  find  many  time  array  color  represented  string  appears  path  query  output  represents  occurrence  array  path
1251/A __label__brute  force  __label__strings  recently  polycarp  noticed  button  keyboard  malfunctioning  simplicity  assume  polycarp  keyboard  contains  button  letter  latin  alphabet  button  either  working  fine  malfunctioning  check  button  need  replacement  polycarp  pressed  button  sequence  string  appeared  screen  polycarp  press  button  character  following  event  happened  button  wa  working  correctly  character  appeared  end  string  polycarp  wa  typing  button  wa  malfunctioning  character  appeared  end  string  example  suppose  button  corresponding  character  working  correctly  button  corresponding  malfunctioning  polycarp  press  button  order  string  typing  change  follows  abb  abba  abbac  abbaca  abbacabb  abbacabba  given  string  appeared  screen  polycarp  pressed  button  help  polycarp  determine  button  working  correctly  sure  string  could  appear  screen  button  wa  malfunctioning  assume  button  start  malfunctioning  polycarp  type  string  button  either  work  correctly  throughout  whole  process  malfunction  throughout  whole  process  contains  test  case  input  test  case  follow  test  case  represented  containing  string  consisting  le  lowercase  latin  letter  test  case  print  containing  string  string  character  correspond  button  work  correctly  alphabetical  order  without  separator  repetition  button  malfunction  empty
797/D __label__data  structures  __label__dfs  let  arbitrary  binary  tree  tree  every  vertex  ha  child  given  tree  rooted  exists  vertex  parent  root  tree  every  vertex  ha  written  following  algorithm  run  every  value  tree  set  pointer  root  tree  return  success  value  current  vertex  equal  looking  left  child  vertex  value  current  vertex  greater  looking  right  child  vertex  value  current  vertex  le  looking  return  fail  try  vertex  exist  pseudo  code  described  algorithm  bool  find  treenode  int  null  return  false  value  return  true  value  return  find  left  else  return  find  right  find  root  described  algorithm  work  correctly  tree  binary  search  tree  node  value  left  subtree  le  value  node  value  right  subtree  greater  value  node  return  invalid  result  tree  binary  search  tree  since  given  tree  necessarily  binary  search  tree  found  way  task  calculate  many  time  search  fail  running  every  value  tree  tree  ha  multiple  vertex  value  run  algorithm  every  separately  contains  vertex  tree  next  contains  value  current  vertex  index  left  child  vertex  index  right  child  vertex  respectively  child  exist  set  instead  note  different  vertex  tree  value  print  time  search  algorithm  fail
465/B __label__implementation  time  alexey  mail  box  got  littered  many  letter  read  others  unread  alexey  mail  program  either  show  list  letter  show  content  single  letter  soon  program  show  content  unread  letter  becomes  read  letter  program  show  content  read  letter  nothing  happens  click  following  operation  move  list  letter  content  single  letter  return  list  letter  single  letter  viewing  mode  single  letter  viewing  mode  move  next  previous  letter  list  move  letter  previous  last  letter  next  program  delete  letter  list  rearrange  alexey  want  read  unread  letter  watch  football  viewing  list  letter  letter  see  read  unread  minimum  operation  doe  alexey  need  perform  read  unread  letter  contains  single  letter  mailbox  second  contains  space  separated  state  letter  list  equal  either  unread  letter  read  print  single  minimum  operation  needed  make  letter  read
847/M __label__implementation  vasya  came  weather  forecasting  method  know  information  average  air  temperature  last  day  assume  average  air  temperature  day  integral  vasya  belief  average  temperature  last  day  form  arithmetic  progression  term  equal  average  temperature  day  second  term  equal  average  temperature  second  day  average  temperature  next  day  equal  next  term  arithmetic  progression  otherwise  according  vasya  method  temperature  day  equal  temperature  day  task  help  vasya  predict  average  temperature  tomorrow  day  contains  single  day  average  air  temperature  known  second  contains  sequence  average  temperature  day  print  average  air  temperature  day  vasya  predicts  according  method  note  absolute  value  predicted  temperature  exceed
1150/A __label__implementation  __label__greedy  welcome  codeforces  stock  exchange  pretty  limited  currently  allow  trading  stock  codeforces  ltd  hope  still  able  make  profit  market  morning  opportunity  buy  share  allows  buy  many  share  want  price  bourles  evening  opportunity  sell  share  allows  sell  many  share  want  price  bourles  sell  share  morning  posse  bourles  share  maximum  bourles  hold  evening  input  contains  way  buy  share  market  way  sell  share  market  bourles  hold  next  contains  indicates  opportunity  buy  share  price  bourles  following  contains  indicates  opportunity  sell  share  price  bourles  output  single  maximum  bourles  hold  evening
1146/E __label__implementation  __label__data  structures  given  array  perform  operation  operation  symbol  either  make  new  array  otherwise  flipped  replacement  set  want  know  final  array  look  like  operation  contains  query  next  contains  next  contains  character  query  print  representing  array  operation
475/E __label__dfs  imagine  city  junction  street  junction  numbered  order  increase  traffic  flow  mayor  city  ha  decided  make  street  way  mean  street  junction  traffic  move  problem  direct  traffic  flow  street  way  maximizes  pair  possible  reach  junction  passing  street  specified  direction  task  find  maximal  possible  pair  input  contains  denoting  junction  street  city  following  contains  u  denoting  endpoint  street  city  every  junction  street  guaranteed  mayor  decision  street  way  wa  possible  reach  junction  junction  print  maximal  pair  possible  reach  junction  directing  street
1114/F __label__math  __label__data  structures  __label__number  theory  given  array  need  perform  query  following  type  multiply  every  l  multiply  totient  print  taken  modulo  denotes  euler  totient  function  euler  totient  function  positive  denoted  gcd  gcd  contains  element  array  query  second  contains  element  array  follow  describing  query  format  given  statement  multiply  denotes  multiplication  query  totient  denotes  query  value  euler  totient  function  guaranteed  least  totient  query  totient  query  print  answer
707/D __label__implementation  __label__data  structures  __label__dfs  recently  school  alina  ha  learned  persistent  data  structure  data  structure  always  preserve  previous  version  access  modified  reaching  home  alina  decided  invent  persistent  data  structure  inventing  take  long  bookcase  right  behind  bed  alina  think  bookcase  good  choice  persistent  data  structure  initially  bookcase  empty  thus  book  position  shelf  bookcase  consists  shelf  shelf  ha  exactly  position  book  alina  enumerates  shelf  position  shelf  initially  bookcase  empty  thus  book  position  shelf  alina  wrote  operation  consecutively  applied  bookcase  operation  ha  type  place  book  position  shelf  book  remove  book  position  shelf  book  invert  book  placing  shelf  mean  every  position  shelf  ha  book  book  removed  every  position  shelf  ha  book  book  placed  return  book  bookcase  state  applying  operation  particular  mean  bookcase  initial  state  thus  every  book  bookcase  removed  position  applying  operation  alina  interested  book  bookcase  alina  got  school  problem  finding  value  input  contains  bookcase  dimension  operation  respectively  next  describes  operation  chronological  order  describes  operation  format  described  statement  guaranteed  shelf  index  position  index  correct  fourth  type  operation  corresponds  operation  equal  operation  print  book  bookcase  applying  separate  answer  printed  chronological  order
1203/D2 __label__implementation  __label__greedy  __label__binary  search  difference  easy  hard  version  length  string  given  string  string  consisting  lowercase  latin  letter  guaranteed  obtained  removing  possibly  character  necessary  contiguous  without  changing  order  remaining  character  word  guaranteed  subsequence  example  string  test  tst  subsequence  string  test  string  tset  contest  subsequence  string  test  want  remove  substring  contiguous  subsequence  maximum  possible  length  removing  substring  remain  subsequence  want  remove  substring  string  transformed  length  task  find  maximum  possible  length  substring  remove  still  subsequence  input  contains  string  consisting  least  lowercase  latin  letter  second  input  contains  string  consisting  least  lowercase  latin  letter  guaranteed  subsequence  print  maximum  possible  length  substring  remove  still  subsequence
878/E __label__dp  sequence  written  blackboard  soon  sasha  come  blackboard  start  following  action  let  adjacent  remove  write  instead  perform  operation  left  sasha  like  big  get  biggest  possible  nikita  want  get  blackboard  sasha  erase  ha  option  option  era  left  right  inclusive  remain  blackboard  option  want  know  big  sasha  final  going  big  output  modulo  contains  blackboard  nikita  option  next  contains  sequence  blackboard  next  contains  ii  describing  nikita  option  option  output  sasha  result  modulo
312/A __label__implementation  __label__strings  day  liouzhou  got  chat  record  freda  rainbow  curiosity  wanted  know  sentence  said  freda  said  rainbow  according  experience  thought  freda  always  said  lala  end  sentence  rainbow  always  said  miao  beginning  sentence  sentence  chat  record  help  liouzhou  find  whose  sentence  input  contains  sentence  chat  record  next  contains  sentence  sentence  string  contains  latin  letter  underline  comma  point  space  length  exceed  sentence  output  freda  sentence  wa  said  freda  rainbow  sentence  wa  said  rainbow  omg  know  liouzhou  recognize  whose  sentence  recognize  sentence  begin  miao  end  lala  satisfies  neither  condition
1000/A __label__implementation  __label__greedy  codehorses  ha  hosted  second  codehorses  cup  year  previous  organizer  giving  shirt  winner  valid  size  shirt  either  followed  example  size  xx  xxxl  valid  xxxxl  winner  cup  previous  year  current  year  ksenia  ha  list  shirt  size  printed  last  year  cup  send  new  list  printing  office  organizer  want  distribute  prize  soon  possible  ksenia  required  write  whole  list  scratch  make  change  list  previous  year  second  choose  arbitrary  position  word  replace  character  uppercase  latin  letter  ksenia  remove  add  letter  word  minimal  second  ksenia  required  spend  change  last  year  list  current  list  unordered  mean  list  considered  equal  occurrence  string  list  contains  shirt  next  contains  size  shirt  list  previous  year  next  contains  size  shirt  list  current  year  guaranteed  size  input  valid  guaranteed  ksenia  produce  list  list  print  minimal  second  ksenia  required  spend  change  last  year  list  current  list  already  equal  print
899/A __label__math  __label__greedy  __label__constructive  algorithms  group  student  came  write  training  contest  group  either  person  write  contest  anyone  else  people  want  write  contest  team  coach  decided  form  team  exactly  people  training  determine  maximum  team  people  form  possible  use  group  form  team  group  either  student  write  contest  student  group  write  contest  team  contains  single  group  second  contains  sequence  people  group  print  maximum  team  people  coach  form
730/D __label__math  __label__implementation  __label__greedy  polycarp  playing  game  called  running  bridge  game  ha  run  bridge  left  right  bridge  arranged  bridge  begin  bridge  end  following  data  bridge  length  bridge  maximum  allowed  time  polycarp  spend  running  bridge  thus  polycarp  beginning  bridge  time  ha  leave  time  earlier  allowed  reach  right  end  bridge  exactly  time  polycarp  run  left  side  right  speed  run  bridge  length  time  besides  ha  several  magical  drink  us  drink  speed  increase  twice  value  second  magical  drink  identical  please  note  polycarp  use  drink  moment  time  drink  instantly  completely  additionally  polycarp  us  drink  moment  use  next  drink  earlier  moment  minimal  drink  polycarp  ha  use  run  bridge  greater  find  moment  time  polycarp  ha  use  magical  drink  contains  bridge  duration  effect  magical  drink  second  contains  sequence  equal  length  bridge  third  contains  sequence  equal  maximum  allowed  time  polycarp  spend  running  bridge  output  minimal  drink  polycarp  ha  use  solution
1250/K __label__graphs  lecture  seminar  conducted  today  faculty  approximate  science  lecture  start  end  formally  time  lecture  span  interval  right  bound  exclusive  seminar  start  end  similarly  time  seminar  span  interval  right  bound  exclusive  projector  numbered  ordinary  projector  numbered  available  faculty  projector  distributed  way  projector  used  lecture  projector  ordinary  used  seminar  projector  ordinary  used  event  moment  time  projector  selected  event  used  whole  duration  event  projector  reused  following  event  start  earlier  current  event  finish  find  distribution  projector  exists  note  right  bound  event  time  range  inclusive  event  start  exactly  another  event  finish  projector  reused  suppose  instantly  transported  location  event  contains  test  case  test  case  start  containing  lecture  seminar  projector  ordinary  projector  respectively  next  describe  lecture  contains  start  time  inclusive  finish  time  exclusive  lecture  next  describe  seminar  contains  start  time  inclusive  finish  time  exclusive  seminar  test  case  print  yes  possible  distribute  projector  order  meet  requirement  otherwise
919/C __label__implementation  __label__brute  force  suppose  campus  class  day  day  see  hurry  classroom  surprisingly  find  many  seat  already  occupied  today  friend  went  class  found  seat  occupied  classroom  contains  row  seat  seat  row  classroom  represented  nm  matrix  character  represents  empty  seat  mean  seat  occupied  need  find  consecutive  empty  seat  row  column  arrange  seat  friend  task  find  way  arrange  seat  way  considered  different  set  place  student  occupy  differs  contains  positive  k  represent  size  classroom  consecutive  seat  need  find  next  contains  character  form  matrix  representing  classroom  denotes  empty  seat  denotes  occupied  seat  single  denoting  way  find  empty  seat  row  column
601/C __label__math  __label__dp  kleof  participating  thlon  tournament  consisting  different  competition  different  discipline  numbered  participant  thlon  participates  competition  competition  participant  given  rank  way  participant  given  rank  word  rank  competition  form  permutation  score  participant  competition  equal  rank  overall  score  participant  computed  sum  participant  score  competition  overall  rank  participant  equal  participant  strictly  smaller  overall  score  thlon  result  published  kleof  still  remembers  rank  particular  competition  remember  anything  well  participant  therefore  kleof  would  like  know  expected  overall  rank  competitor  equally  good  discipline  ranking  permutation  rank  everyone  except  kleof  competition  equiprobable  input  contains  space  separated  competition  participant  respectively  follow  contains  rank  kleof  competition  output  single  real  expected  overall  rank  kleof  answer  considered  correct  relative  absolute  error  exceed
1045/A __label__data  structures  __label__trees  year  year  passed  moon  landing  meanwhile  humanity  colonized  hyperspace  lived  harmony  realized  alone  far  away  earth  massive  fleet  alien  spaceship  preparing  attack  earth  time  humanity  real  danger  crisis  panic  everywhere  scientist  around  solar  system  met  discussed  possible  solution  progress  ha  made  earth  last  hope  fortunately  earth  equipped  powerful  defense  system  made  mdcs  alien  spaceship  form  defense  system  consists  type  weapon  sql  rocket  every  sql  rocket  destroy  spaceship  given  set  cognition  beam  every  cognition  beam  ha  interval  destroy  spaceship  interval  omg  bazooka  every  omg  bazooka  ha  possible  target  bazooka  destroy  either  exactly  spaceship  addition  due  smart  targeting  system  set  possible  target  different  omg  bazooka  disjoint  mean  every  ship  targeted  omg  bazooka  task  make  plan  attack  destroy  largest  possible  spaceship  every  destroyed  spaceship  destroyed  exactly  weapon  contains  weapon  spaceship  next  start  represents  type  either  type  weapon  sql  rocket  rest  contains  strictly  positive  array  type  weapon  cognition  beam  rest  contains  type  weapon  omg  bazooka  rest  contains  distinct  maximum  destroyed  spaceship
777/B __label__dp  __label__greedy  __label__data  structures  __label__sortings  fourth  season  sherlock  moriary  realized  whole  foolishness  battle  decided  continue  competition  peaceful  game  credit  card  rule  game  simple  player  bring  favourite  digit  credit  card  player  name  digit  written  card  digit  equal  player  whose  digit  smaller  get  flick  knock  forehead  usually  made  forefinger  player  example  sherlock  card  moriarty  card  ha  sherlock  name  moriarty  name  sherlock  get  flick  digit  get  flick  finally  sherlock  name  moriarty  name  get  flick  course  sherlock  play  honestly  naming  digit  order  given  moriary  true  villain  plan  cheat  going  name  digit  order  going  change  overall  occurences  digit  example  case  moriarty  could  name  get  flick  name  give  sherlock  flick  goal  find  minimum  possible  flick  moriarty  get  like  flick  maximum  possible  flick  sherlock  get  moriarty  note  goal  different  optimal  result  obtained  using  different  strategy  input  contains  single  digit  card  sherlock  moriarty  going  use  second  contains  digit  sherlock  credit  card  third  contains  digit  moriarty  credit  card  print  minimum  possible  flick  moriarty  get  print  maximum  possible  flick  sherlock  get  moriarty
316/B2 __label__dp  __label__dfs  rush  modern  life  people  often  forget  beautiful  world  time  enjoy  around  little  even  stand  queue  several  room  time  clinic  running  queue  another  cultural  note  standing  huge  disorganized  queue  hour  native  tradition  russia  dating  back  soviet  period  queue  resemble  crowd  rather  get  lost  queue  person  follow  strict  survival  technique  approach  queue  ask  last  person  somebody  answer  join  crowd  last  person  queue  till  somebody  else  show  keep  eye  wa  last  chance  get  destination  sure  many  people  problem  stranger  asks  last  person  queue  even  dare  hint  last  queue  bolt  away  unknown  destination  representative  modern  world  ratio  lack  time  great  even  watch  foreign  top  rated  series  people  often  create  problem  queue  newcomer  doe  see  last  person  queue  take  place  virtual  link  chain  wondering  legendary  figure  ha  left  smart  beaver  ha  ill  made  appointment  therapist  doctor  told  beaver  sad  news  nutshell  necessary  electrocardiogram  next  day  smart  beaver  got  early  put  famous  series  download  hour  till  download  complete  clenched  teeth  bravely  went  join  queue  electrocardiogram  room  notorious  biggest  queue  clinic  stood  hour  queue  smart  beaver  realized  many  beaver  seen  wa  supposed  stand  queue  wa  huge  mess  came  beaver  ecg  room  queue  asked  front  queue  beaver  know  correct  position  queue  might  turn  get  ecg  maybe  wait  long  long  time  guessed  smart  beaver  wa  hurry  home  gave  necessary  information  help  determine  queue  contains  beaver  stand  queue  smart  beaver  correspondingly  willing  get  doctor  numbered  second  contains  beaver  followed  beaver  beaver  know  front  guaranteed  value  correct  cycle  dependency  beaver  followed  beaver  queue  input  limit  scoring  point  subproblem  guaranteed  element  exceed  input  limit  scoring  point  subproblems  element  arbitrary  print  possible  position  smart  beaver  increasing  order
964/A __label__math  let  define  split  nonincreasing  sequence  positive  sum  example  following  sequence  split  following  sequence  split  weight  split  element  split  equal  element  example  weight  split  weight  split  weight  split  equal  given  find  different  weight  split  contains  output  answer  problem
792/A __label__implementation  __label__sortings  city  situated  along  main  road  berland  city  represented  coordinate  coordinate  pairwise  distinct  possible  get  city  another  bus  bus  road  old  minister  transport  decided  build  new  bus  route  minister  want  spend  large  amount  money  want  choose  city  way  distance  minimal  possible  distance  city  equal  absolute  value  difference  coordinate  possible  multiple  pair  city  minimal  possible  distance  minister  want  know  quantity  pair  task  write  program  calculate  minimal  possible  distance  pair  city  quantity  pair  distance  contains  second  contains  pairwise  distinct  print  minimal  distance  quantity  pair  distance
435/C __label__implementation  problem  task  use  ascii  graphic  paint  cardiogram  cardiogram  polyline  following  corner  cardiogram  fully  defined  sequence  positive  task  paint  cardiogram  given  sequence  contains  next  contains  sequence  guaranteed  sum  exceed  print  max  coordinate  point  polyline  print  character  character  must  equal  either  slash  backslash  space  printed  image  must  image  given  polyline  please  study  test  sample  better  understanding  print  cardiogram
358/A __label__implementation  __label__brute  force  dima  seryozha  live  ordinary  dormitory  room  day  dima  date  girl  asked  seryozha  leave  room  compensation  seryozha  made  dima  homework  teacher  gave  seryozha  coordinate  distinct  point  abscissa  axis  asked  consecutively  connect  semi  circus  certain  order  connect  point  second  connect  second  point  third  third  fourth  point  point  coordinate  connected  semi  circle  pass  abscissa  axis  diameter  coincides  segment  point  seryozha  need  find  picture  intersects  clarification  see  picture  seryozha  showed  dima  left  picture  ha  self  intersection  right  picture  seryozha  small  boy  coordinate  point  rather  large  help  dima  cope  problem  contains  single  second  contains  distinct  point  ha  coordinate  point  necessarily  sorted  coordinate  single  print  yes  without  quote  ha  self  intersection  otherwise  print  without  quote
896/E __label__data  structures  survived  welcome  home  chtholly  kept  promise  made  really  made  several  day  fighting  chtholly  nota  seniorious  miraculously  returned  fierce  battle  promised  willem  baking  butter  cake  although  willem  skilled  making  dessert  rarely  bakes  butter  cake  time  willem  made  big  mistake  accidentally  broke  oven  fortunately  chtholly  decided  help  willem  put  cake  roll  cake  numbered  cake  need  second  baking  willem  need  chtholly  operation  bake  cake  operation  willem  asks  chtholly  check  cake  range  cake  need  baked  second  would  bake  second  put  back  place  precisely  every  range  strictly  becomes  equal  operation  willem  asks  chtholly  count  cake  range  need  cooked  exactly  second  formally  find  range  contains  second  contains  next  operation  described  guaranteed  operation  second  type  print  answer
1183/D __label__greedy  __label__sortings  problem  actually  subproblem  problem  contest  candy  candy  box  type  candy  prepare  gift  using  candy  following  restriction  candy  type  presented  gift  distinct  example  gift  candy  type  candy  type  bad  possible  multiple  type  candy  completely  absent  gift  possible  candy  type  taken  gift  task  find  maximum  possible  size  single  gift  prepare  using  candy  answer  independent  query  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  query  query  represented  query  contains  candy  second  query  contains  type  candy  box  guaranteed  sum  query  doe  exceed  query  print  maximum  possible  size  single  gift  compose  using  candy  got  query  restriction  described  problem  statement
601/A __label__graphs  absurdistan  town  numbered  bidirectional  railway  absurdly  simple  road  network  pair  different  town  bidirectional  road  town  railway  travelling  different  town  using  railway  road  always  take  exactly  hour  train  bus  leave  town  time  destination  town  make  stop  way  wait  town  train  move  along  railway  bus  move  along  road  asked  plan  route  vehicle  route  use  road  railway  multiple  time  important  aspect  consider  safety  order  avoid  accident  railway  crossing  train  bus  must  arrive  town  except  town  simultaneously  constraint  minimum  hour  needed  vehicle  reach  town  maximum  arrival  time  bus  train  note  bus  train  required  arrive  town  moment  time  allowed  input  contains  town  railway  respectively  next  contains  denoting  railway  town  u  assume  railway  connecting  town  output  smallest  possible  time  later  vehicle  arrival  town  impossible  least  vehicle  reach  town  output
784/C __label__implementation  expect  find  base  xor  language  includes  string  byte  chew  distort  largest  mathematics  far  saying  abracadabra  without  magic  good  last  stack  rupture  die  embarrassment  array  must  scream  element  stored  west  hyperspace  input  data  contains  single  second  input  data  contains  space  separated  output  single
757/F __label__data  structures  __label__graphs  turn  year  bash  want  send  present  friend  city  himalayan  region  connected  bidirectional  road  bash  living  city  bash  ha  exactly  friend  city  since  bash  want  surprise  friend  decides  send  pikachu  since  city  reachable  bash  city  sends  pikachu  friend  live  city  reachable  city  want  send  soon  possible  find  minimum  time  pikachus  reach  destination  city  since  perfectionist  informs  friend  time  gift  reach  pikachu  travel  speed  meter  per  second  friend  excited  hear  would  unhappy  present  got  delayed  unfortunately  team  rocket  loose  came  know  bash  plan  want  maximize  friend  unhappy  bash  destroying  exactly  city  implies  friend  residing  city  dy  unhappy  well  note  city  destroyed  road  directly  connected  city  destroyed  pikachu  forced  take  longer  alternate  route  please  note  friend  waiting  gift  count  unhappy  even  die  since  bash  already  legend  help  team  rocket  time  find  maximum  bash  friend  made  unhappy  destroying  exactly  city  contains  space  separated  city  road  himalayan  region  city  bash  life  next  space  separated  u  denoting  exists  road  city  city  length  meter  guaranteed  road  connects  city  road  connect  pair  city  print  single  answer  problem
743/B __label__implementation  __label__constructive  algorithms  __label__binary  search  chloe  vladik  competitive  programmer  problem  get  olympiad  like  vladik  wa  confused  task  proposed  olympiad  let  consider  following  algorithm  generating  sequence  initially  sequence  consisting  single  element  equal  perform  step  step  take  sequence  got  previous  step  append  end  insert  middle  minimum  positive  used  example  get  sequence  step  sequence  second  step  task  find  value  element  index  element  numbered  obtained  sequence  step  please  help  chloe  solve  problem  contains  n  print  single  position  obtained  sequence
898/D __label__greedy  every  evening  vitalya  set  alarm  clock  wake  tomorrow  every  alarm  clock  ring  exactly  minute  characterized  minute  midnight  ring  every  alarm  clock  begin  ringing  beginning  minute  ring  whole  minute  vitalya  definitely  wake  consecutive  minute  least  alarm  clock  begin  ringing  pay  attention  vitalya  considers  alarm  clock  begin  ringing  given  period  time  consider  alarm  clock  started  ringing  given  period  time  continues  ringing  given  period  time  vitalya  tired  want  sleep  day  long  wake  find  minimal  alarm  clock  vitalya  turn  sleep  next  day  alarm  clock  turned  contains  alarm  clock  condition  vitalya  waking  second  contains  sequence  distinct  equal  minute  alarm  clock  ring  given  arbitrary  order  vitalya  life  berland  day  last  minute  output  minimal  alarm  clock  vitalya  turn  sleep  next  day  long
1195/C __label__dp  finally  basketball  court  ha  opened  si  demid  ha  decided  hold  basketball  exercise  session  student  come  demid  exercise  session  lined  row  size  exactly  people  row  student  numbered  row  order  left  right  demid  want  choose  team  play  basketball  choose  player  left  right  index  chosen  player  excluding  taken  strictly  greater  index  previously  chosen  player  avoid  giving  preference  row  demid  chooses  student  way  consecutive  chosen  student  belong  row  student  chosen  student  additional  constraint  team  consist  student  demid  think  order  compose  perfect  team  choose  student  way  total  height  chosen  student  maximum  possible  help  demid  find  maximum  possible  total  height  player  team  choose  input  contains  single  student  row  second  input  contains  height  student  row  third  input  contains  height  student  second  row  print  single  maximum  possible  total  height  player  team  demid  choose
456/A __label__sortings  day  dima  alex  argument  price  quality  laptop  dima  think  expensive  laptop  better  alex  disagrees  alex  think  laptop  price  laptop  le  strictly  smaller  price  second  laptop  quality  laptop  higher  strictly  greater  quality  second  laptop  please  check  guess  alex  given  description  laptop  determine  whether  described  laptop  exist  contains  laptop  next  price  laptop  represents  quality  laptop  larger  higher  quality  distinct  distinct  alex  correct  print  happy  alex  otherwise  print  poor  alex  without  quote
1221/G __label__dp  __label__brute  force  given  undirected  graph  vertex  edge  write  vertex  graph  either  write  edge  equal  sum  vertex  incident  edge  choose  write  vertex  least  edge  written  least  edge  least  edge  many  way  way  choose  different  exists  least  vertex  ha  different  written  way  contains  vertex  edge  respectively  follow  contains  endpoint  edge  guaranteed  pair  vertex  connected  edge  print  way  write  vertex  exists  least  edge  written  least  edge  least  edge
480/E __label__data  structures  petya  bored  work  killing  time  watching  parking  lot  office  parking  lot  look  like  n  table  cell  table  corresponds  single  parking  spot  spot  parking  lot  taken  others  empty  petya  watch  car  riding  parking  lot  car  settle  parking  spot  petya  amuzes  counting  maximum  square  empty  spot  square  subtable  seen  parking  lot  look  take  note  square  size  side  length  notebook  task  given  state  parking  lot  initial  moment  time  information  arriving  car  park  restore  petya  wrote  notebook  midday  nobody  leaf  lot  contains  size  parking  lot  arriving  car  petya  started  watch  following  contains  character  mean  taken  spot  mean  empty  spot  next  contains  pair  row  column  spot  corresponding  car  take  guaranteed  place  wa  empty  assume  car  enters  parking  lot  previous  car  successfully  find  spot  print  length  side  maximum  square  empty  spot  corresponding  car  ha  entered  parking  lot
1148/D __label__greedy  __label__sortings  given  pair  pair  distinct  range  inclusive  let  call  sequence  good  either  k  k  k  k  need  choose  subset  distinct  index  order  way  write  pair  single  sequence  sequence  would  sequence  good  largest  subset  index  choose  need  construct  corresponding  index  sequence  contains  single  pair  next  element  pair  guaranteed  pair  distinct  every  mentioned  exactly  print  single  pair  answer
731/A __label__implementation  __label__strings  grigoriy  like  hero  famous  comedy  film  found  job  night  security  guard  museum  night  received  embosser  wa  take  stock  whole  exposition  embosser  special  devise  allows  print  text  plastic  tape  text  printed  sequentially  character  character  device  consists  wheel  lowercase  english  letter  written  circle  static  pointer  current  letter  button  print  chosen  letter  move  allowed  rotate  alphabetic  wheel  step  clockwise  counterclockwise  initially  static  pointer  point  letter  letter  located  shown  picture  grigoriy  add  new  item  base  ha  print  name  plastic  tape  attach  corresponding  exhibit  required  return  wheel  initial  position  pointer  letter  hero  afraid  exhibit  become  alive  start  attack  want  print  name  fast  possible  help  given  string  find  minimum  rotation  wheel  required  print  input  contains  name  exhibit  non  empty  string  consisting  character  guaranteed  string  consists  lowercase  english  letter  print  minimum  rotation  wheel  required  print  name  given  input
418/D __label__data  structures  __label__graphs  __label__trees  final  russian  code  cup  held  hotel  hotel  let  assume  main  hotel  host  sort  event  remaining  hotel  accommodate  participant  hotel  connected  road  get  hotel  organizer  wonder  minimum  time  participant  need  get  main  hotel  participant  go  main  hotel  nearest  moving  hotel  connected  road  take  unit  time  host  consider  various  option  location  main  hotel  option  help  organizer  find  minimal  time  contains  hotel  next  hotel  road  consider  hotel  numbered  next  contains  query  following  contains  distinct  hotel  assume  main  request  organizer  print  single  time  participant  need  reach  main  hotel
260/C __label__implementation  __label__greedy  __label__constructive  algorithms  little  vasya  box  ball  room  box  stood  row  numbered  left  right  vasya  chose  box  let  assume  took  ball  guaranteed  box  originally  least  ball  began  putting  ball  time  box  vasya  put  ball  box  next  ball  go  box  next  go  box  ball  left  hand  possible  vasya  put  multiple  ball  box  possible  ball  box  vasya  put  ball  box  next  ball  go  box  example  let  suppose  initially  vasya  box  box  ball  second  third  fourth  ball  vasya  take  ball  third  box  put  box  vasya  action  ball  lie  box  follows  box  ball  second  third  fourth  point  vasya  ha  completely  forgotten  original  arrangement  ball  box  know  arranged  box  put  last  taken  ball  asks  help  find  initial  arrangement  ball  box  input  contains  represent  box  index  box  got  last  ball  vasya  correspondingly  second  contains  space  separated  ax  represents  ball  box  index  vasya  completes  action  please  use  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  print  represents  ball  box  vasya  start  acting  separate  output  space  multiple  correct  solution  allowed  print
946/E __label__implementation  __label__greedy  yes  another  problem  definition  beautiful  let  call  positive  beautiful  decimal  representation  without  leading  contains  even  digit  exists  permutation  representation  palindromic  example  beautiful  since  contains  digit  exists  palindromic  permutation  given  positive  find  largest  beautiful  le  contains  testcases  solve  follow  representing  testcase  containing  string  decimal  representation  guaranteed  string  ha  even  length  contains  leading  exists  least  beautiful  le  sum  length  testcases  exceed  testcase  print  containing  largest  beautiful  le  guaranteed  answer  exists
939/D __label__greedy  __label__dfs  __label__graphs  __label__strings  valya  tolya  ideal  pair  quarrel  sometimes  recently  valya  took  offense  boyfriend  came  shirt  lettering  differs  lettering  pullover  want  see  tolya  seating  room  cry  photo  day  long  story  could  sad  fairy  godmother  tolya  grandmother  decided  help  restore  relationship  secretly  took  tolya  shirt  valya  pullover  want  make  lettering  order  unit  mana  buy  spell  change  letter  clothes  task  calculate  minimum  amount  mana  tolya  grandmother  spend  rescue  love  tolya  valya  formally  lettering  tolya  shirt  valya  pullover  string  length  consisting  lowercase  english  letter  using  unit  mana  grandmother  buy  spell  form  lowercase  english  letter  arbitrary  time  transform  single  letter  vise  versa  tolya  shirt  valya  pullover  find  minimum  amount  mana  grandmother  spend  buy  set  spell  make  lettering  equal  addition  output  required  set  spell  contains  single  length  lettering  second  contains  string  length  consisting  lowercase  english  letter  lettering  valya  pullover  third  contains  lettering  tolya  shirt  format  output  single  minimum  amount  mana  required  rescuing  love  valya  tolya
989/B __label__constructive  algorithms  __label__strings  walking  along  riverside  mino  silently  take  note  something  time  mino  think  aloud  time  tide  wait  man  explains  mino  name  taken  river  always  reminds  recording  see  tide  everything  ha  period  think  figured  say  mino  confidence  doubtfully  kanno  peek  mino  record  record  expressed  string  character  denotes  low  tide  denotes  high  tide  denotes  unknown  either  high  low  help  mino  determine  whether  possible  replacing  independently  given  period  resulting  string  case  answer  yes  please  show  replacement  mino  problem  positive  considered  period  string  character  length  contains  space  separated  length  given  string  supposed  period  respectively  second  contains  string  character  mino  record  contains  character  contains  least  character  output  possible  period  resulting  string  output  string  otherwise  output  without  quote  print  letter  case  upper  lower
413/E __label__data  structures  last  product  company  game  field  new  revolutionary  algorithm  searching  shortest  path  maze  imagine  maze  look  like  rectangle  divided  unit  square  unit  square  either  empty  cell  obstacle  unit  time  person  move  empty  cell  maze  side  adjacent  empty  cell  shortest  path  problem  formulated  follows  given  free  maze  cell  need  determine  minimum  time  required  cell  unfortunately  developed  algorithm  work  well  request  finding  shortest  path  practice  request  occur  quite  often  chief  programmer  commissioned  optimize  algorithm  find  shortest  path  write  program  effectively  respond  multiple  request  find  shortest  path  maze  contains  width  maze  query  correspondingly  next  maze  contains  character  character  equal  either  empty  cell  obstacle  next  contains  n  description  request  mean  need  print  value  shortest  path  cell  maze  cell  assume  cell  maze  numbered  left  right  cell  second  numbered  left  right  guaranteed  given  cell  empty  print  print  answer  request  either  size  shortest  path  reach  second  cell
1119/B __label__greedy  __label__sortings  __label__binary  search  alyona  ha  recently  bought  miniature  fridge  represented  matrix  row  column  initially  shelf  bottom  fridge  alyona  install  arbitrary  shelf  inside  fridge  row  shelf  cell  wide  doe  occupy  space  separate  inside  fridge  lower  upper  part  example  fridge  shelf  shelf  shown  black  picture  corresponds  example  alyona  ha  bottle  milk  want  put  fridge  bottle  cell  tall  cell  wide  put  bottle  shelf  corresponding  space  shelf  least  tall  bottle  put  bottle  top  another  bottle  shelf  bottle  share  cell  alyona  interested  largest  put  bottle  fridge  time  find  largest  contains  bottle  height  fridge  second  contains  height  bottle  print  single  maximum  alyona  put  bottle  fridge  time  alyona  put  bottle  fridge  print  easy  see  alyona  always  put  least  bottle  fridge
1104/B __label__math  __label__implementation  __label__data  structures  people  playing  game  string  consisting  lowercase  latin  letter  player  turn  choose  consecutive  equal  letter  string  delete  example  string  equal  xaax  possible  turn  delete  string  become  player  able  make  turn  loses  task  determine  player  win  play  optimally  contains  string  consisting  lowercase  latin  letter  mean  length  string  player  win  print  yes  second  player  win  print
645/B __label__math  __label__greedy  balmy  spring  afternoon  farmer  john  cow  ruminating  link  cut  cactus  stall  cow  labeled  arranged  cow  occupies  stall  left  elsie  realizing  forever  live  shadow  beyond  bessie  limelight  ha  formed  mischievous  mess  maker  plotting  disrupt  beautiful  pastoral  rhythm  farmer  john  take  minute  long  nap  elsie  mess  maker  plan  repeatedly  choose  distinct  stall  swap  cow  occupying  stall  making  swap  minute  meticulous  prankster  mischievous  mess  maker  would  like  know  maximum  messiness  attainable  minute  denote  label  cow  stall  messiness  arrangement  cow  defined  pair  input  contains  cow  length  farmer  john  nap  respectively  output  single  maximum  messiness  mischievous  mess  maker  achieve  performing  swap
847/F __label__greedy  election  berland  parliament  happening  today  voting  full  swing  totally  candidate  numbered  based  election  result  top  candidate  take  seat  parliament  end  voting  vote  candidate  calculated  resulting  table  candidate  ordered  vote  case  tie  equal  vote  ordered  time  last  vote  given  candidate  ealier  last  vote  stand  higher  resulting  table  resulting  table  candidate  sorted  vote  vote  stand  higher  place  candidate  equal  vote  sorted  time  last  vote  earlier  last  vote  stand  higher  place  way  candidate  vote  take  seat  parliament  possible  le  candidate  take  seat  parliament  berland  citizen  vote  vote  candidate  citizen  give  vote  exactly  candidate  option  everyone  election  accepted  spoil  bulletin  election  citizen  vote  exactly  candidate  moment  citizen  voted  already  open  election  citizen  known  candidate  citizen  ha  voted  formally  citizen  voted  candidate  citizen  already  voted  numbered  chronological  order  citizen  voted  remaining  citizen  vote  end  election  vote  candidate  task  determine  candidate  possible  outcome  candidate  elected  parliament  regardless  vote  remaining  citizen  candidate  ha  chance  elected  parliament  citizen  voted  candidate  ha  chance  elected  parliament  regardless  vote  remaining  citizen  contains  candidate  seat  parliament  berland  citizen  citizen  already  voted  second  contains  sequence  j  candidate  citizen  ha  voted  citizen  already  voted  numbered  increasing  order  voting  time  print  sequence  consisting
747/B __label__implementation  __label__strings  process  mammoth  genome  decoding  berland  come  end  remaining  task  restore  unrecognized  nucleotide  found  chain  nucleotide  coded  capital  letter  english  alphabet  unrecognized  nucleotide  coded  question  mark  thus  string  consisting  letter  character  known  nucleotide  type  decoded  genome  mammoth  berland  equal  task  decode  genome  replace  unrecognized  nucleotide  type  nucleotide  type  becomes  equal  contains  length  genome  second  contains  string  length  coded  genome  consists  character  possible  decode  genome  print  multiple  answer  print  possible  print  equal  sign  row  without  quote
220/B __label__data  structures  __label__constructive  algorithms  little  elephant  love  playing  array  ha  array  consisting  positive  indexed  let  denote  index  additionally  little  elephant  ha  query  array  query  characterised  pair  jj  query  little  elephant  ha  count  many  exist  occurs  exactly  time  alj  lj  rj  help  little  elephant  count  answer  query  contains  space  separated  size  array  query  next  contains  space  separated  positive  next  description  query  per  contains  description  query  space  separated  jj  print  answer  query  answer  query
707/B __label__graphs  masha  want  open  bakery  bake  muffin  city  numbered  bidirectional  road  whose  connects  pair  city  bake  muffin  bakery  masha  need  establish  flour  supply  storage  storage  located  different  city  numbered  unforunately  law  country  masha  life  prohibits  opening  bakery  city  ha  storage  located  open  another  city  course  flour  delivery  paid  every  kilometer  path  storage  bakery  masha  pay  ruble  formally  masha  pay  rouble  open  bakery  city  ai  every  choose  storage  city  connected  path  road  summary  length  path  masha  able  choose  used  masha  thrifty  rational  interested  city  open  bakery  choose  storage  path  city  bakery  city  storage  pay  minimum  possible  amount  ruble  flour  delivery  please  help  masha  find  amount  input  contains  city  country  masha  life  road  flour  storage  respectively  follow  contains  u  meaning  road  city  length  kilometer  last  input  contains  distinct  city  flour  storage  located  presented  input  print  minimum  possible  amount  ruble  masha  pay  flour  delivery
208/B __label__dp  __label__dfs  boy  named  vasya  want  play  old  russian  solitaire  called  accordion  solitaire  player  must  observe  following  rule  deck  card  carefully  shuffled  card  put  table  left  right  move  table  ha  several  pile  card  lying  initially  pile  pile  ha  card  let  pile  left  right  move  player  take  whole  pile  maximum  rightmost  remaining  put  top  pile  exists  top  pile  exists  player  put  pile  top  another  pile  top  card  suit  value  please  note  pile  go  top  pile  top  card  pile  becomes  top  card  resulting  pile  note  move  decrease  total  pile  solitaire  considered  completed  card  pile  vasya  ha  already  shuffled  card  put  table  help  understand  whether  completing  solitaire  possible  input  contains  single  card  vasya  deck  next  contains  space  separated  string  string  describes  card  table  string  consists  exactly  character  represents  card  value  second  represents  suit  card  table  numbered  left  right  card  value  specified  character  card  suit  specified  character  guaranteed  deck  ha  possible  card  card  vasya  deck  repeat  single  print  answer  problem  string  yes  without  quote  completing  solitaire  possible  string  without  quote  otherwise
830/D __label__dp  __label__graphs  __label__trees  known  passage  singer  house  complex  intertwined  let  define  singer  house  graph  built  following  process  take  complete  binary  tree  height  add  edge  vertex  successor  present  singer  house  count  non  empty  path  singer  house  pas  vertex  twice  path  distinct  set  order  visited  vertex  different  since  answer  large  output  modulo  contains  single  print  single  answer  task  modulo
923/E __label__math  initially  written  blackboard  repeat  following  action  fixed  amount  time  take  currently  written  blackboard  erase  select  uniformly  random  range  inclusive  write  blackboard  determine  distribution  final  given  distribution  initial  step  contains  maximum  written  blackboard  step  perform  second  contains  describes  probability  starting  express  probability  irreducible  fraction  guaranteed  sum  pi  equal  modulo  output  single  probability  final  step  proven  probability  always  expressed  irreducible  fraction  asked  output
717/E __label__dfs  see  pink  boar  want  painted  black  black  boar  look  much  awesome  mighty  pink  since  jaggy  became  ruler  forest  ha  trying  best  improve  diplomatic  relation  forest  region  nearby  ruler  requested  much  return  peace  region  realized  ha  resort  intimidation  delegate  diplomatic  relation  neighboring  region  visit  jaggy  forest  see  whole  bunch  black  boar  might  suddenly  change  mind  attacking  jaggy  black  boar  really  scary  jaggy  forest  represented  tree  connected  graph  without  cycle  vertex  vertex  represents  boar  colored  either  black  pink  jaggy  ha  sent  squirrel  travel  forest  paint  boar  black  squirrel  quite  unusually  trained  traverse  graph  change  color  every  vertex  visit  regardless  initial  color  pink  vertex  become  black  black  vertex  become  pink  since  jaggy  busy  plan  squirrel  route  need  help  want  construct  walk  tree  starting  vertex  end  vertex  black  walk  sequence  vertex  every  consecutive  pair  ha  edge  tree  input  contains  denoting  vertex  tree  following  contains  represent  color  node  vertex  black  vertex  pink  next  contains  represent  index  vertex  connected  edge  vertex  numbered  starting  output  path  squirrel  output  sequence  visited  node  index  order  visiting  case  node  initially  black  print  solution  guaranteed  exist  multiple  solution  problem  output  provided  length  sequence  longer
533/F __label__strings  polycarp  invented  new  way  encode  string  let  assume  string  consisting  lowercase  english  letter  let  choose  several  pair  letter  english  alphabet  way  letter  occurs  pair  let  replace  letter  pair  letter  pair  letter  example  chose  pair  word  parallelogram  according  given  encoding  principle  transforms  word  qolorreraglom  polycarpus  already  ha  string  suspect  string  wa  obtained  applying  given  encoding  method  substring  string  find  position  obtained  fro  substring  smismi  smi  applying  described  encoding  operation  using  set  pair  english  alphabet  letter  input  contains  length  string  string  respectively  second  third  input  string  respectively  string  consist  lowercase  english  letter  print  suitable  position  string
435/B __label__greedy  pasha  ha  positive  without  leading  today  decided  small  make  larger  unfortunately  operation  pasha  swap  adjacent  decimal  digit  help  pasha  count  maximum  get  ha  time  make  swap  single  contains  print  maximum  pasha  get  make  swap
609/D __label__greedy  __label__binary  search  nura  want  buy  gadget  ha  burles  buy  gadget  dollar  pound  gadget  selling  type  currency  type  currency  cost  currency  changing  nura  buy  gadget  day  day  know  exchange  rate  dollar  pound  know  cost  conversion  burles  dollar  pound  day  nura  buy  gadget  current  exchange  rate  day  buy  gadget  want  gadget  bought  day  help  nura  find  minimum  day  index  gadget  nura  always  pay  burles  converted  according  exchange  rate  purchase  day  nura  buy  dollar  pound  always  store  burles  gadget  numbered  order  appearing  input  contains  day  total  required  gadget  burles  nura  ha  second  contains  cost  dollar  burles  day  third  contains  cost  pound  burles  day  next  contains  type  gadget  cost  gadget  type  cost  specified  dollar  gadget  second  type  cost  specified  pound  nura  buy  gadget  print
1133/D __label__math  __label__number  theory  given  array  contains  want  create  new  array  follows  choose  real  necessarily  every  let  goal  maximize  array  largest  possible  answer  choose  optimally  contains  element  array  second  contains  third  contains  print  maximum  array  choose  optimally
107/B __label__math  __label__dp  german  university  cairo  guc  student  basketball  player  herr  wafa  wa  delighted  heard  news  guc  finally  participating  annual  basketball  competition  abc  team  formed  player  guc  student  team  might  player  belonging  different  department  department  guc  numbered  herr  wafa  department  ha  department  herr  wafa  know  many  student  play  basketball  belong  department  herr  wafa  wa  able  guarantee  spot  team  using  special  power  since  hate  floating  point  need  help  finding  probability  least  teammate  belonging  department  note  every  possible  team  containing  herr  wafa  equally  probable  consider  student  different  contains  player  team  department  guc  herr  wafa  department  correspondingly  second  contains  single  space  separated  list  denoting  student  department  note  includes  herr  wafa  print  probability  herr  wafa  least  teammate  department  enough  basketball  player  guc  participate  abc  print  answer  accepted  ha  absolute  relative  error  exceeding
1070/B __label__greedy  __label__data  structures  berkomnadzor  federal  service  supervision  communication  information  technology  mass  medium  berland  federal  executive  body  protects  ordinary  resident  berland  threat  modern  internet  berkomnadzor  maintains  list  prohibited  ipv  subnets  blacklist  list  allowed  ipv  subnets  whitelist  internet  service  provider  isps  berland  must  configure  network  equipment  block  access  ipv  address  matching  blacklist  isps  must  provide  access  block  ipv  address  matching  whitelist  ipv  address  doe  match  either  list  isp  decide  whether  block  ipv  address  match  blacklist  whitelist  match  subnet  blacklist  whitelist  ipv  address  belong  whitelist  blacklist  time  situation  lead  contradiction  see  solution  case  output  description  ipv  address  bit  unsigned  written  form  value  called  octet  written  decimal  notation  example  ipv  address  converted  bit  using  following  expression  octet  encodes  significant  leftmost  bit  octet  following  block  bit  order  octet  encodes  least  significant  rightmost  bit  ipv  network  berland  slightly  different  rest  world  reserved  internal  address  berland  use  possible  value  ipv  subnet  represented  either  subnet  contains  single  address  subnet  contains  ipv  address  leftmost  significant  bit  equal  leftmost  bit  address  required  rightmost  least  significant  bit  subnet  naturally  happens  address  matching  subnet  form  continuous  range  range  start  address  rightmost  bit  range  end  address  leftmost  bit  equal  leftmost  bit  address  rightmost  bit  subnet  contains  exactly  address  subnet  contains  exactly  address  represented  example  subnet  contains  range  address  address  range  last  berkomnadzor  engineer  devised  plan  improve  performance  berland  global  network  instead  maintaining  whitelist  blacklist  want  build  single  optimised  blacklist  containing  minimal  subnets  idea  block  ipv  address  matching  optimised  blacklist  allow  rest  address  course  ipv  address  old  blacklist  must  remain  blocked  ipv  address  old  whitelist  must  still  allowed  ipv  address  matched  neither  old  blacklist  old  whitelist  either  blocked  allowed  regardless  accessibility  please  write  program  take  blacklist  whitelist  input  produce  optimised  blacklist  optimised  blacklist  must  minimal  possible  subnets  satisfy  ipv  address  accessibility  requirement  mentioned  ipv  subnets  source  list  intersect  arbitrarily  please  output  single  ipv  address  match  source  whitelist  blacklist  input  contains  single  total  ipv  subnets  input  following  ipv  subnets  start  either  sign  indicates  subnet  belongs  blacklist  whitelist  correspondingly  followed  without  space  ipv  subnet  format  blacklist  always  contains  least  subnet  ipv  subnets  given  input  valid  start  extra  leading  provided  ipv  subnets  intersect  arbitrarily  output  ipv  address  match  whitelist  blacklist  otherwise  output  length  optimised  blacklist  followed  subnets  subnet  new  subnets  printed  arbitrary  order  address  matching  source  blacklist  must  match  optimised  blacklist  address  matching  source  whitelist  must  match  optimised  blacklist  print  subnet  way
1019/C __label__graphs  __label__constructive  algorithms  sergey  turned  year  old  wa  year  old  parent  gave  wa  year  old  parent  gave  array  third  birthday  received  string  wa  mother  woke  quiet  voice  wished  good  boy  gave  rooted  tree  today  celebrates  birthday  found  directed  graph  without  loop  present  parent  since  sergey  curious  boy  immediately  came  thing  decided  find  set  vertex  graph  vertex  connected  edge  possible  reach  vertex  vertex  move  little  thought  sergey  wa  able  solve  task  solve  vertex  reachable  vertex  move  either  directed  edge  exist  directed  edge  vertex  input  contains  positive  vertex  edge  directed  graph  following  describes  corresponding  edge  contains  beginning  end  edge  graph  multiple  edge  pair  vertex  print  selected  vertex  print  distinct  index  selected  vertex
724/G __label__math  __label__graphs  __label__trees  __label__number  theory  given  undirected  graph  constisting  vertex  edge  edge  graph  ha  non  negative  written  let  call  triple  interesting  path  possibly  non  simple  visit  vertex  edge  multiple  time  vertex  xor  written  edge  path  equal  compute  value  path  edge  counted  xor  many  time  appear  path  hard  prove  finite  triple  calculate  sum  modulo  value  interesting  triple  input  contains  vertex  edge  given  graph  follow  uii  vertex  connected  edge  written  guaranteed  graph  self  loop  multiple  edge  print  single  equal  described  sum  modulo
362/C __label__math  __label__dp  __label__implementation  __label__data  structures  petya  beginner  programmer  ha  already  mastered  basic  language  moved  learning  algorithm  algorithm  encountered  wa  insertion  sort  petya  ha  already  written  code  implement  algorithm  sort  given  indexed  array  size  non  decreasing  order  int  int  swap  swap  element  petya  us  algorithm  sorting  array  permutation  ha  already  chosen  permutation  want  sort  decided  swap  element  petya  want  choose  element  way  time  sorting  executes  function  swap  wa  minimum  help  petya  find  way  make  swap  fulfill  requirement  guaranteed  always  possible  swap  element  input  permutation  way  swap  function  call  decrease  contains  single  length  permutation  second  contains  different  inclusive  actual  permutation  print  minimum  time  swap  function  executed  pair  swapping  element  input  permutation  index  lead  minimum  execution
865/D __label__greedy  __label__data  structures  __label__constructive  algorithms  perfectly  predict  price  certain  stock  next  day  would  like  profit  knowledge  want  transact  share  stock  per  day  day  either  buy  share  sell  share  nothing  initially  share  sell  share  end  day  would  like  share  want  much  money  possible  begin  day  following  exactly  price  share  stock  day  given  print  maximum  amount  money  end  end  day
1089/F __label__math  given  positive  find  sequence  fraction  positive  divide  divide  input  consists  single  print  yes  exists  sequence  fraction  otherwise
1033/D __label__math  __label__number  theory  given  ha  divisor  consider  product  input  find  divisor  large  print  modulo  prime  contains  single  next  contains  guaranteed  divisor  print  single  divisor  product  modulo
1192/C __label__dp  __label__brute  force  cubeword  special  type  crossword  building  cubeword  start  choosing  positive  side  length  cube  build  big  cube  consisting  aaa  unit  cube  big  cube  ha  edge  discard  unit  cube  touch  edge  big  cube  figure  show  object  get  finally  assign  letter  unit  cube  object  must  get  meaningful  word  along  edge  big  cube  edge  read  either  direction  sufficient  direction  reading  give  meaningful  word  figure  show  object  unit  cube  already  assigned  letter  already  read  word  submit  accept  turing  along  edge  big  cube  given  list  valid  word  word  wordlist  appear  arbitrarily  many  edge  valid  cubeword  find  report  different  cubewords  constructed  modulo  cubeword  obtained  another  rotation  mirroring  considered  distinct  contains  single  word  follow  contains  word  appear  edge  big  cube  length  word  inclusive  guaranteed  word  different  output  single  distinct  cubewords  given  list  valid  word  modulo
603/A __label__math  __label__dp  __label__greedy  kevin  ha  recevied  disappointing  result  usa  identification  cow  olympiad  usaico  form  binary  string  length  character  kevin  string  represents  kevin  score  question  olympiad  correctly  identified  cow  otherwise  lost  kevin  big  proponent  alternative  thinking  belief  score  instead  sum  point  length  longest  alternating  subsequence  string  define  alternating  subsequence  string  necessarily  contiguous  subsequence  consecutive  element  equal  example  alternating  sequence  kevin  sneaky  little  puffball  willing  hack  usaico  database  improve  score  order  subtle  decides  flip  exactly  substring  take  contiguous  non  empty  substring  score  change  substring  vice  versa  operation  kevin  want  know  length  longest  possible  alternating  subsequence  string  could  contains  question  olympiad  following  contains  binary  string  length  representing  kevin  result  usaico  output  single  length  longest  possible  alternating  subsequence  kevin  create  string  flipping  single  substring
765/D __label__math  __label__constructive  algorithms  artsem  ha  friend  saunders  university  chicago  saunders  presented  following  problem  let  denote  set  write  function  defined  point  value  given  function  task  find  positive  function  determine  finding  impossible  contains  second  contains  space  separated  value  answer  print
706/B __label__dp  __label__implementation  __label__binary  search  vasiliy  like  rest  hard  work  often  meet  bar  nearby  programmer  love  famous  drink  beecola  bought  different  shop  city  known  price  bottle  shop  equal  coin  vasiliy  plan  buy  favorite  drink  consecutive  day  know  day  able  spent  coin  day  want  know  many  different  shop  buy  bottle  beecola  input  contains  single  shop  city  sell  vasiliy  favourite  drink  second  contains  price  bottle  drink  shop  third  contains  single  day  vasiliy  plan  buy  drink  follow  containing  coin  vasiliy  spent  day  print  equal  shop  vasiliy  able  buy  bottle  drink  day
899/F __label__data  structures  __label__strings  petya  ha  string  length  consisting  small  large  english  letter  digit  performs  operation  operation  described  character  petya  remove  string  character  position  inclusive  obvious  length  string  remains  decrease  operation  find  string  look  like  petya  performs  operation  string  contains  length  string  operation  second  contains  string  length  consisting  small  large  english  letter  digit  position  string  enumerated  next  contains  followed  character  small  large  english  letter  digit  describes  operation  guaranteed  exceed  length  string  current  operation  print  string  petya  obtain  performing  operation  string  becomes  empty  operation  print  empty
547/D __label__dfs  __label__graphs  __label__constructive  algorithms  everyone  know  bear  love  fish  mike  strange  bear  hate  fish  even  strange  thing  ha  infinite  blue  red  fish  ha  marked  distinct  point  plane  point  point  want  put  exactly  fish  point  difference  red  fish  blue  fish  horizontal  vertical  find  way  perform  please  help  input  contains  next  information  point  contains  point  coordinate  guaranteed  least  valid  answer  print  answer  sequence  character  red  blue  character  denotes  color  fish  point
846/B __label__greedy  __label__brute  force  polycarp  take  part  math  show  given  task  consists  subtasks  numbered  take  minute  solve  subtask  task  thus  time  required  solve  subtask  depends  index  task  polycarp  solve  subtasks  order  solving  subtask  arbitrary  problem  earns  point  thus  point  task  equal  solved  subtasks  moreover  polycarp  completely  solves  task  solves  subtasks  recieves  extra  point  thus  total  point  recieves  complete  solution  task  polycarp  ha  minute  time  maximum  point  earn  contains  second  contains  value  j  time  minute  required  solve  subtask  task  print  maximum  amount  point  polycarp  earn  minute
1234/E __label__math  let  define  following  permutation  mean  permutation  almost  identity  map  every  element  permutation  element  position  example  given  array  let  po  val  position  element  val  po  po  po  let  define  function  po  val  absolute  value  val  function  mean  sum  distance  adjacent  element  task  calculate  input  contains  element  permutation  element  second  input  contains  element  element  repeat  appear  arbitrary  order  print
1190/D __label__data  structures  __label__sortings  point  plane  tokitsukaze  want  draw  strange  rectangular  area  pick  point  area  strange  area  enclosed  left  side  bottom  side  right  side  respectively  real  satisfying  upper  side  area  boundless  regard  parallel  axis  infinity  following  figure  show  strange  rectangular  area  point  strange  rectangular  area  example  figure  area  tokitsukaze  want  know  many  different  non  empty  set  obtain  picking  point  strange  rectangular  area  think  set  different  exists  least  point  set  contains  single  point  plane  next  contains  coordinate  point  point  distinct  print  single  different  non  empty  set  point  obtain
855/E __label__dp  harry  came  know  dumbledore  salazar  slytherin  locket  horcrux  locket  wa  present  earlier  grimmauld  place  home  sirius  black  mother  wa  stolen  present  ministry  magic  office  dolorous  umbridge  harry  former  defense  dark  art  teacher  harry  ron  hermione  infiltrating  ministry  upon  reaching  umbridge  office  observed  code  lock  puzzle  asking  calculate  count  magic  inclusive  harry  remembered  detention  time  umbridge  defined  magic  converted  given  base  digit  appear  even  time  representation  without  leading  answer  query  unlock  office  query  ha  base  range  find  count  magic  input  contains  query  next  space  separated  ii  output  containing  single  answer  corresponding  query
1243/B2 __label__strings  problem  different  easy  version  version  ujan  make  swap  addition  k  n  necessary  print  swap  hack  problem  solve  hack  previous  problem  solve  problem  struggling  failing  many  time  ujan  decided  try  clean  house  decided  get  string  order  ujan  ha  distinct  string  length  consisting  lowercase  english  character  want  make  equal  since  ujan  lazy  perform  following  operation  time  take  position  value  equal  different  swap  character  ujan  goal  make  string  equal  doe  need  minimize  performed  operation  sequence  operation  length  shorter  suitable  contains  single  test  case  test  case  contains  single  length  string  next  contains  string  length  exactly  string  consist  lowercase  english  letter  guaranteed  string  different  test  case  output  yes  ujan  make  string  equal  operation  otherwise  print  letter  case  upper  lower
587/C __label__data  structures  __label__trees  recently  duff  ha  soldier  army  malek  commander  country  andarz  ha  city  numbered  bidirectional  road  road  connects  different  city  exist  unique  path  city  people  living  andarz  numbered  person  ha  person  life  city  note  person  city  people  living  city  malek  love  order  asks  duff  answer  query  query  give  answer  query  assume  people  living  city  lying  path  city  city  assume  people  id  increasing  order  duff  tell  malek  order  word  malek  want  know  minimum  path  le  le  people  duff  busy  moment  asked  help  answer  query  input  contains  next  road  contains  endpoint  road  v  next  contains  separated  space  next  query  contains  query  print  separated  space
730/J __label__dp  nick  ha  bottle  soda  left  birthday  bottle  described  value  remaining  amount  soda  bottle  volume  aii  nick  ha  decided  pour  remaining  soda  minimal  bottle  moreover  ha  soon  possible  nick  spends  second  pour  unit  soda  bottle  another  nick  asks  help  determine  minimal  bottle  store  remaining  soda  minimal  time  pour  soda  bottle  bottle  store  soda  volume  remaining  soda  saved  contains  positive  bottle  second  contains  positive  amount  soda  remaining  bottle  third  contains  positive  volume  bottle  guaranteed  aii  minimal  bottle  store  soda  minimal  time  pour  soda  bottle
755/D __label__data  structures  polandball  ha  convex  polygon  veritces  diagonal  intersect  point  polandball  decided  improve  draw  red  segment  chose  gcd  vertex  polygon  numbered  clockwise  way  polandball  repeat  following  process  time  starting  vertex  assume  ended  last  operation  vertex  consider  operation  draw  new  segment  vertex  next  vertex  clockwise  direction  vertex  depending  valid  index  polygon  vertex  task  calculate  polygon  section  drawing  section  clear  area  inside  polygon  bounded  drawn  diagonal  polygon  side  input  gcd  print  value  separated  space  value  represent  polygon  section  drawing
1102/E __label__sortings  given  array  consisting  let  denote  monotonic  renumeration  array  array  consisting  following  condition  met  every  pair  index  note  still  possible  every  index  either  example  possible  monotonic  renumerations  task  calculate  different  monotonic  renumerations  answer  large  print  modulo  contains  element  second  contains  print  different  monotonic  renumerations  taken  modulo
757/G __label__data  structures  __label__graphs  __label__trees  whoa  great  job  helping  team  rocket  managed  capture  pokemons  sent  bash  meowth  part  team  rocket  already  mastered  human  language  want  become  master  programming  well  agrees  free  pokemons  bash  answer  question  initially  meowth  give  bash  weighted  tree  containing  node  sequence  permutation  mewoth  make  query  following  form  meaning  bash  report  dist  length  shortest  path  node  node  given  tree  meaning  bash  swap  given  sequence  new  sequence  used  later  query  help  bash  answer  question  contains  node  tree  query  respectively  next  contains  space  separated  sequence  permutation  next  space  separated  denoting  exists  undirected  edge  node  node  weight  u  guaranteed  given  graph  tree  query  consists  contains  single  indicating  type  query  next  contains  description  query  second  contains  using  generated  using  formula  given  second  contains  single  using  generated  using  formula  given  ansi  answer  query  assume  query  type  ansi  ansi  guaranteed  query  type  query  type  operation  mean  bitwise  exclusive  query  type  output  single  separate  denoting  answer  query
433/C __label__math  __label__implementation  __label__sortings  ryouko  extremely  forgetful  girl  could  even  forget  something  ha  happened  order  remember  take  notebook  called  ryouko  memory  note  writes  see  hears  notebook  notebook  became  memory  though  ryouko  forgetful  born  superb  analyzing  ability  analyzing  depends  greatly  gathered  information  word  memory  ha  shuffle  notebook  whenever  need  analyze  tough  work  ryouko  notebook  consists  page  numbered  make  life  problem  easier  consider  turn  page  page  page  turned  analyzing  ryouko  need  piece  information  piece  information  page  information  must  read  notebook  order  total  page  ryouko  need  turn  ryouko  want  decrease  page  need  turned  order  achieve  merge  page  notebook  ryouko  merges  page  page  would  copy  information  page  consequently  element  sequence  wa  would  become  note  equal  case  change  take  place  please  tell  ryouko  minimum  page  need  turn  note  apply  described  operation  reading  note  answer  exceed  bit  input  contains  next  contains  separated  space  print  single  minimum  page  ryouko  need  turn
744/E __label__strings  hongcow  teacher  heard  hongcow  learned  cyclic  shift  decided  set  following  problem  given  list  string  contained  list  list  string  called  stable  following  condition  hold  message  defined  concatenation  element  list  use  arbitrary  element  many  time  want  concatenate  element  arbitrary  order  let  denote  set  message  construct  list  course  set  ha  infinite  size  list  nonempty  call  single  message  good  following  condition  hold  suppose  message  concatenation  string  element  consider  cyclic  shift  string  let  cyclic  shift  string  element  message  good  exactly  equal  list  called  stable  every  element  good  let  stable  list  otherwise  find  sum  nonempty  contiguous  sublist  contiguous  sublists  total  input  single  denoting  string  list  next  string  print  single  nonempty  contiguous  sublists  stable
513/G1 __label__dp  __label__dfs  __label__brute  force  given  permutation  perform  operation  following  type  choose  uniformly  random  index  l  reverse  order  element  task  find  expected  value  inversion  resulting  permutation  input  contains  next  contains  given  permutation  different  range  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  answer  absolute  relative  error
558/A __label__implementation  __label__sortings  __label__brute  force  amr  life  lala  land  lala  land  beautiful  country  located  coordinate  lala  land  famous  apple  tree  growing  everywhere  lala  land  ha  exactly  apple  tree  tree  located  position  ha  apple  growing  amr  want  collect  apple  apple  tree  amr  currently  stand  position  beginning  choose  whether  right  left  continue  direction  meet  apple  tree  visit  take  apple  reverse  direction  continue  walking  direction  meet  another  apple  tree  visit  word  amr  revers  direction  visiting  new  apple  tree  amr  stop  collecting  apple  tree  visit  direction  facing  maximum  apple  collect  contains  apple  tree  lala  land  following  contains  xi  representing  position  tree  apple  guaranteed  apple  tree  coordinate  guaranteed  tree  grows  point  output  maximum  apple  amr  collect
724/B __label__math  __label__implementation  __label__greedy  __label__brute  force  given  table  consisting  row  column  row  form  permutation  allowed  pick  element  row  swap  row  allowed  pick  column  swap  thus  allowed  perform  action  total  operation  performed  order  check  whether  possible  obtain  identity  permutation  row  word  check  perform  operation  following  given  rule  make  row  sorted  increasing  order  input  contains  row  column  given  table  next  contains  element  table  guaranteed  form  permutation  way  obtain  identity  permutation  row  following  given  rule  print  yes  without  quote  output  otherwise  print  without  quote
622/D __label__constructive  algorithms  array  contains  twice  arbitrary  permute  let  position  permuted  array  let  define  value  distance  position  permute  array  minimize  value  sum  contains  print  permuted  array  minimizes  value  sum
1092/F __label__dp  __label__dfs  __label__trees  given  tree  consisting  exactly  vertex  tree  connected  undirected  graph  edge  vertex  tree  ha  value  assigned  let  dist  distance  vertex  distance  vertex  edge  simple  path  let  define  cost  tree  following  value  firstly  let  fix  vertex  tree  let  cost  tree  dist  task  calculate  maximum  possible  cost  tree  choose  arbitrarily  contains  vertex  tree  second  input  contains  value  vertex  next  describes  edge  tree  edge  denoted  label  vertex  connects  guaranteed  given  edge  form  tree  print  maximum  possible  cost  tree  choose  vertex
1085/D __label__implementation  __label__trees  __label__constructive  algorithms  given  tree  undirected  connected  graph  without  cycle  vanya  want  put  weight  edge  tree  weight  non  negative  real  sum  time  want  make  diameter  tree  small  possible  let  define  diameter  weighed  tree  maximum  sum  weight  edge  lying  path  vertex  tree  word  diameter  weighed  tree  length  longest  simple  path  tree  length  path  equal  sum  weight  edge  path  find  minimum  possible  diameter  vanya  get  contains  vertex  tree  sum  edge  weight  following  contains  space  separated  index  vertex  connected  edge  edge  undirected  guaranteed  given  edge  form  tree  print  minimum  diameter  tree  vanya  get  placing  non  negative  real  weight  edge  sum  equal
729/F __label__dp  problem  ha  unusual  memory  constraint  evening  igor  zhenya  financier  became  boring  decided  play  game  prepared  paper  income  company  time  period  note  income  positive  negative  igor  zhenya  placed  paper  row  decided  take  turn  making  move  igor  take  paper  left  side  zhenya  take  paper  right  side  igor  go  take  choice  paper  left  turn  player  take  paper  side  opponent  took  exactly  paper  previous  turn  player  skip  move  game  end  paper  left  player  make  move  task  determine  difference  sum  income  paper  igor  took  sum  income  paper  zhenya  took  assuming  player  play  optimally  igor  want  maximize  difference  zhenya  want  minimize  contains  single  positive  paper  second  contains  income  paper  left  print  difference  sum  income  paper  igor  took  sum  income  paper  zhenya  took  assuming  player  play  optimally  igor  want  maximize  difference  zhenya  want  minimize
385/A __label__implementation  __label__greedy  __label__brute  force  bear  decided  store  raspberry  winter  cunningly  found  price  barrel  honey  kilo  raspberry  following  day  according  bear  data  day  price  barrel  honey  going  kilo  raspberry  unfortunately  bear  ha  neither  honey  barrel  raspberry  time  bear  got  friend  ready  lend  barrel  honey  exactly  day  kilogram  raspberry  bear  came  smart  plan  want  choose  day  lent  barrel  honey  immediately  day  sell  according  daily  exchange  rate  next  day  bear  want  buy  new  barrel  honey  according  daily  exchange  rate  got  raspberry  left  selling  previous  barrel  immediately  day  give  friend  borrowed  barrel  honey  well  kilogram  raspberry  renting  barrel  bear  want  execute  plan  hibernate  maximum  kilogram  raspberry  earn  note  point  plan  bear  run  raspberry  execute  plan  contains  space  separated  day  kilo  raspberry  bear  give  borrowing  barrel  second  contains  space  separated  price  honey  barrel  day  print  single  answer  problem
1168/C __label__dp  toad  pimple  ha  array  say  reachable  exists  array  denotes  bitwise  operation  given  pair  index  check  reachability  contains  array  query  need  answer  second  contains  space  separated  given  array  next  contains  space  separated  need  check  reachable  output  print  shi  reachable  otherwise  print  fou
887/C __label__implementation  __label__brute  force  break  competition  top  model  izabella  try  develop  bored  example  try  solve  rubik  cube  x  x  hard  learn  solve  rubik  cube  instantly  learns  understand  possible  solve  cube  state  using  degree  rotation  face  cube  direction  check  answer  want  use  program  state  cube  tell  possible  solve  using  rotation  described  cube  called  solved  face  cube  square  ha  color  http  wikipedia  org  wiki  rubikscube  given  sequence  denotes  color  square  exactly  occurrence  color  sequence  print  yes  without  quote  possible  solve  cube  using  rotation  without  quote  otherwise
46/E __label__dp  __label__data  structures  endured  hardship  lara  croft  finally  found  room  treasure  surprise  find  golden  mountain  lara  looked  around  noticed  floor  painted  table  n  panel  size  written  panel  wa  huge  stone  lying  wall  pillar  near  table  lara  found  guidance  note  said  get  hold  treasure  ha  choose  non  panel  row  table  put  stone  panel  push  receive  golden  coin  equal  sum  written  chosen  panel  lara  quickly  made  mind  arrange  stone  wa  start  noticed  addition  note  small  font  according  addition  room  ceiling  crush  smash  adventurer  chosen  panel  form  comb  wa  explained  chosen  panel  form  comb  sequence  made  quantity  panel  chosen  table  satisfies  following  property  inequation  mark  interchange  neighboring  element  lara  bewildered  know  help  determine  largest  coin  get  survive  time  contains  pair  next  table  absolute  value  table  doe  exceed  print  single  maximum  coin  lara  get
578/B __label__greedy  __label__brute  force  given  perform  operation  operation  multiply  want  make  large  possible  denotes  bitwise  find  maximum  possible  value  performing  operation  optimally  contains  second  contains  output  maximum  value  bitwise  sequence  element  performing  operation
1158/D __label__math  __label__greedy  __label__constructive  algorithms  __label__geometry  vasya  ha  different  point  plane  lie  want  place  order  permutation  draw  oriented  polygonal  point  drawing  oriented  segment  point  next  chosen  order  draw  oriented  segment  point  point  want  make  polygonal  satisfying  condition  non  self  intersecting  segment  neighbor  common  point  winding  vasya  ha  string  consisting  symbol  let  call  oriented  polygonal  winding  turn  left  right  formally  turn  point  oriented  segment  point  point  change  oriented  segment  point  point  let  define  vector  order  rotate  vector  smallest  possible  angle  direction  coincides  direction  vector  need  make  turn  counterclockwise  say  turn  left  otherwise  right  better  understanding  look  picture  example  turn  left  turn  picture  right  turn  picture  given  coordinate  point  plane  string  find  permutation  polygonal  drawn  vasya  satisfy  necessary  condition  contains  point  next  contains  divided  space  coordinate  point  plane  last  contains  string  consisting  symbol  length  guaranteed  point  different  point  lie  satisfying  permutation  exists  print  case  print  permutation  wa  found  different  exists  solution  find
1037/H __label__data  structures  programming  website  establishing  secure  communication  protocol  security  reason  want  choose  several  le  random  string  initially  string  consisting  lowercase  english  letter  want  choose  string  using  following  step  help  string  consisting  lowercase  english  letter  chosen  consider  non  empty  distinct  substring  distinct  string  l  choose  string  lexicographically  greater  string  print  otherwise  print  lexicographically  smallest  string  lexicographically  le  string  either  prefix  exists  position  denotes  length  string  input  contains  non  empty  string  consisting  lowercase  english  letter  second  contains  string  select  next  contains  non  empty  string  consisting  lowercase  english  letter  total  length  string  query  doe  exceed  output  desired  string  string
786/A __label__dp  __label__dfs  rick  morty  playing  version  berzerk  ha  nothing  common  famous  berzerk  game  game  need  huge  space  play  computer  game  object  numbered  arranged  circle  clockwise  order  object  black  hole  others  planet  monster  planet  rick  morty  know  initially  black  hole  unity  inform  game  start  want  prepared  every  possible  scenario  ha  set  inclusive  rick  set  element  morty  element  go  player  change  alternatively  player  turn  choose  arbitrary  like  set  monster  move  next  object  current  position  clockwise  move  monster  get  black  hole  win  task  monster  initial  position  play  determine  starter  win  loses  game  stuck  infinite  loop  case  player  lose  make  game  infinity  profitable  choose  infinity  game  input  contains  single  object  game  second  contains  followed  distinct  rick  set  third  contains  followed  distinct  morty  set  print  word  separated  space  word  win  without  quotation  scenario  rick  play  monster  initially  object  win  lose  loses  loop  game  never  end
922/A __label__implementation  imp  like  plush  toy  lot  recently  found  machine  clone  plush  toy  imp  know  applies  machine  original  toy  additionally  get  original  toy  copy  applies  machine  copied  toy  get  additional  copy  initially  imp  ha  original  toy  want  know  possible  use  machine  get  exactly  copied  toy  original  toy  throw  toy  away  apply  machine  copy  currently  copy  contains  copy  original  toy  imp  want  get  including  initial  print  yes  desired  configuration  possible  otherwise
734/A __label__implementation  __label__strings  anton  like  play  chess  doe  friend  danik  played  game  row  game  known  wa  winner  anton  danik  none  game  ended  tie  anton  wonder  game  danik  help  determine  input  contains  single  game  played  second  contains  string  consisting  uppercase  english  letter  outcome  game  character  string  equal  anton  game  danik  game  anton  game  danik  print  anton  without  quote  output
922/D __label__greedy  __label__sortings  pushok  dog  ha  chasing  imp  hour  already  fortunately  imp  know  pushok  afraid  robot  vacuum  cleaner  moving  robot  generates  string  consisting  letter  produce  lot  noise  define  noise  string  occurrence  string  subsequence  word  pair  robot  moment  imp  know  ha  sequence  string  memory  arbitrary  change  order  robot  started  generates  string  concatenation  string  given  order  noise  resulting  string  equal  noise  concatenation  help  imp  find  maximum  noise  achieve  changing  order  string  contains  single  string  robot  memory  next  string  per  guaranteed  string  non  empty  english  letter  total  length  doe  exceed  print  single  maxumum  possible  noise  imp  achieve  changing  order  string
671/A __label__dp  __label__implementation  __label__greedy  __label__geometry  wa  recycling  day  kekoland  celebrate  adil  bera  went  central  perk  take  bottle  ground  put  recycling  bin  think  central  perk  coordinate  plane  bottle  ground  bottle  located  position  adil  bera  carry  bottle  adil  bera  process  look  follows  choose  stop  continue  collect  bottle  choice  wa  continue  choose  bottle  walk  towards  pick  bottle  walk  recycling  bin  step  adil  bera  move  independently  allowed  pick  bottle  simultaneously  bottle  picked  allowed  stay  still  continues  pick  bottle  want  organize  process  total  distance  walk  sum  distance  walked  adil  distance  walked  bera  minimum  possible  course  end  bottle  lie  recycling  bin  input  contains  x  initial  position  adil  bera  recycling  bin  respectively  second  contains  single  bottle  ground  follow  contains  position  bottle  guaranteed  position  adil  bera  recycling  bin  bottle  distinct  print  real  minimum  possible  total  distance  adil  bera  need  walk  order  put  bottle  recycling  bin  answer  considered  correct  absolute  relative  error  doe  exceed
742/A __label__math  __label__implementation  __label__number  theory  exists  island  called  arpa  land  beautiful  girl  live  ugly  mehrdad  want  become  minister  arpa  land  arpa  ha  prepared  exam  exam  ha  question  given  print  last  digit  n  mehrdad  ha  become  quite  confused  want  help  please  help  although  naive  cheat  single  input  contains  print  single  last  digit  n
700/C __label__dfs  __label__graphs  hard  time  berland  many  town  tension  even  civil  war  possible  town  reberland  pair  connected  way  road  guaranteed  possible  reach  town  town  using  road  town  announce  final  break  relationship  intend  rule  possibility  moving  road  possibly  needed  close  several  road  moving  using  road  becomes  impossible  town  agrees  spend  money  closing  road  therefore  total  closed  road  help  find  set  road  way  closing  road  road  budget  required  closure  wa  estimated  set  find  total  budget  closure  set  road  minimum  input  contains  town  berland  road  second  contains  index  town  break  relationship  follow  contains  index  town  connected  road  budget  closure  road  bidirectional  allowed  pair  town  connected  road  road  connect  city  allowed  print  minimum  budget  required  break  relation  allowed  close  road
958/A2 __label__strings  stardate  princess  heidi  getting  better  detecting  death  star  time  rebel  spy  given  heidi  map  possible  location  death  star  since  got  rid  double  agent  last  time  know  map  correct  indeed  show  map  solar  system  contains  death  star  time  empire  ha  hidden  death  star  well  heidi  need  find  place  appears  map  order  detect  death  star  map  n  grid  cell  show  type  cosmic  object  present  corresponding  quadrant  space  second  map  grid  heidi  need  align  map  way  overlap  section  cosmic  object  identical  help  heidi  identifying  section  lie  map  input  contains  space  separated  next  lower  case  latin  character  denoting  map  different  character  correspond  different  cosmic  object  type  next  character  describing  second  map  format  output  space  separated  denoting  section  size  map  start  row  equal  section  second  map  start  column  row  column  numbered  starting
928/A __label__strings  registering  social  network  user  allowed  create  convenient  login  make  easier  share  contact  print  business  card  etc  login  arbitrary  sequence  lower  uppercase  latin  letter  digit  underline  symbol  order  decrease  fraud  user  inattention  related  issue  prohibited  register  login  similar  already  existing  login  precisely  logins  considered  similar  transform  via  sequence  operation  following  type  transform  lowercase  letter  uppercase  vice  versa  change  letter  uppercase  latin  letter  digit  vice  versa  change  digit  letter  lowercase  latin  uppercase  latin  vice  versa  change  letter  example  logins  codeforces  codef  rces  well  oo  ooo  ooo  ooo  oolol  oo  ooo  ooo  oo  ooo  oi  considered  similar  whereas  codeforces  codeforces  given  list  existing  logins  similar  amonst  newly  created  user  login  check  whether  new  login  similar  existing  contains  non  empty  string  consisting  lower  uppercase  latin  letter  digit  underline  symbol  length  exceeding  login  second  contains  single  existing  logins  next  describe  existing  logins  following  constraint  user  login  refer  input  guaranteed  existing  logins  similar  print  yes  without  quote  user  register  via  login  none  existing  logins  similar
611/F __label__implementation  __label__binary  search  limak  little  polar  bear  parent  told  clean  house  new  year  eve  house  rectangular  grid  row  column  cell  empty  square  little  bear  thus  clean  house  instead  going  use  cleaning  robot  cleaning  robot  ha  built  pattern  move  defined  string  length  single  move  character  move  robot  adjacent  cell  character  following  left  right  move  take  minute  cleaning  robot  must  placed  started  cell  repeat  pattern  move  till  hit  wall  border  house  hitting  wall  placed  used  limak  sure  placing  cleaning  robot  cell  enough  thus  going  start  time  time  cell  maybe  cell  cleaned  care  limak  asks  question  much  time  take  clean  house  find  print  minute  modulo  possible  cleaning  robot  never  stop  print  without  quote  instead  placing  starting  robot  take  time  must  count  move  robot  hit  wall  take  look  sample  clarification  contains  length  pattern  row  column  respectively  second  contains  string  length  pattern  move  character  uppercase  letter  print  answer
417/E __label__math  __label__constructive  algorithms  resting  ship  russian  code  cup  boy  named  misha  invented  interesting  game  promised  give  quadrocopter  whoever  make  rectangular  table  size  n  consisting  positive  sum  square  row  column  wa  square  since  checking  correctness  table  manually  difficult  misha  asks  make  table  exceed  contains  size  table  print  table  meet  condition  containing  separated  space  multiple  possible  answer  allowed  print  anyone  guaranteed  exists  least  correct  answer
131/F __label__binary  search  many  star  sky  young  programmer  polycarpus  get  question  head  took  photo  starry  sky  using  digital  camera  analyzes  resulting  monochrome  digital  picture  picture  represented  rectangular  matrix  consisting  containing  character  character  equal  corresponding  photo  pixel  white  black  polycarpus  think  ha  found  star  photo  find  white  pixel  surrounded  side  neighboring  pixel  white  star  photo  polycarpus  whats  cut  rectangular  area  photo  give  mom  present  area  le  star  star  intersect  shared  white  pixel  photo  boy  cut  rectangular  area  border  parallel  side  photo  cut  straight  pixel  border  polycarpus  keep  wondering  many  way  cut  area  photo  met  condition  given  help  polycarpus  find  input  data  contains  follow  containing  description  given  photo  sequence  contains  character  print  required  area  given  photo
1251/B __label__greedy  __label__strings  palindrome  string  read  backward  forward  formally  denotes  length  string  example  string  palindrome  binary  string  consists  swap  pair  character  time  possibly  character  either  string  different  string  restriction  formally  move  choose  string  index  position  string  respectively  swap  exchange  character  maximum  string  make  palindromic  simultaneously  contains  single  test  case  test  case  contains  single  binary  string  next  contains  binary  string  per  guaranteed  string  constist  print  per  test  case  maximum  palindromic  string  achieve  simultaneously  performing  swap  string  test  case
1186/E __label__math  __label__implementation  vus  cossack  ha  field  dimension  nm  consists  building  infinite  field  field  way  take  current  field  find  new  inverted  field  word  new  field  wa  current  field  wa  current  field  add  inverted  field  right  current  field  add  inverted  field  bottom  current  field  add  current  field  bottom  right  repeat  example  initial  field  wa  iteration  field  like  second  iteration  field  like  let  numerate  top  bottom  infinity  column  left  right  infinity  call  submatrix  coordinate  cossack  need  sometimes  find  sum  submatrices  since  pretty  busy  right  asking  find  answer  contains  dimension  initial  matrix  query  next  contains  character  character  matrix  next  contains  coordinate  upper  left  cell  bottom  right  cell  need  find  sum  query  print  answer
489/F __label__dp  n  square  matrix  special  binary  cell  contains  either  row  column  equal  given  row  matrix  print  special  n  matrix  row  coincide  given  required  value  rather  large  print  remainder  dividing  value  given  mod  input  contains  mod  od  follow  contains  character  row  required  special  matrix  contains  exactly  character  rest  character  column  given  table  contains  print  remainder  dividing  required  value  mod
1098/B __label__math  __label__greedy  __label__constructive  algorithms  __label__brute  force  given  nm  table  consisting  character  let  call  table  nice  every  square  contains  distinct  character  task  find  nice  table  consisting  differs  given  table  minimum  character  contains  positive  row  column  table  given  nm  describing  table  follow  contains  exactly  character  output  character  table  must  nice  differ  input  table  minimum  character
923/A __label__math  __label__number  theory  alice  bob  begin  day  quick  game  choose  starting  x  try  reach  million  process  described  alice  go  take  alternating  turn  turn  player  whose  turn  selects  prime  smaller  current  announces  smallest  multiple  prime  smaller  current  formally  selects  prime  find  minimum  xii  divide  note  selected  prime  already  divide  doe  change  eve  ha  witnessed  state  game  turn  given  help  determine  smallest  possible  starting  note  player  necessarily  play  optimally  consider  possible  game  evolution  input  contains  single  guaranteed  composite  prime  output  single  minimum  possible
803/D __label__greedy  __label__binary  search  main  city  magazine  offer  reader  opportunity  publish  ad  format  like  space  separated  non  empty  word  lowercase  uppercase  latin  letter  hyphen  character  word  position  set  word  wrapping  point  word  include  hyphen  guaranteed  adjacent  space  adjacent  hyphen  hyphen  adjacent  space  space  hyphen  word  last  word  word  wrapped  part  word  hyphen  hyphen  stay  current  next  part  word  put  next  put  break  word  case  space  stay  current  check  note  better  understanding  occupy  minimal  width  width  maximal  length  string  letter  space  hyphen  counted  write  program  find  minimal  width  contains  second  contains  text  non  empty  space  separated  word  lowercase  uppercase  latin  letter  hyphen  total  length  exceed  character  output  minimal  width
903/B __label__implementation  __label__greedy  vova  playing  computer  game  rpg  game  vova  character  received  quest  slay  fearsome  monster  called  modcrab  hour  playing  game  vova  ha  tracked  monster  analyzed  tactic  modcrab  ha  health  point  attack  power  knowing  vova  ha  decided  buy  lot  strong  healing  potion  prepare  battle  vova  character  ha  health  point  attack  power  ha  large  supply  healing  potion  increase  current  amount  health  point  vova  drink  potion  potion  identical  guaranteed  battle  consists  multiple  phase  beginning  phase  vova  either  attack  monster  thus  reducing  health  drink  healing  potion  increase  vova  health  vova  health  exceed  battle  modcrab  attack  vova  reducing  health  battle  end  vova  modcrab  health  drop  lower  possible  battle  end  middle  phase  vova  attack  course  vova  want  win  fight  want  fast  possible  want  make  strategy  allow  win  fight  minimum  possible  phase  help  vova  make  strategy  assume  vova  never  run  healing  potion  always  win  contains  vova  health  vova  attack  power  healing  power  potion  second  contains  modcrab  health  attack  power  print  denoting  minimum  phase  required  win  battle
535/A __label__implementation  __label__brute  force  today  tavas  got  test  result  score  want  share  girlfriend  nafas  phone  operating  system  tavdroid  keyboard  digit  want  share  score  nafas  via  text  ha  choice  send  using  word  ate  coffee  mix  without  water  right  really  messed  think  task  help  telling  type  input  contains  tavas  score  output  print  single  string  consisting  english  lowercase  letter  hyphen  use  space
612/D __label__greedy  __label__sortings  given  segment  coordinate  axis  point  satisfied  belongs  least  segment  find  smallest  segment  set  segment  coordinate  axis  contains  satisfied  point  others  contains  segment  value  next  ii  endpoint  segment  segment  degenerate  intersect  segment  given  arbitrary  order  contains  smallest  segment
1239/F __label__implementation  __label__graphs  map  map  map  map  anticipation  new  adventure  boot  wanted  good  deed  discussion  map  backpack  decided  gift  dora  connected  graph  long  search  boot  chose  graph  variant  dora  might  like  fox  swiper  want  spoil  plan  swiper  know  dora  able  count  ha  came  following  idea  want  steal  non  empty  set  vertex  dora  notice  loss  ha  decided  steal  non  empty  set  vertex  deletion  stolen  vertex  edge  adjacent  every  remaining  vertex  change  degree  modulo  degree  vertex  edge  adjacent  would  suspicious  steal  vertex  swiper  need  another  plan  boot  sure  crime  allowed  afraid  able  handle  alone  boot  decided  ask  help  please  determine  every  graph  variant  whether  swiper  perform  theft  contains  single  graph  variant  variant  contains  vertex  edge  graph  follow  containing  index  vertex  connected  corresponding  edge  guaranteed  graph  connected  multiple  edge  self  loop  guaranteed  sum  variant  sum  variant  description  graph  variant  separated  empty  variant
491/A __label__implementation  __label__constructive  algorithms  hiking  club  hill  returned  walk  trying  remember  hill  walked  known  stop  different  height  kilometer  inclusive  sea  level  day  traveled  stop  second  stop  second  day  traveled  second  third  last  day  traveled  stop  stop  successfully  finished  expedition  trying  find  height  stop  located  entry  travel  journal  specifying  many  day  travel  hill  many  day  walk  hill  help  suggesting  possible  stop  height  satisfying  travel  journal  non  negative  denoting  day  climbing  hill  second  contains  non  negative  day  walking  hill  output  space  separated  distinct  inclusive  denoting  possible  height  stop  order  visiting
1119/H __label__math  received  birthday  gift  triple  greater  equal  strictly  smaller  fixed  day  felt  tired  playing  triple  came  new  formed  array  array  consists  repeated  time  repeated  time  repeated  time  thus  array  ha  length  want  choose  exactly  array  xor  bitwise  exclusive  equal  output  way  choose  inclusive  modulo  contains  array  binary  length  second  contains  chose  follow  contains  forming  array  print  single  containing  way  choose  exactly  array  xor  equal  modulo
850/B __label__implementation  __label__number  theory  arpa  ha  found  list  containing  call  list  bad  empty  gcd  see  note  section  information  list  arpa  perform  type  operation  choose  delete  cost  choose  increase  cost  arpa  apply  operation  many  wish  allowed  apply  second  operation  arbitrarily  many  time  help  arpa  find  minimum  possible  cost  make  list  good  contains  element  list  second  contains  element  list  print  single  minimum  possible  cost  make  list  good
982/B __label__implementation  __label__greedy  __label__data  structures  bus  character  row  seat  seat  width  seat  row  centimeter  distinct  initially  bus  empty  stop  passenger  enters  bus  type  passenger  introvert  always  chooses  row  seat  empty  row  chooses  smallest  seat  width  take  seat  extrovert  always  chooses  row  exactly  seat  occupied  introvert  row  chooses  largest  seat  width  take  vacant  place  given  seat  width  row  order  passenger  enter  bus  determine  row  passenger  take  contains  single  row  bus  second  contains  sequence  width  seat  row  guaranteed  distinct  third  contains  string  length  consisting  digit  description  order  passenger  enter  bus  character  passenger  enters  bus  stop  introvert  character  passenger  enters  bus  stop  extrovert  guaranteed  extrovert  equal  introvert  equal  extrovert  always  suitable  row  print  row  passenger  take  order  passenger  input
653/F __label__data  structures  __label__strings  alex  wa  programming  valentina  toddler  daughter  got  started  asking  many  question  round  bracket  parenthesis  code  explained  bit  got  gave  task  order  finish  code  time  purpose  problem  consider  string  consisting  opening  closing  round  bracket  character  sequence  bracket  called  correct  empty  correct  sequence  bracket  enclosed  pair  opening  closing  bracket  concatenation  correct  sequence  bracket  example  sequence  correct  alex  took  piece  paper  wrote  string  consisting  bracket  asked  valentina  count  distinct  non  empty  substring  correct  sequence  bracket  word  task  count  non  empty  correct  sequence  bracket  occur  string  substring  mix  subsequence  valentina  finished  task  alex  noticed  know  answer  help  loose  face  front  valentina  solve  problem  input  contains  length  string  second  contains  string  length  consisting  print  distinct  non  empty  correct  sequence  occur  substring
400/A __label__implementation  always  something  choose  instead  nought  cross  inna  choose  unusual  upgrade  game  rule  game  given  person  playing  game  beginning  game  put  card  row  table  card  contains  character  player  chooses  positive  make  table  size  card  put  table  follows  card  form  row  table  second  card  form  second  row  table  last  card  form  last  row  table  player  win  column  table  character  card  otherwise  player  loses  inna  ha  already  put  card  table  row  unfortunately  know  choose  help  win  game  print  possible  way  choose  win  input  contains  value  show  set  test  data  input  next  follows  description  test  separate  description  test  string  consisting  character  character  either  character  string  show  character  written  card  start  test  print  answer  test  single  must  represent  distinct  way  choose  pair  next  print  pair  format  axb  print  pair  order  increasing  parameter  separate  pair  whitespaces
1113/A __label__math  __label__dp  __label__greedy  sasha  happy  guy  always  move  city  country  sasha  life  located  straight  convenience  numbered  increasing  order  distance  adjacent  city  equal  kilometer  since  road  country  directed  possible  reach  city  city  sasha  decided  trip  around  country  visit  city  move  help  car  cheetah  tank  capacity  model  liter  spends  exactly  liter  fuel  kilometer  way  beginning  journey  tank  empty  sasha  located  city  want  get  city  gas  station  city  city  price  liter  fuel  dollar  obvious  moment  time  tank  liter  fuel  sasha  like  waste  money  want  know  minimum  amount  money  needed  finish  trip  buy  fuel  city  want  help  figure  contains  city  country  capacity  tank  print  minimum  amount  money  needed  finish  trip
734/B __label__math  __label__implementation  __label__greedy  __label__brute  force  recently  anton  found  box  digit  room  digit  digit  digit  digit  anton  favorite  decided  compose  digit  ha  want  make  sum  large  possible  help  solve  task  digit  used  composed  digit  digit  course  unused  digit  counted  sum  input  contains  digit  respectively  print  maximum  possible  sum  anton  favorite  composed  using  digit  box
818/G __label__graphs  author  note  think  might  remember  problem  melody  eductational  codeforces  round  time  make  bit  difficult  alice  composer  recently  recorded  track  became  popular  ha  got  lot  fan  waiting  new  track  time  alice  want  form  melody  track  alice  ha  sheet  note  written  want  take  non  empty  non  intersecting  subsequence  form  melody  sum  length  maximal  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  subsequence  form  melody  adjacent  note  either  differ  congruent  modulo  write  program  calculate  maximum  sum  length  non  empty  non  intersecting  subsequence  form  melody  contains  second  contains  note  written  sheet  print  maximum  sum  length  non  empty  non  intersecting  subsequence  form  melody
822/E __label__dp  __label__binary  search  semester  ended  know  end  semester  holiday  begin  holiday  noora  decided  return  vikopolis  modest  souvenir  leha  brought  sausage  length  pavlopolis  everyone  know  sausage  represented  string  lowercase  english  letter  length  equal  length  sausage  leha  wa  pleased  gift  immediately  ate  sausage  realized  wa  quite  tactless  act  sausage  wa  souvenir  hacker  immediately  went  butcher  shop  unfortunately  wa  another  sausage  length  shop  leha  wa  upset  bought  sausage  coming  home  decided  cut  purchased  sausage  several  piece  piece  starting  left  right  want  select  several  piece  glue  together  obtained  sausage  equal  sausage  noora  gave  hacker  glue  piece  together  left  piece  le  right  piece  besides  know  glue  piece  noora  notice  ha  falsified  souvenir  sausage  upset  course  leha  want  upset  girl  hacker  asks  find  whether  able  cut  sausage  bought  glue  piece  noora  notice  anything  formally  given  string  length  string  length  string  required  select  several  pairwise  non  intersecting  substring  concatenation  order  substring  appear  equal  string  denote  minimal  substring  chosen  concatenation  equal  string  impossible  choose  substring  leha  really  want  know  whether  true  contains  single  length  sausage  bought  leha  length  string  second  contains  string  length  consisting  lowercase  english  letter  third  contains  single  length  sausage  bought  noora  length  string  fourth  contains  string  length  consisting  lowercase  english  letter  fifth  contains  single  maximum  piece  sausage  leha  glue  noora  notice  anything  print  yes  without  quote  leha  able  succeed  creating  new  sausage  noora  notice  anything  otherwise  print  without  quote
727/B __label__implementation  __label__strings  vasily  exited  store  want  recheck  total  price  purchase  bill  bill  string  name  purchase  price  printed  row  without  space  check  ha  format  name  price  name  price  namenpricen  namei  name  purchase  non  empty  string  length  consisting  lowercase  english  letter  pricei  price  purchase  non  empty  string  consisting  digit  dot  decimal  point  possible  purchase  equal  name  different  price  price  purchase  written  following  format  price  dollar  cent  written  otherwise  dollar  dot  decimal  point  written  followed  cent  digit  format  cent  inclusively  leading  every  digit  le  significant  dollar  separated  dot  decimal  point  extra  leading  allowed  price  always  start  digit  end  digit  example  valid  price  valid  write  program  find  total  price  purchase  given  bill  input  contains  non  empty  string  length  greater  content  bill  guaranteed  bill  meet  format  described  guaranteed  price  bill  le  cent  greater  dollar  print  total  price  exactly  format  price  given  input
835/A __label__math  boy  decided  compete  text  typing  site  key  race  competition  type  text  consisting  character  participant  type  character  millisecond  ha  ping  millisecond  second  participant  type  character  millisecond  ha  ping  millisecond  connection  ping  delay  millisecond  competition  pass  participant  follows  exactly  millisecond  start  competition  participant  receives  text  entered  right  start  type  exactly  millisecond  end  typing  text  site  receives  information  winner  participant  whose  information  success  come  earlier  information  come  participant  time  considered  draw  given  length  text  information  participant  determine  result  game  contains  character  text  time  typing  character  participant  time  typing  character  second  participant  ping  participant  ping  second  participant  participant  win  print  second  participant  win  print  second  case  draw  print  friendship
1015/E2 __label__dp  __label__greedy  __label__binary  search  star  figure  following  type  asterisk  character  center  figure  ray  left  right  top  bottom  positive  length  size  star  length  ray  size  star  must  positive  ray  length  allowed  let  consider  empty  cell  denoted  following  figure  star  leftmost  figure  star  size  middle  figure  star  size  rightmost  figure  star  size  given  rectangular  grid  size  nm  consisting  asterisk  period  dot  row  numbered  column  numbered  task  draw  grid  using  star  find  impossible  star  intersect  overlap  even  coincide  star  output  exceed  star  completely  inside  grid  use  star  arbitrary  size  problem  need  minimize  star  find  way  draw  given  grid  star  input  contains  size  given  grid  next  contains  character  describes  row  grid  guaranteed  grid  consists  character  impossible  draw  given  grid  using  star  print
444/E __label__trees  __label__binary  search  dzy  love  planting  enjoys  solving  tree  problem  dzy  ha  weighted  tree  connected  undirected  graph  without  cycle  containing  node  numbered  defines  function  longest  edge  shortest  path  node  specially  every  every  sequence  dzy  defines  dzy  want  find  sequence  ha  maximum  possible  value  restriction  element  appear  time  please  find  maximum  possible  described  restriction  contains  next  contains  denoting  edge  length  guaranteed  edge  form  tree  next  describes  element  sequence  contains  j  print  single  representing  answer
1176/D __label__greedy  __label__sortings  __label__dfs  __label__graphs  __label__number  theory  author  guessed  array  consisting  le  greater  know  array  know  array  formed  following  sequence  operation  firstly  let  array  equal  array  secondly  prime  appended  array  infinite  sequence  prime  otherwise  prime  greatest  divisor  equal  appended  obtained  array  length  shuffled  given  input  mean  prime  prime  second  task  recover  suitable  array  form  given  array  guaranteed  answer  exists  array  obtained  suitable  array  multiple  answer  print  input  contains  element  second  input  contains  element  prime  output  print  order  array  array  obtained  using  sequence  move  given  problem  statement  multiple  answer  print
581/C __label__math  __label__implementation  __label__sortings  petya  love  computer  game  finally  game  waiting  long  came  main  character  game  ha  different  skill  characterized  higher  higher  skill  character  total  rating  character  calculated  sum  value  expression  denotes  result  rounding  nearest  beginning  game  petya  got  improvement  unit  bonus  use  increase  skill  character  total  rating  improvement  unit  increase  skill  petya  character  exactly  example  using  imporvement  unit  skill  becomes  equal  hero  skill  rise  higher  thus  permissible  unit  remain  unused  task  determine  optimal  way  using  improvement  unit  maximize  overall  rating  character  necessary  use  improvement  unit  input  contains  positive  skill  character  unit  improvement  petya  disposal  second  input  contains  sequence  characterizes  level  skill  character  output  single  non  negative  maximum  total  rating  character  petya  get  using  le  improvement  unit
799/F __label__data  structures  butler  ostin  want  show  arkady  row  odd  fountain  beautiful  row  even  fountain  butler  want  show  arkady  garden  garden  row  cell  garden  ha  fountain  cell  inclusive  fountain  garden  issue  garden  even  fountain  wrong  show  arkady  ostin  want  choose  show  part  garden  start  cell  end  cell  course  segment  suit  ostin  garden  ha  either  odd  fountain  segment  necessary  least  garden  ha  least  fountain  segment  help  ostin  find  total  length  segment  sum  value  suitable  pair  contains  garden  length  garden  follow  contains  ii  bound  segment  contains  fountain  garden  print  total  length  suitable  segment
724/C __label__math  __label__implementation  __label__greedy  __label__sortings  __label__number  theory  sensor  located  rectangular  room  size  n  meter  sensor  located  point  sensor  located  distinct  point  strictly  inside  rectangle  opposite  corner  room  located  point  wall  room  parallel  coordinate  ax  moment  point  laser  ray  released  direction  point  ray  travel  speed  meter  per  second  thus  ray  reach  point  exactly  second  start  ray  meet  wall  reflected  rule  angle  incidence  equal  angle  reflection  ray  reach  corner  immediately  stop  sensor  determine  moment  time  ray  pas  point  sensor  located  ray  never  pas  point  print  sensor  input  contains  length  room  wall  sensor  following  contains  coordinate  sensor  guaranteed  sensor  located  point  print  equal  second  ray  pass  point  sensor  located  never  happen
1196/D1 __label__implementation  difference  easy  hard  version  size  input  given  string  consisting  character  character  given  task  change  minimum  character  initial  string  change  string  length  substring  substring  infinite  string  rgbrgbrgb  string  substring  string  exists  positive  example  string  gbrg  substring  infinite  string  rgbrgbrgb  rgr  ggg  answer  independent  query  input  contains  query  query  follow  query  contains  length  string  length  substring  second  query  contains  string  consisting  character  guaranteed  sum  query  doe  exceed  query  print  minimum  character  need  change  initial  string  changing  substring  length  substring  infinite  string  rgbrgbrgb
1047/B __label__math  __label__geometry  point  plane  need  place  isosceles  triangle  side  coordinate  axis  cover  point  point  covered  lie  inside  triangle  side  triangle  calculate  minimum  length  shorter  side  triangle  contains  next  contains  print  minimum  length  shorter  side  triangle  proved  always
978/D __label__math  __label__implementation  __label__brute  force  polycarp  like  arithmetic  progression  sequence  called  arithmetic  progression  value  example  sequence  arithmetic  progression  follows  definition  sequence  length  arithmetic  progression  polycarp  found  sequence  positive  agrees  change  element  word  element  exactly  option  element  decreased  element  increased  element  left  unchanged  determine  minimum  possible  element  changed  exactly  sequence  becomes  arithmetic  progression  report  impossible  possible  resulting  sequence  contains  element  equal  contains  single  element  second  contains  sequence  impossible  make  arithmetic  progression  described  operation  print  case  print  non  negative  minimum  element  change  make  given  sequence  becomes  arithmetic  progression  allowed  operation  add  subtract  element  use  operation  twice  position
897/A __label__implementation  going  scarborough  fair  parsley  sage  rosemary  thyme  remember  life  wa  true  love  mine  willem  taking  girl  highest  building  island  neither  know  get  willem  asks  friend  grick  direction  grick  helped  gave  task  although  girl  want  help  willem  insists  grick  gave  willem  string  length  willem  need  operation  operation  ha  parameter  mean  symbol  range  including  changed  string  indexed  grick  want  know  final  string  operation  contains  second  contains  string  length  consisting  lowercase  english  letter  next  contains  parameter  lowercase  english  letter  separated  space  output  string  performing  operation  described
1047/A __label__math  little  love  much  love  thing  ha  positive  want  split  positive  none  multiple  help  find  solution  single  containing  little  ha  print  positive  single  none  multiple
883/J __label__greedy  __label__sortings  mayor  berland  city  see  beauty  differently  city  dweller  particular  doe  understand  antique  house  nice  looking  mayor  want  demolish  ancient  building  city  city  going  host  football  championship  soon  order  make  city  beautiful  every  month  berland  government  provides  mayor  money  tranche  money  ha  spent  ancient  building  renovation  month  championship  month  tranche  equal  burles  city  ha  antique  building  renovation  cost  building  burles  mayor  ha  plan  spending  money  like  antique  building  want  demolish  much  possible  building  calculated  demolishing  cost  mayor  decided  act  according  following  plan  month  chooses  several  possibly  building  demolish  way  renovation  cost  separately  greater  money  tranche  month  bji  allow  deceive  city  dweller  exactly  building  renovated  mayor  ha  demolish  selected  building  current  month  otherwise  dweller  realize  deception  plan  fail  definitely  total  demolishing  cost  exceed  amount  money  mayor  currently  ha  mayor  obliged  spend  money  demolishing  money  left  mayor  put  bank  account  use  subsequent  month  moreover  month  choose  demolish  building  case  tranche  remain  untouched  saved  bank  task  calculate  maximal  building  mayor  demolish  input  contains  month  championship  ancient  building  city  second  contains  tranche  month  third  contains  j  renovation  cost  building  fourth  contains  j  demolishing  cost  building  output  single  maximal  building  mayor  demolish
471/A __label__implementation  polar  bear  menshykov  uslada  petersburg  zoo  elephant  horace  kiev  zoo  got  stick  play  ass  animal  creativity  menshykov  uslada  horace  decided  make  either  elephant  bear  stick  make  animal  stick  following  way  stick  represent  animal  leg  stick  length  remaining  stick  represent  animal  head  body  bear  head  stick  must  shorter  body  stick  elephant  ha  long  trunk  head  stick  must  long  body  stick  note  limit  relation  leg  stick  head  body  stick  task  find  animal  made  given  stick  set  zoo  keeper  want  stick  back  game  must  never  broken  even  bear  understand  single  contains  space  separated  length  stick  guaranteed  input  make  animal  stick  make  bear  given  set  print  string  bear  without  quote  make  elephant  print  string  elephant  thout  quote  make  neither  bear  elephant  print  string  alien  without  quote
425/D __label__data  structures  __label__binary  search  sereja  ha  painted  distinct  point  plane  coordinate  point  wondering  many  square  side  parallel  coordinate  ax  point  painted  vertex  help  calculate  contains  next  contains  represent  coordinate  point  guaranteed  given  point  distinct  single  print  required  square
500/F __label__dp  dohyun  running  grocery  store  sell  item  numbered  cost  dollar  buy  happiness  increase  item  displayed  unit  time  freshness  dohyun  display  item  time  customer  buy  item  time  time  inclusively  customer  buy  item  like  visit  dohyun  grocery  store  buy  item  new  year  party  maximize  happiness  really  busy  person  visit  store  short  period  time  word  visit  store  time  buy  item  available  time  buy  many  item  possible  budget  hold  buy  item  several  time  due  store  rule  necessary  use  whole  budget  made  list  pair  mean  visit  store  time  spend  dollar  store  pair  like  know  maximum  happiness  obtain  many  pair  handle  help  contains  space  separated  item  display  time  item  next  describe  item  contains  space  separated  cost  item  happiness  item  time  item  start  displayed  next  contains  candidate  next  describe  candidate  contains  space  separated  j  j  visit  time  budget  visit  store  candidate  print  single  containing  maximum  happiness  obtain  buying  item
588/A __label__greedy  duff  addicted  meat  malek  want  keep  happy  day  order  happy  day  need  eat  exactly  kilogram  meat  big  shop  uptown  malek  want  buy  meat  day  sell  meat  dollar  per  kilogram  malek  know  day  buy  arbitrary  amount  meat  keep  meat  ha  future  malek  little  tired  cooking  meat  asked  help  help  minimize  total  money  spends  keep  duff  happy  day  input  contains  day  next  contains  amount  meat  duff  need  cost  meat  day  print  minimum  money  needed  keep  duff  happy  day
975/C __label__binary  search  ivar  boneless  great  leader  trying  capture  kattegat  lagertha  war  ha  begun  wave  wave  ivar  warrior  falling  battle  ivar  ha  warrior  place  straight  front  main  gate  way  warrior  stand  right  warrior  warrior  lead  attack  attacker  take  arrow  fall  ground  warrior  strength  lagertha  order  warrior  shoot  arrow  minute  arrow  hit  still  standing  warrior  ivar  warrior  fall  currently  flying  arrow  fly  thor  smash  hammer  ivar  warrior  get  previous  strength  back  stand  fight  word  warrior  die  minute  standing  fight  end  minute  battle  last  minute  minute  tell  ivar  standing  warrior  contains  q  warrior  minute  battle  second  contains  represent  warrior  strength  third  contains  represents  lagertha  order  minute  arrow  attack  warrior  output  standing  warrior  minute
512/D __label__dp  __label__trees  fox  ciel  going  travel  new  foxland  summer  new  foxland  ha  attraction  linked  undirected  road  attraction  called  adjacent  linked  road  fox  ciel  ha  day  visit  city  day  visit  exactly  attraction  important  rule  new  foxland  visit  attraction  ha  adjacent  attraction  visited  beginning  fox  ciel  visited  attraction  travelling  move  aribtrarly  attraction  visiting  attraction  travel  attraction  satisfying  condition  visited  even  reachable  using  road  ciel  us  boat  travelling  attraction  possible  want  know  many  different  travelling  plan  make  calculate  modulo  every  since  decided  many  day  visiting  new  foxland  contains  attraction  undirected  road  next  aii  describing  road  road  connecting  pair  attraction  output  possible  travelling  plan  modulo
514/E __label__dp  darth  vader  get  bored  sits  sofa  close  eye  think  infinite  rooted  tree  node  ha  exactly  son  node  distance  left  child  equal  sith  lord  love  counting  node  tree  distance  root  distance  sum  length  edge  path  node  ha  got  used  activity  even  grew  bored  doe  ask  feel  superior  knowing  solve  problem  want  challenge  darth  vader  count  required  node  answer  rather  large  find  modulo  contains  space  separated  child  node  distance  root  range  need  count  node  next  contains  space  separated  length  edge  connects  node  child  print  single  vertex  tree  distance  root  equal
492/A __label__implementation  vanya  got  cube  decided  build  pyramid  vanya  want  build  pyramid  follows  top  level  pyramid  must  consist  cube  second  level  must  consist  cube  third  level  must  cube  thus  level  pyramid  must  cube  vanya  want  know  maximum  height  pyramid  make  using  given  cube  contains  cube  given  vanya  print  maximum  possible  height  pyramid  single
887/D __label__data  structures  main  kind  event  life  top  model  fashion  show  photo  shoot  participating  event  affect  rating  appropriate  top  model  photo  shoot  model  rating  increase  fashion  show  decrease  designer  many  experiment  nowadays  moreover  sometimes  top  model  participates  talk  show  participating  talk  show  model  becomes  popular  increasing  rating  photo  shoot  become  decreasing  rating  fashion  show  becomes  izabella  want  participate  talk  show  want  way  rating  never  become  negative  help  find  suitable  moment  participating  talk  show  let  assume  model  career  begin  moment  moment  izabella  rating  wa  equal  start  talk  show  happens  moment  affect  event  model  life  interval  time  en  including  including  en  len  duration  influence  izabella  want  participate  talk  show  want  way  rating  become  become  negative  talk  show  period  influence  talk  show  help  find  suitable  moment  participating  talk  show  positive  start  len  tart  en  fashion  show  photo  shoot  rating  change  described  start  initial  rating  model  len  duration  influence  talk  show  next  description  event  given  contains  moment  event  happens  type  event  type  corresponds  fashion  show  type  photo  shoot  event  given  order  increasing  different  print  non  negative  moment  time  talk  show  happen  make  izabella  rating  non  negative  talk  show  period  influence  talk  show  multiple  answer  print  smallest  moment  print
659/G __label__dp  __label__number  theory  long  ago  vasily  built  good  fence  country  house  vasily  call  fence  good  series  consecutively  fastened  vertical  board  centimeter  width  height  centimeter  positive  house  owner  remembers  height  board  left  today  vasily  decided  change  design  fence  built  cutting  top  connected  part  fence  remained  good  cut  part  consist  upper  part  board  adjacent  part  must  interconnected  share  non  length  cutting  fence  vasily  curious  neighbor  count  possible  way  cut  exactly  part  described  way  cut  part  called  distinct  remaining  fence  height  board  vary  vasily  fence  high  long  get  remainder  dividing  required  way  contains  board  vasily  fence  second  contains  space  separated  equal  height  board  left  print  remainder  dividing  way  cut  exactly  connected  part  part  consisted  upper  part  board  remaining  fence  wa  good
402/E __label__math  __label__graphs  matrix  size  n  let  row  matrix  top  bottom  let  column  left  right  let  use  aij  represent  element  intersection  row  column  matrix  meet  following  condition  following  inequality  hold  aij  matrix  strictly  positive  inequality  bij  hold  task  determine  k  matrix  strictly  positive  contains  row  column  matrix  next  description  row  matrix  contains  non  negative  ai  ij  guaranteed  positive  k  matrix  strictly  positive  print  yes  without  quote  otherwise  print  without  quote
1092/B __label__sortings  student  university  student  even  student  ha  programming  skill  equal  coach  want  form  team  team  consist  exactly  student  student  belong  exactly  team  student  form  team  skill  equal  otherwise  understand  form  team  student  solve  problem  increase  skill  solved  problem  increase  skill  coach  want  know  minimum  total  problem  student  solve  form  exactly  team  pair  student  form  team  task  find  input  contains  student  guaranteed  even  second  input  contains  skill  student  print  minimum  total  problem  student  solve  form  exactly  team
148/C __label__greedy  __label__constructive  algorithms  next  please  princess  called  cast  estimating  glance  next  groom  princess  intends  choose  worthy  groom  richest  whenever  see  groom  rich  previous  say  measured  whenever  groom  richer  previous  added  together  exclaims  wow  case  sight  groom  princess  stay  calm  say  nothing  fortune  groom  described  know  day  princess  saw  groom  said  exactly  time  exclaimed  wow  exactly  time  task  output  sequence  describes  fortune  groom  several  sequence  possible  output  sequence  exists  would  satisfy  requirement  output  single  input  data  contains  separated  single  space  output  sequence  fortune  groom  satisfies  given  constraint  sequence  exists  would  satisfy  requirement  output  single
1020/B __label__dfs  __label__graphs  __label__brute  force  summer  informatics  school  student  behave  well  teacher  make  hole  badge  today  teacher  caught  group  student  another  trick  let  assume  student  numbered  teacher  came  student  put  hole  badge  student  claimed  main  culprit  student  teacher  came  student  made  hole  badge  well  student  reply  said  main  culprit  wa  student  process  went  since  student  wa  finite  eventually  teacher  came  student  already  hole  badge  teacher  put  second  hole  student  badge  decided  done  process  went  sauna  know  student  wa  caught  teacher  know  task  find  every  student  would  student  hole  badge  caught  student  wa  input  contains  naughty  student  second  contains  indicates  student  wa  reported  teacher  student  every  student  print  student  would  receive  hole  badge  wa  student  caught  teacher
566/D __label__data  structures  even  successful  company  crisis  period  make  hard  decision  restructure  discard  merge  department  fire  employee  unpleasant  stuff  let  consider  following  model  company  people  working  large  software  company  person  belongs  department  initially  person  work  project  department  thus  company  initially  consists  department  person  harsh  time  come  company  management  hire  crisis  manager  would  rebuild  working  process  order  boost  efficiency  let  use  team  person  represent  team  person  person  work  crisis  manager  make  decision  type  merge  department  team  team  large  department  containing  employee  team  team  company  employee  team  match  team  nothing  happens  merge  department  team  eam  eam  employee  company  crisis  manager  sometimes  wonder  whether  employee  work  department  help  crisis  manager  answer  query  input  contains  employee  company  query  crisis  manager  ha  next  query  crisis  manager  query  look  like  type  type  type  query  represents  decision  crisis  manager  merging  department  second  type  respectively  type  task  determine  whether  employee  work  department  note  equal  query  type  question  type  print  yes  without  quote  depending  whether  corresponding  people  work  department
868/B __label__implementation  ever  tried  explain  coordinator  hour  contest  single  problem  ha  prepared  misha  time  ha  really  strong  excuse  faced  space  time  paradox  space  time  replaced  entire  universe  turned  enormous  clock  face  hand  hour  minute  second  time  froze  clock  show  time  hour  minute  second  last  time  misha  talked  coordinatorclock  stand  clock  face  contest  readyclock  term  paradox  mean  misha  ha  somehow  note  move  forward  circumstance  time  ha  direction  clock  hand  long  misha  get  round  step  lead  collapse  space  time  hour  clock  point  misha  stand  move  along  top  arc  ha  follow  way  round  clock  center  course  hand  way  given  hand  position  find  misha  prepare  contest  time  say  space  find  move  clock  face  misha  position  target  time  coincide  position  hand  print  yes  quote  clarity  misha  prepare  contest  time  otherwise
633/F __label__dp  __label__dfs  __label__graphs  __label__trees  alice  bob  tree  undirected  acyclic  connected  graph  chocolate  waiting  picked  vertex  tree  choose  different  vertex  starting  position  alice  chooses  take  chocolate  contained  alternate  move  selecting  vertex  time  collecting  chocolate  node  make  thing  interesting  decided  select  vertex  selected  vertex  adjacent  previous  turn  vertex  ha  already  chosen  move  moment  able  select  node  satisfy  rule  skip  turn  let  person  pick  chocolate  long  go  pick  chocolate  due  greed  chocolate  want  collect  many  chocolate  possible  friend  care  total  chocolate  obtain  together  maximum  total  chocolate  pick  input  contains  single  vertex  tree  second  contains  stand  chocolate  stored  node  follow  describe  tree  contains  index  vertex  connected  edge  print  chocolate  alice  bob  collect  together  behave  optimally
1101/A __label__math  given  query  following  form  given  find  minimum  positive  divisible  doe  belong  segment  answer  query  recall  belongs  segment  l  contains  query  follow  containing  query  given  format  query  print  answer  query
734/E __label__dp  __label__dfs  __label__trees  anton  growing  tree  garden  case  forgot  tree  connected  acyclic  undirected  graph  vertex  tree  painted  black  white  anton  like  multicolored  tree  want  change  tree  vertex  color  black  white  change  color  anton  use  operation  type  denote  paint  vertex  tree  operation  change  color  vertex  vertex  shortest  path  color  including  example  consider  tree  apply  operation  paint  get  following  anton  interested  minimum  operation  need  perform  order  make  color  vertex  equal  input  contains  single  vertex  tree  second  contains  colori  olori  color  vertex  colori  mean  vertex  initially  painted  white  colori  mean  initially  painted  black  follow  contains  pair  ii  index  vertex  connected  corresponding  edge  guaranteed  pair  distinct  multiple  edge  print  minimum  operation  anton  ha  apply  order  make  vertex  tree  black  vertex  tree  white
1145/A __label__implementation  thanos  sort  supervillain  sorting  algorithm  work  follows  array  sorted  snap  finger  remove  second  half  item  repeat  process  given  input  array  size  longest  sorted  array  obtain  using  thanos  sort  infinity  gauntlet  required  input  contains  single  size  array  guaranteed  power  second  input  contains  space  separated  element  array  return  maximal  length  sorted  array  obtain  using  thanos  sort  element  array  sorted  non  decreasing  order
576/B __label__greedy  __label__dfs  __label__trees  __label__constructive  algorithms  tree  size  undirected  connected  graph  consisting  vertex  without  cycle  consider  tree  vertex  call  tree  invariant  relative  permutation  p  vertex  tree  condition  hold  vertex  connected  edge  vertex  connected  edge  given  permutation  size  find  tree  size  invariant  relative  given  permutation  contains  size  permutation  equal  size  sought  tree  second  contains  permutation  sought  tree  doe  exist  print  without  quote
1120/D __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__trees  given  rooted  tree  vertex  root  tree  vertex  vertex  ha  non  negative  price  leaf  tree  non  root  vertex  ha  degree  arkady  vasily  play  strange  game  tree  game  consists  stage  stage  arkady  buy  non  empty  set  vertex  tree  second  stage  vasily  put  leaf  tree  third  stage  arkady  perform  several  possibly  none  operation  following  kind  choose  vertex  bought  stage  add  leaf  subtree  positive  negative  leaf  subtree  vertex  simple  path  root  go  arkady  task  make  leaf  equal  minimum  total  cost  ha  pay  stage  guarantee  win  independently  vasily  put  second  stage  ask  find  vertex  optimal  cost  set  vertex  containing  arkady  guarantee  win  buying  set  stage  contains  single  vertex  tree  second  contains  price  vertex  next  contains  denoting  edge  tree  print  minimum  possible  cost  arkady  ha  pay  guarantee  win  vertex  belong  least  optimal  set
813/E __label__data  structures  __label__binary  search  might  remember  previous  round  vova  really  like  computer  game  playing  strategy  game  known  rage  empire  game  vova  hire  different  warrior  ith  warrior  ha  type  vova  want  create  balanced  army  hiring  subset  warrior  army  called  balanced  type  warrior  present  game  warrior  type  army  course  vova  want  army  large  possible  make  thing  complicated  vova  ha  consider  different  plan  creating  army  ith  plan  allows  hire  warrior  whose  le  greater  help  vova  determine  largest  size  balanced  army  plan  aware  plan  given  modified  way  see  input  section  detail  contains  second  contains  third  contains  follow  ith  contains  represent  ith  plan  keep  track  answer  last  plan  let  call  last  beginning  last  restore  value  ith  plan  following  ast  mod  ast  mod  swap  print  ith  must  equal  maximum  size  balanced  army  considering  ith  plan
408/A __label__implementation  little  vasya  went  supermarket  get  grocery  walked  supermarket  long  time  got  basket  full  product  need  choose  cashier  pay  product  cashier  exit  supermarket  moment  queue  cashier  already  ha  people  person  standing  queue  cashier  ha  item  basket  vasya  know  cashier  need  second  scan  item  cashier  scan  item  customer  need  second  take  customer  money  give  change  course  vasya  want  select  queue  leave  supermarket  soon  possible  help  write  program  display  minimum  second  vasya  get  cashier  contains  cash  shop  second  contains  space  separated  people  queue  cashier  next  contains  space  separated  product  person  queue  cash  ha  print  single  minimum  second  vasya  need  get  cashier
499/A __label__implementation  __label__greedy  decided  watch  best  moment  movie  button  player  watch  current  minute  movie  pressing  button  watch  current  minute  movie  player  automatically  proceeds  next  minute  movie  skip  exactly  minute  movie  fixed  positive  player  minute  movie  result  pressing  button  proceeds  minute  initially  movie  turned  player  minute  want  watch  exactly  best  moment  movie  best  moment  start  minute  end  minute  formally  best  moment  consists  minute  determine  minimum  minute  movie  watch  want  watch  best  moment  contains  space  separated  best  moment  movie  value  second  button  following  description  best  moment  movie  description  contains  separated  space  ii  guaranteed  following  condition  hold  output  single  answer  problem
833/E __label__dp  __label__data  structures  __label__sortings  well  known  best  decoration  flower  bed  sweetland  vanilla  muffin  seedling  plant  need  sun  grow  slastyona  ha  seedling  seedling  need  least  minute  sunlight  grow  time  sunny  sweetland  sometimes  caramel  cloud  come  appear  time  moment  minute  disappear  time  moment  course  cloud  make  shadow  seedling  grow  least  cloud  veiling  sun  slastyona  want  grow  muffin  fast  possible  ha  exactly  candy  main  currency  sweetland  dispel  cloud  paying  candy  order  comply  sweetland  department  meteorology  regulation  dispel  cloud  slastyona  decided  seedling  planted  princess  garden  need  help  seedling  determine  earliest  moment  grow  slastyona  break  law  spend  candy  ha  note  seedling  considered  independently  seedling  start  grow  time  moment  contains  caramel  cloud  candy  slastyona  ha  next  describing  caramel  cloud  next  contains  single  seedling  seedling  described  j  required  sunny  minute  seedling  print  minimum  minute  slastyona  grow
142/A __label__math  __label__brute  force  upon  time  kingdom  far  far  away  lived  sam  farmer  sam  cow  named  dawn  wa  deeply  attached  sam  would  spend  whole  summer  stocking  hay  feed  dawn  winter  sam  scythed  hay  put  haystack  sam  wa  bright  farmer  tried  make  process  storing  hay  simpler  convenient  use  collected  hay  cubical  hay  block  size  stored  block  barn  summer  spent  hard  toil  sam  stored  hay  block  stored  barn  rectangular  parallelepiped  layer  high  layer  row  row  block  end  autumn  sam  came  barn  admire  time  hay  stacking  hard  summer  unfortunately  sam  wa  horrified  see  hay  block  carelessly  scattered  around  barn  place  wa  complete  mess  turned  thief  sneaked  barn  completely  dissembled  took  away  layer  block  parallelepiped  front  back  top  side  result  barn  parallelepiped  containing  hay  block  hide  evidence  crime  thief  dissembled  parallelepiped  single  block  scattered  around  barn  theft  sam  counted  hay  block  barn  forgot  given  find  minimally  possible  maximally  possible  stolen  hay  block  contains  problem  statement  print  space  separated  minimum  maximum  hay  block  could  stolen  thief
405/D __label__math  __label__implementation  __label__greedy  little  chris  keen  toy  block  teacher  want  chris  solve  problem  decided  play  trick  chris  exactly  block  chris  set  block  ha  unique  chris  teacher  pick  subset  block  keep  give  back  chris  pick  non  empty  subset  remaining  block  equality  hold  kidding  asks  chris  example  consider  case  chris  teacher  took  block  way  chris  choose  set  pick  block  see  figure  required  sum  would  equal  chris  ha  exactly  block  given  set  block  teacher  chooses  help  chris  find  required  set  input  contains  single  block  set  next  contains  distinct  space  separated  block  note  since  size  input  output  could  large  use  slow  output  technique  language  example  use  input  output  stream  cin  cout  output  print  single  block  set  next  output  distinct  space  separated  required  equality  hold  set  intersect  xij  guaranteed  least  solution  always  exists  multiple  solution  output
401/B __label__math  __label__implementation  __label__greedy  sereja  coder  like  take  part  codesorfes  round  uzhland  good  internet  connection  sereja  sometimes  skip  round  codesorfes  ha  round  type  div  advanced  coder  div  beginner  coder  round  div  div  simultaneously  div  round  held  without  div  case  round  overlap  time  round  ha  unique  identifier  positive  round  sequentially  without  gap  numbered  identifier  starting  time  round  identifier  round  run  simultaneously  different  identifier  div  round  always  greater  sereja  beginner  coder  take  part  round  div  type  moment  taking  part  div  round  identifier  equal  sereja  remembers  well  ha  taken  part  exactly  round  round  remembers  identifier  round  ha  taken  part  identifier  round  went  simultaneously  sereja  remember  anything  round  missed  sereja  wondering  minimum  maximum  div  round  could  missed  help  find  contains  round  sereja  taking  part  today  round  took  part  next  description  round  sereja  took  part  sereja  took  part  simultaneous  round  corresponding  look  like  num  num  num  identifier  div  round  num  identifier  div  round  guaranteed  num  um  sereja  took  part  usual  div  round  corresponding  look  like  num  num  identifier  div  round  guaranteed  identifier  given  round  le  print  single  minimum  maximum  round  sereja  could  missed
723/B __label__implementation  __label__strings  modern  text  editor  usually  show  information  regarding  document  edited  example  word  page  character  problem  implement  similar  functionality  given  string  consists  uppercase  lowercase  english  letter  underscore  symbol  used  separator  parenthesis  opening  closing  guaranteed  opening  parenthesis  ha  succeeding  closing  parenthesis  similarly  closing  parenthesis  ha  preceding  opening  parenthesis  matching  pair  matching  parenthesis  parenthesis  word  parenthesis  string  belongs  matching  opening  closing  pair  pair  nested  example  following  string  valid  hellovasya  andpetya  bye  andok  word  maximal  sequence  consecutive  letter  sequence  character  left  character  right  underscore  parenthesis  doe  exist  example  string  consists  word  hello  vasya  petya  bye  write  program  find  length  longest  word  outside  parenthesis  print  word  outside  parenthesis  word  inside  parenthesis  print  word  inside  parenthesis  input  contains  single  length  given  string  second  contains  string  consisting  lowercase  uppercase  english  letter  parenthesis  underscore  symbol  print  space  separated
1015/A __label__implementation  given  set  segment  axis  segment  ha  endpoint  inclusive  segment  intersect  overlap  even  coincide  segment  characterized  coordinate  left  right  endpoint  consider  point  inclusive  task  print  point  belong  segment  point  belongs  segment  l  input  contains  segment  upper  bound  coordinate  next  endpoint  segment  segment  intersect  overlap  even  coincide  note  possible  segment  degenerate  point  print  point  belong  segment
1107/F __label__dp  __label__sortings  __label__graphs  vasya  want  buy  nice  new  car  unfortunately  lack  money  currently  ha  exactly  burles  local  bank  ha  credit  offer  offer  described  offer  numbered  vasya  take  offer  bank  give  burles  beginning  month  vasya  pay  bank  burles  end  month  next  month  including  month  activated  offer  vasya  take  offer  order  want  month  vasya  take  credit  offer  credit  offer  used  several  credit  active  time  implies  vasya  pay  bank  sum  active  credit  end  month  vasya  want  buy  car  middle  month  take  money  currently  ha  buy  car  exact  price  vasya  really  care  pay  bank  back  buy  car  go  country  car  bank  find  anymore  maximum  price  car  contains  credit  offer  next  contains  print  maximum  price  car
1060/D __label__math  __label__greedy  invited  guest  dinner  plan  arrange  circle  chair  chair  going  either  occupied  guest  empty  make  circle  guest  happen  little  bit  shy  guest  want  least  free  chair  left  chair  least  free  chair  right  left  right  direction  chosen  assuming  guest  going  seated  towards  center  circle  note  guest  circle  chair  left  chair  right  overlap  smallest  total  chair  use  contains  guest  next  pair  space  separated  output  single  smallest  chair  use
1029/C __label__math  __label__greedy  __label__sortings  given  segment  endpoint  every  segment  ha  coordinate  segment  degenerate  point  segment  intersect  nested  even  coincide  intersection  sequence  segment  maximal  set  point  necesserily  coordinate  point  lie  every  segment  sequence  resulting  set  empty  always  form  continuous  segment  length  intersection  length  resulting  segment  case  intersection  empty  set  example  intersection  segment  length  intersection  segment  length  intersection  segment  empty  set  length  task  remove  exactly  segment  given  sequence  way  intersection  remaining  segment  ha  maximal  possible  length  contains  single  segment  sequence  next  contains  description  segment  print  single  maximal  possible  length  intersection  remaining  segment  remove  exactly  segment  sequence
920/G __label__math  __label__brute  force  __label__binary  search  __label__number  theory  let  denote  infinite  sequence  gcd  gcd  greatest  common  divisor  sorted  ascending  order  element  indexed  example  second  third  element  respectively  process  query  query  denoted  answer  query  element  contains  query  process  follow  contains  query  print  answer  query
1006/D __label__implementation  given  string  consisting  lowercase  english  letter  length  character  string  index  inclusive  allowed  following  change  choose  index  swap  character  choose  index  swap  character  choose  index  swap  character  note  odd  formally  allowed  swap  string  move  useless  swap  equal  character  operation  useless  well  make  string  equal  applying  change  described  order  obvious  impossible  make  string  equal  swap  preprocess  move  replace  character  another  character  word  single  preprocess  move  choose  index  character  set  task  find  minimum  preprocess  move  apply  way  make  string  equal  applying  change  described  list  note  change  make  preprocess  move  doe  matter  note  apply  preprocess  move  string  make  preprocess  move  change  made  input  contains  length  string  second  contains  string  consisting  exactly  lowercase  english  letter  third  contains  string  consisting  exactly  lowercase  english  letter  print  single  minimum  preprocess  move  apply  change  possible  make  string  equal  string  sequence  change  list
676/E __label__math  year  passed  since  last  victory  man  versus  computer  technology  made  huge  step  forward  robot  conquered  earth  time  final  fight  human  robot  decide  faith  planet  following  game  wa  chosen  fight  initially  polynomial  nxn  xn  x  undefined  coefficient  player  alternate  turn  turn  player  pick  index  coefficient  stay  near  determined  set  value  real  positive  negative  allowed  computer  move  human  declared  winner  resulting  polynomial  divisible  polynomial  said  divisible  polynomial  exists  representation  polynomial  move  made  already  wonder  true  human  guarantee  victory  play  optimally  input  contains  size  polynomial  following  character  coefficient  near  undefined  value  coefficient  already  known  even  equal  please  note  guaranteed  given  position  game  computer  turn  move  print  yes  without  quote  human  ha  winning  strategy  without  quote  otherwise
1091/G __label__math  __label__number  theory  factorisation  hard  rsa  factoring  challenge  offered  factoring  rsa  bit  long  product  prime  date  nobody  wa  able  claim  prize  want  factorise  bit  since  programming  language  choice  might  offer  facility  handling  large  provide  simple  calculator  use  calculator  print  query  standard  output  retrieve  result  standard  input  operation  follows  return  modn  return  modn  return  modn  coprime  return  modn  multiplicative  inverse  modulo  coprime  returned  instead  sqrt  coprime  return  modn  multiple  returned  none  returned  instead  return  modn  find  factorisation  product  distinct  prime  form  technical  issue  restrict  request  contains  single  guaranteed  product  distinct  prime  form  print  many  query  wish  adhering  time  limit  see  interaction  section  detail
691/B __label__implementation  __label__strings  let  call  string  palindrome  symmetric  middle  string  example  string  oho  palindrome  string  string  palindrome  second  half  mirror  reflection  half  english  alphabet  given  string  check  string  palindrome  contains  string  consists  english  letter  print  tak  string  palindrome  nie  otherwise
630/I __label__math  quickly  hire  highly  skilled  specialist  new  city  company  made  unprecedented  move  every  employee  wa  granted  car  employee  choose  different  car  make  parking  lot  office  consists  parking  space  unfortunately  total  car  greater  parking  lot  capacity  furthermore  even  amount  car  make  greater  amount  parking  space  free  space  parking  lot  ever  looking  straight  car  company  ceo  thought  parking  lot  would  beautiful  contained  exactly  successive  car  make  help  ceo  determine  way  fill  parking  lot  way  input  contains  amount  successive  car  make  output  way  fill  parking  lot  car  make  using  described  way
875/F __label__greedy  __label__graphs  medieval  kingdom  economic  crisis  raging  milk  drop  fall  economic  indicator  deteriorating  every  day  money  treasury  disappear  remedy  situation  king  charles  sunnyface  decided  make  son  prince  marry  bride  big  dowry  possible  search  candidate  king  asked  neighboring  kingdom  several  delegation  arrived  unmarried  princess  receiving  guest  karl  learned  dowry  princess  golden  coin  although  action  take  place  middle  age  progressive  idea  widespread  society  according  force  princess  marry  prince  doe  like  therefore  princess  ha  opportunity  choose  prince  ready  become  wife  prince  le  fortunate  obey  father  matter  choosing  bride  knowing  value  dowry  preference  princess  charles  want  play  wedding  way  total  dowry  bride  son  would  great  possible  time  marry  prince  princess  necessary  prince  marry  princess  vice  versa  princess  marry  prince  help  king  organize  marriage  son  profitable  way  treasury  contains  prince  princess  respectively  following  contains  aii  prince  princess  ready  marry  value  dowry  print  maximum  gold  coin  king  get  playing  right  wedding
723/C __label__greedy  polycarp  music  editor  radio  station  received  playlist  tomorrow  represented  sequence  band  performs  song  polycarp  like  band  really  like  others  define  song  group  going  perform  tomorrow  polycarp  want  change  playlist  way  minimum  large  possible  find  maximum  possible  value  minimum  minimum  change  playlist  polycarp  need  make  achieve  change  playlist  replacement  performer  song  group  input  contains  second  contains  performer  song  print  maximum  possible  value  minimum  song  changed  playlist  performed  band  minimum  change  playlist  polycarp  need  make
906/B __label__math  __label__constructive  algorithms  __label__brute  force  student  went  class  write  test  sat  way  teacher  thought  probably  sat  order  copy  work  need  rearrange  way  student  neighbor  neighbor  new  seating  class  represented  matrix  row  column  student  cell  student  neighbor  cell  sit  common  side  let  enumerate  student  order  row  student  initially  sits  cell  row  column  ha  find  matrix  row  column  appear  exactly  adjacent  original  matrix  adjacent  determine  matrix  contains  row  column  required  matrix  matrix  output  without  quote
967/A __label__implementation  day  arkady  work  air  traffic  controller  large  airport  control  runway  usually  used  landing  thus  ha  schedule  plane  landing  nearest  future  landing  last  minute  wa  asked  insert  takeoff  schedule  takeoff  take  minute  safety  reason  time  space  takeoff  landing  least  minute  side  find  earliest  time  arkady  insert  takeoff  input  contains  landing  schedule  minimum  allowed  time  minute  landing  takeoff  next  contains  time  hour  minute  plane  land  starting  current  moment  current  time  time  given  increasing  order  print  hour  minute  current  moment  earliest  time  arkady  insert  takeoff
1140/D __label__math  __label__dp  __label__greedy  given  regular  polygon  vertex  labeled  counter  clockwise  order  triangulation  given  polygon  set  triangle  vertex  triangle  vertex  initial  polygon  pair  triangle  intersection  ha  non  area  total  area  triangle  equal  area  given  polygon  weight  triangulation  sum  weigths  triangle  consists  weight  triagle  denoted  product  label  vertex  calculate  minimum  weight  triangulation  polygon  contains  single  vertex  regular  polygon  print  minimum  weight  triangulation  given  polygon
840/A __label__math  __label__greedy  __label__sortings  __label__number  theory  leha  like  kind  strange  thing  recently  liked  function  consider  possible  element  subset  set  subset  find  minimal  element  mathematical  expectation  minimal  element  element  subset  function  doe  interest  want  interesting  thing  mom  brought  array  consists  condition  aij  hold  help  leha  rearrange  array  sum  maximally  possible  already  rearranged  array  input  data  contains  single  length  array  next  contains  array  next  contains  array  output  array  permutation  array
1168/E __label__math  __label__constructive  algorithms  toad  mikhail  ha  array  find  permutation  equal  possible  determine  permutation  denotes  bitwise  xor  operation  contains  denoting  size  array  next  contains  space  separated  element  given  array  given  array  represented  element  wise  xor  permutation  print  fou
577/B __label__dp  __label__data  structures  given  sequence  check  possible  choose  non  empty  subsequence  aij  sum  subsequence  divisible  contains  size  original  sequence  sum  divisible  second  contains  single  print  either  yes  without  quote  exists  sought  subsequence  without  quote  subsequence  exist
1065/E __label__strings  consider  set  distinct  character  string  consisting  exactly  character  character  present  given  array  allowed  perform  following  move  string  choose  valid  set  take  character  take  last  character  substitute  character  reversed  substitute  last  character  reversed  example  let  take  look  abcdefghi  reversed  thus  resulting  ihcdefgba  move  performed  arbitrary  time  possibly  selected  multiple  time  move  let  call  string  equal  exists  sequence  move  transmute  string  string  example  string  abcdefghi  ihcdefgba  equal  note  implies  task  simple  count  distinct  string  answer  huge  enough  calculate  modulo  contains  length  string  size  array  size  set  respectively  second  contains  print  single  distinct  string  length  character  set  modulo
547/E __label__data  structures  __label__trees  __label__strings  fatherland  strange  country  phone  string  consisting  lowercase  english  letter  double  strange  phone  associated  several  bear  country  rock  band  called  consisting  bear  including  mike  numbered  phone  member  th  holiday  named  phone  call  day  last  phone  call  day  everyone  called  substring  call  several  time  particular  everyone  called  wa  really  strange  country  denote  call  time  member  called  member  geek  mike  ha  question  want  ask  question  give  tell  input  contains  next  phone  contains  string  consisting  lowercase  english  letter  next  information  question  contains  print  answer  question  separate
802/J __label__dfs  __label__trees  heidi  friend  jenny  asking  heidi  deliver  important  letter  common  friend  since  jenny  irish  heidi  think  might  prank  precisely  suspect  message  asked  deliver  state  send  fool  upon  reading  recipient  ask  heidi  deliver  message  another  friend  recipient  ha  common  heidi  heidi  belief  friend  want  avoid  awkward  situation  made  visit  person  including  jenny  twice  know  much  cost  travel  friend  know  want  know  maximal  amount  money  waste  travel  really  prank  heidi  friend  labeled  network  connection  form  tree  word  every  friend  know  possibly  indirectly  sequence  friend  starting  ending  consecutive  friend  sequence  know  directly  exactly  pair  friend  know  directly  jenny  given  input  contains  friend  next  space  separated  meaning  friend  know  directly  cost  travelling  guaranteed  social  network  input  form  tree  output  single  maximum  sum  cost
611/D __label__dp  __label__strings  limak  little  polar  bear  snow  found  scroll  ancient  prophecy  limak  know  ancient  language  thus  unable  understand  prophecy  know  digit  fragment  prophecy  sequence  digit  digit  limak  think  list  special  year  hard  see  comma  space  maybe  ancient  people  use  limak  wonder  year  listed  limak  assumes  thing  year  listed  strictly  increasing  order  every  year  positive  leading  limak  going  consider  possible  way  split  sequence  year  satisfying  condition  without  help  asked  tell  way  since  large  asked  calculate  modulo  input  contains  single  digit  second  contains  string  digit  ha  length  equal  guaranteed  digit  print  way  correctly  split  given  sequence  modulo
1214/D __label__dp  __label__dfs  love  treasure  right  young  vasya  heading  treasure  island  treasure  island  represented  rectangular  table  nm  surrounded  ocean  let  row  field  consecutive  top  bottom  column  consecutive  left  right  denote  cell  row  column  island  cell  impassable  forest  cell  free  passable  treasure  hidden  cell  vasya  got  ship  cell  want  reach  treasure  hurrying  move  cell  cell  next  row  downwards  next  column  rightwards  cell  move  cell  course  vasya  move  cell  impassable  forest  evil  witch  aware  vasya  journey  going  prevent  reaching  treasure  vasya  move  able  grow  using  evil  magic  impassable  forest  previously  free  cell  witch  able  grow  forest  free  cell  except  cell  vasya  got  ship  treasure  hidden  help  evil  witch  finding  minimum  cell  ha  turn  impassable  forest  vasya  longer  able  reach  treasure  input  contains  positive  size  island  following  contains  string  length  describing  island  character  string  equal  cell  contains  impassable  forest  cell  free  passable  let  remind  vasya  get  ship  cell  cell  row  want  reach  cell  last  cell  last  row  guaranteed  cell  empty  print  minimum  cell  evil  witch  ha  turn  impassable  forest  order  prevent  vasya  reaching  treasure
577/A __label__implementation  __label__number  theory  let  consider  table  consisting  row  column  cell  located  intersection  row  column  contains  row  column  numbered  starting  given  positive  task  count  cell  table  single  contains  size  table  looking  table  print  single  time  occurs  table
388/D __label__math  fox  ciel  study  theory  think  non  empty  set  contains  non  negative  perfect  equal  operation  xor  mean  exclusive  operation  http  wikipedia  org  wiki  exclusiveor  please  calculate  perfect  set  consisting  greater  answer  large  print  modulo  contains  print  single  required  set  modulo
999/F __label__dp  player  sitting  card  table  player  ha  favorite  favorite  player  card  table  card  contains  single  card  contains  given  sequence  meaning  explained  player  distribute  card  way  hold  exactly  card  card  distributed  player  count  card  ha  contains  favorite  joy  level  player  equal  player  hold  card  containing  favorite  player  get  card  favorite  joy  level  print  maximum  possible  total  joy  level  player  card  distributed  note  sequence  player  input  contains  player  card  player  get  second  contains  written  card  third  contains  favorite  player  fourth  contains  joy  level  player  get  exactly  card  favorite  written  guaranteed  condition  hold  print  maximum  possible  total  joy  level  player  possible  card  distribution
189/A __label__dp  __label__brute  force  polycarpus  ha  ribbon  length  want  cut  ribbon  way  fulfils  following  condition  cutting  ribbon  piece  length  cutting  ribbon  piece  maximum  help  polycarpus  find  ribbon  piece  required  cutting  contains  space  separated  length  original  ribbon  acceptable  length  ribbon  piece  cutting  correspondingly  coincide  print  single  maximum  possible  ribbon  piece  guaranteed  least  correct  ribbon  cutting  exists
1106/B __label__implementation  __label__data  structures  lunar  new  year  approaching  bob  planning  famous  restaurant  alice  restaurant  alice  serf  kind  food  cost  kind  always  initially  restaurant  ha  enough  ingredient  serving  exactly  dish  kind  new  year  eve  customer  visit  alice  another  customer  order  dish  kind  food  customer  come  customer  completely  served  suppose  dish  kind  remaining  initially  customer  order  dish  kind  following  principle  processed  customer  served  exactly  dish  kind  cost  dish  meanwhile  reduced  otherwise  customer  served  dish  cheapest  available  kind  food  multiple  cheapest  kind  food  smallest  index  cheapest  served  cost  cost  dish  served  remain  corresponding  dish  reduced  dish  customer  leave  angrily  therefore  matter  many  dish  served  previously  cost  customer  customer  leave  dish  served  cost  customer  sum  cost  dish  please  determine  total  cost  customer  contains  representing  different  kind  food  customer  respectively  second  contains  positive  denotes  initial  remain  kind  dish  third  contains  positive  denotes  cost  dish  kind  following  describe  order  customer  respectively  contains  positive  representing  kind  food  dish  customer  order  respectively  print  print  cost  customer
1068/C __label__graphs  __label__constructive  algorithms  ivan  novice  painter  ha  dye  different  color  know  exactly  pair  color  harmonize  ivan  enjoy  playing  chess  ha  rook  want  take  rook  paint  color  place  rook  chessboard  size  let  call  set  rook  board  connected  rook  get  rook  set  moving  cell  rook  set  assume  rook  jump  rook  word  rook  cell  share  vertical  cell  share  horizontal  ivan  want  arrangement  rook  following  property  color  rook  color  board  color  set  rook  color  connected  different  color  union  set  rook  color  set  rook  color  connected  color  harmonize  please  help  ivan  find  arrangement  input  contains  color  pair  color  harmonize  next  pair  color  harmonize  listed  color  numbered  guaranteed  pair  occurs  twice  list  print  block  describes  rook  color
811/A __label__implementation  __label__brute  force  regular  competition  vladik  valera  candy  respectively  vladik  offered  candy  valera  valera  gave  vladik  candy  thought  wa  le  generous  vladik  reason  gave  candy  valera  next  turn  formally  guy  take  turn  giving  candy  received  previous  turn  continued  moment  give  right  amount  candy  candy  guy  got  consider  need  know  give  right  amount  candy  single  input  data  contains  space  separated  vladik  valera  candy  respectively  pring  single  vladik  case  vladik  give  right  amount  candy  valera  otherwise
1137/E __label__greedy  __label__data  structures  vasya  like  travel  train  like  car  travel  located  tail  train  vasya  get  train  station  train  consists  car  indexed  counting  locomotive  head  train  type  event  occur  train  moving  car  added  head  train  car  added  tail  train  vasya  recalculates  value  convenience  car  read  moment  time  index  car  head  train  starting  note  adding  new  car  head  train  indexing  old  shift  choose  car  vasya  use  value  car  car  index  calculated  follows  beginning  trip  well  new  car  time  addition  next  recalculation  vasya  chooses  positive  add  value  vasya  decided  get  train  get  train  event  type  want  know  least  index  car  value  minimal  since  lot  car  vasya  asked  write  program  answer  question  contains  car  train  time  departure  station  station  respectively  next  description  event  event  following  type  add  car  head  train  add  car  tail  train  recalculate  convenience  train  car  guaranteed  time  train  length  doe  exceed  guaranteed  grow  high  formally  guaranteed  sum  largest  addition  event  type  car  moment  acquired  sum  would  query  print  car  closest  head  train  value  minimal  value
813/B __label__math  __label__brute  force  unlucky  year  berland  year  represented  non  negative  example  year  unlucky  year  unlucky  representation  interval  year  unlucky  year  called  golden  age  write  program  find  maximum  length  golden  age  start  earlier  year  end  later  year  year  interval  unlucky  answer  contains  print  maximum  length  golden  age  interval
937/B __label__math  __label__brute  force  __label__number  theory  weather  fine  today  hence  high  time  climb  nearby  pine  enjoy  landscape  pine  trunk  includes  several  branch  located  another  numbered  precise  occupied  tiny  vile  grasshopper  war  grasshopper  known  awesome  jumping  skill  grasshopper  branch  jump  branch  keeping  mind  wisely  decided  choose  branch  none  grasshopper  could  interrupt  time  wan  na  settle  high  possible  since  view  simply  breathtaking  word  goal  find  highest  branch  reached  grasshopper  report  impossible  contains  output  highest  suitable  branch  none  print  instead
618/F __label__constructive  algorithms  given  multisets  multiset  ha  exactly  inclusive  multisets  multiple  copy  would  like  find  nonempty  subset  nonempty  subset  sum  element  subset  equal  subset  multisets  element  equal  value  solution  exists  print  otherwise  print  index  element  subset  sum  input  contains  single  size  multisets  second  contains  denoting  element  element  inclusive  third  contains  denoting  element  element  inclusive  solution  print  single  otherwise  solution  printed
1042/D __label__data  structures  petya  ha  array  consisting  ha  learned  partial  sum  recently  calculate  sum  element  segment  array  really  fast  segment  non  empty  sequence  element  standing  next  another  array  wonder  segment  array  sum  le  help  petya  calculate  formally  required  calculate  pair  contains  second  contains  sequence  description  petya  array  note  might  negative  positive  element  print  segment  petya  array  sum  element  le
740/B __label__constructive  algorithms  little  alyona  celebrating  happy  birthday  mother  ha  array  flower  flower  ha  mood  mood  flower  mood  positive  negative  let  define  subarray  segment  consecutive  flower  mother  suggested  set  subarrays  alyona  want  choose  several  subarrays  suggested  mother  flower  add  girl  happiness  mood  multiplied  chosen  subarrays  flower  example  consider  case  mother  ha  flower  mood  equal  suppose  mother  suggested  subarrays  girl  chooses  third  fourth  subarrays  flower  add  girl  happiness  chosen  subarrays  second  flower  add  chosen  subarrays  third  flower  add  chosen  subarrays  fourth  flower  add  chosen  subarrays  fifth  flower  add  chosen  subarrays  thus  total  added  girl  happiness  alyona  want  choose  subarrays  suggested  mother  value  added  happiness  would  large  possible  help  alyona  choose  subarrays  even  suggested  mother  contains  flower  subarrays  suggested  mother  second  contains  flower  mood  next  description  subarrays  suggested  mother  ii  denoting  subarray  subarray  encounter  print  single  maximum  possible  value  added  alyona  happiness
763/A __label__dp  __label__implementation  __label__dfs  __label__graphs  __label__trees  new  year  timofey  friend  cut  tree  vertex  bring  home  paint  vertex  vertex  get  color  time  timofey  birthday  mother  asked  remove  tree  timofey  remove  tree  following  way  take  vertex  hand  vertex  move  tree  becomes  rooted  chosen  vertex  timofey  brings  tree  trash  timofey  like  many  color  mixing  together  subtree  annoys  vertex  different  color  timofey  want  find  vertex  take  hand  subtrees  annoy  consider  whole  tree  subtree  since  see  color  root  vertex  subtree  vertex  subgraph  containing  vertex  descendant  task  determine  vertex  taking  hand  timofey  annoyed  contains  single  vertex  tree  next  contains  u  denoting  edge  vertex  guaranteed  given  graph  tree  next  contains  denoting  color  vertex  print  single  timofey  take  tree  way  annoy
599/C __label__sortings  day  squidward  spongebob  patrick  decided  beach  unfortunately  weather  wa  bad  friend  unable  ride  wave  decided  spent  time  building  sand  castle  end  day  castle  built  friend  castle  numbered  height  castle  equal  friend  leave  squidward  noticed  castle  ordered  height  look  ugly  friend  going  reorder  castle  way  obtain  condition  hii  hold  squidward  suggested  following  process  sorting  castle  castle  split  block  group  consecutive  castle  therefore  block  include  castle  block  consist  single  castle  partitioning  chosen  way  every  castle  part  exactly  block  block  sorted  independently  block  sequence  becomes  sorted  partitioning  satisfy  condition  block  sorted  sequence  becomes  sorted  always  achieved  saying  whole  sequence  single  block  even  patrick  understands  increasing  block  partitioning  ease  sorting  process  friend  ask  count  maximum  possible  block  partitioning  satisfies  requirement  input  contains  single  castle  spongebob  patrick  squidward  made  sand  day  next  contains  corresponds  height  castle  print  maximum  possible  block  valid  partitioning
741/C __label__dfs  __label__graphs  __label__constructive  algorithms  note  girl  arpa  land  really  attractive  arpa  love  overnight  party  middle  party  mehrdad  suddenly  appeared  saw  pair  friend  sitting  around  table  pair  consisted  boy  sitting  chair  girlfriend  sitting  chair  chair  numbered  clockwise  direction  wa  exactly  person  sitting  chair  type  food  kooft  zahre  mar  mehrdad  wonder  wa  way  serve  food  guest  person  exactly  type  food  boy  type  food  girlfriend  guest  sitting  consecutive  chair  wa  different  type  food  note  chair  considered  consecutive  find  answer  mehrdad  question  wa  possible  find  arrangement  food  type  satisfies  condition  contains  pair  guest  next  contains  pair  n  chair  boy  pair  wa  sitting  chair  girlfriend  wa  sitting  guaranteed  wa  exactly  person  sitting  chair  solution  print
1003/E __label__graphs  __label__constructive  algorithms  given  task  construct  undirected  tree  vertex  diameter  degree  vertex  say  impossible  undirected  tree  connected  undirected  graph  edge  diameter  tree  maximum  length  simple  path  path  vertex  appears  pair  vertex  tree  degree  vertex  edge  incident  vertex  vertex  edge  belong  tree  vertex  tree  input  contains  tree  satisfying  condition  print  word  without  quote
571/B __label__dp  __label__greedy  __label__sortings  got  array  consisting  positive  array  indexed  need  permute  array  element  value  became  minimal  possible  particular  allowed  change  order  element  contains  second  contains  separate  space  element  array  print  minimum  possible  value  sum  described  statement
1110/C __label__math  __label__constructive  algorithms  __label__number  theory  greatest  common  divisor  bitwise  operation  anything  common  time  answer  question  suppose  given  positive  want  choose  inclusive  way  greatest  common  divisor  gcd  large  possible  word  like  compute  following  function  max  gcd  max  agcd  denotes  bitwise  xor  operation  denotes  bitwise  operation  greatest  common  divisor  largest  divided  without  remainder  given  compute  largest  possible  value  greatest  common  divisor  chosen  optimally  contains  need  compute  answer  given  per  need  compute  answer  print  answer  order  given  input
1091/B __label__implementation  __label__greedy  __label__constructive  algorithms  __label__brute  force  bob  pirate  looking  greatest  treasure  world  ha  ever  seen  treasure  located  point  coordinate  found  bob  travelled  around  world  collected  clue  treasure  location  obelisk  clue  ancient  language  ha  decrypted  home  since  doe  know  clue  belongs  obelisk  finding  treasure  might  pose  challenge  help  everyone  know  world  dimensional  plane  obelisk  coordinate  clue  consists  belongs  obelisk  unknown  permutation  element  mean  treasure  located  point  clue  word  clue  belongs  exactly  obelisk  obelisk  ha  exactly  clue  belongs  clue  represents  vector  obelisk  treasure  clue  must  distributed  obelisk  way  point  position  treasure  task  find  coordinate  treasure  multiple  solution  print  note  need  find  permutation  permutation  used  order  explain  problem  contains  obelisk  equal  clue  next  contains  coordinate  obelisk  coordinate  distinct  satisfied  every  next  contains  direction  clue  coordinate  distinct  satisfied  every  guaranteed  exists  permutation  hold  output  single  containing  coordinate  treasure
689/E __label__dp  __label__implementation  __label__data  structures  __label__geometry  mike  want  prepare  imo  know  geometry  teacher  gave  interesting  geometry  problem  let  define  point  segment  l  say  given  closed  interval  axis  find  word  find  sum  point  intersection  segment  answer  large  output  modulo  mike  solve  problem  need  help  help  contains  segment  segment  intersection  group  respectively  follow  contains  ii  describing  segment  bound  print  answer  mike  problem  modulo
547/A __label__math  __label__implementation  __label__greedy  __label__brute  force  mike  ha  frog  flower  frog  named  xaniar  flower  named  abol  initially  time  height  xaniar  height  abol  second  mike  water  abol  xaniar  height  xaniar  height  abol  second  height  xaniar  become  height  abol  become  denotes  remainder  modulo  mike  competitive  programmer  fan  want  know  minimum  time  take  height  xania  height  abol  mike  ha  asked  help  calculate  minimum  time  say  never  happen  input  contains  second  input  contains  third  input  contains  fourth  input  contains  fifth  input  contains  guaranteed  h  h  print  minimum  second  xaniar  reach  height  abol  reach  height  print  otherwise
45/C __label__data  structures  people  taking  dancing  lesson  every  person  characterized  dancing  skill  beginning  lesson  left  right  least  couple  boy  girl  following  process  repeated  boy  girl  stand  next  minimal  difference  dancing  skill  start  dance  several  couple  left  start  dance  couple  leaf  dance  close  result  always  continuous  difference  dancing  skill  understood  absolute  value  difference  variable  task  find  pair  order  start  dancing  contains  people  next  contains  symbol  without  space  stand  boy  stand  girl  third  contains  space  separated  dancing  skill  people  specified  left  right  order  lined  print  resulting  couple  print  containing  numeral  people  forming  couple  people  numbered  left  right  couple  leaf  dance  renumber  people  couple  sorted  increasing  order  print  couple  order  leave  dance
527/B __label__greedy  ford  prefect  got  job  web  developer  small  company  make  towel  current  work  task  create  search  engine  website  company  development  process  need  write  subroutine  comparing  string  equal  length  similar  brief  search  internet  learned  hamming  distance  string  length  defined  position  different  character  example  hamming  distance  word  permanent  pergament  word  differ  fourth  sixth  letter  moreover  wa  searching  information  noticed  modern  search  engine  powerful  mechanism  correct  error  request  improve  quality  search  ford  know  much  human  assumed  common  mistake  request  swapping  arbitrary  letter  string  necessarily  adjacent  want  write  function  determines  letter  swapped  string  hamming  distance  new  string  string  would  small  possible  otherwise  determine  replacement  reduce  distance  string  help  contains  length  string  second  contains  string  third  contains  string  contains  lowercase  latin  letter  print  minimum  possible  hamming  distance  string  swap  pair  letter
474/A __label__implementation  good  friend  mole  trying  code  big  message  typing  unusual  keyboard  character  arranged  following  way  qwertyuiop  asdfghjkl  zxcvbnm  unfortunately  mole  blind  sometimes  problem  put  hand  accurately  accidentally  moved  hand  position  left  right  mean  press  button  want  neighboring  button  left  right  specified  input  sequence  character  ha  typed  want  find  original  message  input  contains  letter  describing  direction  shifting  respectively  left  right  second  contains  sequence  character  written  mole  size  sequence  sequence  contains  symbol  appear  mole  keyboard  space  space  mole  keyboard  guaranteed  even  though  mole  hand  moved  still  pressing  button  keyboard  hitting  outside  print  contains  original  message
603/E __label__math  __label__data  structures  __label__trees  land  bovinia  pasture  path  connecting  pasture  course  terrible  situation  kevin  sun  planning  rectify  constructing  undirected  path  connecting  pair  distinct  pasture  make  transportation  efficient  plan  pave  new  path  kevin  particular  certain  aspect  path  paving  since  love  odd  want  pasture  odd  paved  path  connected  thus  call  paving  sunny  pasture  incident  odd  paved  path  enjoys  short  path  long  path  would  like  longest  paved  path  short  possible  adding  path  kevin  want  know  sunny  paving  exists  path  bovinia  least  doe  minimum  possible  length  longest  path  paving  note  longest  path  mean  maximum  weight  edge  contains  denoting  pasture  path  respectively  next  describing  path  path  connects  pasture  aii  ha  length  path  given  order  constructed  output  single  denoting  minimum  possible  length  longest  path  maximum  weight  edge  sunny  paving  using  path  kevin  pave  set  path  pasture  incident  odd  paved  path  output
280/B __label__implementation  __label__data  structures  bike  love  looking  second  maximum  element  sequence  second  maximum  element  sequence  distinct  maximum  element  following  inequality  hold  lucky  sequence  distinct  positive  equal  bitwise  excluding  maximum  element  sequence  second  maximum  element  sequence  got  sequence  distinct  positive  let  denote  sequence  task  find  maximum  lucky  sequence  note  sequence  distinct  given  definition  make  sence  contains  second  contains  distinct  print  single  maximum  lucky  lucky  sequence
889/E __label__math  __label__dp  __label__binary  search  given  sequence  let  denotes  modulus  operation  find  maximum  value  nonnegative  contains  single  length  sequence  second  contains  element  sequence  output  single  maximum  value  nonnegative
713/C __label__dp  __label__sortings  sonya  wa  unable  think  story  problem  come  formal  description  given  array  containing  positive  turn  pick  element  increase  decrease  goal  make  array  strictly  increasing  making  minimum  possible  operation  allowed  change  element  way  become  negative  equal  input  contains  single  length  array  next  contains  print  minimum  operation  required  make  array  strictly  increasing
550/C __label__math  __label__dp  __label__brute  force  given  non  negative  decimal  representation  consists  digit  leading  task  determine  possible  case  remove  digit  possibly  remove  digit  result  contains  least  digit  form  non  negative  leading  divisible  removing  forbidden  rearrange  digit  solution  exists  print  single  input  contains  non  negative  representation  leading  length  exceed  digit  print  without  quote  way  remove  digit
611/G __label__geometry  limak  little  polar  bear  according  old  tradition  bear  family  prepared  new  year  cake  limak  like  cake  know  new  year  cake  strictly  convex  polygon  vertex  parent  allow  limak  eat  half  cake  would  get  sick  thinking  decided  cut  cake  along  diagonal  limak  get  non  greater  piece  limak  understands  rule  happy  second  piece  happens  much  bigger  limak  disappointment  equal  difference  piece  area  multiplied  proved  given  constraint  possible  scenario  consider  find  sum  value  limak  disappointment  modulo  input  contains  single  vertex  polygon  denoting  cake  next  contains  coordinate  point  guaranteed  point  distinct  polygon  strictly  convex  point  given  clockwise  order  print  sum  value  limak  disappointment  possible  scenario  modulo
496/B __label__implementation  __label__constructive  algorithms  __label__brute  force  got  box  combination  lock  lock  ha  display  showing  digit  button  box  button  change  digit  display  quickly  discovered  button  add  digit  digit  become  digit  second  button  shift  digit  display  position  right  last  digit  becomes  example  display  currently  showing  push  button  display  show  push  second  button  display  show  know  lock  open  display  showing  smallest  possible  obtained  pushing  button  order  leading  ignored  comparing  task  find  desired  contains  single  digit  display  second  contains  digit  initial  state  display  print  single  containing  digit  desired  state  display  containing  smallest  possible
1027/D __label__dfs  __label__graphs  medicine  faculty  berland  state  university  ha  finished  admission  campaign  usual  applicant  girl  majority  going  live  university  dormitory  next  hopefully  year  dormitory  consists  room  single  mouse  girl  decided  set  mouse  trap  room  get  rid  horrible  monster  setting  trap  room  cost  burles  room  numbered  mouse  sit  place  time  constantly  run  room  second  run  room  second  without  visiting  room  inbetween  mean  mouse  leave  room  second  start  mouse  room  mouse  trap  mouse  get  caught  trap  would  easy  girl  actually  knew  mouse  unfortunately  case  mouse  room  second  minimal  total  amount  burles  girl  spend  set  trap  order  guarantee  mouse  eventually  caught  matter  room  started  contains  single  room  dormitory  second  contains  cost  setting  trap  room  third  contains  room  mouse  run  next  second  room  print  single  minimal  total  amount  burles  girl  spend  set  trap  order  guarantee  mouse  eventually  caught  matter  room  started
985/B __label__implementation  given  switch  lamp  switch  turn  subset  lamp  information  given  matrix  consisting  row  column  switch  turn  lamp  switch  connected  lamp  initially  lamp  turned  switch  change  state  mean  press  switch  connected  lamp  lamp  turned  switch  pressed  remain  state  even  switch  connected  lamp  pressed  afterwards  guaranteed  push  switch  lamp  turned  think  many  switch  would  like  ignore  task  say  exists  switch  ignore  use  press  switch  lamp  turned  input  contains  switch  lamp  following  character  character  equal  switch  turn  lamp  otherwise  guaranteed  press  switch  lamp  turned  print  yes  switch  ignore  press  switch  lamp  turned  print  switch
1081/G __label__math  chouti  thought  day  competitive  programming  learned  write  merge  sort  thought  merge  sort  slow  restricted  maximum  depth  recursion  modified  merge  sort  following  chouti  found  idea  dumb  since  obviously  merge  sort  sometimes  sort  array  correctly  chouti  starting  think  good  merge  sort  particularly  chouti  want  know  random  permutation  expected  inversion  calling  mergesort  proved  expected  rational  given  prime  suppose  answer  denoted  gcd  need  output  satisfying  rd  modq  proved  exists  unique  contains  prime  contains
538/G __label__math  __label__sortings  __label__constructive  algorithms  help  robot  escaped  lab  need  help  finding  lab  point  coordinate  plane  time  robot  wa  robot  movement  defined  program  string  length  consisting  character  second  robot  executes  next  command  program  current  coordinate  robot  command  move  cell  respectively  execution  program  started  time  program  looped  second  executing  program  start  character  unfortunately  know  program  wa  loaded  robot  left  lab  radar  managed  find  position  robot  moment  time  know  moment  time  robot  point  given  data  either  help  determine  program  could  loaded  robot  determine  possible  program  meet  data  robot  must  broken  input  contains  space  separated  next  space  separated  radar  data  given  chronologically  print  possible  program  meet  data  program  meet  data  print  single  word  without  quote
508/D __label__dfs  __label__graphs  dad  wa  work  little  girl  tanya  decided  play  dad  password  secret  database  dad  password  string  consisting  character  ha  written  possible  letter  continuous  substring  password  piece  paper  piece  paper  threw  password  letter  substring  wa  written  time  occurred  password  thus  tanya  ended  piece  paper  tanya  realized  dad  upset  learn  game  decided  restore  password  least  string  corresponding  final  set  letter  string  help  difficult  task  know  dad  password  consisted  lowercase  uppercase  letter  latin  alphabet  digit  uppercase  lowercase  letter  latin  alphabet  considered  distinct  contains  letter  substring  tanya  got  next  letter  forming  substring  dad  password  character  input  lowercase  uppercase  latin  letter  digit  tanya  made  mistake  somewhere  game  string  correspond  given  set  substring  exist  print
1163/C2 __label__math  __label__implementation  __label__data  structures  __label__geometry  problem  previous  ha  larger  constraint  wa  sunday  morning  friend  selena  shiro  katie  decided  trip  nearby  power  station  try  home  arriving  power  station  cat  got  impressed  large  power  transmission  system  consisting  many  chimney  electric  pole  wire  since  cat  found  thing  gigantic  entrance  station  map  describing  complicated  wiring  system  selena  best  math  friend  decided  draw  map  cartesian  plane  pole  point  coordinate  since  every  pole  different  point  representing  pole  distinct  every  pole  connected  wire  wire  straight  plane  infinite  direction  pole  lying  connected  single  common  wire  selena  think  whenever  different  electric  wire  intersect  interfere  cause  damage  wonder  many  pair  intersecting  could  help  problem  contains  single  electric  pole  following  contains  coordinate  pole  guaranteed  point  distinct  print  single  pair  wire  intersecting
1059/C __label__math  __label__constructive  algorithms  let  call  following  process  transformation  sequence  length  sequence  empty  process  end  otherwise  append  greatest  common  divisor  gcd  element  sequence  result  remove  arbitrary  element  sequence  thus  process  end  sequence  greatest  common  divisor  element  sequence  deletion  given  sequence  find  lexicographically  maximum  result  transformation  sequence  lexicographically  larger  sequence  index  input  contains  output  lexicographically  maximum  result  transformation
1010/F __label__graphs  __label__trees  main  martian  tree  grows  mar  binary  tree  rooted  tree  son  vertex  vertex  root  vertex  ha  fruit  main  martian  fruit  summer  tree  doe  fruit  autumn  coming  soon  leaf  branch  begin  fall  tree  clear  vertex  fall  tree  entire  subtree  fall  addition  root  remain  tree  formally  tree  connected  subset  vertex  containing  root  fruit  grow  tree  vertex  remain  exactly  fruit  grow  root  fruit  remaining  vertex  le  sum  fruit  remaining  son  vertex  allowed  vertex  fruit  natasha  wondered  many  tree  configuration  described  change  since  large  output  modulo  configuration  resulting  tree  considered  different  condition  true  different  subset  remaining  vertex  subset  remaining  vertex  vertex  subset  different  amount  fruit  contains  size  tree  fruit  root  following  contains  vertex  connected  edge  tree  guaranteed  input  data  describes  correct  binary  tree  root  vertex  print  configuration  resulting  tree  modulo
730/H __label__implementation  polycarp  beginner  programmer  studying  use  command  polycarp  faced  following  problem  file  directory  need  delete  polycarp  want  run  single  delete  command  filename  pattern  argument  file  deleted  match  pattern  file  match  pattern  polycarp  know  asterisk  special  character  know  question  mark  match  single  character  character  pattern  match  formally  pattern  match  filename  equal  length  character  corresponding  position  equal  except  character  pattern  case  corresponding  filename  character  doe  matter  example  filename  pattern  match  filename  aabaa  abba  ba  doe  match  filename  aaba  abaab  aabaaa  aabaa  help  polycarp  find  pattern  match  file  deleted  report  pattern  input  contains  total  file  file  deleted  following  filename  single  filename  per  filename  non  empty  string  containing  lowercase  english  letter  digit  dot  length  filename  exceed  guaranteed  filename  distinct  last  input  contains  distinct  ascending  order  index  file  deleted  file  indexed  order  appearance  input  required  pattern  exists  print  yes  output  second  required  pattern  multiple  solution  print
1214/B __label__math  __label__brute  force  boy  girl  participating  olympiad  metropolis  board  game  tournament  evening  participant  accepted  invitation  organizer  know  many  boy  girl  organizer  preparing  red  badge  girl  blue  boy  vasya  prepared  deck  badge  inclusive  deck  contains  blue  badge  red  total  badge  deck  exactly  determine  minimum  deck  vasya  take  suitable  deck  matter  many  girl  boy  participant  tournament  contains  boy  second  contains  girl  third  contains  board  game  tournament  participant  output  minimum  badge  deck  vasya  could  take
1060/F __label__dp  consider  tree  connected  graph  without  cycle  vertex  labelled  start  following  process  ha  vertex  following  choose  random  edge  equiprobably  shrink  chosen  edge  edge  wa  connecting  vertex  erase  create  new  vertex  adjacent  vertex  previously  adjacent  either  new  vertex  labelled  either  equiprobably  end  process  consists  single  vertex  labelled  probability  becoming  label  final  vertex  contains  single  following  describe  tree  edge  contains  label  vertex  connected  respective  edge  guaranteed  given  graph  tree  print  floating  desired  probability  label  respectively  correct  relative  absolute  precision
545/E __label__greedy  __label__graphs  little  girl  susie  accidentally  found  elder  brother  notebook  ha  many  thing  important  solving  problem  found  problem  interesting  wanted  know  solution  decided  ask  problem  statement  follows  let  assume  given  connected  weighted  undirected  graph  set  vertex  set  edge  shortest  path  tree  vertex  graph  tree  set  edge  subset  set  edge  initial  graph  length  shortest  path  vertex  given  connected  weighted  undirected  graph  vertex  task  find  shortest  path  tree  given  graph  vertex  total  weight  whose  edge  minimum  possible  contains  vertex  edge  graph  respectively  next  representing  edge  vertex  connected  edge  weight  edge  uii  guaranteed  graph  connected  edge  pair  vertex  last  input  contains  start  vertex  print  minimum  total  weight  edge  tree
375/A __label__math  __label__number  theory  whose  decimal  representation  quite  luckily  contains  digit  rearrange  digit  decimal  representation  resulting  divisible  leading  contains  digit  another  digit  resulting  leading  contains  positive  decimal  record  guaranteed  record  contains  digit  leading  decimal  representation  contains  least  character  print  decimal  notation  without  leading  result  permutation
1076/C __label__math  __label__binary  search  try  guessing  statement  picture  given  non  negative  find  non  negative  real  contains  test  case  test  case  contains  test  print
922/F __label__dp  __label__greedy  __label__constructive  algorithms  __label__number  theory  imp  really  pleased  helped  solve  last  problem  gladness  would  raise  even  let  define  set  pair  strictly  le  divide  without  remainder  find  set  subset  set  contains  positive  greater  contains  answer  print
1054/E __label__math  __label__implementation  __label__constructive  algorithms  egor  came  new  chip  puzzle  suggests  play  puzzle  ha  form  table  row  column  cell  several  black  white  chip  placed  row  thus  state  cell  described  string  consisting  character  white  chip  black  chip  possibly  empty  whole  puzzle  described  table  cell  string  task  get  state  puzzle  state  use  following  operation  select  different  cell  cell  must  row  column  table  string  cell  must  non  empty  operation  move  last  character  string  cell  beginning  string  cell  egor  came  state  table  initial  state  final  guaranteed  table  goal  several  operation  get  final  state  initial  state  course  egor  doe  want  operation  large  let  denote  character  table  use  operation  contains  row  column  table  respectively  following  describe  initial  state  table  following  format  contains  non  empty  string  consisting  string  string  written  cell  row  enumerated  column  numerated  following  describe  final  state  table  format  let  denote  total  length  string  initial  state  guaranteed  guaranteed  coincide  initial  final  state  print  operation  used  find  solution
685/B __label__dp  __label__data  structures  __label__dfs  __label__trees  piece  devilish  mirror  hit  kay  eye  longer  interested  beauty  rose  like  watch  snowflake  upon  time  found  huge  snowflake  ha  form  tree  connected  acyclic  graph  consisting  node  root  tree  ha  index  kay  interested  structure  tree  research  formed  query  interested  query  asks  find  centroid  subtree  node  goal  answer  query  subtree  node  part  tree  consisting  node  descendant  direct  word  subtree  node  formed  node  node  present  path  root  centroid  tree  subtree  node  erase  tree  maximum  size  connected  component  least  time  smaller  size  initial  tree  subtree  input  contains  size  initial  tree  query  respectively  second  contains  index  parent  node  node  root  tree  guaranteed  define  correct  tree  following  single  index  node  define  subtree  want  find  centroid  query  print  index  centroid  corresponding  subtree  many  suitable  node  print  guaranteed  subtree  ha  least  centroid
370/A __label__math  __label__graphs  little  petya  learning  play  chess  ha  already  learned  move  king  rook  bishop  let  remind  rule  moving  chess  piece  chessboard  square  field  organized  table  field  represented  pair  row  column  classical  game  column  traditionally  indexed  letter  chess  piece  take  exactly  field  make  move  move  chess  piece  piece  move  following  rule  rook  move  field  horizontally  vertically  bishop  move  field  diagonally  king  move  field  direction  horizontally  vertically  diagonally  piece  move  like  petya  thinking  following  problem  minimum  move  needed  piece  move  field  field  assume  piece  besides  board  help  solve  problem  input  contains  coordinate  starting  final  field  starting  field  coincide  final  assume  chessboard  row  numbered  top  bottom  column  numbered  left  right  print  space  separated  minimum  move  rook  bishop  king  order  needed  move  field  field  piece  make  move  print  instead  corresponding
837/D __label__math  __label__dp  let  call  roundness  end  array  need  choose  subset  exactly  roundness  product  selected  maximum  possible  contains  second  contains  space  separated  print  maximal  roundness  product  chosen  subset  length
997/E __label__data  structures  permutation  length  sequence  consisting  distinct  let  call  subsegment  permutation  good  minimum  maximum  subsegment  occur  example  good  segment  permutation  given  permutation  need  answer  query  form  find  good  subsegments  given  segment  permutation  word  answer  query  need  calculate  good  subsegments  given  segment  l  contains  single  element  permutation  second  contains  distinct  separated  space  third  contains  query  following  describe  query  contains  pair  separated  space  print  good  subsegments  segment  given  query
1140/E __label__dp  let  denote  array  bad  contains  subarray  odd  length  odd  array  bad  good  given  array  element  replaced  calculate  good  array  obtain  replacing  since  answer  large  print  modulo  contains  length  array  size  alphabet  upper  bound  use  replace  second  contains  array  print  good  array  get  modulo
936/D __label__dp  __label__greedy  vitya  love  programming  problem  solving  sometimes  distract  little  play  computer  game  found  new  interesting  game  tank  liked  much  went  almost  level  day  remained  last  level  wa  tricky  vitya  remembered  programmer  wrote  program  helped  pas  difficult  level  try  game  organized  follows  long  road  cell  wide  cell  long  cell  obstacle  control  tank  occupies  cell  initially  tank  located  start  road  cell  coordinate  task  move  tank  end  road  cell  every  second  tank  move  cell  right  coordinate  increased  press  arrow  key  tank  instantly  change  lane  coordinate  press  spacebar  tank  shoot  nearest  obstacle  along  lane  tank  ride  instantly  destroyed  order  load  gun  tank  need  second  initially  gun  loaded  mean  shot  made  second  tank  start  move  point  tank  cell  obstacle  destroyed  burn  press  arrow  exactly  moment  tank  move  forward  tank  move  forward  change  lane  possible  move  diagonally  task  find  whether  possible  pas  level  possible  find  order  action  player  need  make  contains  length  field  obstacle  lane  obstacle  second  lane  tank  step  reloading  respectively  next  description  obstacle  contains  obstacle  coordinate  lane  coordinate  obstacle  second  contains  describing  obstacle  second  lane  format  coordinate  obstacle  print  yes  possible  pas  level  otherwise
1200/F __label__math  __label__dp  __label__implementation  __label__data  structures  __label__dfs  __label__graphs  __label__brute  force  __label__number  theory  gildong  experimenting  interesting  machine  graph  traveler  graph  traveler  directed  graph  consisting  vertex  numbered  vertex  ha  outgoing  edge  labeled  representing  destination  vertex  edge  graph  multiple  edge  self  loop  vertex  ha  written  travel  graph  work  follows  gildong  chooses  vertex  start  start  set  variable  arriving  vertex  gildong  begin  travel  vertex  add  next  vertex  satisfying  mod  next  vertex  back  step  obvious  travel  never  end  since  nd  rd  step  repeated  endlessly  example  assume  gildong  start  vertex  right  start  vertex  becomes  since  mod  gildong  go  vertex  arriving  vertex  becomes  satisfying  condition  go  vertex  since  gildong  quite  inquisitive  going  ask  query  want  know  many  distinct  vertex  visited  infinitely  many  time  start  travel  certain  vertex  certain  value  note  count  vertex  visited  finite  time  input  contains  vertex  graph  second  contains  written  vertex  next  describe  edge  vertex  contains  outgoing  edge  vertex  contains  value  inclusive  next  contains  query  gildong  want  ask  next  contains  mean  start  vertex  starting  value  query  print  distinct  vertex  visited  infinitely  many  time  gildong  start  vertex  starting
842/D __label__data  structures  __label__binary  search  today  lesson  vitya  learned  interesting  function  mex  mex  sequence  minimum  non  negative  present  sequence  element  example  mex  mex  vitya  quickly  understood  task  teacher  given  array  consisting  non  negative  query  query  characterized  consists  following  consecutive  step  perform  bitwise  addition  operation  modulo  xor  array  element  find  mex  resulting  array  note  query  array  change  contains  element  array  query  next  contains  element  array  next  contains  query  query  print  answer  separate
455/B __label__dp  __label__implementation  __label__dfs  __label__trees  __label__strings  andrew  fedor  alex  inventive  guy  invent  game  string  player  given  group  non  empty  string  game  player  build  word  together  initially  word  empty  player  move  turn  step  player  must  add  single  letter  end  word  resulting  word  must  prefix  least  string  group  player  loses  move  andrew  alex  decided  play  game  time  player  loser  game  make  move  game  guy  decided  winner  game  player  win  last  game  andrew  alex  already  started  game  fedor  want  know  win  game  player  play  optimally  help  contains  next  contains  single  non  empty  string  given  group  total  length  string  group  exceed  string  group  consists  lowercase  english  letter  player  move  win  print  otherwise  print  second  without  quote
404/C __label__sortings  __label__dfs  __label__graphs  valera  undirected  connected  graph  without  self  loop  multiple  edge  consisting  vertex  graph  interesting  property  edge  adjacent  vertex  convenience  assume  graph  vertex  indexed  day  valera  counted  shortest  distance  graph  vertex  wrote  array  thus  element  array  show  shortest  distance  vertex  valera  chose  vertex  something  irreparable  terrible  happened  valera  lost  initial  graph  still  ha  array  help  restore  lost  graph  contains  space  separated  show  vertex  original  graph  show  edge  adjacent  vertex  original  graph  second  contains  space  separated  show  shortest  distance  vertex  valera  chose  vertex  valera  made  mistake  note  required  graph  exist  print  otherwise  print  edge  found  graph
526/E __label__dp  __label__implementation  optimizing  amount  data  transmitted  via  network  important  interesting  part  developing  network  application  secret  game  developed  deep  zeptolab  company  game  universe  consists  level  located  circle  get  level  level  get  level  level  vice  versa  map  level  description  size  byte  order  reduce  transmitted  traffic  game  get  level  follows  level  server  divided  group  time  player  find  level  certain  group  time  server  sends  level  group  game  client  single  packet  thus  player  travel  inside  level  single  group  application  need  new  information  due  technical  limitation  packet  arbitrary  level  total  size  exceed  byte  positive  constant  usual  situation  player  finish  level  decision  wa  made  split  level  group  group  wa  continuous  segment  containing  multiple  neighboring  level  group  adjacent  level  specifically  description  level  total  weight  byte  united  group  sent  single  packet  determine  minimum  group  need  make  order  organize  level  game  observing  condition  developing  game  long  process  technology  never  stagnates  impossible  predict  exactly  value  take  constant  value  limiting  packet  size  game  developer  ask  find  answer  multiple  value  contains  level  game  universe  distinct  value  need  process  second  contains  size  level  byte  next  determining  value  constant  need  determine  answer  value  input  print  single  j  determining  minimum  group  divide  game  level  transmission  via  network  observing  given  condition
1100/D __label__constructive  algorithms  interactive  task  dasha  like  playing  chess  playing  match  decided  normal  chess  interesting  enough  invented  game  described  black  rook  white  king  chess  board  size  white  king  win  get  checked  rook  word  move  onto  square  share  either  row  column  black  rook  side  take  turn  starting  white  play  white  king  turn  move  king  square  adjacent  current  position  either  side  diagonally  formally  king  wa  square  move  square  max  nx  ny  max  x  ny  forbidden  moving  onto  square  occupied  black  rook  move  onto  row  column  black  rook  dasha  neglect  playing  chess  rule  instead  moving  rook  normally  move  rook  space  devoid  chess  piece  possible  rook  would  move  onto  square  wa  position  change  move  rook  row  column  king  player  make  turn  white  king  checked  black  rook  turn  black  win  like  losing  think  task  difficult  asks  write  program  always  win  playing  white  king  note  dasha  see  king  play  depending  position  beginning  program  receive  input  contains  piece  coordinate  contains  coordinate  king  next  coordinate  rook  coordinate  denotes  row  piece  located  second  denotes  column  guaranteed  initially  king  check  piece  occupy  different  square  getting  king  checked  program  terminate  immediately  without  printing  anything  extra
976/D __label__implementation  __label__graphs  __label__constructive  algorithms  given  sequence  positive  task  construct  undirected  graph  exactly  vertex  self  loop  multiple  edge  edge  degree  set  equal  vertex  numbered  degree  sequence  array  length  equal  vertex  graph  vertex  adjacent  vertex  degree  set  sorted  increasing  order  sequence  distinct  value  degree  sequence  guaranteed  exists  graph  condition  hold  contains  edge  print  resulting  graph  contains  size  degree  set  second  contains  degree  set  print  edge  resulting  graph  guaranteed  exists  graph  condition  hold  contains  edge
912/E __label__math  __label__dfs  __label__binary  search  __label__number  theory  opposite  grisha  nice  behavior  oleg  though  ha  entire  year  disposal  manage  learn  solve  theory  problem  past  year  instead  ded  moroz  wa  visited  teammate  andrew  solemnly  presented  set  distinct  prime  alongside  simple  task  oleg  find  smallest  prime  divisor  set  contains  single  next  list  distinct  prime  ascending  order  last  give  single  guaranteed  smallest  prime  divisor  set  doe  exceed  print  single  featuring  smallest  guaranteed  answer  exceed
980/D __label__math  __label__dp  __label__number  theory  samer  ha  written  greatest  test  case  time  problem  given  array  problem  asks  find  minimum  group  array  divided  product  pair  group  perfect  square  must  exactly  group  group  necessarily  contiguous  array  samer  wish  create  case  test  case  already  ha  test  case  ha  array  need  find  contiguous  subarrays  answer  problem  equal  inclusive  input  contains  single  size  array  second  contains  value  array  output  space  separated  contiguous  subarrays  answer  problem  equal
1110/E __label__math  __label__sortings  __label__constructive  algorithms  grigory  ha  magic  stone  conveniently  numbered  charge  stone  equal  sometimes  grigory  get  bored  selects  inner  stone  stone  index  synchronizes  neighboring  stone  chosen  stone  loses  charge  acquires  charge  neighboring  stone  word  charge  change  andrew  grigory  friend  ha  stone  charge  grigory  curious  whether  exists  sequence  synchronization  operation  transforms  charge  grigory  stone  charge  corresponding  andrew  stone  change  contains  magic  stone  second  contains  charge  grigory  stone  second  contains  charge  andrew  stone  exists  possibly  empty  sequence  synchronization  operation  change  charge  required  print  yes
1063/B __label__graphs  playing  computer  game  level  put  maze  consisting  contains  cell  cell  either  free  occupied  obstacle  starting  cell  row  column  step  move  square  left  right  target  cell  occupied  obstacle  move  beyond  boundary  labyrinth  unfortunately  keyboard  break  move  left  time  move  right  time  restriction  move  since  key  used  move  perfect  condition  would  like  determine  cell  whether  exists  sequence  move  put  starting  cell  particular  many  cell  board  property  contains  row  column  labyrinth  respectively  second  contains  index  row  index  column  define  starting  cell  third  contains  maximum  allowed  movement  left  right  respectively  next  describe  labyrinth  ha  length  consists  symbol  character  corresponds  cell  labyrinth  row  column  symbol  denotes  free  cell  symbol  denotes  cell  obstacle  guaranteed  starting  cell  contains  obstacle  print  exactly  cell  labyrinth  reachable  starting  cell  including  starting  cell
875/C __label__implementation  __label__dfs  __label__graphs  know  library  bookland  largest  library  world  dozen  thousand  book  library  long  uninteresting  story  wa  removed  alphabet  bookland  large  letter  denoted  positive  letter  small  large  large  version  letter  denoted  bscii  encoding  used  everywhere  bookland  made  way  large  letter  presented  order  denoted  small  letter  presented  order  denoted  large  letter  small  letter  example  following  condition  hold  word  lexicographically  greater  following  condition  hold  word  prefix  second  word  position  position  word  differ  word  ha  smaller  letter  second  word  ha  example  word  word  lexicographical  order  said  sequence  word  lexicographical  order  word  lexicographically  greater  next  word  sequence  denis  ha  sequence  word  consisting  small  letter  want  change  letter  large  let  call  process  capitalization  way  sequence  word  lexicographical  order  soon  realized  reason  change  single  letter  single  word  choose  letter  change  occurrence  word  large  letter  perform  operation  time  arbitrary  letter  bookland  alphabet  help  denis  choose  letter  need  capitalize  make  large  order  make  sequence  word  lexicographically  ordered  determine  impossible  note  word  equal  contains  word  letter  bookland  alphabet  respectively  letter  bookland  alphabet  denoted  next  contains  description  word  format  length  word  sequence  letter  word  word  given  order  denis  ha  sequence  guaranteed  total  length  word  greater  print  yes  without  quote  possible  capitalize  set  letter  way  sequence  word  becomes  lexicographically  ordered  otherwise  print  without  quote
780/F __label__dp  __label__graphs  couple  friend  axel  marston  travelling  country  bitland  town  bitland  pair  town  connected  directional  road  road  bitland  either  pedestrian  road  bike  road  multiple  road  pair  town  even  road  town  pair  road  share  starting  destination  town  along  type  simultaneously  friend  located  town  planning  travel  route  axel  enjoys  walking  marston  prefers  biking  order  choose  route  diverse  equally  interesting  friend  agreed  upon  following  procedure  choosing  road  type  travel  route  start  pedestrian  route  suppose  beginning  route  written  string  letter  pedestrain  road  biking  road  string  appended  stand  string  character  changed  opposite  pedestrian  road  changed  bike  road  vice  versa  step  route  look  follows  pbbp  pbbpbppb  pbbpbppbbppbpbbp  friend  start  travelling  town  via  bitlandian  road  choosing  next  road  according  next  character  route  type  time  impossible  choose  next  road  friend  terminate  travel  fly  home  instead  help  friend  find  longest  possible  route  travelled  along  road  bitland  according  road  type  choosing  procedure  described  route  road  print  instead  contains  n  town  road  bitland  respectively  next  describe  road  contains  denote  start  destination  town  index  road  decribes  type  road  pedestrian  road  bike  road  guaranteed  pair  distinct  index  either  vij  uij  tij  hold  possible  find  route  length  strictly  greater  print  otherwise  print  maximum  length  suitable  path
500/G __label__trees  __label__number  theory  new  year  coming  tree  island  island  name  implies  city  connected  road  distinct  city  always  exists  exactly  path  every  person  tree  island  take  exactly  minute  pas  exactly  road  weird  new  year  tradition  runnners  tree  island  called  extreme  run  tradition  done  follows  runner  chooses  distinct  city  simplicity  let  denote  shortest  path  city  city  hold  following  happens  runner  start  city  runner  run  city  following  shortest  path  city  city  runner  arrives  city  turn  direction  immediately  take  time  run  towards  city  following  shortest  path  city  city  runner  arrives  city  turn  direction  immediately  take  time  run  towards  city  following  shortest  path  city  city  repeat  step  step  forever  short  course  runner  denoted  runner  decided  run  extremely  order  celebrate  new  year  ha  chosen  city  ha  chosen  city  decided  start  running  moment  run  meet  city  time  meeting  road  matter  running  want  know  amount  time  run  hard  calculate  ask  help  contains  single  positive  city  tree  island  next  describe  road  tree  island  contains  space  separated  ii  vertex  connected  single  road  tree  next  contains  test  case  next  describes  test  case  contains  space  separated  j  j  jj  jj  mean  test  case  ha  chosen  city  ha  chosen  city  start  running  city  start  running  city  test  case  print  describing  amount  time  run  minute  run  infinitely  long  time  word  never  meet  city  print  instead  meet  beginning  run  print
987/A __label__implementation  took  peek  thanos  wearing  infinity  gauntlet  gauntlet  place  infinity  gem  power  gem  purple  color  time  gem  green  color  space  gem  blue  color  soul  gem  orange  color  reality  gem  red  color  mind  gem  yellow  color  using  color  gem  saw  gauntlet  determine  name  absent  gem  input  gem  infinity  gauntlet  next  color  gem  saw  word  used  color  purple  green  blue  orange  red  yellow  guaranteed  color  distinct  color  given  lowercase  english  letter  output  absent  gem
1003/D __label__greedy  polycarp  ha  coin  value  coin  guaranteed  value  power  non  negative  polycarp  want  know  answer  query  query  described  answer  query  minimum  coin  necessary  obtain  value  using  subset  coin  polycarp  use  coin  ha  polycarp  obtain  value  answer  query  query  independent  answer  query  affect  polycarp  coin  input  contains  coin  query  second  input  contains  value  coin  guaranteed  power  non  negative  next  contains  value  query  print  must  equal  answer  query  polycarp  obtain  value  answer  query
822/F __label__dfs  __label__trees  __label__constructive  algorithms  second  semester  start  university  pavlopolis  vacation  vikopolis  noora  need  return  pavlopolis  continue  study  sometimes  quite  often  teacher  like  incidentally  noora  ha  teacher  name  yury  dmitrievich  teach  graph  theory  yury  dmitrievich  like  noora  always  give  girl  difficult  task  happened  time  teacher  give  noora  tree  vertex  vertex  numbered  length  edge  tree  noora  chooses  set  simple  path  pairwise  intersect  edge  vertex  belong  least  selected  path  selected  path  following  done  choose  exactly  edge  belongs  path  selected  edge  point  selected  distance  vertex  distance  vertex  distance  chosen  noora  arbitrarily  different  different  edge  vertex  selected  point  start  moving  selected  vertex  let  explain  point  move  example  suppose  path  consists  edge  point  initially  stand  edge  begin  movement  vertex  point  reach  turn  around  end  path  wa  reached  move  another  direction  vertex  vertex  turn  around  move  speed  point  edge  per  second  example  second  point  move  length  half  edge  stopwatch  placed  vertex  tree  time  stopwatch  indicate  start  time  second  starting  moment  time  point  simultaneously  start  moving  selected  position  selected  direction  along  selected  path  stopwatch  simultaneously  started  point  reach  vertex  stopwatch  vertex  automatically  reset  start  counting  time  denote  resv  maximal  time  stopwatch  vertex  show  point  movement  continues  infinitely  noora  asked  select  path  point  minimal  possible  several  solution  necessary  minimize  esn  help  noora  complete  teacher  task  better  understanding  statement  see  explanation  example  contains  single  vertex  given  tree  next  contains  vertex  connected  edge  guaranteed  input  defines  valid  tree  print  single  path  path  want  choose
1174/F __label__implementation  __label__graphs  __label__trees  __label__constructive  algorithms  interactive  problem  given  tree  consisting  node  rooted  node  tree  connected  graph  cycle  chose  hidden  node  order  find  node  ask  query  type  answer  distance  node  distance  node  edge  shortest  path  answer  second  node  path  plot  twist  ancestor  receive  wrong  answer  verdict  node  called  ancestor  node  shortest  path  node  node  pass  node  note  problem  node  ancestor  find  query  hidden  node  fixed  test  beforehand  doe  depend  query  contains  node  tree  next  contains  space  separated  mean  edge  node  guaranteed  given  graph  tree  print  answer  print  without  quote
1041/C __label__greedy  __label__data  structures  __label__binary  search  recently  monocarp  got  job  working  day  last  exactly  minute  work  monocarp  want  drink  coffee  certain  moment  minute  able  willing  take  coffee  break  sake  simplicity  let  consider  coffee  break  last  exactly  minute  monocarp  bos  like  monocarp  take  coffee  break  often  given  coffee  break  going  minute  monocarp  must  choose  day  drink  coffee  said  minute  every  day  least  minute  pas  coffee  break  monocarp  want  take  coffee  break  minimum  possible  working  day  count  day  work  take  coffee  break  day  take  account  minute  pas  end  working  day  start  following  working  day  given  minute  determine  day  monocarp  take  coffee  break  minute  minimize  day  spent  contains  coffee  break  monocarp  want  length  working  day  minimum  minute  consecutive  coffee  break  second  contains  distinct  minute  monocarp  want  coffee  break  write  minimum  day  required  make  coffee  break  given  minute
1183/G __label__implementation  __label__greedy  __label__sortings  problem  version  problem  contest  additional  constraint  task  candy  candy  box  type  candy  prepare  gift  using  candy  following  restriction  candy  type  presented  gift  distinct  example  gift  candy  type  candy  type  bad  possible  multiple  type  candy  completely  absent  gift  possible  candy  type  taken  gift  really  like  candy  want  include  gift  want  eat  instead  candy  given  equal  really  want  keep  candy  mind  including  gift  possible  candy  type  different  value  want  gift  large  possible  want  include  many  candy  want  eat  gift  want  calculate  maximum  possible  candy  included  gift  way  choose  maximum  candy  want  maximize  candy  gift  answer  independent  query  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  query  query  contains  candy  follow  containing  type  candy  denotes  whether  want  keep  candy  want  keep  mind  giving  away  guaranteed  sum  query  doe  exceed  query  print
1169/A __label__math  __label__implementation  circle  roflanpolis  subway  ha  station  parallel  route  subway  visit  station  order  n  next  stop  station  equal  otherwise  second  route  visit  station  order  next  stop  station  equal  otherwise  train  depart  station  simultaneously  take  exactly  minute  arrive  next  station  toad  live  city  name  daniel  vlad  daniel  currently  train  route  station  exit  subway  train  reach  station  coincidentally  vlad  currently  train  second  route  station  exit  subway  train  reach  station  surprisingly  distinct  toad  ilya  asks  check  daniel  vlad  ever  station  time  journey  word  check  moment  train  stop  station  note  includes  moment  daniel  vlad  enter  leave  subway  contains  space  separated  distinct  station  roflanpolis  daniel  start  station  daniel  finish  station  vlad  start  station  vlad  finish  station  respectively  output  yes  time  moment  vlad  daniel  station  otherwise  print  letter  case  upper  lower
851/A __label__math  __label__implementation  arpa  researching  mexican  wave  spectator  stadium  labeled  start  mexican  wave  time  time  spectator  stand  time  second  spectator  stand  time  spectator  stand  time  spectator  stand  spectator  sits  time  spectator  stand  second  spectator  sits  time  spectator  stand  spectator  sits  time  spectator  sits  time  spectator  sits  arpa  want  know  many  spectator  standing  time  contains  print  single  many  spectator  standing  time
468/C __label__math  __label__constructive  algorithms  __label__binary  search  little  ha  met  following  problem  recently  let  define  sum  digit  decimal  representation  example  calculate  course  little  ha  solved  problem  quickly  ha  locked  ha  tried  hack  others  ha  seen  following  code  solve  code  fail  test  given  help  little  find  proper  test  hack  contains  single  print  required  test  data  leading  allowed  guaranteed  solution  exists
1207/B __label__implementation  __label__greedy  __label__constructive  algorithms  given  matrix  matrix  contains  exactly  row  column  element  either  element  initially  perform  operation  matrix  operation  choose  submatrix  size  replace  every  element  chosen  submatrix  word  choose  set  goal  make  matrix  equal  matrix  matrix  equal  every  element  matrix  equal  corresponding  element  matrix  possible  make  matrix  equal  come  sequence  operation  make  equal  note  minimize  operation  contains  follow  containing  either  impossible  make  equal  print
582/C __label__number  theory  given  infinite  periodic  array  period  length  formally  periodic  subarray  array  infinite  periodic  array  period  length  subsegment  array  starting  position  periodic  subarray  superior  attaching  array  starting  index  element  subarray  larger  equal  corresponding  element  array  example  attaching  given  figure  top  infinite  array  bottom  periodic  subarray  find  distinct  pair  corresponding  superior  periodic  array  contains  second  contains  separated  space  print  single  sought  pair
625/A __label__math  __label__implementation  kolya  gerasimov  love  kefir  much  life  year  know  detail  buying  delicious  drink  day  probably  know  found  year  buying  kefir  much  complicated  kolya  hungry  went  nearest  milk  shop  buy  kefir  plastic  liter  bottle  cost  ruble  glass  liter  bottle  cost  ruble  return  empty  glass  bottle  get  ruble  back  return  plastic  bottle  kolya  ha  ruble  really  hungry  want  drink  much  kefir  possible  plastic  bottle  kolya  know  act  optimally  asks  help  input  contains  single  ruble  kolya  ha  beginning  follow  containing  cost  plastic  liter  bottle  cost  glass  liter  bottle  money  get  back  returning  empty  glass  bottle  respectively  print  maximum  liter  kefir  kolya  drink
380/A __label__brute  force  __label__binary  search  sereja  love  sequence  much  decided  make  new  following  certain  algorithm  sereja  take  blank  piece  paper  start  writing  sequence  stage  time  either  add  new  end  sequence  take  element  current  sequence  add  time  end  formally  represent  current  sequence  apply  described  operation  sequence  transforms  block  square  bracket  must  repeated  time  day  ha  passed  sereja  ha  completed  sequence  wonder  value  element  help  sereja  contains  stage  build  sequence  next  description  stage  order  follow  type  stage  type  mean  adding  end  sequence  case  contains  add  type  mean  copying  prefix  length  end  time  case  contains  length  prefix  copying  guaranteed  length  prefix  never  larger  current  length  sequence  next  contains  element  sereja  interested  next  contains  element  final  sequence  sereja  interested  given  strictly  increasing  order  guaranteed  strictly  larger  exceed  length  resulting  sequence  consider  element  final  sequence  numbered  starting  beginning  end  sequence  please  use  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  print  element  sereja  interested  order  occur  input
1177/A __label__implementation  let  write  positive  another  without  delimiters  single  string  infinite  sequence  starting  task  print  digit  sequence  contains  position  process  based  index  print  digit  resulting  infinite  sequence
1101/G __label__math  given  array  task  divide  array  maximum  segment  way  element  contained  exactly  segment  segment  contains  least  element  exist  non  empty  subset  segment  bitwise  xor  equal  print  maximum  segment  array  divided  print  suitable  division  exists  contains  single  size  array  second  contains  print  maximum  segment  array  divided  following  given  constraint  print  suitable  division  exists
706/E __label__implementation  __label__data  structures  vasiliy  finally  got  work  huge  amount  task  waiting  vasiliy  given  matrix  consisting  row  column  task  task  swap  submatrices  given  matrix  task  vasiliy  know  index  row  top  left  corner  rectangle  located  index  column  index  row  top  left  corner  second  rectangle  index  column  height  rectangle  width  guaranteed  rectangle  query  overlap  touch  cell  belongs  rectangle  cell  belonging  different  rectangle  share  side  rectangle  allowed  share  angle  vasiliy  want  know  matrix  look  like  task  performed  input  contains  row  column  matrix  task  vasiliy  ha  perform  follow  containing  initial  value  cell  matrix  following  contains  print  containing  resulting  matrix
808/G __label__dp  __label__strings  berland  ha  long  glorious  history  increase  awareness  younger  citizen  king  berland  decided  compose  anthem  though  lot  lot  victory  history  berland  stand  king  want  mention  anthem  many  time  possible  ha  already  composed  major  part  anthem  need  fill  letter  king  asked  help  work  anthem  string  small  latin  letter  question  mark  glorious  victory  string  small  latin  letter  replace  question  mark  small  latin  letter  way  occurrence  string  string  maximal  note  occurrence  string  overlap  check  third  example  clarification  contains  string  small  latin  letter  question  mark  second  contains  string  small  latin  letter  product  length  string  exceed  output  maximum  occurrence  string  achieve  replacing  question  mark  string  small  latin  letter
1105/E __label__dp  __label__brute  force  hiasat  registered  new  account  neckoforces  friend  found  asked  use  name  hiasat  handle  luckily  hiasat  change  handle  point  time  know  exact  moment  friend  visit  profile  page  formally  given  sequence  event  type  hiasat  change  handle  friend  visit  hiasat  profile  friend  happy  time  visit  hiasat  profile  handle  would  hiasat  asks  help  find  maximum  possible  happy  friend  get  contains  event  friend  follow  denoting  event  type  hiasat  change  handle  friend  visit  hiasat  profile  guaranteed  friend  name  consists  lowercase  latin  letter  guaranteed  event  always  type  friend  visit  hiasat  profile  least  print  single  maximum  happy  friend
1214/A __label__math  __label__brute  force  andrew  wa  excited  participate  olympiad  metropolis  day  flew  quickly  andrew  already  airport  ready  home  ha  ruble  left  would  like  exchange  euro  dollar  bill  andrew  mix  dollar  bill  euro  bill  whatever  way  want  price  dollar  ruble  euro  cost  ruble  recall  exist  following  dollar  bill  following  euro  bill  note  problem  consider  euro  bill  hard  find  bill  currency  exchange  point  andrew  buy  combination  bill  goal  minimize  total  ruble  exchange  help  write  program  given  find  minimum  ruble  andrew  get  buying  dollar  euro  bill  input  contains  initial  sum  ruble  andrew  ha  second  input  contains  price  dollar  ruble  third  input  contains  price  euro  ruble  output  minimum  ruble  andrew  buying  dollar  euro  bill  optimally
1218/D __label__graphs  galaxy  far  far  away  ancient  interplanetary  republic  bubbleland  consisting  planet  bidirectional  wormhole  connecting  pair  planet  bubbleland  centralized  republic  capital  planet  whiteplanet  another  planet  reached  using  wormhole  guaranteed  wormhole  connects  planet  different  wormhole  connect  pair  planet  call  path  begin  planet  visit  planet  return  starting  point  tour  interplanetary  safety  regulation  guarantee  planet  belongs  tour  tour  many  eon  usage  wormhole  need  repaired  wormhole  ha  cost  need  payed  reparation  unfortunately  senate  bubbleland  short  budget  therefore  decided  fix  many  wormhole  need  order  planet  reachable  capital  pay  little  money  repair  way  senate  calculates  cost  different  cost  set  reparation  binary  xor  cost  individual  reparation  reparation  made  cost  cost  entire  set  senate  would  like  know  much  money  pay  different  way  achieve  cost  modulo  input  contains  planet  wormhole  following  meaning  exists  wormhole  connecting  planet  repair  cost  output  smallest  possible  cost  entire  reparation  different  valid  reparation  cost  modulo
959/E __label__math  __label__dp  __label__implementation  __label__graphs  ehab  interested  bitwise  xor  operation  special  graph  mahmoud  gave  problem  combine  ha  complete  graph  consisting  vertex  numbered  vertex  vertex  connected  undirected  edge  ha  weight  bitwise  xor  operation  find  weight  minimum  spanning  tree  graph  read  complete  graph  http  wikipedia  org  wiki  completegraph  read  minimum  spanning  tree  http  wikipedia  org  wiki  minimumspanningtree  weight  minimum  spanning  tree  sum  weight  edge  included  contains  vertex  graph  contains  weight  graph  minimum  spanning  tree
492/D __label__math  __label__implementation  __label__sortings  __label__binary  search  vanya  friend  vova  play  computer  game  need  destroy  monster  pas  level  vanya  character  performs  attack  frequency  hit  per  second  vova  character  performs  attack  frequency  hit  per  second  character  spends  fixed  time  raise  weapon  hit  time  raise  weapon  second  character  second  second  monster  dy  receives  hit  vanya  vova  wonder  make  last  hit  monster  vanya  vova  make  last  hit  time  assume  made  last  hit  contains  monster  frequency  vanya  vova  attack  correspondingly  next  hit  needed  destroy  monster  print  print  word  vanya  last  hit  monster  wa  performed  vanya  vova  vova  performed  last  hit  boy  performed  time
70/B __label__greedy  __label__strings  fangy  little  walrus  modern  walrus  love  communicate  via  text  messaging  day  faced  following  problem  sends  large  text  split  part  containing  character  size  text  message  thus  whole  sentence  word  get  split  fangy  like  faced  task  breaking  text  minimal  message  sentence  broken  piece  sent  text  message  sent  would  minimal  consecutive  sentence  different  message  space  ignored  fangy  doe  write  space  little  walrus  text  look  following  manner  text  sentence  sentence  space  text  sentence  word  space  sentence  word  end  end  word  letter  letter  word  letter  space  space  stand  symbol  space  many  message  fangy  send  contains  size  message  second  contains  text  length  text  doe  exceed  character  guaranteed  text  satisfies  described  format  specifically  implies  text  empty  print  text  message  fangy  need  impossible  split  text  print  impossible  without  quote
982/E __label__number  theory  __label__geometry  consider  billiard  table  rectangular  size  nm  pocket  let  introduce  coordinate  system  origin  lower  left  corner  see  picture  ball  point  currently  max  come  table  strike  ball  ball  start  moving  along  parallel  ax  make  angle  assume  angle  direction  ball  collision  side  equal  ball  move  indefinitely  long  stop  fall  pocket  ball  considered  point  fall  pocket  coordinate  coincide  pocket  initially  ball  pocket  note  ball  move  along  side  case  ball  fall  pocket  end  side  task  determine  whether  ball  fall  pocket  eventually  yes  pocket  contains  width  table  length  table  coordinate  initial  position  ball  coordinate  initial  position  ball  component  initial  speed  component  initial  speed  respectively  guaranteed  ball  initially  pocket  print  coordinate  pocket  ball  fall  ball  move  indefinitely
846/D __label__data  structures  __label__binary  search  recently  luba  bought  monitor  monitor  rectangular  matrix  size  n  started  notice  pixel  cease  work  properly  luba  think  monitor  become  broken  moment  contains  square  k  consisting  entirely  broken  pixel  know  pixel  already  broken  know  moment  stopped  working  help  luba  determine  monitor  became  broken  tell  still  broken  even  pixel  stopped  working  contains  length  width  monitor  size  rectangle  monitor  broken  broken  rectangle  size  broken  pixel  next  coordinate  broken  pixel  row  column  matrix  moment  stopped  working  pixel  listed  consider  pixel  already  broken  moment  print  minimum  moment  monitor  became  broken  still  broken  pixel  stopped  working
871/E __label__greedy  __label__graphs  __label__trees  petya  tree  consisting  vertex  numbered  accidentally  lost  tree  petya  remembers  information  vertex  distance  tree  vertex  task  restore  tree  satisfies  information  petya  remembers  report  tree  exist  contains  vertex  tree  vertex  petya  remembers  distance  information  following  remembered  information  contains  distance  vertex  vertex  petya  remembers  suitable  tree  print
986/E __label__math  __label__data  structures  __label__trees  __label__brute  force  __label__number  theory  let  main  character  problem  personage  recent  movie  new  avenger  seem  make  lot  buzz  watch  part  franchise  know  hero  well  stop  using  problem  statement  thanos  strange  superhero  supervillain  stuff  suddenly  stumble  regular  competitive  programming  problem  given  tree  vertex  vertex  positive  answer  query  query  ha  calculate  gcd  mod  set  vertex  path  word  calculate  product  gcd  vertex  path  might  large  compute  modulo  gcd  denotes  greatest  common  divisor  note  vertex  change  query  suppose  interested  superhero  business  thanos  strange  solving  problem  invited  solve  problem  instead  input  size  tree  next  edge  tree  described  edge  described  connects  vertex  guaranteed  graph  edge  tree  next  next  query  next  query  described  query  described  print  answer  query  order  given  input  print  answer  modulo  print  separate
626/C __label__math  __label__greedy  __label__brute  force  __label__number  theory  student  class  making  tower  block  student  make  non  tower  stacking  piece  lengthwise  top  student  use  piece  made  block  student  use  piece  made  block  student  want  use  many  block  want  unique  student  tower  block  find  minimum  height  necessary  tallest  student  tower  input  contains  space  separated  student  using  block  piece  student  using  block  piece  respectively  print  single  denoting  minimum  possible  height  tallest  tower
1213/G __label__sortings  __label__graphs  __label__trees  given  weighted  tree  consisting  vertex  recall  tree  connected  graph  without  cycle  vertex  connected  edge  weight  given  query  query  given  query  need  calculate  pair  vertex  maximum  weight  edge  simple  path  exceed  input  contains  vertex  tree  query  next  describes  edge  tree  edge  denoted  label  vertex  connects  weight  edge  guaranteed  given  edge  form  tree  last  input  contains  maximum  weight  edge  query  print  answer  query  value  equal  pair  vertex  maximum  weight  edge  simple  path  exceed
1187/G __label__graphs  leader  secretive  organization  ha  decided  invite  member  meeting  member  organization  live  town  represented  crossroad  connected  directional  street  meeting  held  leader  house  near  crossroad  member  organization  invited  meeting  life  near  crossroad  member  organization  receive  message  meeting  moment  start  moving  location  meeting  held  beginning  minute  person  located  crossroad  either  wait  minute  crossroad  spend  minute  walk  current  crossroad  along  street  another  crossroad  obviously  possible  start  walking  along  street  begin  end  current  crossroad  beginning  minute  person  crossroad  life  soon  person  reach  crossroad  immediately  come  leader  house  attends  meeting  obviously  leader  want  member  organization  come  early  possible  since  organization  secretive  leader  doe  want  attract  much  attention  let  denote  discontent  leader  follows  initially  discontent  whenever  person  reach  crossroad  discontent  leader  increase  fixed  constant  minute  took  person  reach  crossroad  whenever  member  organization  walk  along  street  moment  direction  added  discontent  fixed  constant  cumulative  example  person  walking  along  street  direction  moment  added  discontent  sending  message  meeting  leader  tell  member  organization  path  choose  wait  help  leader  establish  plan  every  member  organization  reach  crossroad  discontent  minimized  input  contains  n  crossroad  street  person  invited  meeting  constant  affecting  discontent  respectively  second  contains  crossroad  member  organization  live  follow  denoting  bidirectional  street  contains  denoting  street  connecting  crossroad  multiple  street  connecting  pair  crossroad  guaranteed  every  crossroad  reached  every  crossroad  using  given  street  print  minimum  discontent  leader  everyone  reach  crossroad
669/A __label__math  little  artem  got  stone  birthday  want  give  masha  know  masha  care  fact  receiving  present  rather  value  present  want  give  stone  many  time  possible  masha  remembers  last  present  received  artem  give  stone  twice  row  example  give  stone  stone  stone  give  stone  stone  right  many  time  artem  give  present  masha  input  contains  single  stone  artem  received  birthday  print  maximum  possible  time  artem  give  present  masha
1129/C __label__dp  __label__data  structures  __label__sortings  __label__strings  __label__binary  search  morse  code  letter  english  alphabet  represented  string  length  moreover  morse  code  representation  english  letter  contains  dot  dash  task  represent  dot  dash  string  length  containing  correspond  english  letter  particular  string  length  translates  distinct  english  letter  except  following  string  correspond  english  alphabet  work  string  initially  empty  time  either  dot  dash  appended  time  task  find  report  modification  string  non  empty  sequence  english  letter  represented  substring  morse  code  since  answer  incredibly  tremendous  print  modulo  contains  modification  next  contains  either  representing  dot  representing  dash  specifying  character  appended  print  answer  modification
391/D2 __label__data  structures  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  chief  architect  involved  planning  new  supercollider  ha  identify  plot  land  largest  possible  supercollider  built  supercollider  building  requires  way  orthogonal  collision  particle  traveling  speed  consist  accelerating  chamber  shaped  like  plus  sign  accelerating  chamber  must  length  must  aligned  earth  magnetic  field  parallel  orthogonal  minimize  interference  accelerating  chamber  need  laid  long  flat  stretch  land  keep  cost  control  thus  manao  ha  already  commissioned  topographical  study  ha  identified  possible  maximal  length  tract  land  available  building  accelerating  chamber  either  parallel  orthogonal  earth  magnetic  field  build  largest  possible  supercollider  manao  must  identify  largest  symmetric  plus  shape  candidate  tract  must  find  tract  land  form  axis  aligned  plus  shape  largest  distance  center  plus  tip  shortest  arm  plus  note  collider  need  use  entire  length  tract  identified  see  example  note  input  single  space  separated  north  south  tract  west  east  tract  following  describes  north  south  tract  tract  described  single  space  separated  representing  vertical  segment  similarly  describing  north  south  tract  follow  similar  describing  west  east  tract  tract  described  single  space  separated  representing  horizontal  segment  inclusive  inclusive  pair  horizontal  segment  touch  intersect  pair  vertical  segment  touch  intersect  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  inclusive  subproblem  point  inclusive  print  containing  single  size  largest  supercollider  built  north  south  tract  west  east  tract  size  supercollider  defined  length  accelerating  chamber  word  size  resulting  supercollider  defined  distance  intersection  segment  closest  endpoint  either  segment  pair  north  south  west  east  tract  intersects  possible  build  supercollider  program  report  maximum  size
431/A __label__implementation  quite  recently  smart  student  named  jury  decided  lecture  boring  downloaded  game  called  black  square  super  cool  touchscreen  phone  game  phone  screen  divided  vertical  strip  second  black  square  appears  strip  according  rule  game  jury  must  use  second  touch  corresponding  strip  make  square  away  jury  smart  lazy  counted  waste  exactly  calorie  touching  strip  got  string  describing  process  game  calculate  many  calorie  jury  need  destroy  square  contains  space  separated  second  contains  string  character  string  equal  second  game  square  appears  strip  appears  second  strip  appears  third  strip  appears  fourth  strip  print  single  total  calorie  jury  waste
1219/G __label__implementation  bubble  cup  final  season  farmer  johnny  bubble  must  harvest  bubble  bubble  rectangular  bubblefield  formed  square  parcel  divided  row  column  parcel  row  column  yield  bubble  johnny  bubble  ha  available  special  self  driving  bubble  harvester  manually  positioned  beginning  row  column  automatically  harvest  bubble  row  column  harvester  reach  end  row  column  stop  must  repositioned  harvester  pas  parcel  time  collect  bubble  parcel  johnny  busy  farmer  available  manually  position  harvester  time  per  day  johnny  impatient  want  harvest  many  bubble  possible  day  please  help  johnny  calculate  maximum  bubble  collect  day  contains  bubblefield  size  next  contains  element  yield  parcel  located  row  column  output  contains  maximum  bubble  johnny  harvest  day
1070/J __label__dp  berhattan  capital  berland  street  running  parallel  east  west  direction  horizontally  avenue  running  parallel  south  north  direction  vertically  street  intersects  avenue  forming  crossroad  total  crossroad  berhattan  recently  government  ha  changed  berland  new  government  want  name  avenue  street  hero  revolution  special  committee  prepared  list  name  name  used  new  name  street  avenue  name  used  member  committee  want  name  street  avenue  way  minimizes  inconvenience  resident  believe  street  avenue  name  start  letter  crossroad  inconvenient  hence  letter  name  matter  given  letter  name  find  minimal  possible  inconvenient  crossroad  berhattan  naming  process  contains  several  test  case  process  contains  test  case  solve  test  case  separately  test  case  completely  independent  affect  description  test  case  follows  test  case  start  space  separated  street  avenue  name  committee  list  respectively  second  test  case  contains  string  uppercase  english  letter  letter  string  letter  name  committee  list  guaranteed  sum  test  case  greater  similarly  sum  test  case  greater  sum  test  case  greater  test  case  print  single  separate  minimal  possible  inconvenient  crossroad  berhattan  naming  process
725/C __label__implementation  __label__constructive  algorithms  __label__brute  force  __label__strings  let  define  grid  set  tile  row  column  tile  ha  english  letter  written  letter  unique  might  tile  letter  written  example  grid  abcdefghijklm  nopqrstuvwxyz  say  tile  adjacent  share  side  corner  example  grid  tile  letter  adjacent  tile  letter  tile  adjacent  sequence  tile  called  path  tile  sequence  adjacent  tile  follows  except  last  tile  sequence  course  ha  successor  example  abc  path  kxwihijk  mab  path  adjacent  single  tile  used  path  though  tile  occupy  consecutive  place  path  tile  adjacent  youe  given  string  consists  upper  case  english  letter  english  letter  occurs  least  find  grid  contains  path  whose  tile  viewed  order  path  visit  form  string  solution  print  impossible  without  quote  input  contains  string  consisting  upper  case  english  letter  english  letter  occurs  least  output  consisting  upper  case  english  character  representing  row  grid  multiple  solution  print  solution  print  impossible
490/A __label__implementation  __label__greedy  __label__sortings  school  capital  berland  ha  child  studying  child  school  gifted  good  programming  good  math  others  good  physical  education  hence  child  know  value  child  good  programming  child  good  math  child  good  child  happens  good  exactly  subject  team  scientific  decathlon  olympia  requires  team  student  school  teacher  decided  team  composed  child  good  different  subject  team  must  mathematician  programmer  sportsman  course  child  member  team  maximum  team  school  able  present  olympiad  team  formed  contains  child  school  second  contains  describes  skill  child  output  largest  possible  team
1097/G __label__dp  __label__trees  great  legend  used  troll  hacked  codeforces  erased  bad  troll  society  earned  title  ultimate  greatest  troll  least  something  good  maybe  formal  statement  even  better  given  tree  vertex  numbered  every  non  empty  subset  vertex  let  minimum  edge  smallest  connected  subtree  contains  every  vertex  given  need  compute  sum  non  empty  subset  vertex  x  x  result  might  large  output  modulo  contains  size  tree  exponent  sum  following  contains  index  vertex  connected  corresponding  edge  guaranteed  edge  form  tree  print  single  requested  sum  modulo
65/B __label__implementation  __label__greedy  __label__brute  force  history  magic  perhaps  boring  subject  hogwarts  school  witchcraft  wizardry  harry  potter  usually  asleep  history  lesson  magical  quill  writes  lecture  professor  binns  history  magic  teacher  lecture  boring  monotonous  voice  ha  soporific  effect  even  quill  quill  often  make  mistake  especially  date  end  semester  professor  binns  decided  collect  student  parchment  note  check  ron  weasley  panic  harry  note  error  least  ha  note  whereas  ron  doe  ronald  ha  sleeping  lecture  quill  eaten  rat  scabbers  hermione  granger  refused  give  ron  note  opinion  everyone  learn  therefore  ron  ha  choice  copy  harry  note  due  quill  error  harry  date  absolutely  confused  year  goblin  rebellion  important  event  wizarding  world  follow  order  sometimes  even  date  future  occur  ron  want  change  digit  copy  note  date  chronological  non  decreasing  order  note  date  strictly  later  strictly  make  resulting  sequence  close  possible  dictated  professor  binns  ron  change  digit  date  digit  help  input  contains  represents  date  harry  note  next  actual  date  contains  date  date  digit  print  ron  resulting  date  print  single  must  form  non  decreasing  sequence  differ  corresponding  date  digit  allowed  change  digit  several  possible  solution  print  solution  print  solution  without  quote
1213/B __label__implementation  __label__data  structures  polycarp  analyzes  price  new  berphone  disposal  price  last  day  price  berphone  day  polycarp  considers  price  day  bad  later  day  greater  berphone  wa  sold  lower  price  example  day  bad  price  day  print  day  bad  price  answer  independent  data  set  contains  set  input  data  test  data  set  must  processed  independently  another  input  data  set  consists  contains  day  second  contains  price  day  guaranteed  sum  data  set  test  doe  exceed  print  equal  day  bad  price  input  data  set
160/E __label__data  structures  __label__sortings  __label__binary  search  main  bertown  street  represented  straight  bus  stop  located  stop  numbered  order  follow  road  city  ha  bus  every  day  bus  drive  stop  stop  stop  intermediate  stop  return  night  bus  start  driving  time  drive  fast  finish  driving  time  time  different  bus  bus  infinite  capacity  bertown  ha  citizen  today  person  get  stop  stop  citizen  come  initial  stop  time  person  hand  want  get  destination  point  quickly  possible  hand  definitely  doe  want  change  bus  ride  formally  person  chooses  bus  minimum  time  sji  rij  bij  task  determine  citizen  whether  ride  destination  point  today  find  bus  citizen  ride  contains  bus  people  follow  contains  description  bus  guaranteed  different  follow  contains  bertown  citizen  description  could  coincide  print  space  separated  equal  either  person  get  destination  point  bus  ride  person  bus  numbered  input  order
232/D __label__data  structures  __label__binary  search  john  doe  ha  crooked  fence  consisting  rectangular  plank  lined  left  right  plank  go  left  right  ha  width  height  assume  plank  go  left  right  ha  index  piece  fence  sequence  plank  wood  index  inclusive  plank  index  width  piece  fence  value  piece  fence  called  matching  following  condition  hold  piece  intersect  single  plank  occurs  piece  fence  piece  width  following  condition  hold  hl  l  l  l  john  chose  piece  fence  want  know  many  distinct  matching  piece  piece  fence  distinct  plank  belongs  doe  belong  contains  wood  plank  fence  second  contains  space  separated  height  fence  plank  third  contains  query  next  space  separated  ii  boundary  piece  fence  query  single  print  single  piece  fence  match  given  print  answer  query  order  query  given  input
678/B __label__implementation  girl  taylor  ha  beautiful  calendar  year  calendar  day  given  day  week  monday  tuesday  wednesday  thursday  friday  saturday  sunday  calendar  beautiful  want  know  next  year  calendar  exactly  help  taylor  find  year  note  leap  year  ha  day  year  leap  divisible  divisible  http  wikipedia  org  wiki  leapyear  contains  year  calendar  print  next  year  calendar  note  find  year  calendar
965/C __label__math  people  want  split  candy  candy  given  exactly  thrown  away  people  numbered  arkady  split  candy  arkady  choose  give  candy  next  candy  second  person  next  candy  third  person  cycle  leftover  remainder  divisible  thrown  away  arkady  choose  greater  considered  greedy  choose  small  person  receive  candy  time  considered  slow  splitting  please  find  maximum  candy  arkady  receive  choosing  valid  contains  candy  people  maximum  candy  given  person  maximum  time  person  receive  candy  print  single  maximum  possible  candy  arkady  give
1009/D __label__math  __label__greedy  __label__graphs  __label__constructive  algorithms  __label__brute  force  let  call  undirected  graph  relatively  prime  edge  gcd  greatest  common  divisor  edge  pair  vertex  value  gcd  matter  vertex  numbered  construct  relatively  prime  graph  vertex  edge  connected  contains  neither  self  loop  multiple  edge  exists  valid  graph  given  vertex  edge  output  impossible  multiple  answer  print  contains  vertex  edge  exists  valid  graph  given  vertex  edge  output  impossible
1036/B __label__math  mikhail  walk  cartesian  plane  start  point  move  adjacent  point  example  mikhail  currently  point  following  point  move  mikhail  go  point  point  move  x  move  called  diagonal  move  mikhail  ha  query  query  mikhail  target  point  point  exactly  move  possible  movement  want  choose  maximum  diagonal  move  task  find  maximum  diagonal  move  find  impossible  point  point  move  note  mikhail  visit  point  time  even  destination  point  input  contains  query  follow  contains  coordinate  destination  point  query  coordinate  destination  point  query  move  query  correspondingly  print  equal  mikhail  point  point  exactly  move  described  otherwise  equal  maximum  diagonal  move  possible  movement
901/C __label__data  structures  __label__dfs  __label__graphs  __label__binary  search  given  undirected  graph  vertex  edge  simple  cycle  even  length  word  cycle  even  length  pas  edge  let  enumerate  vertex  answer  query  query  described  segment  vertex  count  subsegments  l  delete  vertex  except  segment  vertex  including  edge  resulting  graph  bipartite  contains  vertex  edge  graph  next  describe  edge  graph  contains  aii  denoting  edge  vertex  guaranteed  graph  doe  edge  simple  cycle  even  length  next  contains  single  query  next  query  contains  ii  query  parameter  print  new  subsegments  lii  graph  includes  vertex  segment  edge  bipartite
1236/D __label__implementation  __label__greedy  __label__data  structures  __label__brute  force  alice  got  new  doll  day  even  walk  alice  ha  built  maze  doll  want  test  maze  grid  row  column  obstacle  cell  mean  cell  intersection  row  column  doll  clumsy  way  walk  straight  turn  right  cell  including  start  cell  get  cell  obstacle  get  maze  formally  exist  direction  doll  look  doll  look  direction  along  row  cell  last  moving  looking  direction  doll  move  cell  cell  doll  look  direction  along  column  cell  last  moving  looking  direction  doll  move  cell  cell  doll  look  direction  along  row  last  cell  moving  looking  direction  doll  move  cell  cell  doll  look  direction  along  column  last  cell  moving  looking  direction  doll  move  cell  cell  standing  cell  doll  move  cell  direction  look  turn  right  turning  right  doll  switch  direction  following  rule  standing  cell  doll  make  turn  right  alice  controlling  doll  move  put  doll  cell  upper  left  cell  maze  initially  doll  look  direction  along  row  cell  last  want  let  doll  walk  cell  without  obstacle  exactly  end  place  achieved  contains  separated  space  size  maze  obstacle  next  describes  obstacle  contains  separated  space  describes  position  obstacle  guaranteed  obstacle  cell  obstacle  cell  print  yes  without  quote  doll  walk  cell  without  obstacle  exactly  rule  described  statement
551/A __label__implementation  __label__sortings  __label__brute  force  professor  gukiz  like  programming  contest  especially  like  rate  student  contest  prepares  ha  decided  prepare  new  contest  total  student  attend  start  every  ha  positive  rating  student  indexed  let  denote  rating  student  contest  end  every  student  end  positive  position  gukiz  expects  student  take  place  according  rating  think  student  take  place  equal  particular  student  ha  rating  strictly  lower  student  get  strictly  better  position  student  equal  rating  share  position  gukiz  would  like  reconstruct  result  following  expectation  help  determine  position  end  contest  student  everything  go  expected  contains  gukiz  student  second  contains  rating  student  single  print  position  end  contest  student  order  appear  input
870/B __label__greedy  given  array  consisting  split  array  exactly  non  empty  subsegments  compute  minimum  subsegment  take  maximum  obtained  minimum  maximum  possible  get  definition  subsegment  array  splitting  given  note  contains  size  array  subsegments  split  array  second  contains  n  print  single  maximum  possible  get  split  array  non  empty  subsegments  take  maximum  minimum  subsegments
1023/A __label__implementation  __label__brute  force  __label__strings  given  string  string  consists  lowercase  latin  letter  wildcard  character  string  consists  lowercase  latin  letter  length  string  equal  length  string  equal  wildcard  character  string  replaced  arbitrary  sequence  possibly  empty  lowercase  latin  letter  character  replaced  anything  possible  replace  wildcard  character  obtain  string  string  match  pattern  example  aba  aba  following  string  match  abaaba  abacaba  abazzzaba  following  string  match  ababa  abcaaba  codeforces  aba  aba  abaaba  given  string  match  given  string  print  yes  otherwise  print  contains  length  string  length  string  respectively  second  contains  string  length  consists  lowercase  latin  letter  wildcard  character  third  contains  string  length  consists  lowercase  latin  letter  print  yes  without  quote  obtain  string  string  otherwise  print  without  quote
439/C __label__implementation  __label__constructive  algorithms  __label__brute  force  __label__number  theory  devu  small  kid  like  play  lot  like  play  array  playing  came  interesting  question  could  solve  please  solve  given  array  consisting  distinct  possible  partition  whole  array  disjoint  non  empty  part  part  even  sum  must  even  sum  remaining  odd  sum  note  part  need  continuous  possible  partition  array  give  possible  way  valid  partitioning  space  separated  next  space  separated  distinct  representing  content  array  print  yes  without  quote  possible  partition  array  required  way  otherwise  print  without  quote
1221/B __label__greedy  __label__constructive  algorithms  given  chess  board  row  column  initially  cell  board  empty  put  white  black  knight  cell  board  knight  chess  piece  attack  piece  cell  cell  following  condition  met  example  cell  knight  attack  following  picture  knight  currently  blue  cell  attack  red  cell  duel  knight  pair  knight  different  color  knight  attack  put  knight  white  black  cell  way  duel  maximum  possible  contains  row  column  board  print  character  character  cell  contains  white  knight  contains  black  knight  duel  maximum  possible  multiple  optimal  answer  print
1090/A __label__greedy  conglomerate  consists  company  make  managing  easier  owner  decided  merge  company  law  possible  merge  company  owner  plan  select  company  merge  continue  company  left  anti  monopoly  service  forbids  merge  company  suspect  unfriendly  absorption  criterion  use  difference  maximum  salary  company  merging  allowed  maximum  salary  equal  fulfill  anti  monopoly  requirement  owner  change  salary  company  merging  labor  union  insists  condition  allowed  increase  salary  moreover  employee  company  must  get  increase  sure  enough  owner  want  minimize  total  increase  salary  company  help  find  minimal  possible  increase  allow  merge  company  contains  single  company  conglomerate  next  describes  company  company  description  start  employee  follow  salary  employee  salary  positive  exceed  total  employee  company  doe  exceed  output  single  minimal  total  increase  employee  allows  merge  company
639/E __label__math  __label__greedy  __label__sortings  limak  big  polar  bear  prepared  problem  algorithmic  contest  problem  ha  initial  score  tester  said  take  minute  solve  problem  problem  necessarily  sorted  difficulty  maybe  harder  problem  smaller  initial  score  late  change  limak  ha  already  announced  initial  score  problem  though  still  possible  adjust  speed  losing  point  denoted  statement  let  denote  total  minute  needed  solve  problem  contest  last  exactly  minute  enough  solve  problem  point  given  solving  problem  decrease  linearly  solving  problem  minute  give  exactly  point  real  constant  limak  must  choose  let  assume  fixed  contest  participant  chooses  order  solves  problem  possible  order  give  total  point  necessarily  say  order  optimal  give  maximum  point  word  total  point  given  order  greater  equal  point  given  order  obvious  least  optimal  order  optimal  order  limak  assumes  every  participant  properly  estimate  beginning  choose  optimal  order  assumes  tester  correctly  predicted  time  needed  solve  problem  distinct  problem  limak  happy  see  participant  strictly  point  problem  problem  call  situation  paradox  hard  prove  paradox  situation  worse  bigger  maximum  real  value  remember  paradox  possible  paradox  optimal  order  solving  problem  proved  answer  maximum  described  always  exists  contains  problem  second  contains  initial  score  third  contains  minute  needed  solve  problem  print  real  value  single  maximum  value  optimal  order  paradox  answer  considered  correct  absolute  relative  error  doe  exceed
1156/A __label__geometry  math  faculty  berland  state  university  ha  suffered  sudden  drop  math  skill  enrolling  student  year  highest  grade  entrance  math  test  wa  thus  decision  wa  made  make  test  easier  future  student  asked  single  question  given  sequence  valid  represents  type  figure  circle  isosceles  triangle  length  height  equal  length  base  square  figure  given  sequence  placed  somewhere  cartesian  plane  way  figure  inscribed  triangle  base  parallel  triangle  oriented  way  vertex  opposite  base  top  square  side  parallel  ax  figure  ha  maximum  possible  length  side  triangle  square  maximum  radius  circle  note  construction  unique  fixed  position  size  figure  task  calculate  distinct  point  necessarily  coordinate  figure  touch  trick  sometimes  infinite  make  task  difficult  pas  math  test  enroll  berland  state  university  contains  single  figure  second  contains  type  figure  either  word  infinite  distinct  point  figure  touch  infinite  finite  otherwise
643/B __label__graphs  __label__constructive  algorithms  bearland  ha  city  numbered  city  connected  via  bidirectional  road  road  connects  distinct  city  road  connect  pair  city  bear  limak  wa  city  wanted  city  wa  direct  connection  decided  take  long  walk  visiting  city  exactly  formally  road  exists  sequence  path  distinct  city  road  day  similar  thing  happened  limak  wanted  travel  city  city  road  exists  sequence  distinct  city  road  limak  think  road  bearland  wonder  whether  remembers  everything  correctly  given  distinct  city  find  possible  path  satisfy  given  condition  find  solution  print  impossible  input  contains  n  city  maximum  allowed  road  respectively  second  contains  distinct  print  impossible  satisfy  given  condition  otherwise  print  path  description  distinct  second  distinct
761/E __label__greedy  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  dasha  decided  rest  solving  problem  ready  start  favourite  activity  origami  remembered  puzzle  could  solve  tree  non  oriented  connected  graph  without  cycle  particular  always  edge  tree  vertex  puzzle  position  vertex  point  cartesian  plane  integral  coordinate  segment  vertex  connected  edge  parallel  coordinate  ax  intersection  segment  allowed  end  distinct  vertex  placed  different  point  help  dasha  find  suitable  way  position  tree  vertex  plane  guaranteed  possible  position  tree  vertex  plane  without  violating  condition  given  using  point  integral  coordinate  exceed  absolute  value  contains  single  vertex  tree  next  contains  mean  edge  tree  connects  vertex  guaranteed  described  graph  tree  puzzle  solution  print
1154/B __label__math  given  sequence  consisting  choose  non  negative  add  perform  subtract  perform  leave  value  unchanged  possible  operation  value  becomes  negative  goal  choose  minimum  non  negative  perform  change  way  equal  print  required  impossible  choose  value  print  example  array  value  minimum  possible  obtain  array  add  subtract  array  value  minimum  possible  add  subtract  obtain  array  input  contains  element  second  input  contains  sequence  print  minimum  non  negative  value  add  value  subtract  value  leave  without  change  obtained  value  become  equal
607/D __label__data  structures  __label__trees  genos  saitama  went  shopping  christmas  tree  different  type  tree  caught  attention  exalted  power  tree  power  tree  start  single  root  vertex  indexed  power  tree  grows  magical  phenomenon  known  update  update  single  vertex  added  tree  child  vertex  every  vertex  tree  root  added  vertex  ha  value  associated  power  vertex  defined  strength  multiset  composed  value  associated  vertex  power  direct  child  strength  multiset  defined  sum  element  multiset  multiplied  element  word  multiset  saitama  know  update  performed  tree  decided  test  genos  asking  query  tree  growth  cycle  update  form  add  new  vertex  value  child  vertex  query  form  asks  power  vertex  please  help  genos  respond  query  modulo  input  contains  space  separated  value  vertex  total  update  query  respectively  next  update  query  ha  following  form  describes  update  index  added  vertex  equal  smallest  positive  used  index  tree  guaranteed  already  existing  vertex  describes  query  guaranteed  exist  tree  guaranteed  input  least  query  query  print  power  given  vertex  modulo
1183/C __label__math  __label__binary  search  vova  playing  computer  game  total  turn  game  vova  really  want  play  initial  charge  laptop  battery  charge  start  game  turn  vova  choose  current  charge  laptop  battery  strictly  greater  vova  play  charge  laptop  battery  decrease  current  charge  laptop  battery  strictly  greater  vova  play  charge  laptop  charge  laptop  battery  decrease  current  charge  laptop  battery  le  equal  time  vova  anything  loses  game  regardless  vova  turn  charge  laptop  battery  always  decrease  vova  want  complete  game  vova  complete  game  turn  charge  laptop  battery  strictly  greater  vova  ha  play  exactly  turn  possible  way  complete  game  vova  want  choose  turn  play  type  turn  maximum  possible  possible  vova  complete  game  task  find  maximum  possible  turn  vova  play  make  type  turn  report  vova  complete  game  answer  independent  query  input  contains  query  query  presented  single  query  contains  initial  charge  vova  laptop  battery  turn  game  value  correspondingly  query  print  vova  complete  game  maximum  turn  vova  play  make  type  turn  otherwise
708/C __label__dp  __label__greedy  __label__data  structures  __label__dfs  __label__graphs  __label__trees  tree  connected  acyclic  graph  suppose  given  tree  consisting  vertex  vertex  tree  called  centroid  size  connected  component  appears  vertex  removed  tree  exceed  given  tree  size  perform  edge  replacement  edge  replacement  operation  removing  edge  tree  without  deleting  incident  vertex  inserting  new  edge  without  adding  new  vertex  way  graph  remains  tree  vertex  determine  possible  make  centroid  performing  edge  replacement  input  contains  vertex  tree  next  contains  pair  vertex  index  endpoint  corresponding  edge  print  equal  vertex  made  centroid  replacing  edge  equal  otherwise
598/B __label__implementation  __label__strings  given  string  process  query  query  described  based  index  mean  cyclically  shift  substring  time  query  processed  another  order  given  operation  cyclic  shift  rotation  equivalent  moving  last  character  position  character  shifting  character  position  right  example  string  abacaba  query  answer  abbacaa  would  process  query  would  get  string  baabcaa  input  contains  string  initial  state  stand  length  contains  lowercase  english  letter  second  contains  single  query  next  contains  ii  description  query  print  resulting  string  processing  query
287/A __label__implementation  __label__brute  force  city  ultima  thule  job  applicant  often  offered  test  test  follows  person  get  piece  squared  paper  square  painted  square  cell  painted  black  others  painted  white  task  repaint  cell  color  picture  ha  square  completely  consisting  cell  color  initial  picture  already  ha  square  person  say  test  completed  task  write  program  determines  whether  possible  pas  test  pas  test  either  repainting  cell  action  result  square  consisting  cell  color  character  character  equal  cell  row  column  square  painted  white  cell  black  print  yes  without  quote  test  passed  without  quote  otherwise
887/A __label__implementation  top  model  izabella  participates  competition  want  impress  judge  show  mathematical  skill  problem  following  given  string  consisting  tell  possible  remove  digit  way  remaining  representation  positive  divisible  binary  numerical  system  given  non  empty  binary  string  length  print  yes  without  quote  possible  remove  digit  required  way  otherwise
1070/A __label__dp  __label__graphs  __label__number  theory  given  positive  find  minimal  positive  divisible  ha  sum  digit  equal  contains  positive  separated  space  print  required  exist
883/D __label__dp  __label__binary  search  game  field  represented  square  cell  cell  packman  cell  asterisk  rest  cell  empty  packman  eat  asterisk  game  start  choose  movement  direction  left  right  packman  game  begin  packman  simultaneously  start  moving  according  direction  packman  change  given  direction  packman  enters  cell  containing  asterisk  packman  immediately  eats  asterisk  packman  leaf  cell  becomes  empty  packman  move  speed  cell  per  second  packman  enters  border  cell  packman  stop  packman  interfere  movement  packman  cell  packman  moving  direction  task  assign  direction  packman  eat  maximal  asterisk  multiple  way  assign  direction  eat  maximal  asterisk  choose  way  minimizes  time  contains  cell  game  field  second  contains  character  character  cell  empty  character  cell  contains  asterisk  character  cell  contains  packman  field  contains  least  asterisk  least  packman  print  maximal  asterisk  packman  eat  minimal  time
733/D __label__data  structures  kostya  genial  sculptor  ha  idea  carve  marble  sculpture  shape  sphere  kostya  ha  friend  zahar  work  career  zahar  know  kostya  idea  want  present  rectangular  parallelepiped  marble  carve  sphere  zahar  ha  stone  rectangular  parallelepiped  edge  size  take  stone  present  kostya  zahar  take  stone  glue  together  face  order  get  new  piece  rectangular  parallelepiped  marble  thus  possible  glue  pair  stone  together  face  glued  together  match  rectangle  gluing  allowed  rotate  flip  stone  way  help  zahar  choose  present  kostya  carve  sphere  maximum  possible  volume  present  zahar  contains  follow  length  edge  stone  note  stone  exactly  size  still  considered  different  stone  print  stone  zahar  ha  chosen  second  print  distinct  stone  zahar  need  choose  consider  stone  numbered  order  given  input  data
756/D __label__dp  __label__brute  force  julia  conducting  experiment  lab  placed  several  luminescent  bacterial  colony  horizontal  testtube  different  type  bacteria  distinguished  color  light  emit  julia  mark  type  bacteria  small  latin  letter  testtube  divided  consecutive  region  region  occupied  single  colony  certain  bacteria  type  given  moment  hence  population  testtube  moment  described  string  latin  character  sometimes  colony  decide  conquer  another  colony  adjacent  region  happens  attacked  colony  immediately  eliminated  replaced  colony  type  attacking  colony  attacking  colony  keep  type  note  colony  attack  neighbour  boundary  testtube  moment  attack  take  place  example  consider  testtube  population  babb  option  attack  happen  next  colony  attack  second  colony  resulting  population  bbbb  result  aabb  result  baab  result  bbbb  note  result  option  population  doe  change  pattern  attack  rather  unpredictable  julia  wondering  many  different  configuration  bacteria  testtube  obtain  sequence  attack  take  place  possible  attack  happen  since  large  find  modulo  contains  region  testtube  second  contains  small  latin  letter  describe  initial  population  testtube  print  answer  problem  modulo
1175/G __label__dp  __label__data  structures  __label__geometry  given  array  need  split  subsegments  every  element  included  exactly  subsegment  weight  subsegment  equal  max  l  weight  partition  total  weight  segment  find  partition  minimal  weight  contains  length  array  subsegments  partition  second  contains  array  print  single  minimal  weight  possible  partition
351/D __label__data  structures  cosider  sequence  consisting  jeff  perform  following  operation  sequence  take  k  remove  element  sequence  remaining  element  reindexed  permute  order  remaining  element  sequence  beauty  sequence  minimum  operation  needed  delete  element  sequence  jeff  written  sequence  want  ask  question  question  described  answer  question  beauty  sequence  bli  bli  bri  given  sequence  question  help  jeff  answer  question  contains  next  contains  third  contains  question  next  pair  contains  pair  ii  description  question  print  answer  jeff  query  print  answer  according  order  question  input
1217/D __label__dfs  __label__graphs  __label__constructive  algorithms  given  directed  graph  vertex  directed  edge  without  self  loop  multiple  edge  let  denote  coloring  digraph  following  color  edge  color  coloring  good  cycle  formed  edge  color  find  good  coloring  given  digraph  minimum  possible  contains  vertex  edge  digraph  respectively  next  description  edge  per  edge  pair  directed  edge  graph  guaranteed  ordered  pair  appears  list  edge  print  single  used  color  good  coloring  given  graph
71/A __label__strings  sometimes  word  like  localization  internationalization  long  writing  many  time  text  quite  tiresome  let  consider  word  long  length  strictly  character  long  word  replaced  special  abbreviation  abbreviation  made  like  write  last  letter  word  write  letter  last  letter  decimal  system  leading  thus  localization  spelt  l  n  internationalization  spelt  n  suggested  automatize  process  changing  word  abbreviation  long  word  replaced  abbreviation  word  long  undergo  change  contains  following  contains  word  word  consist  lowercase  latin  letter  posse  length  character  print  result  replacing  word  input  data
1225/A __label__math  kolya  absent  minded  today  math  teacher  asked  solve  simple  problem  equation  positive  kolya  forgot  doe  remember  leftmost  digit  wa  leftmost  digit  wa  reconstruct  equation  satisfies  property  possible  kolya  misremembers  digit  suitable  equation  case  report  contains  space  separated  digit  equation  positive  digit  digit  print  single
1118/D2 __label__greedy  __label__binary  search  difference  easy  hard  version  constraint  polycarp  ha  write  coursework  coursework  consists  page  polycarp  ha  cup  coffee  coffee  cup  polycarp  ha  caffeine  polycarp  drink  cup  coffee  drink  cup  order  polycarp  drink  cup  instantly  completely  split  cup  several  day  surely  coursework  written  single  day  perfect  world  berland  least  let  consider  day  polycarp  work  consider  polycarp  drink  cup  coffee  day  caffeine  dosage  cup  polycarp  drink  day  cup  drink  give  energy  write  page  coursework  second  cup  give  energy  write  max  page  third  cup  give  energy  write  max  page  cup  give  energy  write  max  page  polycarp  drink  coffee  day  write  coursework  day  polycarp  ha  finish  coursework  soon  possible  spend  minimum  day  task  find  day  say  impossible  input  contains  cup  coffee  page  coursework  second  input  contains  caffeine  dosage  coffee  cup  impossible  write  coursework  print  otherwise  print  minimum  day  polycarp  need
1190/E __label__greedy  __label__binary  search  tokitsukaze  friend  trying  infiltrate  secret  base  built  claris  claris  ha  aware  set  bomb  going  explode  minute  although  try  escape  place  find  door  ha  locked  moment  cjb  father  tokitsukaze  come  magical  power  given  ereshkigal  goddess  underworld  cjb  able  set  barrier  protect  explosion  formally  let  build  cartesian  coordinate  system  plane  assume  bomb  person  tokitsukaze  crew  every  barrier  considered  infinity  length  intersect  every  person  tokitsukaze  crew  must  least  barrier  separating  bomb  mean  bomb  intersects  least  barrier  definition  exists  person  standing  position  bomb  satisfy  requirement  although  cjb  powerful  still  want  barrier  far  bomb  possible  order  conserve  energy  please  help  calculate  maximum  distance  bomb  closest  barrier  tokitsukaze  crew  safe  contains  indicating  people  barrier  respectively  next  contains  indicating  person  location  note  coordinate  even  print  single  real  maximum  distance  meeting  requirement  answer  considered  correct  absolute  relative  error  doe  exceed
1073/C __label__binary  search  vasya  ha  got  robot  situated  infinite  cartesian  plane  initially  cell  robot  perform  following  kind  operation  move  move  move  move  vasya  ha  got  sequence  operation  vasya  want  modify  sequence  performing  robot  end  vasya  want  change  sequence  length  changed  subsegment  minimum  possible  length  calculated  follows  maxidinid  maxid  maximum  index  changed  operation  minid  minimum  index  changed  operation  example  vasya  change  rrrrrrr  rlrrlrl  operation  index  changed  length  changed  subsegment  another  example  vasya  change  dddd  ddrd  length  changed  subsegment  change  length  changed  subsegment  changing  operation  mean  replacing  operation  possibly  vasya  insert  new  operation  sequence  remove  help  vasya  tell  minimum  length  subsegment  need  change  robot  tell  impossible  contains  operation  second  contains  sequence  operation  string  character  character  either  third  contains  coordinate  cell  robot  end  path  print  minimum  possible  length  subsegment  changed  resulting  sequence  operation  move  robot  change  impossible  print
899/E __label__implementation  __label__data  structures  vasya  ha  array  length  vasya  performs  following  operation  array  step  find  longest  segment  consecutive  equal  leftmost  several  segment  remove  example  vasya  array  operation  becomes  compute  operation  vasya  make  array  becomes  empty  vasya  remove  element  contains  single  length  array  second  contains  sequence  vasya  array  print  operation  vasya  make  remove  element  array
865/F __label__math  __label__brute  force  game  egg  roulette  played  player  initially  raw  egg  cooked  egg  placed  randomly  carton  shell  left  way  distinguish  raw  egg  cooked  egg  time  player  select  egg  smash  egg  forehead  egg  wa  cooked  much  happens  egg  wa  raw  make  quite  mess  continues  player  ha  broken  raw  egg  point  player  declared  loser  player  win  order  player  take  turn  described  string  character  character  tell  player  choose  egg  traditionally  player  take  turn  going  follow  ordering  ababab  fair  though  second  player  win  often  like  find  better  ordering  player  take  turn  let  define  unfairness  ordering  absolute  difference  player  win  probability  second  player  win  probability  interested  ordering  minimize  unfairness  consider  ordering  valid  contains  given  string  length  containing  character  ordering  said  match  differs  position  contains  valid  ordering  minimize  unfairness  many  match  input  second  input  string  length  consisting  character  print  valid  ordering  minimize  unfairness  match
1036/G __label__dfs  __label__brute  force  given  acyclic  directed  graph  consisting  vertex  edge  graph  contains  multiple  edge  self  loop  vertex  called  source  ha  incoming  edge  vertex  called  sink  ha  outgoing  edge  definition  imply  vertex  source  sink  source  given  graph  equal  sink  exceed  following  algorithm  applied  graph  graph  ha  source  sink  quit  choose  arbitrary  source  arbitrary  sink  add  edge  graph  step  operation  pop  source  sink  note  vertex  self  loop  added  end  check  graph  becomes  strongly  connected  vertex  reachable  vertex  task  check  graph  becomes  strongly  connected  matter  choice  source  sink  second  step  algorithm  contains  vertex  edge  graph  respectively  next  contains  description  edge  original  graph  guaranteed  source  sink  graph  exceed  guaranteed  given  graph  contains  multiple  edge  guaranteed  graph  contains  cycle  print  yes  graph  becomes  strongly  connected  matter  choice  source  sink  second  step  algorithm  otherwise  print
1033/C __label__dp  __label__brute  force  long  day  alice  bob  decided  play  little  game  game  board  consists  cell  straight  numbered  cell  contains  furthermore  cell  token  placed  cell  take  alternating  turn  moving  token  around  board  alice  moving  current  player  move  cell  cell  following  condition  satisfied  new  cell  must  strictly  larger  old  cell  distance  token  travel  turn  must  multiple  old  cellmod  whoever  unable  make  move  loses  possible  starting  position  determine  win  play  optimally  shown  game  always  finite  always  winning  strategy  player  contains  single  second  contains  furthermore  pair  index  print  string  character  character  represents  outcome  game  token  initially  placed  cell  alice  win  ha  equal  otherwise  ha  equal
91/E __label__data  structures  __label__geometry  today  north  pole  host  olympiad  sport  called  toy  igloo  skyscraper  building  walrus  taking  part  contest  walrus  given  unique  start  walrus  begin  build  igloo  skyscraper  initially  moment  time  equal  height  skyscraper  walrus  equal  minute  walrus  finish  building  floor  journalist  reporting  spot  olympiad  taking  place  make  query  organizer  query  characterized  group  organizer  respond  query  lie  interval  inclusive  lii  skyscraper  walrus  posse  maximum  height  skyscraper  walrus  interval  moment  time  journalist  query  print  walrus  meet  given  criterion  several  possible  answer  print  contains  next  pair  follow  query  following  format  per  ii  input  journalist  query  print  walrus  meet  criterion  given  statement  print  per
988/E __label__greedy  __label__brute  force  given  without  leading  move  swap  adjacent  digit  given  way  resulting  leading  word  move  leading  minimum  move  make  obtain  divisible  print  impossible  obtain  divisible  contains  guaranteed  left  digit  impossible  obtain  divisible  print  otherwise  print  minimum  move  required  obtain
527/E __label__dfs  __label__graphs  project  data  center  big  software  company  consists  computer  connected  cable  simply  speaking  computer  considered  box  multiple  cable  going  box  important  information  transmitted  along  cable  direction  data  center  plan  approved  determined  direction  information  along  cable  cable  put  computer  connected  perhaps  computer  person  charge  cleaning  data  center  claudia  ivanova  janitor  love  tie  cable  bundle  using  cable  tie  reason  group  cable  sticking  computer  group  possible  get  furious  attack  computer  water  bucket  noted  due  specific  physical  characteristic  important  information  strictly  forbidden  connect  bundle  cable  information  flow  different  direction  management  data  center  want  determine  send  information  along  cable  claudia  ivanova  able  group  cable  coming  computer  group  observing  condition  since  possible  existing  connection  plan  allowed  add  minimum  possible  cable  scheme  need  determine  direction  information  flow  cable  yes  sometimes  data  center  designed  based  janitor  convenience  contains  computer  already  present  cable  respectively  next  contains  index  computer  connected  cable  data  center  often  complex  structure  pair  computer  pair  cable  cable  connect  computer  print  single  p  minimum  cable  final  scheme
750/G __label__dp  __label__brute  force  new  year  tree  infinite  perfect  binary  tree  rooted  node  node  ha  child  node  indexed  polar  bear  love  decorating  new  year  tree  limak  exception  little  bear  wa  told  decorate  simple  path  pair  node  though  wa  given  opportunity  pick  pair  want  know  unordered  pair  index  u  sum  index  node  along  simple  path  including  endpoint  equal  help  count  value  input  contains  single  print  denoting  unordered  pair  node  index  defining  simple  path  sum  index  vertex  equal
1131/A __label__math  order  make  sea  battle  game  interesting  boris  decided  add  new  ship  type  ship  consists  rectangle  rectangle  ha  width  height  second  rectangle  ha  width  height  game  exactly  ship  used  made  rectangle  ship  field  rectangle  placed  field  following  way  second  rectangle  top  rectangle  aligned  left  left  side  rectangle  adjacent  without  gap  see  picture  note  rectangle  colored  red  second  rectangle  colored  blue  formally  let  introduce  coordinate  system  leftmost  bottom  cell  rectangle  ha  coordinate  rightmost  top  cell  rectangle  ha  coordinate  leftmost  bottom  cell  second  rectangle  ha  coordinate  rightmost  top  cell  second  rectangle  ha  coordinate  ship  completely  destroyed  cell  neighboring  side  corner  ship  marked  course  cell  belong  ship  marked  picture  note  cell  colored  green  find  many  cell  marked  ship  destroyed  field  game  infinite  direction  width  rectangle  height  rectangle  width  second  rectangle  height  second  rectangle  rotate  rectangle  print  exactly  cell  marked  ship  destroyed
1210/C __label__math  __label__trees  __label__number  theory  kamil  like  streaming  competitive  programming  video  metube  channel  ha  recently  reached  million  subscriber  order  celebrate  posted  video  interesting  problem  solve  help  given  tree  connected  undirected  graph  consisting  vertex  connected  edge  tree  rooted  vertex  vertex  called  ancestor  lie  shortest  path  root  particular  vertex  ancestor  vertex  assigned  beauty  non  negative  larger  allows  define  beauty  path  let  ancestor  define  beauty  greatest  common  divisor  beauty  vertex  shortest  path  formally  vertex  shortest  path  gcd  gcd  gcd  denotes  greatest  common  divisor  set  particular  gcd  task  find  sum  ancestor  ancestor  result  might  large  please  output  modulo  note  gcd  gcd  gcd  particular  gcd  gcd  contains  single  vertex  tree  following  contains  value  denotes  beauty  vertex  following  describe  edge  tree  contains  vertex  connected  single  edge  output  sum  beauty  path  ancestor  sum  printed  modulo
523/C __label__greedy  martian  boy  named  ha  got  name  quite  recently  parent  coming  age  birthday  enjoys  looking  name  everywhere  see  obtain  name  string  removing  letter  remaining  letter  remain  order  get  happy  example  aba  string  baobab  aabbaa  helloabahello  make  happy  string  aab  baaa  helloabhello  rather  happy  love  twice  much  happy  twice  got  string  present  wanted  cut  part  left  part  right  part  part  made  happy  help  determine  distinct  way  cut  given  string  part  required  manner  contains  string  consisting  lowercase  english  letter  length  string  letter  second  contains  string  consists  lowercase  english  letter  length  string  letter  print  sought  way  cut  string  part  made  happy
761/C __label__dp  __label__implementation  __label__brute  force  overcoming  stair  dasha  came  class  needed  write  password  begin  class  password  string  length  satisfies  following  requirement  least  digit  string  least  lowercase  small  letter  latin  alphabet  string  least  listed  symbol  string  considering  programming  class  easy  write  password  character  password  fixed  string  length  string  pointer  character  character  displayed  screen  pointed  character  string  initially  pointer  character  index  corresponding  string  position  numbered  starting  operation  dasha  move  pointer  string  character  left  right  string  cyclic  mean  move  pointer  character  index  left  move  character  index  move  right  position  move  position  need  determine  minimum  operation  necessary  make  string  displayed  screen  valid  password  contains  length  password  length  string  assigned  password  symbol  next  contains  string  assigned  symbol  password  string  length  consists  digit  lowercase  english  letter  character  input  data  always  get  valid  password  print  minimum  operation  necessary  make  string  displayed  screen  valid  password
464/B __label__brute  force  __label__geometry  peter  cube  non  length  side  put  cube  dimensional  space  way  vertex  lay  point  possible  cube  side  parallel  coordinate  ax  took  piece  paper  wrote  containing  coordinate  cube  vertex  single  contains  coordinate  single  vertex  vertex  written  exactly  put  paper  table  left  peter  wa  away  little  brother  nick  decided  play  paper  operation  nick  could  swap  inside  single  nick  swap  distinct  nick  could  performed  operation  peter  returned  found  nick  mischief  started  recollecting  original  coordinate  help  peter  restore  original  position  point  else  state  impossible  initially  recorded  incorrectly  contains  space  separated  written  piece  paper  nick  mischief  exceed  absolute  value  way  restore  cube  print  yes  next  print  restored  coordinate  point  output  must  permutation  input  represent  vertex  cube  non  length  side  multiple  possible  way  print
389/A __label__math  __label__greedy  fox  ciel  playing  game  ciel  ha  positive  following  operation  many  time  needed  select  different  index  hold  apply  assignment  goal  make  sum  small  possible  please  help  ciel  find  minimal  sum  contains  second  contains  output  single  required  minimal  sum
746/D __label__math  __label__greedy  __label__constructive  algorithms  innokentiy  like  tea  much  today  want  drink  exactly  cup  tea  would  happy  drink  exactly  tea  bag  green  black  innokentiy  like  drink  tea  green  black  time  row  task  determine  order  brewing  tea  bag  innokentiy  able  drink  cup  tea  without  drinking  tea  time  row  inform  impossible  tea  bag  ha  used  exactly  contains  cup  tea  innokentiy  want  drink  maximum  cup  tea  drink  row  tea  bag  green  black  tea  guaranteed  impossible  drink  cup  tea  print  without  quote
1179/B __label__constructive  algorithms  morning  tolik  ha  understood  wa  sleeping  invented  incredible  problem  perfect  fit  codeforces  discus  task  project  born  english  well  decides  test  problem  asks  uncle  long  time  thinking  tolik  uncle  idea  solve  want  tell  tolik  inability  solve  found  anything  better  asking  solve  task  task  given  cell  field  consisting  row  column  point  coordinate  mean  situated  row  column  considering  numeration  initially  stand  cell  every  move  jump  cell  stand  non  vector  thus  stand  cell  obviously  leave  field  important  condition  allowed  use  vector  twice  task  visit  cell  field  exactly  initial  cell  considered  already  visited  tolik  uncle  respectful  person  help  solve  task  contains  positive  row  column  field  respectively  print  without  quote  impossible  visit  every  cell  exactly
354/C __label__dp  __label__brute  force  __label__number  theory  vasya  got  birthday  coming  mom  decided  give  array  positive  length  vasya  think  array  beauty  greatest  common  divisor  element  mom  course  want  give  beautiful  array  possible  largest  possible  beauty  unfortunately  shop  ha  array  left  plus  side  seller  said  could  decrease  array  seller  obtain  array  array  following  condition  hold  help  mom  find  maximum  possible  beauty  array  give  vasya  seller  obtain  contains  second  contains  array  single  print  single  maximum  possible  beauty  resulting  array
976/F __label__graphs  given  bipartite  graph  set  vertex  part  set  vertex  second  part  set  edge  might  multiple  edge  let  call  subset  edge  covering  iff  graph  ha  vertex  incident  least  edge  minimal  covering  covering  size  subset  minimal  possible  task  find  minimal  covering  mindegree  minimal  degree  vertex  graph  contains  vertex  part  vertex  second  part  edge  respectively  next  description  edge  index  vertex  part  index  vertex  second  part  print  subset  edge  minimal  covering  separate
870/D __label__brute  force  interactive  problem  jury  ha  hidden  permutation  know  length  remind  permutation  distinct  let  inverse  permutation  pbi  thing  ask  xor  element  printing  index  necessarily  distinct  result  query  index  get  value  denotes  xor  operation  find  description  xor  operation  note  note  permutation  remain  indistinguishable  hidden  even  make  possible  query  compute  permutation  indistinguishable  hidden  print  permutation  making  query  hidden  permutation  doe  depend  query  contains  single  length  hidden  permutation  read  program  ready  print  answer  print
917/A __label__math  __label__dp  __label__implementation  __label__greedy  stuck  upside  still  communicate  mom  joyce  christmas  light  turn  mind  directly  tell  mom  monster  took  upside  know  relocate  thus  came  puzzle  tell  mom  coordinate  coordinate  answer  following  problem  string  consisting  parenthesis  called  bracket  sequence  bracket  sequence  called  correct  bracket  sequence  formally  empty  string  correct  bracket  sequence  correct  bracket  sequence  correct  bracket  sequence  correct  bracket  sequence  concatenation  correct  bracket  sequence  string  consisting  parenthesis  question  mark  called  pretty  way  replace  question  mark  either  resulting  string  non  empty  correct  bracket  sequence  gave  mom  string  consisting  parenthesis  question  mark  using  morse  code  light  coordinate  pair  string  slsl  pretty  character  joyce  know  anything  bracket  sequence  asked  help  input  contains  string  consisting  character  print  answer  puzzle  output
575/I __label__data  structures  company  robot  industry  produce  robot  territory  protection  robot  protect  triangle  territory  right  isosceles  triangle  catheti  parallel  north  south  east  west  direction  owner  land  buy  set  robot  territory  protect  time  time  businessmen  want  build  office  land  want  know  many  robot  guard  handle  query  contains  width  height  land  query  handle  next  query  need  process  type  query  dir  len  add  robot  protect  triangle  depending  value  dir  value  len  represent  different  triangle  dir  triangle  defined  point  en  en  dir  triangle  defined  point  en  en  dir  triangle  defined  point  en  en  dir  triangle  defined  point  en  en  output  many  robot  guard  point  robot  guard  point  point  inside  border  triangle  ir  point  triangle  range  positive  second  type  query  output  many  robot  guard  point  answer  separate
659/B __label__sortings  __label__constructive  algorithms  soon  berland  hold  school  team  programming  olympiad  berland  region  team  people  invited  participate  olympiad  qualifying  contest  form  team  wa  held  wa  attended  berland  student  least  schoolboy  participating  region  berland  result  participant  qualifying  competition  score  inclusive  team  region  formed  member  qualifying  competition  region  none  replaced  schoolboy  region  included  team  received  greater  point  situation  team  region  formed  uniquely  school  team  meet  property  described  case  region  need  undertake  additional  contest  team  region  considered  different  least  schoolboy  included  team  included  team  guaranteed  region  least  representative  participated  qualifying  contest  task  given  result  qualifying  competition  identify  team  region  announce  region  formation  requires  additional  contest  input  contains  n  participant  qualifying  contest  region  berland  next  description  participant  qualifying  contest  following  format  surname  string  length  character  consisting  large  small  english  letter  region  point  scored  participant  inclusive  guaranteed  surname  participant  distinct  least  people  participated  region  surname  differ  letter  case  considered  distinct  print  print  team  region  surname  team  member  arbitrary  order  single  character  without  quote  need  spend  qualifying  contest  region
478/A __label__implementation  people  playing  game  called  generosity  person  give  non  coin  initial  bet  player  make  bet  coin  following  operation  repeated  several  time  coin  passed  player  player  task  write  program  given  coin  player  ha  end  game  determine  size  initial  bet  find  outcome  game  obtained  positive  coin  initial  bet  input  consists  single  containing  coin  second  third  fourth  fifth  player  respectively  end  game  print  containing  single  positive  coin  initial  bet  player  value  print  value  quote  clarity
1206/B __label__dp  __label__implementation  given  cost  coin  perform  following  operation  choose  add  subtract  particular  apply  operation  several  time  want  make  product  equal  word  want  example  make  product  equal  coin  add  second  element  add  second  element  subtract  third  element  array  becomes  minimum  cost  pay  contains  single  second  contains  output  single  minimal  coin  need  pay  make  product  equal
483/B __label__math  __label__binary  search  friend  want  present  several  positive  want  present  cnt  friend  cnt  second  friend  moreover  want  presented  distinct  mean  presented  friend  addition  friend  doe  like  divisible  without  remainder  prime  second  doe  like  divisible  without  remainder  prime  course  going  present  friend  like  task  find  minimum  form  present  using  set  course  choose  present  positive  greater  called  prime  ha  positive  divisor  contains  positive  cnt  cnt  nt  nt  cnt  nt  described  statement  guaranteed  prime  print  single  answer  problem
1209/F __label__data  structures  __label__dfs  __label__graphs  __label__trees  __label__strings  koala  land  consists  bidirectional  road  connecting  city  road  numbered  order  input  guaranteed  reach  city  every  city  koala  start  traveling  city  whenever  travel  road  writes  notebook  put  space  get  concatenated  single  embarking  trip  koala  curious  resulting  possible  destination  possible  destination  smallest  could  written  since  quite  large  print  remainder  modulo  please  note  need  compute  remainder  minimum  possible  minimum  possible  remainder  contains  n  city  road  respectively  following  contains  representing  bidirectional  road  city  guaranteed  pair  city  road  connecting  reach  city  every  city  print  answer  every  city  except  city
1178/E __label__greedy  __label__constructive  algorithms  __label__brute  force  __label__strings  alice  bought  congo  prime  video  subscription  wa  watching  documentary  archaeological  finding  factor  island  loch  katrine  scotland  archaeologist  found  book  whose  age  origin  unknown  perhaps  alice  make  sense  book  contains  single  string  character  ha  pointed  consecutive  character  ha  conjectured  string  contains  unusually  long  subsequence  read  side  help  alice  verify  finding  subsequence  contains  least  half  character  original  string  rounded  note  maximise  length  string  subsequence  string  obtained  deletion  several  possibly  character  input  consists  single  string  string  consists  character  guaranteed  consecutive  character  equal  output  palindrome  subsequence
993/E __label__math  nikita  like  task  order  statistic  example  easily  find  increasing  order  segment  array  nikita  wonder  many  segment  array  given  increasing  order  segment  word  find  segment  given  array  exactly  segment  le  nikita  want  get  answer  question  size  array  contains  second  contains  given  array  print  answer  nikita  question
1183/A __label__implementation  polycarp  know  sum  digit  divisible  divisible  assumes  sum  digit  divisible  somewhat  interesting  thus  considers  positive  interesting  sum  digit  divisible  help  polycarp  find  nearest  larger  equal  interesting  given  find  interesting  minimal  input  contains  print  nearest  greater  equal  interesting  given  word  print  interesting  minimal
898/B __label__implementation  __label__brute  force  __label__number  theory  vasya  ha  burles  bottle  ber  cola  cost  burles  bar  bar  cost  burles  buy  non  negative  bottle  ber  cola  non  negative  bar  bar  find  possible  buy  amount  bottle  ber  cola  bar  bar  spend  exactly  burles  word  find  non  negative  vasya  buy  bottle  ber  cola  bar  bar  tell  impossible  contains  single  amount  money  vasya  ha  second  contains  single  cost  bottle  ber  cola  third  contains  single  cost  bar  bar  vasya  buy  bar  ber  cola  way  spend  exactly  burles  print  without  quote
652/C __label__sortings  given  permutation  length  given  foe  pair  ii  task  count  different  interval  foe  pair  count  interval  least  foe  pair  position  order  value  foe  pair  important  consider  example  foe  pair  interval  incorrect  contains  foe  pair  interval  incorrect  contains  foe  pair  interval  correct  foe  pair  contains  length  permutation  foe  pair  second  contains  distinct  element  permutation  next  contains  ii  foe  pair  note  foe  pair  appear  multiple  time  given  list  print  different  interval  doe  foe  pair
725/A __label__implementation  new  version  famous  pinball  game  important  part  game  field  sequence  bumper  bumper  numbered  left  right  type  bumper  denoted  character  ball  hit  bumper  position  go  position  right  position  type  bumper  position  left  type  bumper  position  position  word  ball  fall  game  field  depending  ball  starting  position  ball  eventually  fall  game  field  stay  forever  given  string  representing  bumper  type  calculate  position  ball  eventually  fall  game  field  start  position  input  contains  single  length  sequence  bumper  second  contains  string  consists  character  character  position  string  corresponds  type  bumper  print  position  sequence  ball  eventually  fall  game  field  start  position
711/E __label__math  __label__number  theory  coder  ha  recently  found  interesting  concept  called  birthday  paradox  state  given  random  set  people  around  chance  share  birthday  coder  find  interesting  decides  test  inhabitant  udayland  udayland  day  year  coder  want  interview  people  udayland  ha  birthday  day  day  equal  probability  interested  probability  least  birthday  day  coder  know  answer  written  irreducible  fraction  want  find  value  doe  like  deal  floating  point  help  input  contains  meaning  day  year  coder  want  interview  exactly  people  probability  least  people  birthday  day  long  year  equal  b  print  single
514/D __label__data  structures  __label__binary  search  army  droids  lined  row  droid  described  detail  type  droid  mechanism  want  destroy  sequence  consecutive  droids  maximum  length  ha  weapon  weapon  affect  droids  army  destroying  detail  type  droid  detail  type  nothing  happens  droid  considered  destroyed  detail  destroyed  make  shot  many  shot  weapon  type  make  destroy  sequence  consecutive  droids  maximum  length  contains  droids  detail  type  available  shot  respectively  next  follow  describing  droids  contains  detail  type  respective  robot  print  space  separated  shot  weapon  type  robot  make  destroy  subsequence  consecutive  droids  maximum  length
804/D __label__dp  __label__sortings  __label__dfs  __label__trees  __label__brute  force  __label__binary  search  pasha  good  student  mojak  best  friend  always  problem  think  today  talk  following  problem  forest  acyclic  undirected  graph  vertex  edge  query  answer  query  vertex  given  let  set  vertex  connected  component  graph  contains  set  vertex  connected  component  graph  contains  let  add  edge  vertex  vertex  compute  value  resulting  component  resulting  component  tree  value  diameter  component  equal  otherwise  expected  value  choose  vertex  set  uniformly  random  help  pasha  solve  problem  diameter  component  maximum  distance  pair  vertex  component  distance  vertex  minimum  edge  path  vertex  note  query  add  edge  initial  forest  contains  vertex  edge  graph  query  next  contains  mean  edge  vertex  guaranteed  given  graph  forest  next  contains  vertex  given  query  query  print  expected  value  described  problem  statement
697/A __label__math  __label__implementation  ted  ha  pineapple  pineapple  able  bark  like  bulldog  time  second  bark  time  every  second  bark  twice  second  interval  thus  bark  time  etc  barney  woke  morning  want  eat  pineapple  eat  barking  barney  plan  eat  time  second  asked  tell  gon  na  bark  time  input  contains  time  pineapple  bark  time  pineapple  barking  interval  time  barney  want  eat  pineapple  respectively  print  single  yes  without  quote  pineapple  bark  time  single  without  quote  otherwise  output
440/D __label__dp  __label__trees  recently  berland  face  federalization  request  often  proponent  propose  divide  country  separate  state  moreover  demand  state  includes  exactly  town  currently  berland  ha  town  pair  connected  bilateral  road  berland  ha  road  reach  city  capital  road  network  form  tree  ministry  road  fear  reform  road  connect  town  different  state  bring  lot  trouble  task  come  plan  divide  country  state  state  connected  state  possible  get  town  using  road  road  connect  state  town  state  consisted  exactly  city  road  connect  different  state  minimum  contains  follow  describes  road  berland  road  given  pair  xii  town  connected  road  assume  town  numbered  print  required  minimum  problem  road  print  sequence  index  found  division  road  numbered  starting  order  follow  input  multiple  possible  solution  print
1173/A __label__greedy  nauuo  girl  love  writing  comment  day  posted  comment  codeforces  wondering  whether  would  get  upvotes  downvotes  known  person  would  upvote  person  would  downvote  another  person  would  vote  know  whether  would  upvote  downvote  note  people  would  vote  exactly  time  different  result  people  upvote  downvote  result  people  downvote  upvote  result  otherwise  result  unknown  person  result  uncertain  possible  result  formally  result  uncertain  exist  different  situation  person  vote  result  different  situation  tell  nauuo  result  report  result  uncertain  contains  z  corresponding  person  would  upvote  downvote  unknown  possible  result  print  result
80/B __label__math  __label__geometry  remember  kind  cartoon  beauty  beast  wa  firing  machine  gun  radiation  mutant  time  travel  wa  beauty  named  belle  violated  beast  order  visited  west  wing  wa  banished  castle  everybody  wa  upset  beautiful  belle  wa  upset  wa  beast  wa  lumiere  candlestick  worst  thing  wa  cogsworth  wa  upset  cogsworth  human  mantel  clock  wa  often  used  alarm  clock  due  cogsworth  frustration  inhabitant  castle  trouble  could  determine  wa  time  drink  morning  tea  wa  time  evening  stroll  fortunately  deep  basement  lying  digital  clock  showing  time  format  resident  castle  face  difficult  task  turn  cogsworth  hour  minute  mustache  hand  way  cogsworth  began  show  correct  time  moreover  need  find  turn  angle  degree  mustache  hand  initial  time  showed  cogsworth  rotate  hand  forward  shown  picture  since  many  way  select  angle  full  rotation  choose  smallest  angle  right  non  negative  direction  note  cogsworth  hour  minute  mustache  hand  move  evenly  continuously  hand  moving  independently  turning  hand  hand  remains  standing  still  input  contains  current  time  according  digital  clock  formatted  h  mantel  clock  initially  show  pretests  time  beginning  morning  program  channel  russia  print  angle  turning  hour  minute  hand  respectively  absolute  relative  error  answer  exceed
1205/D __label__trees  __label__constructive  algorithms  given  tree  node  write  non  negative  edge  following  condition  would  satisfied  every  node  look  path  count  sum  edge  path  write  obtained  sum  blackboard  every  ha  written  blackboard  least  guaranteed  arrangement  exists  contains  single  node  next  contains  meaning  edge  node  guaranteed  edge  form  tree  output  form  mean  wrote  edge
735/D __label__math  __label__number  theory  funt  life  country  specific  tax  law  total  income  funt  year  equal  n  burles  amount  tax  ha  pay  calculated  maximum  divisor  equal  course  example  funt  ha  pay  burles  need  pay  pay  burle  funt  opportunistic  person  want  cheat  bit  particular  want  split  initial  several  part  arbitrary  even  allowed  pay  tax  part  separately  make  part  equal  reveal  condition  ni  hold  ostap  bender  wonder  many  money  funt  ha  pay  minimal  chooses  optimal  way  split  part  input  contains  single  total  year  income  funt  print  minimum  possible  burles  funt  ha  pay  tax
1248/A __label__math  __label__geometry  dl  jls  bored  math  lesson  order  entertain  dl  took  sheet  paper  drew  distinct  given  equation  distinct  jls  drew  paper  sheet  distinct  given  equation  distinct  dl  jls  interested  counting  many  pair  intersection  point  point  coordinate  unfortunately  lesson  end  soon  dl  jls  asking  help  contains  test  case  input  follow  test  case  description  test  case  contains  drawn  dl  second  test  case  contains  distinct  describing  drawn  dl  describes  given  equation  third  test  case  contains  drawn  jls  fourth  test  case  contains  distinct  describing  drawn  jls  describes  given  equation  sum  value  test  case  input  doe  exceed  similarly  sum  value  test  case  input  doe  exceed  hack  allowed  use  test  case  input  satisfied  test  case  input  print  single  pair  intersection  point
932/F __label__dp  __label__data  structures  __label__geometry  given  tree  node  numbered  rooted  node  node  ha  value  associated  value  node  jump  node  node  subtree  cost  jump  node  node  product  total  cost  path  formed  jump  sum  cost  individual  jump  every  node  calculate  minimum  total  cost  reach  leaf  node  pay  attention  root  never  leaf  even  ha  degree  note  jump  node  input  contains  node  tree  second  contains  space  separated  n  third  contains  space  separated  n  next  contains  space  separated  describing  edge  node  tree  output  space  separated  denotes  minimum  cost  path  node  reach  leaf
730/A __label__greedy  group  friend  enjoys  playing  popular  video  game  toda  rating  system  describing  skill  level  player  initially  rating  friend  friend  decided  take  part  championship  team  equal  rating  allowed  compose  single  team  consisting  friend  friend  faced  problem  make  rating  equal  way  change  rating  willingly  lose  match  friend  form  party  consisting  friend  play  match  game  party  loses  rating  member  decrease  rating  become  negative  change  losing  friend  take  part  multiple  match  time  making  party  subset  friend  remember  constraint  party  size  member  friend  want  make  rating  equal  high  possible  help  friend  develop  strategy  losing  match  rating  become  equal  resulting  rating  maximum  possible  contains  single  friend  second  contains  non  negative  initial  rating  friend  print  single  final  rating  friend
1217/F __label__data  structures  __label__graphs  __label__trees  given  undirected  graph  vertex  numbered  initially  edge  asked  perform  query  graph  let  last  answer  latest  query  second  type  set  query  query  following  add  undirected  edge  vertex  last  mod  last  mod  exist  otherwise  remove  check  exists  path  vertex  last  mod  last  mod  go  currently  existing  edge  set  last  otherwise  good  luck  contains  vertex  query  respectively  following  contains  query  aforementioned  type  guaranteed  least  query  second  type  print  string  consisting  character  character  answer  query  second  type  therefore  length  string  equal  query  second  type
1208/C __label__constructive  algorithms  let  define  magic  grid  square  matrix  size  nn  satisfying  following  condition  inclusive  appear  matrix  exactly  bitwise  xor  element  row  column  must  row  column  given  multiple  construct  magic  grid  size  nn  input  contains  guaranteed  multiple  print  magic  grid  contains  space  separated  representing  row  grid
234/A __label__implementation  fine  october  day  mathematics  teacher  vasily  petrov  went  class  saw  pupil  sat  desk  people  desk  vasily  quickly  realized  even  like  true  mathematician  vasily  ha  student  numbered  vasily  petrov  like  way  child  seated  desk  according  student  whose  differ  sit  together  talk  time  distract  others  misbehave  hand  righthanded  student  sits  left  end  desk  lefthanded  student  sits  right  end  desk  hit  elbow  time  distract  case  student  sit  desk  interfere  vasily  know  well  student  lefthander  righthander  asks  come  order  meet  uncomplicated  condition  student  talk  bump  elbow  guaranteed  input  least  way  seat  student  always  exists  input  contains  single  even  student  class  second  contains  exactly  capital  english  letter  letter  second  equal  student  lefthander  otherwise  righthander  print  pair  pair  per  print  student  sit  desk  pair  stand  student  sitting  left  second  stand  student  sitting  right  separate  pair  space  multiple  solution  print
760/A __label__math  __label__implementation  petr  want  make  calendar  current  month  purpose  draw  table  column  correspond  week  week  consequent  day  monday  sunday  row  correspond  weekday  cell  date  example  calendar  january  look  like  picture  petr  want  know  many  column  table  given  month  weekday  date  month  assume  year  non  leap  month  january  month  december  twelfth  weekday  date  month  monday  sunday  print  single  column  table
832/B __label__implementation  __label__strings  hard  time  today  petya  need  score  point  informatics  exam  task  seem  easy  petya  think  lack  time  finish  asks  help  glob  pattern  statement  string  consisting  lowercase  english  letter  character  known  character  occurs  pattern  query  string  given  required  determine  pattern  match  everything  seemed  easy  petya  discovered  special  pattern  character  differ  usual  meaning  pattern  match  string  possible  replace  character  good  lowercase  english  letter  character  including  empty  string  bad  lowercase  english  letter  resulting  string  given  string  good  letter  given  petya  others  bad  contains  string  length  consisting  distinct  lowercase  english  letter  letter  good  letter  others  bad  second  contains  pattern  string  lowercase  english  letter  character  guaranteed  character  occurs  third  contains  query  string  follow  contains  single  non  empty  string  consisting  lowercase  english  letter  query  string  guaranteed  total  length  query  string  greater  print  print  yes  pattern  match  query  string  otherwise
1100/B __label__implementation  __label__data  structures  arkady  coordinate  round  really  famous  competitive  programming  platform  round  feature  problem  distinct  difficulty  difficulty  numbered  hold  round  arkady  need  new  used  previously  problem  difficulty  arkady  creates  problem  unfortunately  create  problem  desired  difficulty  instead  creates  problem  evaluates  difficulty  put  problem  pool  moment  arkady  choose  set  new  problem  distinct  difficulty  pool  hold  round  problem  remove  pool  arkady  always  creates  problem  time  hold  round  creating  problem  immediately  doe  given  sequence  problem  difficulty  order  arkady  created  problem  determine  whether  arkady  held  round  right  creating  problem  initially  problem  pool  empty  contains  difficulty  level  problem  arkady  created  second  contains  problem  difficulty  order  arkady  created  print  containing  digit  digit  arkady  held  round  creation  problem  otherwise
698/C __label__math  __label__dp  creating  high  loaded  system  pay  special  attention  caching  problem  popular  caching  algorithm  called  lru  least  recently  used  suppose  cache  store  object  beginning  workflow  cache  empty  object  queried  check  present  cache  move  object  cache  least  recently  used  removed  word  remove  object  ha  smallest  time  last  query  consider  video  stored  server  size  cache  store  video  caching  algorithm  described  applied  know  time  user  enters  server  pick  video  probability  choice  video  independent  event  goal  problem  count  video  probability  present  cache  query  input  contains  video  size  cache  respectively  next  contains  real  given  digit  decimal  point  guaranteed  sum  equal  print  real  equal  probability  video  present  cache  query  answer  considered  correct  absolute  relative  error  doe  exceed
500/D __label__dfs  __label__graphs  __label__trees  new  year  coming  tree  world  world  name  implies  city  connected  road  distinct  city  always  exists  path  city  numbered  road  numbered  let  define  total  length  road  path  city  city  annual  event  people  tree  world  repair  exactly  road  per  year  result  length  road  decrease  already  known  year  length  road  going  become  shorter  length  assume  current  year  year  santa  planning  give  present  annually  child  tree  world  order  need  preparation  going  choose  distinct  city  make  exactly  warehouse  city  santa  take  charge  warehouse  city  really  boring  santa  keep  warehouse  alone  decided  build  santa  network  cost  needed  build  network  equal  dollar  santa  busy  find  best  place  decided  choose  randomly  uniformly  triple  distinct  santa  would  like  know  expected  value  cost  needed  build  network  mentioned  year  length  exactly  road  decrease  santa  want  calculate  expected  length  change  help  calculate  value  contains  city  tree  world  next  describe  road  contains  space  separated  aii  denoting  road  connects  city  length  road  next  contains  road  length  change  next  describe  length  change  contains  space  separated  j  j  mean  repair  length  road  becomes  guaranteed  smaller  current  length  road  road  repaired  several  time  output  given  change  print  containing  expected  cost  needed  build  network  tree  world  answer  considered  correct  absolute  relative  error  exceed
722/E __label__dp  unfortunately  formal  description  task  turned  long  legend  research  rover  finally  reached  surface  mar  ready  complete  mission  unfortunately  due  mistake  navigation  system  design  rover  located  wrong  place  rover  operate  grid  consisting  row  column  define  cell  located  row  column  cell  rover  able  move  cell  share  side  current  rover  currently  located  cell  ha  move  cell  randomly  follow  shortest  path  cell  possible  way  chosen  equiprobably  cargo  section  rover  contains  battery  required  conduct  research  initially  battery  charge  equal  unit  energy  cell  anomaly  time  rover  get  cell  anomaly  battery  loos  half  charge  rounded  formally  charge  wa  equal  rover  get  cell  anomaly  charge  change  rover  pick  random  shortest  path  proceed  compute  expected  value  battery  charge  reach  cell  cell  anomaly  affect  charge  battery  input  contains  row  column  field  cell  anomaly  initial  charge  battery  respectively  follow  containing  coordinate  cell  containing  anomaly  guaranteed  cell  appears  list  answer  always  represented  irreducible  fraction  print  modulo
1063/F __label__dp  __label__data  structures  call  sequence  string  journey  length  substring  length  strictly  le  length  example  journey  define  journey  string  journey  part  nested  inside  way  exists  sequence  string  string  empty  ukkk  example  journey  string  abb  bab  journey  string  appear  left  right  length  journey  string  string  determine  maximum  possible  length  journey  given  string  contains  single  length  string  second  contains  string  consisting  lowercase  latin  letter  print  maximum  possible  length  string  journey
809/B __label__binary  search  interactive  problem  output  section  see  information  flushing  output  sunday  leha  hacker  took  nura  house  life  went  luxurious  restaurant  vikopolis  upon  arrival  left  car  huge  parking  lot  near  restaurant  hurried  inside  building  restaurant  polite  waiter  immediately  brought  menu  leha  noora  consisting  dish  interesting  dish  menu  numbered  little  thought  girl  ordered  exactly  different  dish  available  menu  pas  waiting  time  chef  prepare  ordered  dish  girl  invited  hacker  play  game  help  get  know  better  game  simple  noora  want  leha  guess  dish  ordered  time  ready  answer  type  question  leha  say  noora  chooses  dish  dish  noora  ordered  equal  secondly  value  minimum  possible  rule  girl  chooses  dish  noora  say  tak  leha  nie  otherwise  restaurant  preparing  quickly  leha  ha  enough  time  ask  question  name  dish  noora  ordered  help  leha  solve  problem  single  input  denoting  dish  menu  dish  noora  ordered  want  provide  answer  output  string  form  think  dish  wa  dish  ordered  noora  flush  output  terminate  program
1016/A __label__math  __label__implementation  __label__greedy  received  notebook  called  death  note  notebook  ha  infinite  page  rule  written  last  page  huh  notebook  say  write  name  notebook  consecutive  day  day  write  exactly  name  got  scared  course  got  scared  get  scared  receive  notebook  named  death  note  strange  rule  written  course  decided  follow  rule  calmed  came  strategy  write  name  notebook  calculated  page  notebook  exactly  name  start  writing  name  page  write  name  current  page  long  limit  name  page  exceeded  current  page  turn  page  note  always  turn  page  end  matter  last  day  day  current  page  still  hold  least  name  next  day  continue  writing  name  current  page  interested  following  question  many  time  turn  page  day  interested  page  turn  day  input  contains  day  write  name  notebook  name  written  page  notebook  second  contains  mean  name  write  notebook  day  print  exactly  time  turn  page  day
983/D __label__data  structures  arkady  ha  got  infinite  plane  painted  color  draw  rectangle  filled  paint  side  parallel  cartesian  coordinate  ax  another  color  rectangle  rectangle  enumerated  order  draw  possible  new  rectangle  cover  previous  completely  partially  count  different  color  plane  arkady  draw  rectangle  contains  single  rectangle  next  contains  coordinate  corner  rectangle  single  print  different  color  plane  including  color
515/B __label__brute  force  __label__number  theory  drazil  ha  many  friend  happy  unhappy  drazil  want  make  friend  become  happy  invented  following  plan  boy  girl  friend  let  separately  day  drazil  invite  boy  girl  dinner  together  drazil  programmer  start  people  happy  become  happy  otherwise  people  remain  state  person  becomes  happy  wa  happy  originally  stay  happy  forever  drazil  want  know  whether  use  plan  make  friend  become  happy  moment  contains  second  contains  denoting  happy  boy  friend  drazil  follow  distinct  denoting  list  index  happy  boy  third  conatins  denoting  happy  girl  friend  drazil  follow  distinct  j  denoting  list  index  happy  girl  guaranteed  least  person  unhappy  friend  drazil  make  friend  become  happy  plan  print  yes  otherwise  print
1197/E __label__dp  __label__data  structures  __label__sortings  __label__binary  search  famous  russian  nesting  doll  named  matryoshkas  sold  souvenir  store  nearby  like  buy  several  store  ha  different  matryoshkas  matryoshka  figure  volume  empty  space  inside  volume  course  much  free  space  inside  bag  fortunately  know  matryoshkas  nested  inside  another  formally  let  call  set  matryoshkas  nested  rearrange  doll  way  doll  nested  inside  second  second  doll  inside  third  matryoshka  nested  inside  matryoshka  last  doll  take  space  inside  bag  let  call  extra  space  nested  set  doll  total  volume  empty  space  inside  structure  obviously  equal  index  chosen  doll  order  nested  finally  let  call  nested  subset  given  sequence  big  enough  doll  sequence  added  nested  subset  without  breaking  nested  property  want  buy  many  matryoshkas  choose  big  enough  nested  subset  buy  disappointed  much  space  bag  wasted  want  choose  big  enough  subset  extra  space  minimum  possible  big  enough  subset  wonder  many  different  nested  subset  meet  condition  big  enough  big  enough  subset  extra  space  le  extra  space  chosen  subset  subset  considered  different  exists  least  index  subset  contains  doll  another  subset  since  answer  large  print  modulo  contains  single  matryoshkas  next  description  doll  outer  inners  volume  matryoshka  print  big  enough  nested  subset  extra  space  subset  minimum  possible  since  answer  large  print  modulo
811/B __label__implementation  __label__sortings  vladik  started  reading  complicated  book  algorithm  containing  page  improve  understanding  written  friend  advised  read  page  order  given  permutation  denotes  page  read  turn  sometimes  vladik  mom  sorted  subsegment  permutation  position  position  inclusive  love  order  every  sorting  vladik  know  index  page  permutation  read  wondered  page  read  sorting  ha  changed  word  ha  changed  every  sorting  vladik  return  permutation  initial  state  assume  sorting  independent  contains  space  separated  length  permutation  time  vladik  mom  sorted  subsegment  book  second  contains  space  separated  permutation  note  element  permutation  distinct  next  contains  space  separated  iii  left  right  border  sorted  subsegment  sorting  position  interesting  vladik  mom  sorting  print  yes  page  interesting  vladik  changed  otherwise
645/D __label__dp  __label__graphs  __label__binary  search  farmer  john  rebuilds  farm  unfamiliar  portion  bovinia  bessie  trying  alternative  job  new  gig  reporter  bessie  need  know  programming  competition  result  quickly  possible  cover  robot  rap  battle  tournament  notice  robot  operate  deterministic  algorithm  particular  robot  beat  robot  robot  ha  higher  skill  level  robot  robot  beat  robot  robot  beat  robot  robot  beat  robot  since  rapping  subtle  art  robot  never  skill  level  given  result  rap  battle  order  played  determine  minimum  rap  battle  needed  take  place  bessie  could  order  robot  skill  level  input  consists  robot  rap  battle  next  describe  result  rap  battle  order  took  place  consists  uii  indicating  robot  beat  robot  rap  battle  rap  battle  involve  pair  robot  guaranteed  least  ordering  robot  satisfies  relation  print  minimum  ordering  robot  skill  level  uniquely  defined  rap  battle  exists  ordering  satisfies  relation  output
570/C __label__implementation  __label__data  structures  __label__constructive  algorithms  daniel  ha  string  consisting  lowercase  english  letter  period  sign  character  let  define  operation  replacement  following  sequence  step  find  substring  consecutive  period  string  occurrence  substring  let  choose  replace  substring  string  word  replacement  operation  consecutive  period  replaced  string  contains  consecutive  period  nothing  happens  let  define  minimum  operation  replacement  perform  string  doe  consecutive  period  left  need  process  query  result  character  position  string  assigned  value  operation  calculate  output  value  help  daniel  process  query  contains  length  string  query  second  contains  string  consisting  lowercase  english  letter  period  sign  following  description  query  contains  lowercas  english  letter  period  sign  describing  query  assigning  symbol  position  print  per  must  equal  value  performing  assignment
1250/L __label__math  __label__greedy  __label__binary  search  group  student  ha  recently  admitted  faculty  computer  science  berland  state  university  programming  teacher  want  divide  subgroup  practice  session  teacher  know  lot  programmer  argue  language  best  teacher  want  hear  argument  subgroup  want  divide  student  subgroup  pair  student  belonging  subgroup  want  argue  perform  division  teacher  asked  student  programming  language  like  student  answered  enjoy  assembler  student  stated  favourite  language  basic  remaining  student  claimed  best  programming  language  wa  large  argument  assembler  fan  fan  knowing  assembler  programmer  programmer  start  argument  every  minute  teacher  want  divide  student  subgroup  every  student  belongs  exactly  subgroup  subgroup  contains  least  assembler  fan  least  fan  since  teaching  lot  student  difficult  teacher  want  size  largest  subgroup  minimum  possible  please  help  teacher  calculate  minimum  possible  size  largest  subgroup  contains  test  case  input  test  case  follow  test  case  consists  containing  c  assembler  fan  basic  fan  fan  respectively  test  case  print  minimum  size  largest  subgroup  student  divided  way  subgroup  contains  least  assembler  fan  least  fan  simultaneously
611/E __label__greedy  __label__data  structures  __label__sortings  know  story  musketeer  anyway  must  help  richelimakieu  cardinal  city  bearis  found  brave  warrior  called  musketeer  athos  ha  strength  borthos  strength  caramis  ha  strength  year  almost  still  criminal  defeated  criminal  ha  strength  hard  defeat  strong  criminal  maybe  musketeer  fight  together  achieve  richelimakieu  coordinate  musketeer  action  hour  musketeer  either  nothing  assigned  criminal  musketeer  assigned  criminal  strength  summed  criminal  defeated  exactly  hour  musketeer  fight  richelimakieu  allow  situation  criminal  ha  strength  bigger  sum  strength  musketeer  fighting  criminal  would  win  word  way  defeat  criminal  musketeer  strength  hour  defeat  criminal  strength  greater  example  athos  hour  defeat  criminal  ti  musketeer  fight  together  hour  defeat  criminal  strength  greater  sum  strength  musketeer  example  athos  caramis  hour  defeat  criminal  ti  note  third  remaining  musketeer  either  nothing  fight  criminal  similarly  musketeer  fight  together  hour  defeat  criminal  strength  greater  sum  musketeer  strength  ti  richelimakieu  want  musketeer  fight  new  year  eve  thus  must  coordinate  action  order  minimize  hour  till  criminal  defeated  find  minimum  hour  defeat  criminal  musketeer  defeat  print  without  quote  instead  input  contains  single  criminal  second  contains  strength  musketeer  third  contains  strength  criminal  print  answer
1234/F __label__dp  given  string  consisting  lowercase  latin  letter  recall  substring  string  string  example  substring  codeforces  code  force  coder  top  perform  following  operation  choose  substring  reverse  string  becomes  goal  maximize  length  maximum  substring  consisting  distinct  unique  character  string  consists  distinct  character  character  string  appears  example  string  abcde  arctg  minecraft  consist  distinct  character  string  codeforces  abacaba  consist  distinct  character  input  contains  string  consisting  character  lowercase  latin  letter  print  maximum  possible  length  maximum  substring  consisting  distinct  character  reversing  substring
464/D __label__dp  rom  found  new  character  game  world  darkraft  game  character  fight  monster  find  advanced  stuff  let  fight  stronger  monster  character  equip  distinct  type  item  power  item  depends  level  positive  initially  character  ha  level  item  type  victory  monster  character  find  exactly  new  randomly  generated  item  generation  process  look  follows  firstly  type  item  defined  type  ha  probability  level  new  item  defined  let  assume  level  player  item  chosen  type  equal  moment  level  new  item  chosen  uniformly  segment  new  item  current  player  item  type  rom  chooses  best  greater  level  equips  ha  level  rom  choses  remaining  item  sold  coin  rom  sell  item  level  type  coin  help  rom  determine  expected  earned  coin  victory  monster  contains  print  real  expected  earned  coin  victory  monster  answer  considered  correct  relative  absolute  error  exceed
1111/A __label__implementation  __label__strings  know  superhero  transform  certain  superheroes  superheroes  transform  superhero  superhero  name  transform  another  superhero  name  made  equal  changing  vowel  vowel  consonant  consonant  multiple  change  made  problem  consider  letter  vowel  letter  consonant  given  name  superheroes  determine  superhero  name  transformed  superhero  name  contains  string  length  inclusive  second  contains  string  length  inclusive  string  guaranteed  different  consist  lowercase  english  letter  output  yes  without  quote  superhero  name  transformed  superhero  name  without  quote  otherwise
429/B __label__dp  summer  coming  time  iahub  iahubina  work  want  look  hot  beach  gym  matrix  column  let  represents  calorie  burned  performing  workout  cell  gym  column  iahub  start  workout  located  column  need  finish  workout  finishing  workout  workout  similarly  iahubina  start  workout  need  finish  workout  finishing  workout  cell  go  either  additional  condition  training  meet  exactly  cell  gym  cell  none  work  talk  fast  exponentiation  pretty  odd  small  talk  move  next  workout  workout  wa  done  either  iahub  iahubina  count  total  gain  please  plan  workout  iahub  iahubina  total  gain  big  possible  note  iahub  iahubina  perform  workout  different  speed  cell  use  reach  meet  cell  differs  input  contains  next  contains  denotes  element  output  contains  single  maximum  total  gain  possible
1207/F __label__implementation  __label__data  structures  __label__brute  force  given  array  consisting  numbered  initially  element  process  type  query  array  increase  compute  set  remainder  modulo  process  query  contains  query  follow  describing  query  contains  query  type  query  second  type  guaranteed  least  query  type  query  type  print  answer
949/D __label__greedy  __label__sortings  __label__brute  force  __label__binary  search  instructor  informatics  school  make  student  bed  house  contains  room  room  exactly  student  supposed  sleep  time  curfew  happened  many  student  located  assigned  room  room  arranged  row  numbered  initially  room  student  student  currently  somewhere  house  therefore  instructor  live  house  process  curfew  enforcement  following  instructor  start  near  room  move  toward  room  second  instructor  start  near  room  move  toward  room  processing  current  room  instructor  move  next  instructor  enter  room  move  simultaneously  odd  instructor  process  middle  room  room  processed  process  end  instructor  process  room  count  student  room  turn  light  lock  room  student  inside  processed  room  equal  instructor  writes  room  notebook  turn  light  lock  room  instructor  hurry  prepare  study  plan  next  day  care  room  student  instructor  inside  room  student  run  room  locked  processed  student  run  room  move  room  differs  instead  running  student  hide  bed  room  case  instructor  count  processing  room  student  hide  simultaneously  formally  happening  curfew  announced  point  room  student  student  run  another  room  room  away  initial  room  stay  place  student  optionally  hide  bed  instructor  enter  room  room  count  student  lock  room  enter  leave  room  student  room  run  another  room  room  away  current  room  stay  place  student  optionally  hide  bed  instructor  move  room  room  room  room  process  continues  room  processed  let  denote  room  instructor  counted  non  hidden  student  different  second  instructor  student  know  principal  listen  complaint  therefore  want  minimize  maximum  help  find  value  use  optimal  strategy  contains  room  house  running  distance  student  official  student  room  second  contains  stand  student  room  curfew  announcement  guaranteed  output  minimal  possible  value  maximum
1185/C1 __label__greedy  __label__sortings  difference  easy  hard  version  constraint  session  ha  begun  beland  state  university  many  student  taking  exam  polygraph  poligrafovich  going  examine  group  student  student  take  exam  order  rule  exam  following  student  randomly  chooses  ticket  ticket  hard  student  answer  go  home  immediately  process  fast  considered  time  elapses  student  fails  exam  student  find  ticket  easy  spends  exactly  minute  pas  exam  immediately  get  mark  go  home  student  take  exam  fixed  order  without  interruption  moment  time  polygraph  poligrafovich  take  answer  student  duration  whole  exam  student  minute  max  max  student  end  list  greater  possibility  run  time  pas  exam  student  count  minimum  possible  student  need  fail  exam  student  ha  enough  time  pas  exam  student  find  answer  independently  finding  answer  student  student  leave  finding  answer  student  student  doe  home  input  contains  student  total  duration  exam  minute  respectively  second  input  contains  time  minute  student  spends  answer  ticket  guaranteed  value  greater  print  must  equal  minimum  student  leave  exam  order  student  ha  enough  time  pas  exam
1178/C __label__math  __label__greedy  bob  decorating  kitchen  precisely  floor  ha  found  prime  candidate  tile  use  come  simple  form  factor  square  tile  diagonally  split  white  black  part  depicted  figure  dimension  tile  perfect  kitchen  need  exactly  wh  tile  without  scrap  width  kitchen  tile  height  tile  tile  rotated  way  still  need  decide  exactly  tile  floor  single  aesthetic  criterion  want  fulfil  adjacent  tile  must  share  colour  edge  tile  must  white  colour  shared  border  second  must  black  picture  left  show  valid  tiling  kitchen  picture  right  show  invalid  arrangement  bottom  tile  touch  white  part  find  possible  tiling  large  output  remainder  divided  prime  contains  space  separated  h  width  height  kitchen  measured  tile  output  single  remainder  tiling  divided
802/F __label__math  task  exact  easy  version  time  marmot  subtract  village  population  random  responding  heidi  request  village  single  inhabitant  meaning  help  heidi  find  whether  village  follows  poisson  uniform  distribution  easy  medium  version  remember  marmot  provide  positive  well  negative  output  per  village  order  provided  input  village  shall  state  poisson  village  distribution  poisson  type  uniform  answer  came  uniform  distribution
878/C __label__data  structures  __label__graphs  recently  tournament  kind  sport  ha  begun  berland  vasya  want  make  money  bet  scheme  tournament  mysterious  fully  disclosed  competition  held  back  back  involves  sportsman  left  tournament  match  held  kind  sport  loser  leaf  tournament  last  remaining  sportsman  becomes  winner  apart  scheme  arbitrary  disclosed  advance  vasya  know  power  sportsman  kind  sport  belief  sportsman  higher  power  always  win  tournament  held  every  year  year  new  participant  join  tournament  sportsman  ha  participated  second  sportsman  vasya  ha  watching  tournament  last  year  help  find  possible  winner  tournament  contains  tournament  kind  sport  respectively  next  contains  si  ik  ij  sij  power  sportsman  kind  sport  sportsman  higher  power  always  win  guaranteed  kind  sport  power  distinct  tournament  output  contender  win
611/B __label__implementation  __label__brute  force  year  almost  limak  little  polar  bear  ha  recently  learnt  binary  system  noticed  passing  year  ha  exactly  representation  binary  system  note  care  decimal  representation  limak  chose  interval  year  going  count  year  interval  exactly  binary  representation  faster  assume  positive  always  written  without  leading  input  contains  year  last  year  limak  interval  respectively  print  year  limak  count  chosen  interval
520/C __label__math  __label__strings  vasya  became  interested  bioinformatics  going  write  article  similar  cyclic  dna  sequence  invented  new  method  determining  similarity  cyclic  sequence  let  assume  string  length  function  defined  position  respective  symbol  function  used  define  function  vasya  distance  obtained  string  applying  left  circular  shift  time  example  agc  cgt  agc  cgt  agc  gtc  agc  tcg  gca  cgt  gca  gtc  gca  tcg  cag  cgt  cag  gtc  cag  tcg  vasya  found  string  length  internet  want  count  many  string  vasya  distance  string  attains  maximum  possible  value  formally  speaking  must  satisfy  equation  vasya  could  try  possible  string  find  answer  need  help  answer  large  count  string  modulo  input  contains  single  second  input  contains  single  string  length  consisting  character  acgt  print  single  answer  modulo
1055/E __label__dp  __label__binary  search  given  list  segment  need  select  exactly  segment  way  order  statistic  multiset  contained  least  segment  smallest  possible  impossible  select  set  segment  way  multiset  contains  least  element  print  order  statistic  multiset  value  element  sorting  multiset  non  descending  order  contains  size  list  segment  segment  choose  statistic  second  contains  value  list  next  contains  endpoint  segment  possible  segment  coincide  print  exactly  smallest  possible  order  statistic  impossible  choose  segment  way  multiset  contains  least  element
1179/A __label__implementation  __label__data  structures  recently  course  algorithm  data  structure  valeriy  learned  use  deque  built  deque  filled  element  element  gradually  take  leftmost  element  deque  let  call  respectively  doe  following  writes  beginning  writes  end  deque  otherwise  writes  beginning  writes  end  deque  call  sequence  action  operation  example  deque  wa  operation  write  beginning  end  get  teacher  course  seeing  valeriy  wa  passionate  work  approached  gave  query  query  consists  singular  required  query  answer  element  pull  operation  note  query  independent  query  printed  order  pulled  deque  deque  data  structure  representing  list  element  insertion  new  element  deletion  existing  element  made  side  contains  element  deque  query  second  contains  deque  element  position  next  meaning  teacher  query  output  valeriy  pull  deque  operation
508/A __label__brute  force  pasha  love  phone  putting  hair  hair  irrelevant  pasha  ha  installed  new  game  phone  goal  game  following  rectangular  field  consisting  row  pixel  row  initially  pixel  colored  white  move  pasha  choose  pixel  color  black  particular  choose  pixel  already  black  boy  move  pixel  doe  change  remains  black  pasha  loses  game  square  consisting  black  pixel  formed  pasha  ha  made  plan  move  according  paint  pixel  turn  plan  represented  pair  denoting  respectively  row  column  pixel  colored  current  move  determine  whether  pasha  loses  act  accordance  plan  doe  move  square  consisting  black  pixel  formed  input  contains  row  column  move  pasha  going  perform  next  pasha  move  order  make  contains  representing  row  column  pixel  wa  painted  move  pasha  loses  print  move  square  consisting  black  pixel  formed
1131/G __label__dp  __label__data  structures  semyon  participates  prestigious  competition  world  ocean  title  dangerous  shark  competition  shark  compete  different  subject  speed  swimming  masking  map  navigation  many  others  semyon  taking  part  destruction  contest  domino  placed  front  shark  domino  height  domino  vary  distance  adjacent  domino  moreover  domino  ha  cost  value  expressed  goal  drop  domino  shark  push  domino  left  right  begin  falling  direction  fall  domino  touch  domino  start  falling  direction  original  domino  falling  thus  beginning  chain  reaction  result  many  domino  fall  falling  domino  touch  another  distance  wa  strictly  le  height  falling  domino  domino  necessarily  adjacent  course  shark  easily  drop  domino  way  goal  drop  domino  minimum  cost  cost  destruction  sum  cost  domino  shark  need  push  make  domino  fall  simon  ha  already  previous  subject  smart  enough  win  help  semyon  determine  minimum  total  cost  domino  push  make  domino  fall  order  reduce  input  size  height  cost  domino  described  block  contains  block  total  domino  semyon  must  drop  description  block  follow  description  every  block  consists  block  description  contains  single  domino  block  second  block  description  contains  height  domino  block  third  contains  cost  domino  block  domino  sequence  described  left  right  description  contains  single  n  block  sequence  domino  sequence  following  contains  u  denoting  next  domino  domino  block  cost  multiplied  guaranteed  every  block  used  sequence  least  print  exactly  minimum  cost  make  domino  fall
608/B __label__strings  genos  need  help  wa  asked  solve  following  programming  problem  saitama  length  string  denoted  hamming  distance  string  equal  length  defined  character  character  example  hamming  distance  string  string  given  binary  string  find  sum  hamming  distance  contiguous  substring  length  input  contains  binary  string  second  input  contains  binary  string  string  guaranteed  consist  character  print  single  sum  hamming  distance  contiguous  substring  length
486/B __label__implementation  __label__greedy  let  define  logical  operation  logical  value  value  belong  set  equal  either  logical  value  set  otherwise  define  logical  logical  value  manner  equal  otherwise  equal  nam  ha  matrix  consisting  row  column  row  numbered  column  numbered  element  row  column  denoted  aij  element  either  matrix  nam  creates  another  matrix  size  using  formula  bij  element  row  column  matrix  nam  give  matrix  challenge  guess  matrix  although  nam  smart  could  probably  make  mistake  calculating  matrix  since  size  large  contains  row  column  matrix  respectively  next  separated  space  describing  row  matrix  element  either  print  nam  ha  made  mistake  calculating  otherwise  print  yes  yes  print  row  consisting  representing  matrix  produce  given  matrix  several  solution  print
855/F __label__data  structures  __label__binary  search  nagini  horcrux  know  created  murder  bertha  jorkins  ha  accumulated  army  snake  launching  attack  hogwarts  school  hogwarts  entrance  imagined  straight  axis  nagini  launching  various  snake  hogwarts  entrance  snake  land  parallel  entrance  covering  segment  distance  formally  snake  imagined  segment  point  note  positive  negative  let  coordinate  snake  point  point  point  containing  snake  hold  point  containing  snake  hold  danger  value  coordinate  exist  danger  value  harry  want  calculate  danger  value  various  segment  hogwarts  entrance  danger  value  segment  entrance  calculated  taking  sum  danger  value  coordinate  present  segment  formally  implement  type  query  snake  added  parallel  entrance  coordinate  inclusive  exclusive  calculate  danger  value  segment  inclusive  exclusive  input  contains  single  denoting  query  next  describe  query  query  description  contains  query  type  typei  ypei  followed  description  query  case  type  followed  k  otherwise  contains  output  answer  query  type  separate
812/C __label__sortings  __label__binary  search  trip  luxor  aswan  sagheer  went  nubian  market  buy  souvenir  friend  relative  market  ha  strange  rule  contains  different  item  numbered  item  ha  base  cost  egyptian  pound  sagheer  buy  item  index  cost  item  axj  j  word  cost  item  equal  base  cost  addition  index  multiplied  factor  sagheer  want  buy  many  souvenir  possible  without  paying  egyptian  pound  note  buy  souvenir  many  way  maximize  souvenir  choose  way  minimize  total  cost  help  task  contains  souvenir  market  sagheer  budget  second  contains  space  separated  base  cost  souvenir  single  print  maximum  souvenir  sagheer  buy  minimum  total  cost  buy  souvenir
925/C __label__math  __label__constructive  algorithms  vitya  ha  learned  answer  ultimate  question  life  universe  everything  increasing  sequence  order  reveal  secret  earlier  needed  vitya  encrypted  answer  obtained  sequence  using  following  rule  bitwise  xor  easy  see  original  sequence  obtained  using  rule  time  later  vitya  discovered  cypher  got  shuffled  happen  decrypted  using  rule  mentioned  produce  sequence  increasing  order  save  reputation  scientific  community  vasya  decided  find  permutation  sequence  strictly  increasing  help  find  permutation  determine  impossible  contains  single  second  contains  valid  permutation  print  single  containing
989/C __label__graphs  __label__constructive  algorithms  boat  drift  river  wood  full  blossom  show  riverfront  mino  exclaims  delight  breathtakingly  amazing  like  look  kanno  got  paintbrush  got  word  try  shall  kind  flower  wood  amaranth  begonia  centaurea  dianthus  wood  represented  rectangular  grid  row  column  cell  grid  exactly  type  flower  according  mino  connected  component  formed  kind  flower  respectively  cell  considered  connected  component  path  exists  move  cell  sharing  common  edge  pass  cell  containing  flower  help  kanno  depict  grid  flower  arbitrarily  chosen  constraint  given  shown  least  solution  exists  constraint  problem  note  choose  arbitrary  constraint  given  input  input  contains  space  separated  required  connected  component  amaranth  begonia  centaurea  dianthus  respectively  output  space  separated  row  column  grid  respectively
630/O __label__geometry  petya  ha  recently  started  working  programmer  city  company  develops  computer  game  besides  game  mechanic  implementation  create  game  necessary  create  tool  program  used  game  designer  create  game  level  petya  assignment  create  tool  allows  paint  different  arrow  screen  user  tool  choose  point  screen  specify  vector  arrow  direction  vary  several  parameter  get  required  graphical  effect  version  program  petya  decided  limit  parameter  arrow  following  point  coordinate  nonzero  vector  coordinate  positive  scalar  produced  arrow  following  property  arrow  consists  triangle  rectangle  triangle  isosceles  base  length  altitude  length  perpendicular  base  rectangle  side  length  point  situated  middle  triangle  base  middle  side  rectangle  ha  length  area  intersection  triangle  rectangle  direction  point  triangle  vertex  opposite  base  containing  point  coincides  direction  vector  enumerate  arrow  point  coordinate  counter  clockwise  order  starting  tip  input  contains  x  x  output  coordinate  arrow  point  counter  clockwise  order  coordinate  relative  absolute  error  greater
1223/D __label__dp  __label__greedy  given  sequence  consisting  apply  following  operation  sequence  choose  move  element  equal  either  beginning  end  note  move  element  direction  operation  example  get  following  sequence  operation  convenience  denote  element  equal  element  move  element  beginning  move  element  end  move  element  beginning  move  element  end  move  element  beginning  move  element  end  determine  minimum  operation  sequence  becomes  sorted  non  descending  order  non  descending  order  mean  condition  satisfied  note  answer  independent  query  contains  query  query  represented  consecutive  query  contains  element  second  query  contains  element  guaranteed  sum  doe  exceed  query  print  minimum  operation  sorting  sequence  non  descending  order
400/B __label__implementation  __label__brute  force  inna  like  sweet  game  called  candy  matrix  today  came  new  game  candy  matrix  reload  field  new  game  rectangle  table  size  n  table  contains  cell  dwarf  figurine  cell  candy  cell  empty  game  last  several  move  move  player  choose  matrix  dwarf  cell  candy  shout  let  dwarf  chosen  start  simultaneously  move  right  second  dwarf  go  adjacent  cell  located  right  current  cell  movement  continues  following  event  occurs  dwarf  chosen  located  rightmost  cell  row  dwarf  chosen  located  cell  candy  point  game  transport  dwarf  candy  cell  inna  fabulous  came  interesting  game  task  play  game  optimally  well  specifically  say  given  game  field  minimum  move  player  need  reach  goal  game  input  contains  next  character  game  field  candy  martix  reload  character  represents  empty  cell  field  character  represents  dwarf  character  represents  candy  matrix  character  guaranteed  contains  exactly  character  character  single  print  single  either  minimum  move  needed  achieve  aim  game  aim  achieved  given  game  field
618/C __label__implementation  __label__geometry  cat  noku  ha  obtained  map  night  sky  map  found  constellation  star  numbered  star  located  coordinate  star  located  position  evening  noku  going  take  look  night  sky  would  like  find  distinct  star  form  triangle  triangle  must  positive  area  addition  star  must  lie  strictly  outside  triangle  trouble  finding  answer  would  like  help  job  find  index  star  would  form  triangle  satisfies  condition  guaranteed  star  lie  proven  previous  condition  satisfied  exists  solution  problem  input  contains  single  next  contains  guaranteed  star  lie  point  doe  exist  star  lie  print  distinct  single  index  point  form  triangle  satisfies  condition  stated  problem
450/B __label__math  __label__implementation  jzzhu  ha  invented  kind  sequence  meet  following  property  given  please  calculate  modulo  contains  second  contains  single  output  single  representing  modulo
471/E __label__data  structures  polar  bear  menshykov  uslada  zoo  petersburg  elephant  horace  zoo  kiev  decided  painting  trying  create  masterpiece  made  draft  piece  paper  draft  consists  segment  segment  wa  either  horizontal  vertical  friend  want  simplify  draft  deleting  segment  part  segment  final  masterpiece  meet  condition  horace  want  able  paint  whole  picture  stroke  putting  brush  paper  never  taking  picture  ready  brush  paint  place  multiple  time  remaining  segment  must  form  single  connected  shape  menshykov  want  resulting  shape  simple  defines  simple  shape  shape  cycle  initially  segment  draft  startpoint  endpoint  coordinate  uslada  like  real  coordinate  want  condition  fulfilled  change  part  draft  already  beautiful  friend  decided  delete  part  draft  sum  length  remaining  segment  large  possible  task  count  maximum  sum  length  remain  extra  segment  removed  input  contains  segment  draft  next  startpoint  endpoint  coordinate  segment  segment  non  degenerative  either  strictly  horizontal  strictly  vertical  horizontal  segment  share  common  point  vertical  segment  share  common  point  print  single  maximum  sum  length  remaining  segment
1179/D __label__dp  __label__data  structures  __label__trees  fedor  run  president  byteland  debate  asked  solve  byteland  transport  problem  really  hard  problem  byteland  transport  system  tree  connected  graph  without  cycle  fedor  team  ha  found  ministry  transport  byteland  money  budget  additional  road  debate  going  say  build  road  way  maximize  distinct  simple  path  country  simple  path  path  go  every  vertex  simple  path  named  distinct  set  edge  distinct  byteland  science  deteriorated  fedor  team  succeeded  find  scientist  answer  many  distinct  simple  path  achieve  adding  exactly  edge  transport  system  help  fedor  solve  edge  added  vertex  already  connected  loop  problem  consider  simple  path  length  least  contains  vertex  byteland  transport  system  following  contains  guaranteed  graph  tree  print  exactly  maximal  simple  path  achieved  adding  edge
448/D __label__brute  force  __label__binary  search  bizon  champion  charming  smart  learning  multiplication  table  bizon  champion  fun  manner  bizon  champion  painted  n  multiplication  table  element  intersection  row  column  equal  row  column  table  numbered  starting  wa  asked  table  largest  bizon  champion  always  answered  correctly  immediately  repeat  success  consider  given  multiplication  table  write  table  non  decreasing  order  write  called  largest  single  contains  print  largest  n  multiplication  table
1000/E __label__dfs  __label__graphs  __label__trees  friend  developing  computer  game  ha  already  decided  game  world  look  like  consist  location  connected  way  passage  passage  designed  way  possible  get  location  location  course  passage  guarded  monster  everywhere  without  difficulty  fun  right  crucial  passage  guarded  really  fearsome  monster  requiring  hero  prepare  battle  designing  tactic  defeating  commonly  kind  monster  called  boss  friend  want  help  place  boss  game  start  location  end  location  location  chosen  choosing  location  friend  place  bos  passage  impossible  get  without  using  passage  friend  want  place  much  boss  possible  challenge  mean  fun  right  asks  help  determine  maximum  possible  boss  considering  location  chosen  contains  n  location  passage  respectively  follow  containing  describing  endpoint  passage  guaranteed  pair  location  directly  connected  passage  location  reachable  location  print  maximum  boss  friend  place  considering  possible  choice
366/E __label__math  __label__implementation  __label__brute  force  dima  love  inna  much  decided  write  song  dima  ha  magic  guitar  string  fret  dima  make  guitar  produce  sound  like  play  note  need  hold  string  fret  pull  string  dima  pull  string  holding  fret  guitar  produce  note  let  denote  aij  know  dima  guitar  produce  distinct  note  possible  note  produced  multiple  way  word  possible  aij  pq  dima  ha  already  written  song  sequence  note  order  play  song  need  consecutively  produce  note  song  guitar  produce  note  available  way  dima  understood  many  way  play  song  want  play  make  song  look  complicated  possible  try  act  like  cobein  represent  way  play  song  sequence  pair  string  fret  produce  note  song  complexity  moving  pair  equal  complexity  way  play  song  maximum  complexity  moving  adjacent  pair  help  dima  determine  maximum  complexity  way  play  song  guy  got  ta  look  cool  input  contains  follow  containing  aij  ij  row  column  aij  mean  note  guitar  produce  string  fret  last  input  contains  sequence  note  song  single  print  single  maximum  possible  complexity  song
681/E __label__sortings  __label__geometry  dima  living  dormitory  well  cockroach  moment  dima  saw  cockroach  running  table  decided  kill  dima  need  exactly  second  aiming  precisely  strike  cockroach  finish  survive  cockroach  ha  run  shadow  cast  round  plate  standing  table  second  shadow  casted  plate  ha  shape  circle  shadow  circle  intersect  nest  overlap  arbitrarily  cockroach  us  following  strategy  equiprobably  pick  direction  run  towards  run  towards  constant  speed  moment  reach  shadow  circle  immediately  stop  shadow  thus  stay  alive  otherwise  cockroach  killed  dima  precise  strike  consider  dima  precise  strike  instant  determine  probability  cockroach  stay  alive  input  given  cockroach  initial  position  table  cartesian  system  moment  cockroach  constant  speed  time  second  dima  need  aiming  respectively  next  given  shadow  circle  casted  plate  next  shadow  circle  description  given  ith  consists  ith  shadow  circle  table  position  cartesian  system  radius  respectively  consider  table  big  enough  cockroach  run  table  edge  avoid  dima  precise  strike  print  real  probability  cockroach  stay  alive
844/B __label__math  given  n  table  cell  table  colored  white  black  find  non  empty  set  cell  cell  set  color  every  cell  set  share  row  column  input  contains  row  column  correspondingly  next  input  description  row  separated  space  equal  corresponding  cell  colored  white  equal  corresponding  cell  colored  black  output  single  non  empty  set  problem  description
1129/B __label__constructive  algorithms  consider  following  problem  given  array  containing  indexed  find  max  l  max  problem  attempt  solve  problem  described  alice  quickly  came  blazing  fast  greedy  algorithm  coded  implementation  pseudocode  follows  function  findanswer  assumes  inclusive  assumes  list  containing  cur  cur  cur  cur  cur  max  cur  return  see  alice  idea  entirely  correct  example  suppose  findanswer  would  return  correct  answer  told  alice  solution  incorrect  believe  said  given  find  sequence  correct  answer  answer  produced  alice  algorithm  differ  exactly  note  although  choice  content  sequence  must  still  follow  constraint  earlier  given  absolute  value  element  doe  exceed  sequence  determine  contains  sought  sequence  print
732/E __label__greedy  __label__sortings  icm  acpc  world  final  coming  unfortunately  organizer  competition  busy  preparing  task  totally  missed  important  technical  point  organization  electricity  supplement  participant  workstation  computer  participant  ha  power  equal  positive  time  socket  available  ha  power  euqal  positive  possible  connect  computer  socket  power  allowed  connect  computer  socket  thus  power  computer  socket  distinct  computer  connected  socket  order  fix  situation  professor  puch  williams  urgently  ordered  wagon  adapter  power  splitter  adapter  ha  plug  socket  voltage  divider  plugging  adapter  socket  power  power  adapter  socket  becomes  equal  mean  equal  socket  power  divided  rounding  example  adapter  used  possible  connect  several  adapter  chain  plugging  socket  example  adapter  plugged  enother  socket  power  becomes  possible  connect  computer  power  socket  organizer  install  adapter  possible  supply  electricity  maximum  computer  time  several  possible  connection  configuration  want  find  us  minimum  adapter  connect  computer  help  organizer  calculate  maximum  connected  computer  minimum  adapter  needed  wagon  adapter  contains  enough  task  guaranteed  possible  connect  least  computer  contains  computer  socket  second  contains  power  computer  third  contains  power  socket  print  maximum  computer  time  connected  electricity  minimum  adapter  needed  connect  computer
797/F __label__dp  __label__greedy  __label__data  structures  __label__sortings  day  masha  came  home  noticed  mouse  corridor  flat  course  shouted  loudly  scared  mouse  started  run  hole  corridor  corridor  represeted  numeric  axis  mouse  hole  ith  mouse  coordinate  jth  hole  coordinate  jth  hole  ha  enough  room  mouse  mouse  enter  hole  minimum  sum  distance  mouse  hide  hole  ith  mouse  go  hole  distance  print  minimum  sum  distance  contains  mouse  hole  respectively  second  contains  coordinate  ith  mouse  next  pair  j  j  coordinate  jth  hole  maximum  mouse  hide  hole  print  minimum  sum  distance  solution  print  instead
960/A __label__implementation  ha  string  consisting  lowercase  english  letter  give  friend  appends  letter  end  string  since  like  character  made  sure  point  least  exist  string  give  string  appends  letter  end  string  since  good  friend  letter  appends  equal  string  possible  letter  equal  letter  letter  time  string  hand  want  check  possible  obtain  string  way  possible  obtain  string  print  yes  otherwise  print  without  quote  consists  string  guaranteed  string  consist  lowercase  english  letter  print  yes  according  condition
675/E __label__dp  __label__greedy  __label__data  structures  vasya  commute  train  every  day  train  station  city  station  possible  buy  ticket  station  inclusive  ticket  sold  last  station  let  minimum  ticket  need  buy  order  get  station  station  vasya  fond  different  useless  statistic  asks  compute  sum  value  pair  input  contains  single  station  second  contains  mean  station  buy  ticket  station  inclusive  print  sum  pair
993/B __label__brute  force  participant  given  pair  distinct  exactly  present  pair  want  figure  match  using  communication  channel  access  without  revealing  participant  communicated  set  pair  includes  pair  given  pair  communicated  set  comprises  different  determine  certainty  deduce  common  determine  certainty  participant  know  contains  pair  participant  communicated  second  vice  versa  second  contains  pair  pair  communicated  participant  second  third  contains  pair  pair  communicated  second  participant  pair  set  distinct  particular  pair  pair  set  pair  contains  twice  guaranteed  set  contradict  statement  word  pair  set  pair  second  set  share  exactly  deduce  shared  certainty  print
558/C __label__math  __label__greedy  __label__graphs  __label__brute  force  amr  love  chemistry  specially  experiment  preparing  new  interesting  experiment  amr  ha  different  type  chemical  chemical  ha  initial  volume  liter  experiment  amr  ha  mix  chemical  together  chemical  volume  must  equal  task  make  chemical  volume  equal  amr  different  kind  operation  choose  chemical  double  current  volume  new  volume  ai  choose  chemical  divide  volume  division  new  volume  suppose  chemical  contained  vessel  infinite  volume  amr  wonder  minimum  operation  required  make  chemical  volume  equal  contains  chemical  second  contains  space  separated  representing  initial  volume  chemical  liter  output  minimum  operation  required  make  chemical  volume  equal
1011/B __label__implementation  __label__brute  force  __label__binary  search  natasha  planning  expedition  mar  people  important  task  provide  food  participant  warehouse  ha  daily  food  package  package  ha  food  type  participant  must  eat  exactly  food  package  day  due  extreme  load  participant  must  eat  food  type  throughout  expedition  different  participant  eat  different  type  food  formally  participant  natasha  select  food  type  day  participant  eat  food  package  type  value  different  participant  different  maximum  possible  day  expedition  last  following  requirement  contains  expedition  participant  daily  food  package  available  second  contains  sequence  type  food  package  print  single  day  expedition  last  possible  plan  expedition  even  day  print
917/B __label__dp  __label__dfs  __label__graphs  know  max  best  video  game  player  friend  friend  jealous  created  actual  game  prove  best  game  game  played  directed  acyclic  graph  dag  vertex  edge  character  written  edge  lowercase  english  letter  max  lucas  playing  game  max  go  lucas  max  player  ha  marble  initially  located  vertex  player  turn  move  marble  along  edge  player  move  marble  vertex  vertex  outgoing  edge  player  move  marble  vertex  vertex  character  round  character  written  edge  additional  rule  ascii  code  character  round  greater  equal  ascii  code  character  round  round  numbered  player  together  max  go  odd  lucas  go  even  player  make  move  loses  game  marble  vertex  time  since  game  could  take  lucas  max  focus  finding  dart  time  play  asked  play  optimally  win  game  determine  winner  game  initial  position  marble  input  contains  next  edge  contains  lowercase  english  letter  meaning  edge  written  v  edge  pair  vertex  guaranteed  graph  acyclic  print  string  length  character  max  win  game  case  marble  initially  vertex  lucas  marble  initially  vertex  otherwise
1096/F __label__math  __label__dp  permutation  size  array  size  occurs  exactly  array  inversion  permutation  pair  index  example  permutation  contains  inversion  given  permutation  size  position  replaced  let  valid  permutation  replacement  sequence  back  way  resulting  sequence  permutation  size  given  sequence  wa  turned  valid  permutation  randomly  equal  probability  getting  valid  permutation  calculate  expected  total  inversion  resulting  valid  permutation  shown  form  non  negative  report  value  mod  contains  single  length  sequence  second  contains  initial  sequence  guaranteed  element  equal  pairwise  distinct  print  single  expected  total  inversion  resulting  valid  permutation
955/B __label__implementation  let  call  string  adorable  letter  realigned  way  form  consequent  group  equal  symbol  note  different  group  must  different  symbol  example  ababa  adorable  transform  aaabb  letter  form  group  others  group  cccc  since  possible  consequent  partition  letter  group  coincide  given  string  check  whether  split  non  empty  subsequence  string  formed  subsequence  adorable  subsequence  arbitrary  set  index  string  contains  consisting  lowercase  latin  letter  print  yes  string  split  according  criterion  otherwise
1194/B __label__implementation  given  picture  consisting  row  column  row  numbered  top  bottom  column  numbered  left  right  cell  painted  either  black  white  think  picture  interesting  enough  consider  picture  interesting  least  cross  cross  represented  pair  cell  row  cell  column  painted  black  example  picture  cross  fourth  picture  contains  cross  following  image  cross  brush  black  paint  make  picture  interesting  minute  choose  white  cell  paint  black  minimum  minute  spend  resulting  picture  contains  least  cross  asked  answer  multiple  independent  query  contains  query  query  contains  n  row  column  picture  next  contains  character  cell  painted  white  cell  painted  black  guaranteed  print  single  answer  query  minimum  minute  spend  resulting  picture  contains  least  cross
630/A __label__number  theory  manager  wa  disappointed  last  applicant  failed  interview  way  previous  give  hard  task  manager  thought  raise  power  get  last  digit  yes  course  rather  big  find  power  using  calculator  need  people  able  think  follow  instruction  could  pas  interview  machine  vision  company  city  input  contains  single  power  need  raise  output  last  digit  without  space
797/E __label__dp  __label__data  structures  __label__brute  force  array  positive  greater  process  query  array  query  represented  several  operation  performed  query  operation  change  operation  applied  becomes  greater  answer  query  performed  operation  contains  second  contains  element  third  containts  follow  contains  value  corresponding  query  print  ith  must  equal  answer  ith  query
990/A __label__math  __label__implementation  berland  football  cup  start  really  soon  commentator  world  come  event  organizer  already  built  commentary  box  regional  delegation  come  cup  every  delegation  get  commentary  box  box  left  unoccupied  delegation  upset  box  occupied  exactly  delegation  divisible  impossible  distribute  box  delegation  moment  organizer  build  new  commentary  box  paying  burles  demolish  commentary  box  paying  burles  build  demolish  box  arbitrary  time  time  paying  corresponding  fee  allowed  demolish  existing  box  minimal  amount  burles  organizer  pay  satisfy  delegation  make  box  divisible  contains  b  initial  commentary  box  delegation  come  fee  build  box  fee  demolish  box  output  minimal  amount  burles  organizer  pay  satisfy  delegation  make  box  divisible  allowed  final  box  equal
574/A __label__implementation  __label__greedy  limak  grizzly  bear  desire  power  adoration  want  win  upcoming  election  rule  bearland  candidate  including  limak  know  many  citizen  going  vote  candidate  candidate  would  get  vote  limak  candidate  win  election  must  get  strictly  vote  candidate  victory  important  everything  else  limak  decided  cheat  steal  vote  opponent  bribing  citizen  bribe  citizen  limak  must  give  candy  citizen  bear  bear  like  candy  limak  many  candy  wonder  many  citizen  doe  bribe  contains  single  candidate  second  contains  space  separated  vote  candidate  limak  candidate  note  bribing  vote  candidate  might  might  greater  print  minimum  citizen  limak  must  bribe  strictly  vote  candidate
1198/A __label__sortings  common  way  digitalizing  sound  record  sound  intensity  particular  time  moment  time  moment  intensity  recorded  non  negative  thus  represent  sound  file  array  non  negative  exactly  distinct  value  array  need  log  bit  store  value  take  bit  store  whole  file  reduce  memory  consumption  need  apply  compression  common  way  reduce  possible  intensity  value  choose  intensity  value  changed  following  way  intensity  value  range  change  le  change  greater  change  see  lose  low  high  intensity  task  apply  compression  way  file  fit  onto  disk  size  byte  changed  element  array  minimal  possible  remind  byte  contains  bit  smallest  particular  contains  length  array  size  disk  byte  respectively  next  contains  array  denoting  sound  file  print  single  minimal  possible  changed  element
380/B __label__implementation  __label__graphs  sereja  adores  tree  today  came  revolutionary  new  type  binary  root  tree  new  tree  consists  level  vertex  indexed  level  vertex  current  level  tree  root  level  index  pseudo  code  tree  construction  global  data  array  cnt  left  right  cnt  fill  array  left  right  value  level  level  level  level  cnt  level  position  position  cnt  level  position  position  value  position  power  left  level  position  cnt  level  right  level  position  cnt  level  cnt  level  cnt  level  else  right  level  position  cnt  level  cnt  level  cnt  level  pseudo  code  run  cell  cnt  level  contains  vertex  level  level  cell  left  level  position  contains  vertex  level  level  left  child  vertex  index  level  osition  contains  vertex  left  child  similarly  cell  right  level  position  responsible  right  child  see  tree  look  like  note  serja  love  make  thing  complicated  made  tree  added  empty  set  level  osition  vertex  sereja  executes  operation  operation  following  type  format  operation  vertex  level  osition  level  losition  add  value  set  level  osition  format  operation  vertex  level  osition  level  osition  find  union  set  vertex  subtree  vertex  level  osition  print  size  union  set  help  sereja  execute  operation  problem  set  contains  distinct  value  like  std  set  contains  next  description  operation  operation  type  given  nt  operation  second  type  given  nt  operation  second  type  print  answer  single
1099/A __label__implementation  today  morning  wa  exceptionally  snowy  meshanya  decided  outside  noticed  huge  snowball  rolling  mountain  luckily  stone  mountain  initially  snowball  height  ha  weight  second  following  sequence  event  happens  snowball  weight  increase  current  height  snowball  snowball  hit  stone  present  current  height  snowball  move  meter  snowball  reach  height  stop  exactly  stone  mountain  stone  ha  weight  located  height  second  respectively  snowball  hit  either  stone  loses  weight  equal  weight  stone  snowball  ha  negative  weight  weight  becomes  snowball  continues  moving  find  weight  snowball  stop  moving  reach  height  contains  initial  weight  height  snowball  second  contains  weight  height  stone  third  contains  weight  heigth  second  stone  notice  stone  always  different  height  output  single  final  weight  snowball  reach  height
677/A __label__implementation  vanya  friend  walking  along  fence  height  want  guard  notice  order  achieve  height  friend  exceed  height  person  greater  bend  surely  noticed  guard  height  person  equal  consider  width  person  walking  usual  equal  width  bent  person  equal  friend  want  talk  walking  would  like  walk  single  row  minimum  width  road  friend  walk  row  remain  unattended  guard  input  contains  friend  height  fence  respectively  second  contains  h  equal  height  person  print  single  minimum  possible  valid  width  road
1046/C __label__greedy  formula  official  decided  introduce  new  competition  car  replaced  space  ship  point  awarded  differ  per  race  given  current  ranking  competition  point  distribution  next  race  task  calculate  best  possible  ranking  given  astronaut  next  race  guaranteed  given  astronaut  unique  point  race  contains  representing  astronaut  current  position  astronaut  want  calculate  best  ranking  competitor  point  race  second  contains  separated  single  space  representing  current  ranking  astronaut  point  sorted  non  increasing  order  third  contains  separated  single  space  representing  point  award  next  race  point  sorted  non  increasing  order  winner  race  get  maximum  point  output  contains  best  possible  ranking  astronaut  race  multiple  astronaut  score  race  share  best  ranking
1082/G __label__graphs  petya  ha  simple  graph  graph  without  loop  multiple  edge  consisting  vertex  edge  weight  vertex  weight  edge  subgraph  graph  set  graph  vertex  set  graph  edge  set  edge  must  meet  condition  end  edge  set  must  belong  chosen  set  vertex  weight  subgraph  sum  weight  edge  minus  sum  weight  vertex  need  find  maximum  weight  subgraph  given  graph  given  graph  doe  loop  multiple  edge  contains  vertex  edge  graph  respectively  next  contains  weight  vertex  graph  following  edge  edge  defined  triple  triple  mean  vertex  edge  weight  guaranteed  graph  doe  loop  multiple  edge  print  maximum  weight  subgraph  given  graph
578/A __label__math  __label__geometry  polyline  going  point  kx  kx  know  polyline  pass  point  find  minimum  positive  value  true  determine  containing  positive  output  containing  answer  answer  considered  correct  relative  absolute  error  exceed  output  answer
37/B __label__implementation  __label__greedy  vasya  elder  brother  petya  love  playing  computer  game  favourite  computer  game  petya  reached  final  level  fight  bos  take  place  playing  game  petya  found  spell  scroll  use  let  describe  way  fighting  go  level  bos  ha  parameter  max  initial  amount  health  reg  regeneration  rate  per  second  every  scroll  ha  parameter  powi  spell  power  measured  percent  maximal  amount  health  counted  initial  allows  use  scroll  bos  ha  powi  percent  health  scroll  used  dmgi  damage  per  second  inflicted  upon  bos  scroll  used  soon  scroll  used  disappears  another  spell  cast  upon  bos  inflicts  dmgi  damage  per  second  upon  end  game  battle  action  per  second  performed  following  order  bos  get  damage  spell  cast  upon  regenerates  reg  health  time  max  health  player  use  another  scroll  per  second  bos  considered  defeated  end  second  ha  nonpositive  amount  health  help  petya  determine  whether  win  set  scroll  available  determine  minimal  second  need  contains  max  reg  ax  eg  amount  scroll  parameter  bos  next  powi  dmgi  parameter  scroll  owi  mgi  case  petya  complete  level  output  single
1159/B __label__math  __label__implementation  let  call  array  non  negative  extension  non  negative  possible  pair  index  inequalityin  satisfied  expansion  coefficient  array  maximal  array  extension  array  expansion  expansion  coefficient  always  exists  given  array  non  negative  find  expansion  coefficient  contains  positive  element  array  next  contains  non  negative  separated  space  print  non  negative  expansion  coefficient  array
1223/E __label__dp  __label__sortings  __label__trees  given  weighted  tree  consisting  vertex  recall  tree  connected  graph  without  cycle  vertex  connected  edge  weight  let  define  coloring  tree  assignment  exactly  color  vertex  color  used  time  assume  infinitely  many  color  available  say  edge  saturated  given  coloring  endpoint  share  least  color  exists  color  assigned  endpoint  let  define  value  coloring  sum  weight  saturated  edge  please  calculate  maximum  possible  value  coloring  given  tree  answer  independent  query  contains  query  query  contains  vertex  tree  color  assign  vertex  respectively  next  describes  edge  tree  edge  denoted  label  vertex  connects  weight  edge  guaranteed  given  edge  form  tree  guaranteed  sum  query  doe  exceed  query  print  maximum  value  coloring  given  tree
1181/E2 __label__greedy  __label__sortings  __label__brute  force  problem  differs  previous  problem  constraint  petya  decided  visit  byteland  summer  holiday  turned  history  country  quite  unusual  initially  different  country  land  berland  country  territory  wa  represented  rectangle  map  side  rectangle  parallel  ax  corner  located  point  coordinate  territory  country  intersected  wa  possible  territory  touched  time  passed  sometimes  country  merged  happened  union  territory  wa  rectangle  end  country  remained  byteland  initially  country  rectangular  castle  inside  territory  side  parallel  ax  corner  coordinate  castle  might  touch  border  corresponding  country  side  castle  miraculously  union  castle  still  intact  unfortunately  location  information  restore  initial  territory  country  possible  formation  byteland  castle  shown  blue  petya  wonder  information  initial  country  remained  suspected  whole  story  fake  recommended  smart  person  please  check  whether  exists  possible  set  initial  territory  could  make  story  true  contains  single  country  castle  next  contains  coordinate  castle  coordinate  lower  left  corner  coordinate  upper  right  corner  guaranteed  castle  intersect  touch  exists  possible  set  territory  satisfies  story  print  yes  otherwise  print
476/E __label__dp  __label__strings  dreamoon  ha  string  pattern  string  remove  exactly  character  obtaining  string  result  calculates  defined  maximal  non  overlapping  substring  equal  found  want  make  big  possible  formally  let  define  maximum  value  obtained  removing  exactly  character  dreamoon  want  know  denotes  length  string  input  contains  string  second  input  contains  string  string  consist  lower  case  english  letter  print  space  separated  single  representing
638/C __label__greedy  __label__dfs  __label__graphs  __label__trees  berland  city  bidirectional  road  road  connects  pair  city  city  get  using  given  road  city  exactly  repair  brigade  repair  road  need  team  based  city  connected  road  work  simultaneously  day  brigade  repair  road  whole  day  take  part  repairing  road  day  repair  brigade  nothing  day  determine  minimum  day  needed  repair  road  brigade  change  city  initially  input  contains  positive  city  berland  next  contains  meaning  road  connects  city  city  uii  print  minimum  day  needed  repair  road  berland
954/G __label__greedy  __label__data  structures  __label__binary  search  today  going  lead  group  elven  archer  defend  castle  attacked  army  angry  orcs  side  castle  protected  impassable  mountain  remaining  side  occupied  long  wall  split  section  moment  exactly  archer  located  section  wall  know  archer  stand  section  shoot  orcs  attack  section  located  distance  exceeding  section  particular  mean  archer  capable  shooting  orcs  attack  section  denote  defense  level  section  total  archer  shoot  orcs  attacking  section  reliability  defense  plan  minimum  value  defense  level  individual  wall  section  little  time  left  till  attack  redistribute  archer  already  located  wall  reserve  archer  distribute  wall  section  arbitrary  way  would  like  achieve  maximum  possible  reliability  defence  plan  input  contains  section  wall  maximum  distance  section  archer  still  shoot  archer  distributed  along  wall  second  contains  current  archer  section  print  maximum  possible  value  defense  plan  reliability  maximum  possible  value  minimum  defense  level  distribute  additional  archer  optimally
639/B __label__graphs  __label__trees  __label__constructive  algorithms  tree  connected  undirected  graph  consisting  vertex  edge  vertex  numbered  limak  little  polar  bear  radewoosh  evil  enemy  limak  tree  radewoosh  stolen  bear  sad  remember  much  tree  tell  value  tree  exactly  vertex  tree  diameter  word  wa  biggest  distance  vertex  limak  remembers  rooted  tree  vertex  height  wa  word  wa  biggest  distance  vertex  vertex  distance  vertex  tree  edge  simple  path  help  limak  restore  tree  check  whether  exists  tree  satisfying  given  condition  find  tree  print  edge  order  possible  limak  made  mistake  suitable  tree  case  print  contains  vertex  diameter  height  rooting  vertex  respectively  tree  matching  limak  remembers  print  without  quote
1070/F __label__greedy  election  berland  coming  candidate  alice  bob  main  berland  channel  plan  show  political  debate  people  want  take  part  debate  spectator  person  described  influence  political  view  kind  political  view  supporting  none  candidate  kind  denoted  supporting  alice  bob  kind  denoted  supporting  bob  alice  kind  denoted  supporting  candidate  kind  denoted  direction  channel  want  invite  people  debate  set  invited  spectator  satisfy  condition  least  half  spectator  support  alice  spectator  supporting  alice  total  spectator  least  half  spectator  support  bob  spectator  supporting  bob  total  spectator  total  influence  spectator  maximal  possible  help  channel  direction  select  non  empty  set  spectator  tell  impossible  contains  people  want  take  part  debate  spectator  people  described  next  describes  single  person  contains  string  separated  space  denotes  person  political  view  possible  value  influence  person  print  single  maximal  possible  total  influence  set  spectator  least  half  support  alice  least  half  support  bob  impossible  print  instead
1157/D __label__math  __label__greedy  __label__constructive  algorithms  polycarp  ha  solve  exactly  problem  improve  programming  skill  important  programming  competition  competition  held  soon  precisely  start  day  mean  polycarp  ha  exactly  day  training  polycarp  want  procrastinate  want  solve  least  problem  day  want  overwork  solves  problem  day  solve  problem  next  day  last  want  improve  skill  solves  problem  day  solve  least  problem  next  day  formally  let  array  problem  solved  polycarp  element  array  problem  polycarp  solves  day  training  following  condition  must  satisfied  sum  greater  condition  satisfied  problem  find  array  length  satisfying  condition  say  impossible  input  contains  problem  polycarp  want  solve  day  polycarp  want  train  impossible  find  array  length  satisfying  polycarp  rule  training  print
625/B __label__greedy  __label__constructive  algorithms  __label__strings  long  time  ago  galaxy  far  far  away  giant  corporation  pineapple  gogol  continue  fierce  competition  crucial  moment  around  corner  gogol  ready  release  new  tablet  lastus  new  device  equipped  specially  designed  artificial  intelligence  employee  pineapple  best  postpone  release  lastus  long  possible  finally  found  name  new  artificial  intelligence  similar  name  phone  pineapple  released  year  ago  right  name  belong  pineapple  stand  changing  name  gogol  artificial  intelligence  pineapple  insists  name  phone  occurs  name  substring  name  technology  wa  already  printed  device  gogol  director  decided  replace  character  name  operation  pretty  expensive  find  minimum  character  replace  name  name  phone  substring  substring  continuous  subsequence  string  input  contains  name  designed  gogol  length  exceed  character  second  contains  name  phone  released  pineapple  year  ago  length  exceed  string  non  empty  consist  small  english  letter  print  minimum  character  must  replaced  order  obtain  name  phone  occur  name  substring
696/E __label__data  structures  __label__trees  barney  searching  dream  girl  life  nyc  nyc  ha  junction  numbered  road  connecting  consider  nyc  rooted  tree  root  junction  girl  live  nyc  life  along  junction  weight  initially  equal  pound  barney  consider  girl  better  girl  girl  ha  weight  strictly  le  girl  girl  girl  equal  weight  index  girl  living  junction  index  strictly  le  girl  living  junction  index  thus  girl  always  better  another  next  day  event  happens  day  type  event  barney  go  junction  junction  result  pick  best  girl  still  invited  junction  way  invite  house  test  dream  girl  le  invited  girl  path  invite  girl  living  along  junction  subtree  junction  including  put  weight  result  weight  increase  pound  task  event  type  tell  barney  index  girl  invite  home  event  input  contains  junction  nyc  girl  living  nyc  event  respectively  next  describes  road  contains  meaning  road  connecting  junction  next  contains  girl  living  junction  next  describe  event  chronological  order  start  type  event  describes  event  type  follow  endpoint  barney  path  girl  invite  otherwise  describes  event  second  type  follow  root  subtree  value  girl  weight  subtree  increase  event  type  print  meaning  event  barney  invite  girl  whose  index  order  best  worst  according  barney  consideration
696/F __label__binary  search  __label__geometry  barney  ha  finally  found  beautiful  young  lady  named  lyanna  problem  lyanna  barney  trapped  lord  loss  castle  castle  ha  shape  convex  polygon  point  like  castle  demonata  world  castle  ha  ceiling  barney  lyanna  escape  plan  requires  geometry  knowledge  asked  help  barney  know  demon  organized  move  lyanna  want  wait  appropriate  time  need  watch  demon  want  stay  point  inside  castle  possibly  edge  corner  stay  position  want  pick  real  watch  point  circle  radius  around  circle  overlap  say  barney  lyanna  watching  carefully  every  edge  polygon  least  see  least  point  edge  lie  thus  point  edge  edge  formally  edge  least  common  point  least  circle  greater  energy  focus  need  asked  tell  minimum  value  watch  carefully  input  contains  single  castle  polygon  vertex  next  describe  polygon  vertex  counter  clockwise  order  contains  coordinate  point  castle  guaranteed  given  point  form  convex  polygon  particular  print  single  minimum  radius  guy  watching  circle
1019/D __label__sortings  __label__binary  search  __label__geometry  strange  peculiarity  connect  city  rostov  taganrog  shakhty  peculiarly  get  triangle  unbelievable  true  student  many  different  part  russia  abroad  come  summer  informatics  school  marked  hometown  si  participant  map  decided  prepare  interesting  infographic  based  map  thing  chose  find  city  map  form  triangle  area  input  contains  city  map  area  triangle  found  next  description  city  per  city  described  coordinate  guaranteed  city  located  distinct  point  guaranteed  city  lie  solution  exist  print
632/B __label__constructive  algorithms  __label__brute  force  alice  bob  playing  game  game  involves  splitting  game  piece  team  piece  piece  ha  strength  way  split  game  piece  split  several  step  alice  split  piece  different  group  seen  writing  assignment  team  piece  character  string  character  bob  choose  arbitrary  prefix  suffix  string  flip  character  suffix  change  step  alice  get  piece  marked  bob  get  piece  marked  strength  player  sum  strength  piece  group  given  alice  initial  split  team  help  bob  determine  optimal  strategy  return  maximum  strength  achieve  contains  game  piece  second  contains  strength  piece  third  contains  character  assignment  team  step  alice  step  print  maximum  strength  bob  achieve
767/E __label__greedy  student  arseny  like  plan  life  day  ahead  visit  canteen  every  day  ha  already  decided  order  following  day  price  canteen  change  mean  arseny  spend  ruble  day  ruble  coin  ruble  note  circulation  moment  arseny  ha  coin  sufficiently  large  amount  note  assume  ha  infinite  amount  arseny  love  modern  technology  us  credit  card  everywhere  except  canteen  ha  pay  cash  canteen  doe  accept  card  cashier  always  asks  student  pay  change  free  always  possible  arseny  try  minimize  dissatisfaction  cashier  cashier  dissatisfaction  day  determined  total  amount  note  coin  change  precise  cashier  give  arseny  note  coin  day  dissatisfaction  day  equal  cashier  always  give  change  using  little  coin  note  possible  always  ha  enough  able  caution  angry  cashier  arseny  want  pay  way  total  dissatisfaction  cashier  day  would  small  possible  help  find  need  pay  day  note  arseny  always  ha  enough  money  pay  ha  infinite  amount  note  arseny  use  note  coin  received  change  following  day  contains  amount  day  arseny  planned  action  amount  coin  currently  ha  second  contains  sequence  amount  money  ruble  arseny  going  spend  following  day  third  contains  sequence  cashier  dissatisfaction  coefficient  following  day  print  minimum  possible  total  dissatisfaction  cashier
519/A __label__implementation  preparing  programming  contest  train  logical  thinking  solve  problem  better  decided  play  chess  game  wondered  whose  position  stronger  chess  piece  know  weight  queen  weight  rook  weight  bishop  weight  knight  weight  pawn  weight  king  weight  considered  evaluating  position  player  weight  equal  sum  weight  piece  board  like  counting  asked  help  determine  player  ha  larger  position  weight  input  contains  character  board  description  white  piece  board  marked  uppercase  letter  black  piece  marked  lowercase  letter  white  piece  denoted  follows  queen  represented  rook  bishop  knight  pawn  king  black  piece  denoted  respectively  empty  square  board  marked  dot  guaranteed  given  chess  position  achieved  real  game  specifically  arbitrary  possibly  piece  type  king  attack  print  white  without  quote  weight  position  white  piece  weight  position  black  piece  print  black  weight  black  piece  weight  white  piece  print  draw  weight  white  black  piece  equal
691/A __label__implementation  according  rule  berland  fashion  jacket  fastened  button  except  necessarily  last  jacket  ha  button  fastened  jacket  swinging  open  given  jacket  button  determine  fastened  right  way  contains  button  jacket  second  contains  button  fastened  otherwise  print  word  yes  jacket  fastened  right  way  otherwise  print  word
1167/A __label__greedy  __label__brute  force  __label__strings  telephone  sequence  exactly  digit  digit  example  sequence  telephone  sequence  given  string  length  consisting  digit  operation  delete  character  string  example  possible  obtain  string  string  need  determine  whether  sequence  operation  possibly  empty  string  becomes  telephone  contains  test  case  test  case  contains  length  string  second  test  case  contains  string  consisting  digit  test  print
1091/F __label__greedy  __label__constructive  algorithms  bob  duck  want  get  alice  nest  duck  duck  ultimate  animal  image  courtesy  see  bang  journey  represented  straight  consisting  segment  bob  located  left  segment  alice  nest  right  last  segment  segment  ha  length  meter  terrain  type  grass  water  lava  bob  ha  movement  type  swimming  walking  flying  switch  change  direction  point  time  even  located  non  coordinate  require  extra  time  bob  swim  water  walk  grass  fly  terrain  flying  meter  take  second  swimming  meter  take  second  finally  walking  meter  take  second  bob  ha  finite  amount  energy  called  stamen  swimming  walking  relaxing  gain  stamen  every  meter  walk  swim  hand  flying  quite  tiring  spends  stamen  every  meter  flown  staying  place  doe  influence  stamen  course  stamen  never  become  negative  initially  stamen  shortest  possible  time  reach  alice  nest  contains  single  segment  terrain  second  contains  represents  length  terrain  segment  meter  third  contains  string  consisting  character  representing  grass  water  lava  respectively  guaranteed  segment  lava  output  single  minimum  time  bob  need  reach  alice
596/B __label__implementation  __label__greedy  wilbur  pig  tinkering  array  ha  array  initially  consisting  step  choose  index  either  add  element  subtract  element  goal  end  array  course  wilbur  want  achieve  goal  minimum  step  asks  compute  value  input  contains  single  length  array  initially  every  position  array  given  input  second  input  contains  print  minimum  step  wilbur  need  make  order  achieve
1082/F __label__dp  __label__trees  __label__strings  polycarp  phone  book  contains  phone  described  time  polycarp  dial  daily  polycarp  ha  bought  brand  new  phone  amazing  speed  dial  feature  precisely  button  assigned  necessary  phone  book  enter  polycarp  press  button  finish  using  usual  digit  button  entering  digit  button  possible  speed  dial  button  used  digit  entered  button  reassigned  minimal  total  digit  press  polycarp  achieve  assigns  speed  dial  button  enters  phone  book  given  time  optimal  way  contains  amount  polycarp  phone  book  speed  dial  button  new  phone  ha  next  string  non  empty  string  digit  inclusive  amount  time  dialed  respectively  guaranteed  total  length  phone  exceed  print  single  minimal  total  digit  press  polycarp  achieve  assigns  speed  dial  button  enters  phone  book  given  time  optimal  way
810/A __label__math  __label__implementation  noora  student  famous  high  school  final  year  school  going  study  university  next  year  ha  get  graduation  certificate  order  apply  prestigious  school  noora  studying  teacher  putting  mark  online  class  register  worst  mark  best  mark  going  certificate  calculated  average  mark  rounded  closest  several  answer  possible  rounding  produced  example  rounded  instance  noora  ha  mark  mark  certificate  average  equal  rounded  mark  noora  graduation  certificate  graduate  certificate  noora  ha  mark  noora  got  mark  register  year  afraid  mark  enough  get  final  mark  noora  decided  ask  help  internet  hacker  leha  immediately  responded  request  ready  hack  class  register  noora  add  noora  additional  mark  time  leha  want  hack  unseen  everyone  decided  add  le  possible  additional  mark  please  help  leha  calculate  minimal  mark  ha  add  final  noora  mark  become  equal  contains  denoting  mark  received  noora  value  highest  possible  mark  second  contains  denoting  mark  received  noora  leha  hack  print  single  minimal  additional  mark  leha  ha  add  order  change  noora  final  mark
612/F __label__dp  given  circular  array  element  element  numbered  element  value  clockwise  order  cell  contains  value  robot  simba  cell  moment  time  robot  cell  begin  turn  robot  write  written  current  cell  move  adjacent  cell  clockwise  counterclockwise  direction  write  cell  simba  spend  time  move  adjacent  cell  simba  spends  unit  time  simba  want  write  cell  time  written  non  decreasing  order  find  least  time  unit  write  contains  cell  circular  array  starting  position  simba  second  contains  written  cell  given  cell  order  equal  print  least  time  unit
906/E __label__dp  __label__strings  hurricane  came  berland  suburb  stringsvill  going  check  right  favorite  string  hurrinace  broke  bit  reversing  non  intersecting  substring  photo  string  hurricane  want  restore  original  state  using  reversing  minimum  possible  substring  find  substring  reverse  given  string  original  state  string  string  state  string  hurricane  select  non  intersecting  substring  way  reverse  substring  string  equal  minimum  possible  input  contains  string  second  contains  string  string  length  consist  lowercase  english  letter  print  minimum  substring  reverse  next  output  meaning  reverse  substring  symbol  symbol  string  indexed  substring  intersect  multiple  answer  print  impossible  restore  string  output
808/C __label__greedy  __label__sortings  __label__constructive  algorithms  polycarp  invited  friend  tea  party  celebrate  holiday  ha  cup  friend  volume  teapot  store  milliliter  tea  w  polycarp  want  pour  tea  cup  way  every  cup  tea  least  half  volume  every  cup  milliliter  tea  tea  teapot  poured  cup  friend  satisfied  friend  cup  satisfied  exists  cup  cup  contains  le  tea  cup  cup  output  many  milliliter  tea  poured  impossible  pour  tea  satisfy  condition  output  contains  second  contains  output  many  milliliter  tea  every  cup  multiple  answer  print
569/B __label__math  __label__greedy  company  always  lot  equipment  furniture  thing  tracked  inventory  assigned  item  much  easier  create  database  using  keep  track  everything  audit  surprised  find  item  numbered  sequentially  item  even  share  inventory  urgent  need  fix  chosen  make  item  sequential  starting  changing  quite  time  consuming  process  would  like  make  maximum  use  current  numbering  given  information  current  inventory  item  company  renumber  item  inventory  form  permutation  changing  item  possible  let  remind  set  form  permutation  range  equal  contains  single  item  second  contains  initial  inventory  item  print  final  inventory  item  order  occur  input  multiple  possible  answer  print
760/B __label__greedy  __label__binary  search  hobbit  planning  spend  night  frodo  house  frodo  ha  bed  standing  row  pillow  n  hobbit  need  bed  least  pillow  sleep  everyone  want  many  pillow  possible  course  always  possible  share  pillow  equally  hobbit  get  hurt  ha  least  pillow  le  neighbor  frodo  sleep  bed  row  maximum  pillow  every  hobbit  ha  least  pillow  every  pillow  given  hobbit  hurt  hobbit  pillow  frodo  bed  print  single  maximum  pillow  frodo  hurt
497/E __label__dp  assume  equal  sum  digit  based  notation  example  sequence  defined  task  calculate  distinct  subsequence  sequence  calculate  answer  modulo  sequence  called  subsequence  sequence  sequence  index  k  ik  particular  empty  sequence  sequence  consisting  element  subsequence  sequence  contains  space  separated  single  print  answer  problem  modulo
1065/F __label__dp  __label__dfs  __label__trees  given  tree  vertex  root  vertex  token  initially  placed  root  move  token  vertex  let  assume  current  vertex  token  make  following  possible  move  move  leaf  subtree  vertex  leaf  move  parent  time  word  depth  vertex  depth  root  move  vertex  ancestor  consider  root  leaf  even  degree  calculate  maximum  different  leaf  visit  sequence  move  contains  vertex  tree  restriction  moving  respectively  second  contains  parent  vertex  guaranteed  input  represents  valid  tree  rooted  print  maximum  possible  different  leaf  visit
219/E __label__data  structures  parking  lot  city  consists  parking  space  standing  parking  space  numbered  left  right  car  arrives  lot  operator  determines  empty  parking  space  safety  sake  chosen  place  located  far  already  occupied  place  possible  closest  occupied  parking  space  must  far  away  possible  several  place  operator  chooses  place  minimum  index  parking  lot  place  empty  car  get  place  consider  distance  parking  space  equal  meter  given  parking  lot  record  arriving  departing  car  chronological  order  record  arriving  car  print  parking  lot  wa  given  car  contains  space  separated  parking  place  record  correspondingly  next  description  record  per  contains  idi  di  equal  corresponding  record  say  car  idi  arrived  parking  lot  equal  corresponding  record  say  car  idi  departed  parking  lot  record  arriving  parking  lot  departing  parking  lot  given  chronologically  event  occurred  consecutively  event  occurred  simultaneously  guaranteed  entry  correct  car  arrived  parking  lot  departed  parking  lot  record  departing  car  arrive  parking  lot  earlier  car  parking  lot  moment  consider  car  arbitrarily  numbered  distinct  initially  place  parking  lot  empty  entry  arriving  car  print  parking  space  print  space  order  car  arrive  parking  lot
938/D __label__data  structures  __label__graphs  musician  popular  band  flayer  announced  going  make  exit  world  tour  course  visit  berland  well  city  berland  people  travel  city  using  directional  train  route  exactly  route  route  used  city  city  cost  coin  use  route  city  visited  flayer  cost  concert  ticket  city  coin  friend  every  city  berland  knowing  programming  skill  asked  calculate  minimum  possible  coin  pay  visit  concert  every  city  compute  minimum  coin  person  city  ha  spend  travel  city  possibly  stay  city  attend  concert  return  city  j  formally  every  calculate  minimum  coin  spend  travel  city  city  way  reach  city  city  consider  infinitely  large  contains  follow  contains  ii  denoting  train  route  multiple  train  route  connecting  pair  city  neither  extra  present  input  next  contains  price  attend  concert  city  print  must  equal  minimum  coin  person  city  ha  spend  travel  city  possibly  stay  city  attend  concert  return  city  j
1054/B __label__implementation  initially  ildar  ha  empty  array  performs  step  step  take  subset  already  added  array  appends  mex  subset  array  mex  multiset  smallest  non  negative  presented  multiset  example  mex  multiset  mex  multiset  formally  step  ildar  already  ha  array  chooses  subset  index  possibly  empty  appends  mex  end  array  performing  step  ildar  think  might  made  mistake  somewhere  asks  determine  given  array  minimum  step  ha  definitely  made  mistake  least  step  determine  could  obtained  array  without  mistake  contains  single  step  ildar  made  second  contains  array  ildar  obtained  ildar  could  chosen  subset  step  way  resulting  array  print
1176/F __label__dp  __label__implementation  __label__sortings  playing  computer  card  game  called  splay  sire  currently  struggling  defeat  final  bos  game  bos  battle  consists  turn  turn  get  several  card  card  ha  parameter  cost  damage  play  card  turn  sequence  choose  card  exact  order  played  long  total  cost  card  play  turn  doe  exceed  playing  possibly  card  end  turn  card  play  discarded  note  use  card  character  ha  found  artifact  boost  damage  action  every  card  play  deal  double  damage  maximum  possible  damage  deal  turn  contains  turn  block  input  follow  block  representing  card  get  turn  block  begin  containing  card  get  turn  follow  containing  parameter  corresponding  card  guaranteed  print  maximum  damage  deal
443/B __label__implementation  __label__brute  force  __label__strings  kolya  got  string  birthday  string  consists  small  english  letter  immediately  added  character  right  string  borya  came  said  new  string  contained  tandem  repeat  length  substring  large  could  see  note  definition  tandem  repeat  contains  string  contains  small  english  letter  second  contains  added  character  print  single  maximum  length  tandem  repeat  could  occurred  new  string
715/C __label__dfs  __label__trees  coder  ha  large  tree  represented  undirected  connected  graph  vertex  numbered  edge  single  nonzero  digit  written  edge  day  coder  wa  bored  decided  investigate  property  tree  chose  positive  coprime  consider  ordered  pair  distinct  vertex  interesting  would  follow  shortest  path  vertex  vertex  write  digit  encounter  path  order  get  decimal  representaion  divisible  formally  consider  ordered  pair  distinct  vertex  interesting  following  state  true  let  sequence  vertex  shortest  path  order  encountering  let  digit  written  edge  vertex  divisible  help  coder  find  interesting  pair  input  contains  vertex  ha  chosen  respectively  next  contains  denoting  edge  vertex  digit  written  print  single  interesting  coder  consideration  pair
834/A __label__implementation  walking  street  marshmallow  city  slastyona  spotted  merchant  selling  kind  useless  toy  popular  nowadays  caramel  spinner  wanting  join  craze  ha  immediately  bought  strange  contraption  spinner  sweetland  form  shaped  piece  caramel  spinner  well  spin  around  invisible  magic  axis  specific  point  time  spinner  take  position  shown  rotated  degree  relative  previous  fourth  followed  spinner  wa  spun  start  rotation  described  following  algorithm  spinner  maintains  position  second  majestically  switch  next  position  clockwise  counter  clockwise  order  depending  direction  spinner  wa  spun  slastyona  managed  spinner  rotating  exactly  second  fascinated  elegance  process  completely  forgot  direction  spinner  wa  spun  lucky  managed  recall  starting  position  want  deduct  direction  given  information  know  help  character  string  starting  ending  position  spinner  position  encoded  following  character  ascii  code  lowercase  ascii  code  ascii  code  ascii  code  see  picture  reference  character  separated  single  space  second  string  single  given  duration  rotation  guaranteed  ending  position  spinner  result  second  spin  direction  assuming  given  starting  position  output  direction  clockwise  ccw  counter  clockwise  undefined  otherwise
916/D __label__data  structures  __label__trees  finish  many  assignment  jamie  getting  busy  school  life  start  forget  assignment  ha  decided  write  thing  list  assigns  value  priority  assignment  lower  value  mean  important  decide  need  spend  time  day  jamie  find  list  large  even  manage  list  good  friend  jamie  help  write  program  support  following  operation  list  set  add  assignment  list  present  set  priority  assignment  already  list  priority  changed  remove  remove  assignment  list  present  query  output  assignment  important  smaller  priority  value  assignment  jamie  decide  better  schedule  output  list  undo  undo  change  made  previous  day  including  day  operation  day  list  empty  following  day  jamie  exactly  operation  operation  query  output  result  query  proceeding  next  day  poor  jamie  make  appropriate  decision  consists  single  operation  following  consists  description  operation  consists  operation  jamie  ha  done  day  query  ha  following  format  word  indicates  type  operation  must  following  set  remove  query  undo  set  operation  string  follows  assignment  need  set  priority  remove  operation  string  follows  assignment  need  removed  query  operation  string  follows  assignment  need  queried  undo  operation  follows  day  change  needed  undone  assignment  name  consists  lowercase  english  letter  length  guaranteed  last  operation  query  operation  query  operation  output  single  assignment  priority  lower  assignment  list
1201/D __label__dp  __label__implementation  __label__greedy  __label__binary  search  island  represented  nm  table  row  numbered  column  numbered  treasure  island  located  position  initially  stand  lower  left  corner  island  position  moment  cell  treasure  pick  without  extra  time  move  move  left  right  position  trap  move  moving  risky  move  safe  column  safe  column  want  collect  treasure  fast  possible  count  minimum  move  required  collect  treasure  contains  row  column  treasure  island  safe  column  next  contains  coordinate  cell  treasure  treasure  located  distinct  cell  last  contains  distinct  index  safe  column  print  minimum  move  required  collect  treasure
1183/H __label__dp  __label__strings  difference  easy  hard  version  constraint  subsequence  string  derived  another  string  deleting  symbol  without  changing  order  remaining  symbol  character  deleted  required  successively  gap  example  string  abaca  following  string  subsequence  abaca  aba  aaa  empty  string  following  string  subsequence  aabaca  bcaa  given  string  consisting  lowercase  latin  letter  move  take  subsequence  given  string  add  set  set  duplicate  move  cost  length  added  subsequence  price  equal  deleted  character  task  find  minimum  possible  total  cost  obtain  set  size  report  impossible  input  contains  length  string  size  set  correspondingly  second  input  contains  string  consisting  lowercase  latin  letter  print  impossible  obtain  set  size  print  otherwise  print  minimum  possible  total  cost
1030/C __label__implementation  recently  vasya  found  golden  ticket  sequence  consists  digit  vasya  considers  ticket  lucky  divided  non  intersecting  segment  equal  sum  example  ticket  lucky  since  divided  segment  note  digit  sequence  belong  exactly  segment  help  vasya  tell  golden  ticket  found  lucky  contains  digit  ticket  second  contains  digit  golden  ticket  digit  printed  without  space  golden  ticket  lucky  print  yes  otherwise  print  case  insensitive
593/E __label__dp  gosha  universe  table  consisting  row  column  row  column  numbered  consecutive  starting  use  denote  cell  located  row  column  gosha  often  invited  somewhere  every  time  get  invitation  calculates  way  get  place  go  gosha  house  located  cell  moment  time  gosha  move  cell  currently  located  cell  adjacent  cell  adjacent  share  common  side  course  movement  possible  cell  exists  gosha  beyond  boundary  table  thus  cell  able  make  move  cell  ghosha  skip  move  stay  current  cell  besides  love  strange  calculation  gosha  allergic  cat  never  go  cell  ha  cat  gosha  know  exactly  invited  schedule  cat  travelling  along  table  formally  ha  record  ha  following  form  gosha  invited  come  cell  moment  time  guaranteed  cat  inside  cell  moment  time  moment  cat  appears  cell  guaranteed  cat  located  cell  moment  time  moment  cat  leaf  cell  guaranteed  cat  located  cell  gosha  plan  accept  invitation  ha  decided  particular  order  make  decision  asks  calculate  invitation  way  get  cell  moment  every  invitation  assume  gosha  start  moving  cell  moment  moving  neighboring  cell  take  gosha  exactly  unit  tim  particular  mean  gosha  come  cell  cat  sitting  leaf  moment  gosha  begin  movement  neighboring  cell  none  cat  come  cell  time  gosha  way  cell  cell  time  considered  distinct  least  moment  time  gosha  position  distinct  way  moment  note  travel  gosha  allowed  visit  multiple  time  since  way  quite  large  print  modulo  input  contains  positive  row  column  table  event  respectively  next  describe  event  description  contains  tpi  p  type  event  gosha  get  invitation  cat  come  cell  cat  leaf  cell  coordinate  cell  action  take  place  moment  time  action  take  place  respectively  guaranteed  query  given  chronological  order  invitation  tpi  calculate  way  get  cell  moment  time  respond  invitation  chronologically  order  appear  input
1101/D __label__dp  __label__data  structures  __label__dfs  __label__trees  __label__number  theory  given  tree  consisting  vertex  written  vertex  vertex  equal  let  denote  function  greatest  common  divisor  written  vertex  belonging  simple  path  vertex  vertex  including  vertex  let  denote  dist  vertex  simple  path  vertex  including  endpoint  dist  every  vertex  task  calculate  maximum  value  dist  pair  vertex  contains  vertex  second  contains  written  vertex  follow  containing  denoting  edge  connecting  vertex  vertex  guaranteed  edge  form  tree  pair  vertex  print  otherwise  print  maximum  value  dist  pair
342/B __label__implementation  __label__greedy  __label__brute  force  xenia  vigorous  detective  faced  n  foreign  spy  lined  row  consider  spy  numbered  left  right  spy  ha  important  note  ha  pas  note  spy  xenia  interrogates  spy  several  step  step  spy  keeping  important  note  pas  note  neighbour  row  word  spy  pas  note  another  spy  either  spy  ha  neighbour  step  spy  keep  note  pas  anyone  nothing  easy  step  xenia  watch  spy  attentively  specifically  step  step  numbered  xenia  watch  spy  ii  course  step  spy  watched  anything  neither  give  note  take  spy  otherwise  xenia  reveals  spy  cunning  plot  nevertheless  spy  current  step  keep  note  xenia  see  nothing  suspicious  even  watch  got  step  xenia  watch  spy  spy  going  watch  step  find  best  way  spy  act  order  pas  note  spy  spy  quickly  possible  minimum  step  contains  n  following  contains  ii  guaranteed  print  character  character  must  represent  spy  action  step  step  spy  note  must  pas  note  spy  lesser  character  equal  step  spy  note  must  pas  spy  larger  character  must  equal  spy  must  keep  note  step  character  must  equal
71/B __label__math  __label__implementation  progress  bar  element  graphical  interface  display  progress  process  moment  completed  let  take  look  following  form  bar  bar  represented  square  located  add  clarity  let  positive  left  right  square  ha  saturation  square  measured  bar  displayed  square  ha  saturation  square  ha  saturation  saturation  square  value  square  progress  bar  always  saturation  last  square  always  saturation  square  ha  saturation  different  degree  process  completion  measured  percent  let  process  completed  following  inequation  fulfilled  example  bar  seen  picture  given  determine  measure  saturation  square  progress  bar  given  space  separated  print  equal
796/F __label__greedy  __label__data  structures  zane  good  sequence  consisting  ha  lost  sequence  said  good  non  negative  exceed  value  zane  remembers  played  around  sequence  applying  operation  type  operation  find  maximum  value  index  l  given  assign  value  index  given  finished  playing  restored  sequence  state  wa  operation  applied  sequence  wa  longer  affected  applied  type  operation  lost  sequence  time  fortunately  zane  remembers  operation  order  applied  sequence  along  distinct  result  type  operation  moreover  good  sequence  would  produce  result  operation  applied  order  know  sequence  ha  greatest  cuteness  define  cuteness  sequence  bitwise  result  sequence  example  cuteness  zane  sequence  zane  understands  might  possible  recover  exactly  lost  sequence  given  information  would  happy  get  good  sequence  consisting  would  give  result  operation  applied  order  ha  cuteness  zane  original  sequence  sequence  find  otherwise  mean  zane  must  remembered  something  incorrectly  possible  contains  zane  original  sequence  operation  applied  sequence  respectively  following  start  type  operation  operation  type  follow  ii  leftmost  index  considered  rightmost  index  considered  maximum  value  index  inclusive  respectively  operation  type  follow  meaning  index  become  operation  guaranteed  xij  pair  operation  given  order  applied  operation  given  wa  applied  operation  given  second  wa  applied  second  doe  exist  valid  good  sequence  print  without  quotation  mark
690/F3 __label__trees  add  insult  injury  zombie  taken  drawing  heidi  please  help  recover  tree  life  drawing  input  format  medium  version  except  bound  medium  version
855/D __label__trees  harry  upon  inquiring  helena  ravenclaw  ghost  came  know  told  tom  riddle  know  rowena  ravenclaw  diadem  stole  harry  thought  riddle  would  assumed  wa  discover  room  requirement  thus  would  hidden  harry  trying  get  inside  room  requirement  destroy  diadem  know  horcrux  ha  answer  puzzle  order  enter  room  given  object  numbered  object  parent  object  ha  lesser  formally  object  parent  object  parenti  parenti  type  associated  parent  relation  either  type  type  type  relation  mean  child  object  like  special  case  parent  object  type  relation  mean  second  object  always  part  object  special  case  note  object  special  case  object  special  case  object  considered  special  case  object  well  hold  part  object  part  object  part  say  object  part  note  object  part  object  special  case  part  well  object  considered  neither  part  special  case  harry  ha  answer  type  query  need  tell  object  special  case  object  need  tell  object  part  object  input  contains  object  next  parenti  typei  arenti  parenti  ypei  implying  object  ha  parent  parenti  typei  implies  object  special  case  object  parenti  typei  implies  object  part  object  parenti  case  object  ha  parent  parenti  typei  next  contains  query  next  represent  query  space  separated  typei  ypei  output  containing  answer  corresponding  query  yes  affirmative  without  quote
849/A __label__implementation  odds  begin  end  doe  hope  emerge  ever  break  given  sequence  length  decide  whether  possible  divide  odd  non  empty  subsegments  ha  odd  length  begin  end  odd  subsegment  contiguous  slice  whole  sequence  example  subsegments  sequence  input  contains  non  negative  length  sequence  second  contains  space  separated  non  negative  element  sequence  output  yes  possible  fulfill  requirement  otherwise
444/C __label__data  structures  dzy  love  color  enjoys  painting  colorful  day  dzy  get  colorful  ribbon  consists  unit  numbered  left  right  color  unit  ribbon  colorful  enough  still  consider  colorfulness  unit  dzy  love  painting  know  take  paintbrush  color  us  draw  ribbon  case  contiguous  unit  painted  imagine  color  unit  currently  painted  paintbrush  color  unit  becomes  colorfulness  unit  increase  dzy  want  perform  operation  operation  following  paint  unit  inclusive  color  ask  sum  colorfulness  unit  inclusive  help  dzy  contains  space  separated  next  begin  type  ype  represents  type  operation  type  describing  operation  type  describing  operation  operation  print  containing  answer  sum  colorfulness
1083/A __label__dp  __label__data  structures  __label__trees  fair  nut  going  travel  tree  country  city  land  country  covered  forest  furthermore  local  road  system  form  tree  connected  graph  without  cycle  nut  want  rent  car  city  simple  path  city  determined  path  time  note  chosen  path  consist  vertex  filling  station  located  every  city  strange  law  nut  buy  liter  gasoline  city  assume  ha  infinite  money  road  ha  length  soon  nut  drive  road  amount  gasoline  decrease  length  course  nut  choose  path  consists  road  run  gasoline  buy  gasoline  every  visited  city  even  last  want  find  maximum  amount  gasoline  end  path  help  count  contains  single  city  second  contains  maximum  amount  liter  gasoline  nut  buy  city  next  describes  road  contains  city  connected  road  length  guaranteed  graph  road  connectivity  tree  print  maximum  amount  gasoline  end  path
940/E __label__math  __label__dp  __label__greedy  __label__data  structures  since  best  wraith  king  nizhniy  magazin  mir  centre  vinnytsia  offering  discount  given  array  length  value  array  length  sum  element  except  smallest  example  value  array  possible  partition  contiguous  subarrays  output  smallest  possible  sum  value  subarrays  contains  second  contains  element  output  single  smallest  possible  sum  value  subarrays  partition
21/A __label__implementation  __label__strings  jabber  national  berland  service  babber  ha  form  username  hostname  resource  username  sequence  latin  letter  lowercase  uppercase  digit  underscore  character  length  username  inclusive  hostname  sequence  word  separated  period  character  word  character  allowed  username  length  word  inclusive  length  hostname  inclusive  resource  sequence  latin  letter  lowercase  uppercase  digit  underscore  character  length  resource  inclusive  content  square  bracket  optional  present  absent  sample  correct  jabber  id  mike  codeforces  com  codeforces  com  contest  task  write  program  check  given  string  correct  jabber  input  contains  single  ha  length  character  inclusive  character  ha  ascii  code  inclusive  print  yes
980/E __label__greedy  __label__data  structures  __label__trees  nation  panel  hold  annual  show  called  game  district  nation  represented  contestant  nation  ha  district  numbered  district  ha  exactly  path  connecting  every  district  fan  contestant  district  equal  year  president  decided  reduce  cost  want  remove  contestant  game  district  removed  contestant  furious  allow  anyone  cross  district  president  want  ensure  remaining  contestant  district  reached  another  wish  maximize  total  fan  participating  contestant  contestant  president  remove  input  contains  district  panel  contestant  president  wish  remove  respectively  next  contains  describe  road  connects  different  district  nation  guaranteed  exactly  path  every  district  print  space  separated  district  contestant  removed  increasing  order  district
856/C __label__math  __label__dp  borya  eleventh  birthday  ha  got  great  present  card  card  ha  written  borya  want  put  card  row  get  greater  example  borya  ha  card  put  row  order  would  get  already  know  way  put  card  row  today  special  day  interested  way  resulting  big  divisible  eleven  way  previous  paragraph  good  put  card  following  order  would  get  divisible  way  good  borya  help  borya  find  many  good  way  put  card  borya  considers  card  different  even  example  borya  ha  card  good  way  help  borya  find  good  way  put  card  large  output  modulo  data  contains  multiple  test  case  input  data  contains  test  case  description  test  case  follow  test  described  contains  card  borya  present  second  contains  written  card  guaranteed  total  card  test  input  data  exceed  test  case  output  way  put  card  table  resulting  big  wa  divisible  print  modulo
251/D __label__math  little  petya  like  lot  recently  mother  ha  presented  collection  non  negative  thing  petya  like  playing  little  masha  immediately  decided  give  part  new  collection  make  game  even  interesting  petya  decided  give  masha  collection  following  condition  fulfill  let  introduce  denote  xor  petya  ha  got  left  let  introduce  denote  xor  gave  masha  value  must  large  possible  multiple  way  divide  collection  previous  condition  fulfilled  petya  minimizes  value  xor  operation  bitwise  excluding  denoted  xor  pascal  language  java  help  petya  divide  collection  described  multiple  suitable  way  divide  find  please  note  petya  give  part  masha  left  reverse  situation  possible  petya  give  nothing  masha  case  must  assume  xor  empty  set  equal  contains  showing  many  petya  mother  gave  second  contains  actual  space  separated  non  negative  exceed  print  space  separated  equal  either  petya  keep  follows  collection  equal  petya  give  corresponding  masha  indexed  order  given  input
1141/G __label__greedy  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  __label__binary  search  treeland  consists  city  road  road  bidirectional  connects  distinct  city  city  get  city  road  yes  right  country  topology  undirected  tree  private  road  company  treeland  government  decided  sell  road  company  road  belong  company  company  multiple  road  government  afraid  look  unfair  think  people  city  consider  unfair  company  owns  road  entering  city  government  want  make  privatization  city  exceed  company  taking  part  privatization  minimal  choose  company  possible  assign  road  company  way  city  road  company  word  city  road  belong  different  company  city  good  task  find  minimal  assignment  company  city  good  exceed  picture  illustrates  example  answer  contains  company  edge  denote  edge  index  edge  color  mean  company  red  corresponds  company  blue  corresponds  second  company  gray  vertex  good  vertex  exceed  impossible  good  city  case  company  contains  city  maximal  city  road  belonging  company  following  road  road  per  contains  pair  city  connected  road  print  required  second  print  company  road  multiple  answer  print
384/A __label__implementation  iahub  like  chess  much  even  invented  new  chess  piece  named  coder  coder  move  attack  square  horizontally  vertically  precisely  coder  located  position  move  attack  position  iahub  want  know  many  coder  placed  n  chessboard  coder  attack  coder  contains  print  maximum  coder  placed  chessboard
883/H __label__implementation  __label__brute  force  __label__strings  kolya  ha  string  length  consisting  lowercase  uppercase  latin  letter  digit  want  rearrange  symbol  cut  minimum  part  part  palindrome  part  length  palindrome  string  read  backward  forward  madam  racecar  task  help  kolya  determine  minimum  palindrome  equal  length  cut  allowed  rearrange  letter  cutting  contains  length  string  second  contains  string  length  consisting  lowercase  uppercase  latin  letter  digit  print  minimum  palindrome  cut  given  string
1029/F __label__math  __label__brute  force  __label__binary  search  __label__number  theory  infinite  board  square  tile  initially  tile  white  vova  ha  red  marker  blue  marker  red  marker  color  tile  blue  marker  color  tile  tile  white  use  marker  color  marker  must  drained  completely  end  exactly  red  tile  exactly  blue  tile  board  vova  want  color  set  tile  would  form  rectangle  consisting  exactly  colored  tile  tile  least  color  would  form  rectangle  example  correct  coloring  example  incorrect  coloring  correct  coloring  vova  want  choose  minimal  perimeter  minimal  perimeter  vova  obtain  guaranteed  exists  least  correct  coloring  single  contains  tile  red  marker  color  tile  blue  marker  color  respectively  print  single  minimal  perimeter  colored  rectangle  vova  obtain  coloring  exactly  tile  red  exactly  tile  blue
1017/E __label__strings  __label__geometry  war  supersonic  rocket  became  common  public  transportation  supersonic  rocket  consists  engine  engine  set  power  source  engine  ha  power  source  second  ha  power  source  power  source  described  point  plane  point  engine  different  manipulate  engine  separately  operation  engine  operation  many  time  want  every  power  source  whole  engine  becomes  real  word  power  source  shifted  every  power  source  whole  engine  becomes  co  sin  sin  co  real  word  power  source  rotated  engine  work  follows  engine  powered  power  source  combined  power  source  different  engine  coincide  power  source  exist  real  new  power  source  created  procedure  repeated  new  old  power  source  power  field  power  source  generated  considered  infinite  set  power  source  occurred  supersonic  rocket  safe  manipulate  engine  destroying  power  source  power  engine  power  field  generated  changed  comparing  situation  power  source  erased  power  field  considered  power  source  field  belongs  well  given  supersonic  rocket  check  whether  safe  contains  power  source  engine  next  contains  coordinate  power  source  engine  next  contains  coordinate  power  source  second  engine  guaranteed  power  source  located  point  engine  print  yes  supersonic  rocket  safe  otherwise
828/A __label__implementation  small  restaurant  table  person  table  person  known  group  people  come  today  consisting  people  group  consist  person  seated  vacant  seater  table  none  seated  vacant  seater  table  none  seated  seater  table  occupied  single  person  still  none  restaurant  denies  service  group  group  consist  people  seated  vacant  seater  table  none  restaurant  denies  service  group  given  chronological  order  group  coming  determine  total  people  restaurant  denies  service  contains  group  coming  restaurant  seater  seater  table  second  contains  sequence  description  client  chronological  order  equal  group  consists  person  otherwise  group  consists  people  print  total  people  restaurant  denies  service
566/C __label__dfs  __label__trees  country  consists  city  connected  railroad  network  transport  communication  country  advanced  network  consists  minimum  required  bidirectional  road  word  graph  road  tree  road  directly  connects  city  ha  length  kilometer  transport  network  served  state  transporting  company  frr  fabulous  rail  road  order  simplify  price  policy  offer  single  ride  fare  train  order  follow  route  length  kilometer  need  pay  burles  note  forbidden  split  long  route  short  segment  pay  separately  special  railroad  police  rrp  control  law  get  violated  large  software  company  decided  organize  programming  tournament  conducted  several  online  round  company  employee  determined  list  finalist  sent  logistical  department  find  place  conduct  final  large  software  company  easily  organize  tournament  final  city  country  main  factor  choosing  city  last  stage  tournament  total  cost  buying  ticket  finalist  know  city  country  ha  cup  finalist  living  help  company  employee  find  city  total  cost  travel  participant  minimum  input  contains  city  country  next  contains  finalist  living  city  country  next  description  railroad  contains  aii  print  optimal  city  conduct  competition  real  equal  minimum  total  cost  transporting  finalist  competition  answer  considered  correct  condition  fulfilled  time
1095/E __label__implementation  given  bracket  sequence  consisting  opening  closing  bracket  regular  bracket  sequence  bracket  sequence  transformed  correct  arithmetic  expression  inserting  character  original  character  sequence  example  bracket  sequence  regular  resulting  expression  change  type  bracket  mean  change  vice  versa  task  calculate  position  change  type  bracket  resulting  bracket  sequence  becomes  regular  input  contains  length  bracket  sequence  second  input  contains  string  consisting  opening  closing  bracket  print  position  change  type  bracket  resulting  bracket  sequence  becomes  regular
55/A __label__math  __label__implementation  flea  sitting  hassock  arranged  circle  moment  minute  flea  jump  hassoks  clockwise  example  minute  flea  jump  neighboring  hassock  answer  flea  visit  hassock  assume  flea  ha  infinitely  much  time  jumping  contains  single  hassock  output  yes  hassock  visited  otherwise
856/B __label__dp  __label__strings  let  call  non  empty  sequence  lowercase  english  letter  word  prefix  word  word  obtained  removing  last  letter  let  call  word  similar  obtained  removing  letter  given  set  word  find  maximal  possible  size  set  non  empty  word  satisfy  following  word  prefix  word  ha  similar  word  data  contains  multiple  test  case  input  data  contains  test  case  description  test  case  follow  description  contains  word  set  following  contains  non  empty  word  element  word  different  guaranteed  total  length  word  input  data  exceed  test  case  print  contains  maximal  word
794/C __label__greedy  __label__sortings  oleg  client  igor  analyst  good  friend  sometimes  argue  little  thing  recently  started  new  company  trouble  finding  name  company  settle  problem  decided  play  game  company  name  consist  letter  oleg  igor  set  letter  might  multiple  copy  letter  set  different  initially  company  name  denoted  question  mark  oleg  igor  take  turn  play  game  oleg  move  turn  player  choose  letter  set  replace  question  mark  copy  letter  removed  set  game  end  question  mark  ha  replaced  letter  example  suppose  oleg  ha  set  letter  igor  ha  set  letter  possible  game  follows  initially  company  name  oleg  replaces  second  question  mark  company  name  becomes  set  letter  oleg  igor  replaces  third  question  mark  company  name  becomes  set  letter  igor  finally  oleg  replaces  question  mark  company  name  becomes  oio  set  letter  oleg  end  company  name  oio  oleg  want  company  name  lexicographically  small  possible  igor  want  company  name  lexicographically  large  possible  company  name  oleg  igor  always  play  optimally  string  called  lexicographically  smaller  string  smallest  index  sii  input  contains  string  length  character  string  lowercase  english  letter  string  denotes  set  letter  oleg  ha  initially  second  input  contains  string  length  character  string  lowercase  english  letter  string  denotes  set  letter  igor  ha  initially  output  string  lowercase  english  letter  denoting  company  name  oleg  igor  play  optimally
633/D __label__math  __label__dp  __label__implementation  __label__brute  force  yash  ha  recently  learnt  fibonacci  sequence  excited  call  sequence  fibonacci  ish  sequence  consists  least  element  arbitrary  n  given  sequence  task  rearrange  element  sequence  way  longest  possible  prefix  fibonacci  ish  sequence  input  contains  single  length  sequence  second  contains  print  length  longest  possible  fibonacci  ish  prefix  given  sequence  rearrangement
992/B __label__math  __label__number  theory  today  informatics  class  nastya  learned  gcd  lcm  see  link  nastya  intelligent  solved  task  momentarily  suggests  solve  well  define  pair  good  gcd  lcm  gcd  denotes  greatest  common  divisor  lcm  denotes  least  common  multiple  given  find  good  pair  l  note  pair  considered  different  contains  print  answer  problem
767/B __label__greedy  __label__brute  force  finally  vasya  come  age  mean  finally  get  passport  need  visit  passport  office  simple  receptionist  passport  office  people  queue  long  actually  open  vasya  want  visit  passport  office  tomorrow  know  receptionist  start  working  minute  passed  midnight  close  minute  passed  midnight  last  minute  receptionist  still  working  receptionist  spends  exactly  minute  person  queue  receptionist  would  stop  working  minute  stop  serving  visitor  already  serf  vasya  know  exactly  visitor  would  come  tomorrow  visitor  vasya  know  point  time  would  come  passport  office  visitor  queue  leave  wa  served  receptionist  free  visitor  come  particular  previous  visitor  wa  served  queue  empty  receptionist  begin  serve  newcomer  immediately  reception  visitor  point  time  would  come  passport  office  positive  vasya  come  office  time  midnight  need  come  office  point  time  vasya  arrives  passport  office  time  several  visitor  yield  stand  queue  last  vasya  want  come  point  time  served  receptionist  would  spend  minimum  possible  time  queue  help  contains  point  time  receptionist  begin  work  point  time  receptionist  stop  working  time  receptionist  spends  visitor  second  contains  amount  visitor  third  contains  positive  non  decreasing  order  point  time  visitor  arrive  passport  office  time  set  minute  exceed  guaranteed  guaranteed  vasya  arrive  passport  office  point  time  would  served  receptionist  print  single  non  negative  point  time  vasya  arrive  passport  office  vasya  arrives  passport  office  time  several  visitor  yield  queue  last  many  answer  print
1091/C __label__math  __label__number  theory  people  sitting  circle  numbered  order  seated  people  adjacent  people  adjacent  well  person  initially  ha  ball  pick  positive  pass  ball  neighbour  direction  increasing  id  person  pass  ball  neighbour  direction  person  get  ball  back  get  back  people  pas  ball  instance  ball  passed  order  consider  set  people  touched  ball  fun  value  game  sum  id  people  touched  example  fun  value  would  find  report  set  possible  fun  value  choice  positive  shown  constraint  problem  ball  always  get  back  player  finitely  many  step  possible  fun  value  given  consists  single  people  playing  ball  suppose  set  fun  value
913/D __label__greedy  __label__data  structures  __label__sortings  __label__brute  force  __label__binary  search  preparing  exam  scheduling  theory  exam  last  exactly  millisecond  consist  problem  either  solve  problem  exactly  millisecond  ignore  spend  time  need  time  rest  solving  problem  either  unfortunately  teacher  considers  problem  easy  thus  assigned  every  problem  meaning  problem  bring  point  final  score  case  solved  problem  overall  including  problem  formally  suppose  solve  problem  exam  final  score  equal  value  kpj  guessed  real  problem  exam  already  front  therefore  want  choose  set  problem  solve  exam  maximizing  final  score  advance  forget  exam  limited  time  must  enough  time  solve  chosen  problem  exist  different  set  problem  leading  maximum  final  score  contains  problem  exam  length  exam  millisecond  respectively  next  contains  problem  numbered  output  single  maximum  possible  final  score
748/A __label__math  __label__implementation  santa  claus  came  christmas  olympiad  going  take  place  desk  classroom  lane  desk  working  place  desk  lane  numbered  left  right  desk  lane  numbered  starting  blackboard  note  lane  perpendicularly  blackboard  along  see  picture  organizer  numbered  working  place  nm  place  numbered  lane  place  lane  place  second  lane  lane  place  numbered  starting  nearest  blackboard  desk  lane  desk  place  left  numbered  place  right  picture  illustrates  second  sample  santa  clause  know  place  ha  help  determine  lane  desk  sit  whether  place  left  right  contains  nm  lane  desk  lane  santa  claus  place  print  lane  desk  character  stand  side  desk  santa  claus  character  santa  clause  sit  left  place  right
367/D __label__dfs  sereja  ha  non  empty  set  lucky  coincidence  given  set  partition  set  word  exactly  set  sereja  ha  sereja  decided  choose  set  set  ha  let  suppose  k  index  chosen  set  let  define  array  sorted  ascending  order  union  chosen  set  represent  element  array  ascending  order  sereja  considers  choice  set  correct  following  condition  met  b  sereja  want  know  minimum  set  choose  choice  correct  help  contains  next  set  denotes  size  set  contains  distinct  set  guaranteed  set  form  partition  single  print  answer  problem  minimum  value  right  choice
1157/B __label__greedy  given  long  decimal  consisting  digit  function  map  every  digit  possibly  digit  perform  following  operation  choose  non  empty  contiguous  subsegment  digit  replace  digit  segment  example  choose  segment  consisting  rightmost  digit  get  result  maximum  possible  obtain  applying  operation  contains  digit  second  contains  string  character  denoting  character  decimal  digit  third  contains  exactly  print  maximum  get  applying  operation  described  statement
374/A __label__implementation  __label__greedy  dima  inna  great  moment  inna  sitting  magic  lawn  playing  pink  pony  dima  wanted  play  brought  n  chessboard  tasty  candy  dima  put  chessboard  front  inna  placed  candy  position  board  boy  said  would  give  candy  reach  corner  cell  board  got  condition  action  following  type  move  candy  position  board  position  move  candy  position  board  position  move  candy  position  board  position  move  candy  position  board  position  naturally  dima  allow  move  candy  beyond  chessboard  border  inna  pony  started  shifting  candy  around  board  wonder  minimum  allowed  action  need  perform  move  candy  initial  position  chessboard  corner  help  cope  task  input  contains  assume  chessboard  row  numbered  top  bottom  column  numbered  left  right  position  statement  chessboard  cell  intersection  row  column  consider  corner  single  print  single  minimum  move  needed  get  candy
388/B __label__math  __label__implementation  __label__graphs  __label__constructive  algorithms  fox  ciel  want  write  task  programming  contest  task  given  simple  undirected  graph  vertex  edge  ha  unit  length  calculate  shortest  path  vertex  vertex  writer  want  make  example  certain  output  example  birthday  boyfriend  help  make  test  case  answer  equal  exactly  contains  single  output  graph  vertex  must  exactly  shortest  path  vertex  vertex  graph
797/C __label__greedy  __label__data  structures  __label__strings  petya  recieved  gift  string  length  character  birthday  took  empty  string  decided  play  game  game  ha  possible  move  extract  character  append  character  extract  last  character  append  character  petya  want  get  string  empty  string  lexicographically  minimal  write  program  help  petya  win  game  contains  non  empty  string  consisting  lowercase  english  letter  print  resulting  string
1234/A __label__math  shop  keeper  shop  assistant  small  nearby  shop  good  good  cost  coin  got  tired  remembering  price  product  customer  ask  thus  decided  simplify  life  precisely  decided  set  price  good  want  lose  money  want  choose  price  way  sum  new  price  le  sum  initial  price  mean  sell  good  new  price  receive  least  greater  amount  money  sell  initial  price  hand  want  lose  customer  big  price  price  choose  need  choose  minimum  need  find  minimum  possible  equal  price  good  sell  price  receive  least  greater  amount  money  sell  initial  price  answer  independent  query  input  contains  query  query  follow  query  contains  good  second  query  contains  price  good  query  print  answer  minimum  possible  equal  price  good  sell  price  receive  least  greater  amount  money  sell  initial  price
1043/G __label__data  structures  __label__strings  ildar  took  band  thin  strip  cloth  colored  formally  band  ha  cell  colored  color  denote  color  lowercase  letter  english  alphabet  ildar  decided  take  segment  band  like  cut  band  create  new  band  represented  string  ildar  play  following  game  cut  band  new  band  count  different  band  formally  ildar  chooses  index  cut  band  string  count  different  band  want  know  minimal  possible  different  band  get  constraint  least  band  repeat  least  time  result  game  impossible  cut  way  result  game  unfortunately  ildar  decided  segment  like  ha  segment  candidate  task  calculate  result  game  contains  length  band  ildar  ha  second  contains  string  consisting  lowercase  english  letter  band  ildar  ha  third  contains  single  segment  ildar  ha  chosen  candidate  next  contains  denoting  end  segment  output  result  game  segment
1165/F2 __label__implementation  __label__greedy  __label__binary  search  difference  easy  hard  version  constraint  ivan  play  computer  game  contains  microtransactions  make  character  look  cooler  since  ivan  want  character  really  cool  want  use  microtransactions  start  playing  get  day  morning  ivan  earns  exactly  burle  type  microtransactions  game  microtransaction  cost  burles  usually  burle  sale  ivan  ha  order  exactly  microtransactions  type  order  microtransactions  evening  ivan  order  possibly  microtransactions  type  day  course  ha  enough  money  microtransaction  want  order  sale  buy  burle  otherwise  buy  burles  special  offer  game  shop  offer  mean  microtransactions  type  sale  day  ivan  want  order  microtransactions  soon  possible  task  calculate  minimum  day  buy  microtransactions  want  actually  start  playing  input  contains  type  microtransactions  special  offer  game  shop  second  input  contains  copy  microtransaction  type  ivan  ha  order  guaranteed  sum  le  greater  next  special  offer  contains  special  offer  given  pair  mean  microtransactions  type  sale  day  print  minimum  day  ivan  order  microtransactions  want  actually  start  playing
232/B __label__math  __label__dp  john  doe  ha  n  table  john  doe  paint  point  table  cell  point  table  cell  john  doe  want  use  operation  make  square  subtable  size  n  exactly  point  john  doe  wondered  many  distinct  way  fill  table  point  provided  condition  must  hold  rather  large  john  doe  asks  find  remainder  dividing  assume  john  always  paint  point  exactly  center  cell  way  fill  table  considered  distinct  exists  table  cell  ha  point  way  single  contains  space  separated  n  row  table  column  table  point  square  must  please  use  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  single  print  single  remainder  dividing  described  way
384/B __label__implementation  __label__greedy  __label__sortings  iahub  want  enhance  multitasking  ability  order  want  sort  array  simultaneously  array  consisting  iahub  choose  pair  distinct  index  array  value  position  swapped  value  position  strictly  greater  value  position  iahub  want  find  array  pair  distinct  index  chosen  order  sort  array  ascending  descending  order  particular  order  given  input  size  array  pair  help  iahub  find  suitable  array  contains  array  must  sorted  ascending  order  array  must  sorted  descending  order  next  contains  separated  space  representing  array  element  array  hold  output  print  size  array  next  must  distinct  representing  chosen  index
1184/E3 __label__data  structures  __label__graphs  __label__trees  help  heidi  ha  prepared  plan  trap  placement  defence  suddenly  doctor  popped  tardis  told  spied  daleks  preparation  ever  desperate  time  require  desperate  measure  heidi  going  risk  meeting  daleks  consider  placing  trap  along  corridor  mean  need  help  calculating  max  largest  changed  energy  requirement  daleks  might  use  invasion  time  time  corridor  destination  corridor  n  next  destination  energy  pair  repeat  graph  guaranteed  connected  guaranteed  energy  requirement  distinct  minimum  spanning  tree  unique  output  containing  max  corridor  input
855/B __label__dp  __label__data  structures  __label__brute  force  professor  dumbledore  helping  harry  destroy  horcruxes  went  gaunt  shack  suspected  horcrux  present  saw  marvolo  gaunt  ring  identified  horcrux  although  destroyed  still  affected  curse  professor  snape  helping  dumbledore  remove  curse  want  give  dumbledore  exactly  drop  potion  made  value  calculated  maximum  given  array  help  snape  find  value  note  value  negative  input  contains  next  input  contains  space  separated  output  single  maximum  value  obtained  provided
1238/C __label__math  __label__dp  __label__greedy  playing  game  character  overcome  different  obstacle  current  problem  come  cliff  cliff  ha  height  moving  platform  height  platform  either  hidden  inside  cliff  moved  moved  platform  height  platform  height  moved  character  initially  standing  character  standing  moved  platform  height  pull  special  lever  switch  state  platform  height  word  platform  currently  standing  hide  cliff  platform  unit  change  state  hide  wa  moved  move  wa  hidden  second  case  safely  land  note  way  move  platform  another  character  quite  fragile  safely  fall  height  word  falling  platform  platform  okay  falling  lower  certain  death  sometimes  possible  come  cliff  always  buy  donate  currency  several  magic  crystal  magic  crystal  used  change  state  single  platform  except  platform  height  unaffected  crystal  used  crystal  disappears  minimum  magic  crystal  need  buy  safely  land  ground  level  contains  query  query  contains  independent  query  query  contains  height  cliff  moved  platform  second  contains  corresponding  moved  platform  descending  order  height  sum  query  doe  exceed  query  print  minimum  magic  crystal  spend  safely  come  ground  level  height
600/F __label__graphs  given  undirected  bipartite  graph  without  multiple  edge  paint  edge  graph  minimal  colour  adjacent  edge  colour  contains  size  part  size  second  part  edge  graph  next  contains  vertex  part  vertex  second  part  guaranteed  multiple  edge  print  minimal  colour  second  colour  edge  order  appear  input
792/E __label__math  __label__greedy  __label__number  theory  box  colored  ball  table  color  numbered  box  contains  ball  color  write  program  divide  ball  set  ball  belongs  exactly  set  empty  set  set  containing  ball  different  color  set  contains  ball  color  set  difference  size  greater  print  minimum  possible  set  contains  second  contains  print  minimum  possible  set
862/F __label__data  structures  __label__strings  mahmoud  ehab  solved  evil  question  gave  password  door  evil  land  tried  open  door  using  door  gave  final  question  solve  leave  yes  door  digital  evil  modern  solve  work  useless  leave  evil  land  forever  help  mahmoud  ehab  given  string  numbered  query  query  ha  following  form  interval  find  maximum  value  expression  cp  lcp  str  tr  tr  length  longest  common  prefix  string  str  tr  tr  string  consisting  lowercase  english  letter  change  string  position  input  contains  string  query  respectively  second  contains  string  stri  consisting  lowercase  english  letter  next  describe  query  form  string  consisting  lowercase  english  letter  total  length  string  input  exceed  query  type  output  answer  new
1117/F __label__dp  given  string  length  character  lowercase  latin  letter  given  matrix  binary  value  size  pp  matrix  symmetric  mean  string  letter  latin  alphabet  adjacent  let  call  string  crisp  adjacent  character  adjacent  corresponding  cell  matrix  allowed  following  move  choose  letter  remove  occurrence  join  remaining  part  string  without  changing  order  example  removing  letter  abacaba  yield  bcb  string  given  crisp  string  remain  crisp  every  move  make  allowed  arbitrary  move  possible  shortest  resulting  string  obtain  contains  length  initial  string  length  allowed  prefix  latin  alphabet  second  contains  initial  string  guaranteed  contains  lowercase  latin  letter  crisp  latin  letter  might  present  string  next  contains  matrix  mean  string  letter  latin  alphabet  adjacent  print  single  length  shortest  string  make  arbitrary  move  possible
31/B __label__implementation  __label__greedy  __label__strings  email  address  berland  string  form  arbitrary  string  consisting  small  latin  letter  bob  system  administrator  bersoft  company  keep  list  email  address  company  staff  list  large  string  address  written  arbitrary  order  separated  comma  address  written  suddenly  unknown  reason  comma  bob  list  disappeared  bob  ha  string  address  written  another  without  separator  impossible  determine  boundary  address  unfortunately  day  chief  asked  bring  initial  list  address  bob  want  disjoin  address  valid  way  help  contains  list  address  without  separator  length  string  inclusive  string  consists  small  latin  letter  character  list  valid  according  berland  rule  email  address  removing  comma  coincides  given  string  output  solution  case  output  list  address  written  list  several  solution  output
429/C __label__dp  __label__greedy  __label__trees  __label__constructive  algorithms  iahub  iahubina  went  picnic  forest  full  tree  le  minute  passed  iahub  remembered  tree  programming  moreover  invented  new  problem  iahubina  ha  solve  otherwise  iahub  give  food  iahub  asks  iahubina  build  rooted  tree  internal  node  node  least  son  ha  least  son  node  ha  node  subtree  iahubina  ha  guess  tree  smart  girl  realized  possible  tree  follow  iahub  restriction  way  iahub  eat  food  need  help  iahubina  determine  least  tree  following  iahub  restriction  required  tree  must  node  input  contains  next  contains  positive  represents  output  yes  without  quote  exist  least  tree  following  iahub  restriction  otherwise  output  without  quote
1109/C __label__implementation  __label__data  structures  __label__binary  search  fedya  sasha  friend  sasha  know  everything  fedya  fedya  keep  patience  infinitely  large  bowl  unlike  bowl  fedya  patience  infinite  let  liter  fedya  patience  soon  becomes  equal  bowl  burst  immediately  tap  bowl  pump  liter  patience  per  second  notice  negative  case  tap  pump  patience  sasha  different  thing  able  change  tap  speed  action  sasha  doe  represented  query  type  query  add  new  event  mean  starting  second  tap  speed  equal  delete  event  happens  second  guaranteed  event  exists  sasha  wonder  take  event  l  simulate  change  fedya  patience  beginning  second  till  beginning  second  inclusive  initial  volume  patience  beginning  second  equal  liter  moment  bowl  burst  doe  happen  answer  since  sasha  doe  want  check  happen  fedya  patience  end  ha  already  come  query  asking  help  find  answer  query  type  guaranteed  moment  time  event  happen  second  contans  query  next  following  format  mean  new  event  added  mean  starting  second  tap  speed  equal  mean  event  happens  second  must  deleted  guaranteed  exists  mean  simulate  process  beginning  second  till  beginning  second  inclusive  say  bowl  burst  guaranteed  query  guaranteed  least  query  type  query  type  already  exists  event  happens  second  query  type  print  new  moment  bowl  burst  print  happen
1151/F __label__dp  girl  named  sonya  studying  scientific  lyceum  kingdom  kremland  teacher  computer  science  sonya  favorite  subject  invented  task  given  array  length  consisting  exactly  time  following  happens  chosen  equiprobable  position  swapped  sonya  task  find  probability  operation  completed  array  sorted  non  decreasing  order  turned  help  help  sonya  solve  problem  shown  desired  probability  either  represented  coprime  mod  contains  length  array  operation  second  contains  description  array  desired  probability  print  otherwise  print  value  mod  defined
493/C __label__implementation  __label__data  structures  __label__sortings  __label__brute  force  __label__binary  search  vasya  follows  basketball  game  mark  distance  team  make  throw  know  successful  throw  ha  value  either  point  throw  worth  point  distance  wa  made  exceed  value  meter  throw  worth  point  distance  larger  meter  non  negative  vasya  would  like  advantage  point  scored  team  point  team  minus  point  second  team  maximum  mentally  choose  value  help  contains  throw  team  follow  distance  throw  follows  throw  second  team  follow  distance  throw  print  format  score  possible  considering  problem  condition  result  subtraction  maximum  several  score  find  maximum
1044/F __label__data  structures  let  tree  vertex  consider  graph  initially  equal  given  sequence  update  update  given  pair  distinct  every  define  graph  follows  contains  edge  remove  edge  form  otherwise  add  edge  form  formally  denotes  set  symmetric  difference  furthermore  guaranteed  always  subgraph  word  update  never  remove  edge  consider  connected  graph  run  depth  search  see  tree  edge  edge  leading  visited  vertex  time  traversal  form  spanning  tree  graph  spanning  tree  generally  fixed  particular  graph  depends  starting  vertex  order  neighbor  vertex  traversed  call  vertex  good  order  neighbor  vertex  way  depth  search  started  produce  spanning  tree  every  find  report  good  vertex  contains  node  update  respectively  next  contains  vertex  connected  edge  guaranteed  graph  tree  next  contains  endpoint  edge  added  removed  guaranteed  edge  doe  belong  update  print  good  vertex  corresponding  update
858/D __label__implementation  __label__data  structures  __label__sortings  phone  polycarp  contact  phone  digit  starting  digit  different  distinct  latest  version  berdroid  installed  polycarp  phone  entered  show  contact  substring  equal  entered  sequence  digit  example  phone  polycarp  contact  enters  show  enters  show  enters  phone  polycarp  contact  find  minimum  length  sequence  digit  polycarp  enters  sequence  berdroid  show  phone  contains  single  total  phone  contact  polycarp  contact  phone  follow  positive  digit  starting  digit  distinct  print  exactly  shortest  non  empty  sequence  digit  polycarp  enters  berdroid  show  contact  several  sequence  print
509/C __label__dp  __label__implementation  __label__greedy  vasya  strictly  increasing  sequence  positive  vasya  used  build  new  sequence  sum  digit  decimal  representation  sequence  got  lost  remained  sequence  vasya  wonder  could  like  possible  option  like  sequence  minimum  possible  last  help  vasya  restore  initial  sequence  guaranteed  sequence  always  exists  contains  single  next  required  sum  digit  belong  range  print  per  correct  option  order  following  sequence  sequence  strictly  increasing  sum  digit  equal
827/A __label__greedy  __label__data  structures  __label__sortings  __label__strings  ivan  string  consisting  small  english  letter  friend  julia  decided  make  fun  hid  string  ivan  preferred  making  new  string  finding  old  ivan  know  information  string  namely  remembers  string  occurs  string  least  time  remembers  exactly  position  string  occurs  string  position  remembers  string  reconstruct  lexicographically  minimal  string  fit  information  ivan  remembers  string  string  consist  small  english  letter  contains  single  string  ivan  remembers  next  information  string  contains  non  empty  string  positive  equal  time  string  occurs  string  distinct  positive  increasing  order  position  occurrence  string  string  start  guaranteed  sum  length  string  exceed  sum  exceed  string  coincide  guaranteed  input  data  self  contradictory  thus  least  answer  always  exists  print  lexicographically  minimal  string  fit  information  ivan  remembers
599/B __label__implementation  patrick  wa  gone  shopping  spongebob  decided  play  little  trick  friend  naughty  sponge  browsed  patrick  personal  stuff  found  sequence  length  consisting  necessarily  distinct  picked  sequence  length  got  ai  finish  prank  erased  initial  sequence  hard  express  sad  patrick  wa  returned  home  shopping  say  spongebob  immediately  got  really  sorry  ha  done  trying  restore  original  sequence  help  determine  impossible  input  contains  length  sequence  respectively  second  contains  determining  sequence  last  contains  determining  sequence  print  possible  exactly  sequence  ai  print
991/B __label__greedy  __label__sortings  translator  note  russia  widespread  grading  system  grade  higher  better  roughly  corresponding  respectively  american  grading  system  term  coming  end  student  start  thinking  grade  today  professor  told  student  grade  course  would  given  automatically  would  calculate  simple  average  arithmetic  mean  grade  given  lab  work  term  round  nearest  rounding  would  done  favour  student  would  rounded  example  would  rounded  doe  bode  well  vasya  think  lab  work  would  influence  anything  receive  grade  worse  maybe  even  dreaded  professor  allowed  redo  work  vasya  choosing  increase  average  grade  vasya  want  redo  lab  work  possible  order  get  course  course  vasya  get  lab  work  chooses  redo  help  vasya  calculate  minimum  amount  lab  work  vasya  ha  redo  contains  single  vasya  grade  second  contains  vasya  grade  lab  work  output  single  minimum  amount  lab  work  vasya  ha  redo  shown  vasya  always  redo  enough  lab  work  get
1216/B __label__implementation  __label__greedy  __label__sortings  recently  vasya  decided  improve  pistol  shooting  skill  today  coach  offered  following  exercise  placed  row  table  numbered  left  right  vasya  ha  knock  exactly  finish  exercise  allowed  choose  order  knock  vasya  know  durability  mean  vasya  ha  already  knocked  start  shooting  need  shot  knock  assume  vasya  start  shooting  shooting  knock  task  choose  order  shooting  shot  required  knock  given  exactly  minimum  possible  input  contains  second  input  contains  sequence  durability  print  minimum  shot  required  knock  given  exactly
418/E __label__data  structures  order  ensure  confidentiality  access  russian  code  cup  problem  password  protected  problem  development  process  select  password  jury  generate  special  table  contains  column  infinite  row  construct  table  row  fixed  others  obtained  following  rule  row  position  equal  time  occurs  prefix  ensure  required  level  confidentiality  jury  must  able  perform  following  operation  replace  rebuild  table  find  new  password  step  manually  tedious  jury  asks  help  write  program  responds  request  jury  contains  column  second  contains  description  row  table  le  exceed  third  input  contains  request  next  row  contains  description  request  consists  equal  remaining  put  value  position  row  equal  remaining  row  column  table  cell  want  get  value  print  answer  request  second  type  order  receive
831/A __label__implementation  array  unimodal  strictly  increasing  beginning  constant  strictly  decreasing  block  increasing  last  block  decreasing  absent  allowed  block  absent  example  following  array  unimodal  following  unimodal  write  program  check  array  unimodal  contains  element  array  second  contains  element  array  print  yes  given  array  unimodal  otherwise  print
442/D __label__data  structures  __label__trees  adam  get  rooted  tree  connected  non  directed  graph  without  cycle  immediately  start  coloring  formally  assigns  color  edge  tree  meet  following  condition  vertex  ha  incident  edge  painted  color  vertex  incident  edge  painted  color  say  path  consists  edge  color  tree  painting  equally  good  adam  let  consider  path  vertex  root  let  call  distinct  color  path  cost  vertex  cost  tree  coloring  maximum  cost  vertex  help  adam  determine  minimum  possible  cost  painting  tree  initially  adam  tree  consists  single  vertex  ha  root  move  adam  add  new  vertex  already  existing  new  vertex  get  equal  minimum  positive  available  operation  need  calculate  minimum  cost  coloring  resulting  tree  contains  time  new  vertex  added  second  contains  vertex  add  another  vertex  print  minimum  cost  tree  painting  addition
420/B __label__implementation  nearly  project  company  ha  whole  team  developer  working  often  different  room  office  different  city  even  country  keep  touch  track  result  project  company  conduct  shared  online  meeting  spyke  chat  day  director  company  got  hold  record  part  online  meeting  successful  team  director  watched  record  wanted  talk  team  leader  tell  leader  director  logically  supposed  leader  person  present  conversation  chat  meeting  word  moment  time  least  person  present  meeting  leader  present  meeting  assistant  director  given  user  logged  user  logged  message  meeting  chronological  order  help  director  determine  leader  note  director  ha  record  continuous  part  meeting  probably  whole  meeting  contains  team  participant  message  next  contains  message  format  record  mean  person  ha  logged  meeting  record  mean  person  ha  logged  meeting  assume  people  team  numbered  message  given  chronological  order  guaranteed  given  sequence  correct  record  continuous  part  meeting  guaranteed  log  log  event  occurred  simultaneously  print  many  people  leader  next  print  increasing  order  people  leader
870/C __label__math  __label__dp  __label__greedy  __label__number  theory  given  several  query  query  given  single  positive  represent  sum  maximum  possible  composite  summands  print  maximum  print  splittings  greater  composite  prime  ha  positive  divisor  equal  contains  single  query  follow  contains  single  query  query  print  maximum  possible  summands  valid  splitting  composite  summands  splittings
923/F __label__graphs  __label__trees  __label__constructive  algorithms  city  bob  country  connected  road  pair  city  connected  public  transport  competing  transport  company  boblines  operating  bus  bobrail  running  train  traveling  passenger  always  selects  mode  transport  either  bus  train  embarks  journey  every  pair  city  exactly  way  travel  without  visiting  city  using  bus  route  second  using  train  route  furthermore  pair  city  directly  connected  bus  route  train  route  obtained  plan  network  unfortunately  company  us  different  name  city  precisely  bus  company  city  using  train  company  us  find  possible  mapping  numbering  scheme  pair  city  connected  directly  bus  route  train  route  note  mapping  ha  map  different  city  different  city  contains  city  follow  representing  network  plan  boblines  contains  meaning  bus  route  city  follow  representing  network  plan  bobrail  contains  n  meaning  train  route  city  solution  output  single  word
870/A __label__implementation  __label__brute  force  given  list  non  digit  let  call  pretty  base  representation  ha  least  digit  list  least  digit  second  list  smallest  positive  pretty  contains  length  second  list  respectively  second  contains  distinct  digit  element  list  third  contains  distinct  digit  element  second  list  print  smallest  pretty
763/E __label__data  structures  birthday  party  timofey  went  favorite  tree  alley  park  want  feed  favorite  bird  crow  widely  known  tree  occupied  single  crow  family  tree  alley  form  row  numbered  family  friend  reason  family  friend  live  far  precisely  tree  pair  friend  family  formally  family  tree  family  tree  friend  hold  friendship  feature  family  learns  timofey  feeding  crow  somewhere  notifies  friend  family  thus  timofey  start  feed  crow  tree  family  friend  family  living  tree  well  friend  fly  feeding  place  course  family  living  tree  come  feeding  place  today  timofey  came  alley  noticed  family  live  tree  strictly  le  strictly  greater  flown  away  thus  possible  pas  information  feeding  moreover  need  feed  help  timofey  learn  minimum  tree  ha  feed  crow  family  remained  get  information  feeding  given  several  situation  described  need  calculate  answer  contains  tree  maximum  possible  distance  friend  family  next  contains  single  pair  friend  family  next  contains  mean  family  tree  friend  guaranteed  u  given  pair  distinct  next  contains  single  situation  need  calculate  answer  next  contains  mean  situation  family  flown  away  lived  tree  either  print  single  answer  situation
1017/H __label__brute  force  man  high  castle  world  different  film  ending  abendsen  owns  storage  shelf  ha  ordered  film  shelf  month  empty  storage  put  film  storage  film  ending  think  question  put  film  shelf  storage  randomly  pick  film  film  storage  rearranges  shelf  probability  sequence  ending  shelf  changed  notice  think  question  shelf  actually  changed  answer  abendsen  question  let  probability  fraction  let  say  total  way  take  film  storage  month  always  print  month  mod  prime  equal  guaranteed  different  value  contains  film  shelf  initially  ending  month  second  contains  ending  film  shelf  next  contains  query  guaranteed  different  value  print  answer  question  separate
480/D __label__dp  __label__graphs  jaroslav  owns  small  courier  service  ha  recently  got  introduced  new  system  processing  parcel  parcel  box  box  ha  weight  strength  system  work  follows  originally  ha  empty  platform  put  box  following  rule  platform  empty  box  put  directly  platform  otherwise  put  topmost  box  platform  total  weight  box  platform  exceed  strength  platform  time  strength  box  platform  time  must  le  total  weight  box  stand  take  topmost  box  platform  system  receives  parcel  parcel  arrives  exactly  time  ini  weight  strength  equal  respectively  parcel  ha  value  bourles  obtain  value  system  need  give  parcel  exactly  time  outi  otherwise  jaroslav  get  bourles  thus  jaroslav  skip  parcel  put  platform  formally  deliver  time  ini  get  anything  operation  problem  performed  instantly  mean  possible  make  several  operation  receiving  delivering  parcel  time  order  please  note  parcel  delivered  time  outi  immediately  get  outside  system  following  activity  taking  place  time  made  without  taking  consideration  since  system  complex  lot  received  parcel  jaroslav  asks  say  maximum  amount  money  get  using  system  input  contains  space  separated  follow  contains  space  separated  ini  outi  ni  uti  guaranteed  either  ininj  outiutj  print  single  maximum  sum  bourles  jaroslav  get
903/G __label__data  structures  __label__graphs  problem  deal  special  network  network  consists  part  part  part  part  consists  vertex  vertex  part  denoted  vertex  part  denoted  index  directed  edge  vertex  vertex  respectively  capacity  edge  given  input  might  several  directed  edge  going  part  part  never  calculate  maximum  flow  value  network  capacity  edge  connecting  might  sometimes  change  maintain  maximum  flow  value  change  apart  network  fixed  change  part  change  edge  going  edge  insertion  deletion  take  look  example  note  understand  structure  network  better  contains  vertex  part  edge  going  change  respectively  follow  contains  denoting  edge  ha  capacity  edge  ha  capacity  follow  describing  edge  contains  denoting  edge  capacity  might  multiple  edge  follow  describing  sequence  change  network  contains  denoting  capacity  edge  avi  avi  set  firstly  print  maximum  flow  value  original  network  print  must  equal  maximum  flow  value  change
625/E __label__greedy  __label__data  structures  ostap  bender  recently  visited  frog  farm  wa  inspired  create  frog  game  frog  place  cyclic  gameboard  divided  cell  cell  numbered  board  cyclic  cell  go  right  cell  direction  movement  frog  turn  jump  cell  frog  move  turn  game  start  move  frog  turn  frog  move  cell  forward  knocking  frog  way  frog  last  cell  path  frog  frog  knocked  value  decreased  frog  knocked  turn  go  negative  frog  make  move  anymore  frog  finish  turn  frog  start  move  frog  frog  make  move  frog  start  move  frog  process  go  forever  frog  wa  already  knocked  board  consider  skip  move  help  ostap  identify  frog  stay  board  end  game  input  contains  frog  gameboard  size  respectively  following  contains  frog  description  cell  occupied  frog  initially  initial  jump  length  guaranteed  distinct  output  frog  final  gameboard  second  output  order
913/E __label__dp  given  boolean  function  variable  defined  truth  table  need  find  expression  minimum  length  equal  function  expression  consist  operation  ascii  code  operation  ascii  code  operation  ascii  code  variable  ascii  code  parenthesis  ascii  code  ascii  code  expression  minimum  length  exists  find  lexicographically  smallest  operation  standard  priority  ha  highest  priority  go  ha  lowest  priority  expression  satisfy  following  grammar  contains  function  input  following  description  function  contains  string  length  consists  digit  truth  table  function  digit  position  equal  value  function  case  output  expression  minimum  length  equal  function  expression  output  lexicographically  smallest  expression  satisfy  given  grammar  white  space
538/E __label__math  __label__dp  __label__dfs  __label__trees  demiurge  shambambukli  mazukta  love  watch  game  ordinary  people  today  noticed  men  play  following  game  rooted  tree  node  leaf  leaf  node  doe  child  edge  tree  directed  parent  child  leaf  tree  placed  way  appears  exactly  leaf  initially  root  tree  contains  piece  player  move  piece  turn  move  player  move  piece  current  node  child  player  make  move  game  end  immediately  result  game  placed  leaf  piece  ha  completed  movement  player  make  move  try  maximize  result  game  second  player  contrary  try  minimize  result  assume  player  move  optimally  well  demiurge  omnipotent  game  arbitrarily  rearrange  placed  leaf  shambambukli  want  rearrange  result  game  player  play  optimally  well  large  possible  mazukta  want  result  small  possible  outcome  game  rearranged  shambambukli  rearranged  mazukta  course  demiurge  choose  best  possible  option  arranging  contains  single  node  tree  next  contains  end  edge  tree  edge  lead  node  node  guaranteed  described  graph  rooted  tree  root  node  print  space  separated  maximum  possible  minimum  possible  result  game
630/D __label__math  probationary  period  game  development  company  city  petya  wa  included  group  programmer  develops  new  turn  based  strategy  game  resembling  well  known  hero  might  magic  part  game  turn  based  fight  big  squadron  enemy  infinite  field  every  cell  form  hexagon  magic  effect  able  affect  several  field  cell  cell  situated  farther  cell  away  cell  effect  wa  applied  distance  cell  minimum  cell  border  cross  path  cell  another  easy  see  cell  affected  magic  effect  grows  rapidly  increase  adversely  affect  game  performance  petya  decided  write  program  given  determine  cell  repainted  effect  application  game  designer  balance  scale  effect  game  performance  help  find  hexagon  situated  farther  cell  away  given  cell  input  contains  output  hexagon  situated  farther  cell  away  given  cell
615/A __label__implementation  vasya  want  turn  christmas  light  consisting  bulb  initially  bulb  turned  button  connected  set  bulb  vasya  press  button  button  pressed  turn  bulb  connected  vasya  light  bulb  vasya  press  button  bulb  connected  already  turned  change  state  remain  turned  input  contains  button  bulb  respectively  next  contains  bulb  turned  button  yij  ij  bulb  possible  turn  bulb  print  yes  otherwise  print
616/E __label__math  __label__implementation  __label__number  theory  calculate  value  sum  mod  mod  mod  mod  result  large  print  value  modulo  remainder  divided  modulo  operator  mod  stand  remainder  dividing  example  mod  contains  parameter  sum  print  value  required  sum  modulo
496/A __label__math  __label__implementation  __label__brute  force  mike  trying  rock  climbing  awful  hold  wall  hold  height  ground  besides  let  sequence  increase  call  sequence  track  mike  think  track  ha  difficulty  word  difficulty  equal  maximum  distance  hold  adjacent  height  today  mike  decided  cover  track  hold  hanging  height  make  problem  harder  mike  decided  remove  hold  remove  element  sequence  example  take  sequence  remove  third  element  obtain  sequence  mike  awful  climbing  want  final  difficulty  maximum  difference  height  adjacent  hold  removing  hold  small  possible  possible  option  removing  hold  last  hold  must  stay  position  help  mike  determine  minimum  difficulty  track  removing  hold  contains  single  hold  next  contains  space  separated  height  hold  hang  sequence  increasing  element  except  strictly  larger  previous  print  single  minimum  difficulty  track  removing  single  hold
779/C __label__greedy  __label__sortings  __label__constructive  algorithms  igor  found  discount  shop  decided  buy  item  discount  store  last  week  igor  know  item  price  week  discount  price  seller  honest  product  could  expensive  week  discount  igor  decided  buy  least  item  wait  rest  week  order  save  money  much  possible  task  determine  minimum  money  igor  spend  buy  item  positive  total  item  buy  minimal  item  igor  want  right  second  contains  sequence  price  item  discount  right  third  contains  sequence  price  item  discount  week  print  minimal  amount  money  igor  spend  buy  item  remember  buy  least  item  right
888/C __label__implementation  __label__binary  search  given  string  consisting  lowercase  latin  letter  character  called  dominant  iff  substring  length  least  contains  character  find  minimum  exists  least  dominant  character  contains  string  consisting  lowercase  latin  letter  print  minimum  value  exists  least  dominant  character
1108/B __label__math  __label__greedy  __label__brute  force  __label__number  theory  recently  received  positive  forgot  remembered  shuffled  list  containing  divisor  including  divisor  including  divisor  time  occurrence  list  example  given  list  permutation  list  possible  list  problem  restore  suitable  positive  would  yield  list  divisor  possibly  different  order  guaranteed  answer  exists  given  list  divisor  corresponds  positive  contains  divisor  second  input  contains  either  divisor  divisor  divisor  copy  list  print  positive  merged  list  divisor  permutation  given  list  guaranteed  answer  exists
323/B __label__graphs  __label__constructive  algorithms  problem  build  tournament  graph  consisting  vertex  oriented  pair  vertex  v  exists  path  vertex  vertex  consisting  edge  directed  graph  without  self  loop  tournament  exactly  edge  distinct  vertex  possible  direction  contains  graph  vertex  print  graph  satisfying  described  condition
1220/A __label__implementation  __label__sortings  __label__strings  serezha  wa  year  old  wa  given  set  card  letter  birthday  arranged  word  way  formed  boy  mother  favorite  binary  notation  serezha  started  playing  immediately  shuffled  able  read  father  decided  rearrange  help  restore  original  condition  wa  maximum  possible  contains  single  length  string  second  contains  string  consisting  english  lowercase  letter  guaranteed  possible  rearrange  letter  way  form  sequence  word  either  corresponds  digit  corresponds  digit  print  maximum  possible  binary  notation  print  binary  digit  separated  space  leading  allowed
958/B1 __label__implementation  resistance  trying  take  control  planet  particular  solar  system  solar  system  shaped  like  tree  precisely  planet  connected  bidirectional  hyperspace  tunnel  way  path  every  pair  planet  removing  tunnel  would  disconnect  resistance  already  ha  measure  place  time  right  enable  control  every  planet  remote  planet  considered  remote  connected  rest  planet  via  single  hyperspace  tunnel  much  work  left  done  many  remote  planet  input  contains  planet  galaxy  next  describe  hyperspace  tunnel  planet  contains  space  separated  indicating  bidirectional  hyperspace  tunnel  planet  guaranteed  every  planet  connected  path  tunnel  tunnel  connects  different  pair  planet  single  denoting  remote  planet
852/C __label__greedy  __label__sortings  bill  famous  mathematician  bubbleland  thanks  revolutionary  math  discovery  wa  able  make  enough  money  build  beautiful  house  unfortunately  paying  property  tax  time  court  decided  punish  bill  making  lose  part  property  bill  property  observed  convex  regular  sided  polygon  n  n  n  side  exactly  meter  length  court  rule  removing  part  property  follows  split  every  edge  equal  part  size  point  every  edge  k  k  court  choose  point  b  k  every  edge  k  k  bill  choose  point  b  k  bill  get  keep  property  inside  sided  polygon  b  n  luckily  bill  found  b  k  point  court  chose  even  though  great  mathematician  house  big  ha  hard  time  calculating  therefore  asking  help  choose  point  maximizes  area  property  keep  contains  representing  edge  sided  polygon  second  contains  distinct  b  k  k  separated  single  space  representing  point  court  chose  b  k  court  chose  point  side  k  k  output  contains  distinct  separated  single  space  representing  point  n  bill  choose  order  maximize  property  area  multiple  solution  maximize  area  return
788/A __label__dp  something  happened  uzhlyandia  riot  street  famous  uzhlyandian  superheroes  shean  sheep  stas  giraffe  called  order  save  situation  upon  arriving  found  citizen  worried  maximum  value  main  uzhlyandian  function  defined  follows  formula  must  hold  size  main  uzhlyandian  array  mean  absolute  value  hero  skipped  math  lesson  school  asked  help  help  calculate  maximum  value  possible  value  given  array  contains  single  size  array  second  contains  array  element  print  maximum  value
1088/F __label__data  structures  __label__trees  given  tree  consisting  node  every  node  ha  weight  guaranteed  node  minimum  weight  tree  every  node  except  node  minimum  weight  must  neighbor  construct  tree  minimize  weight  calculated  follows  every  node  added  edge  containing  node  every  edge  dist  min  added  dist  edge  path  given  tree  contains  node  tree  second  contains  space  separated  weight  node  next  contains  space  separated  mean  edge  output  minimum  possible  value
1034/E __label__math  __label__dp  little  love  much  love  thing  interested  following  problem  array  intergers  task  calculate  denotes  bitwise  operation  denotes  bitwise  operation  amazing  proved  exactly  triple  little  want  solve  excellent  problem  well  related  excellently  help  calculate  little  love  much  want  know  contains  second  contains  without  space  third  contains  without  space  print  contains  without  space  obvious
1025/F __label__geometry  point  belongs  triangle  lie  inside  triangle  side  triangle  disjoint  point  plane  belongs  triangle  given  point  plane  point  coincide  point  collinear  find  different  way  choose  disjoint  triangle  vertex  given  point  way  differ  order  triangle  order  vertex  inside  triangle  considered  equal  input  contains  point  next  contains  coordinate  point  point  coincide  point  collinear  print  way  choose  disjoint  triangle
698/D __label__brute  force  __label__geometry  bearland  dangerous  place  limak  travel  foot  instead  ha  magic  teleportation  stone  stone  used  stone  allows  teleport  point  axi  yi  limak  use  stone  order  monster  bearland  stand  mxi  yi  given  point  pairwise  distinct  teleportation  limak  shoot  arrow  direction  arrow  hit  monster  chosen  direction  arrow  monster  disappear  dangerous  stay  place  long  limak  shoot  arrow  place  monster  afraid  possible  limak  hit  many  monster  afraid  limak  input  contains  stone  monster  following  contains  axi  ayi  xi  yi  coordinate  limak  teleport  using  stone  last  contains  mxi  myi  xi  yi  coordinate  monster  given  point  pairwise  distinct  print  monster  afraid  limak
354/D __label__dp  vasya  petya  using  interesting  data  storing  structure  pyramid  pyramid  consists  row  row  contains  cell  row  shifted  half  cell  left  relative  previous  row  cell  numbered  shown  picture  example  pyramid  data  structure  perform  operation  type  change  value  specific  cell  described  type  operation  cell  change  value  assign  cell  change  value  subpyramid  picture  show  highlighted  subpyramid  top  cell  described  top  cell  pyramid  size  subpyramid  cell  ha  value  assign  cell  subpyramid  formally  subpyramid  top  cell  row  cell  second  cell  third  row  cell  row  row  contains  cell  vasya  petya  identical  pyramid  vasya  changed  cell  pyramid  want  send  change  petya  want  find  sequence  operation  petya  repeat  vasya  change  possible  sequence  vasya  ha  pick  minimum  contains  fewest  pyramid  row  changed  cell  find  sequence  operation  result  changed  cell  changed  least  operation  possible  sequence  pick  contains  fewest  contains  next  coordinate  modified  cell  ii  row  cell  row  cell  distinct  print  single  showing  many  final  sequence  ha
1221/C __label__math  __label__binary  search  already  known  standard  icpc  team  consists  exactly  member  perfect  team  ha  restriction  student  specialization  coder  mathematician  specialization  time  team  considered  perfect  includes  least  coder  least  mathematician  consists  exactly  member  coach  large  university  know  student  coder  mathematician  specialization  maximum  full  perfect  team  distribute  note  student  left  without  team  student  part  team  asked  answer  independent  query  contains  single  query  next  contains  coder  mathematician  student  without  specialization  university  respectively  note  student  coder  mathematician  time  print  answer  query  order  given  input  answer  maximum  full  perfect  team  distribute  student
87/D __label__dp  __label__implementation  __label__sortings  __label__dfs  __label__graphs  __label__trees  long  time  ago  country  asia  civil  war  city  wanted  seize  power  sometimes  city  gathered  army  sent  campaign  another  city  road  making  wa  difficult  country  road  exactly  could  reach  city  city  going  road  even  war  oriental  people  remain  spiritually  rich  appreciate  beauty  nature  keep  memory  great  crusade  century  come  planted  beautiful  tree  road  army  spent  time  oriental  people  love  nature  several  road  tree  wa  planted  recently  record  war  found  became  clear  city  attacked  exactly  exactly  attack  total  everyone  ha  wondering  road  war  became  beautiful  road  planted  largest  beautiful  tree  contains  represents  city  next  city  connected  road  day  army  spends  length  several  road  coincide  print  beautiful  tree  beautiful  road  beautiful  road  print  second  list  beautiful  road  sorted  order  increasing  road  numbered  order  given  input  data
812/D __label__implementation  __label__dfs  __label__graphs  __label__trees  sagheer  working  kindergarten  child  different  toy  child  use  well  defined  protocol  playing  toy  child  ha  lovely  set  toy  love  play  request  toy  another  distinct  moment  time  child  start  playing  granted  toy  lovely  set  child  start  playing  sooner  later  give  toy  back  child  keep  toy  forever  child  request  toy  distinct  moment  time  child  request  toy  time  child  granted  toy  never  give  back  finish  playing  lovely  set  child  granted  toy  wait  granted  toy  request  another  toy  waiting  child  waiting  toy  child  requested  take  toy  child  like  play  never  share  toy  child  request  toy  granting  toy  child  depends  whether  toy  free  toy  free  sagheer  give  child  otherwise  child  ha  wait  request  another  toy  child  smart  detect  wait  forever  get  toy  want  case  start  cry  word  cry  set  set  child  child  waiting  toy  kept  another  child  set  reached  scenario  child  made  request  lovely  set  except  child  still  ha  last  request  lovely  set  child  playing  others  waiting  toy  child  cry  ha  finished  playing  child  currently  waiting  toy  make  last  request  getting  toy  otherwise  make  request  right  away  child  make  last  request  many  child  start  cry  given  scenario  independent  query  query  form  meaning  last  request  child  toy  task  help  sagheer  find  size  maximal  cry  set  child  make  last  request  contains  child  toy  scenario  request  query  next  contains  scenario  request  meaning  child  request  toy  request  given  order  made  child  next  contains  request  added  scenario  meaning  child  request  toy  getting  toy  waiting  guaranteed  scenario  request  consistent  child  initially  cry  scenario  request  distinct  query  coincides  scenario  request  query  print  single  child  start  cry  child  make  last  request  toy  please  answer  query  independent
609/F __label__greedy  __label__data  structures  frog  sitting  coordinate  axis  frog  value  known  position  initial  length  tongue  frog  guaranteed  position  different  mosquito  landing  coordinate  axis  mosquito  value  known  coordinate  position  mosquito  land  size  mosquito  frog  mosquito  represented  point  coordinate  axis  frog  eat  mosquito  mosquito  position  frog  right  distance  greater  length  tongue  frog  moment  several  frog  eat  mosquito  leftmost  frog  eat  minimal  eating  mosquito  length  tongue  frog  increase  value  size  eaten  mosquito  possible  frog  able  eat  mosquito  frog  eat  case  frog  print  value  eaten  mosquito  length  tongue  landing  mosquito  eating  possible  mosquito  frog  mosquito  landing  coordinate  axis  frog  eat  possible  mosquito  landed  mosquito  given  order  landing  coordinate  axis  contains  frog  mosquito  next  contains  position  initial  length  tongue  frog  guaranteed  different  next  j  j  position  size  mosquito  print  value  mosquito  eaten  frog  length  tongue  frog
500/B __label__math  __label__greedy  __label__sortings  __label__dfs  __label__graphs  user  ainta  ha  permutation  new  year  coming  want  make  permutation  pretty  possible  permutation  prettier  permutation  exists  hold  known  permutation  sensitive  could  modified  swapping  distinct  element  swapping  element  harder  think  given  n  binary  matrix  user  ainta  swap  value  given  permutation  matrix  user  ainta  want  know  prettiest  permutation  obtain  contains  size  permutation  second  contains  space  separated  permutation  user  ainta  ha  occurs  exactly  given  permutation  next  describe  matrix  contains  character  describes  row  character  element  intersection  row  column  guaranteed  hold  hold  print  space  separated  describing  prettiest  permutation  obtained
1066/F __label__dp  maksim  walk  cartesian  plane  initially  stand  point  move  adjacent  point  left  right  example  maksim  currently  point  following  point  move  distinct  key  point  plane  point  guaranteed  key  point  let  level  point  point  max  second  level  point  point  max  maksim  want  visit  key  point  visit  point  level  doe  visit  point  level  start  visiting  point  minimum  level  point  given  set  distance  point  absolute  value  maksim  want  visit  key  point  way  total  distance  walk  minimum  possible  task  find  distance  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  key  point  next  contains  coordinate  key  point  coordinate  key  point  guaranteed  point  distinct  point  set  print  minimum  possible  total  distance  maksim  ha  travel  need  visit  key  point  way  described
682/E __label__geometry  given  point  coordinate  plane  point  given  way  triangle  formed  point  area  exceeds  alyona  tried  construct  triangle  coordinate  contains  point  area  exceed  obvious  reason  success  please  help  alyona  construct  triangle  please  note  vertex  resulting  triangle  necessarily  chosen  given  point  input  given  point  given  upper  bound  value  triangle  area  formed  given  point  next  describes  given  point  ith  consists  coordinate  ith  point  guaranteed  least  triple  point  lying  print  coordinate  point  vertex  triangle  contains  point  area  exceed
493/B __label__implementation  vasya  ha  become  interested  wrestling  wrestling  wrestler  use  technique  awarded  point  judge  wrestler  get  point  win  point  wrestler  equal  wrestler  whose  sequence  point  lexicographically  greater  win  sequence  awarded  point  coincide  wrestler  performed  last  technique  win  task  determine  wrestler  contains  technique  wrestler  used  following  ai  positive  mean  wrestler  performed  technique  wa  awarded  point  negative  mean  second  wrestler  performed  technique  wa  awarded  point  technique  given  chronological  order  wrestler  win  print  string  otherwise  print  second
585/B __label__dfs  __label__graphs  mobile  application  store  ha  new  game  called  subway  roller  protagonist  game  philip  located  end  tunnel  want  get  tunnel  rectangular  field  consisting  row  column  beginning  game  hero  cell  leftmost  column  train  ride  towards  hero  train  consists  neighbouring  cell  row  field  train  moving  right  left  speed  cell  per  second  hero  run  left  right  speed  cell  per  second  simplicity  game  implemented  hero  train  move  turn  hero  move  cell  right  square  stay  idle  train  move  twice  simultaneously  cell  left  thus  move  philip  definitely  make  move  right  move  point  philip  cell  train  loses  train  reach  left  column  continues  move  leaving  tunnel  task  answer  question  whether  sequence  movement  philip  would  able  get  rightmost  column  test  contains  set  input  data  test  contains  single  pretests  test  hack  see  note  section  detail  set  follows  description  set  input  data  description  set  contains  column  field  train  following  contains  sequence  character  representing  row  field  game  philip  initial  position  marked  leftmost  column  train  marked  sequence  identical  uppercase  letter  english  alphabet  located  distinct  train  represented  distinct  letter  character  represents  empty  cell  cell  either  philip  train  set  input  data  print  single  word  yes  possible  win  game  word  otherwise
1252/F __label__trees  forestation  act  planting  bunch  tree  grow  forest  usually  replace  forest  cut  strangely  enough  graph  theorist  another  idea  make  forest  cutting  tree  tree  graph  node  connected  edge  let  node  tree  degree  least  directly  connected  least  node  remove  get  disconnected  smaller  tree  known  forest  graph  theorist  problem  going  investigate  special  forestation  tree  done  graph  theorist  let  set  node  tree  set  node  tree  tree  tree  identical  exists  bijection  pair  node  connected  edge  node  connected  edge  note  implies  node  corresponds  node  call  node  tree  good  cutting  point  removal  cause  disconnected  tree  disconnected  tree  pairwise  identical  given  tree  task  determine  whether  exists  good  cutting  point  node  output  maximum  disconnected  tree  obtained  removing  exactly  good  cutting  point  example  consider  following  tree  node  exactly  good  cutting  point  tree  node  observe  removing  node  get  identical  tree  case  graph  denoted  respectively  figure  bijection  function  bijection  function  bijection  function  course  exists  bijection  function  tree  begin  containting  representing  node  given  tree  next  contains  representing  edge  given  tree  guaranteed  node  given  tree  connected  sequence  edge  output  representing  maximum  disconnected  tree  obtained  removing  exactly  good  cutting  point  output  good  cutting  point
397/B __label__math  __label__implementation  __label__constructive  algorithms  alexey  merry  berland  entrant  got  sick  gray  reality  zealously  want  university  lot  university  nowadays  alexey  getting  lost  diversity  ha  decided  profession  want  get  school  bad  grade  subject  thanks  wealthy  parent  wa  able  obtain  graduation  certificate  situation  complicated  fact  high  education  institution  ha  determined  amount  voluntary  donation  paid  new  student  admission  berubleys  pay  difference  paid  amount  regarded  bribe  rector  wearing  distinctive  uniform  university  therefore  uniform  pocket  coin  denomination  rector  doe  carry  coin  denomination  le  pocket  everyone  pay  small  coin  gather  lot  weight  pocket  tear  therefore  donation  paid  coin  denomination  berubleys  lii  berland  us  coin  positive  denomination  alexey  use  coin  different  denomination  use  coin  denomination  time  alexey  wa  confronted  order  wa  puzzled  turned  university  accept  alexey  afraid  going  army  even  though  long  wanted  get  green  uniform  dad  say  army  bully  beat  son  pay  ensure  boy  safety  alexey  want  know  sure  university  enter  could  quickly  choose  alma  mater  thanks  parent  alexey  limited  money  assume  ha  unlimited  coin  type  word  given  request  contains  query  need  answer  whether  possible  gather  sum  exactly  berubleys  using  coin  denomination  berubleys  use  coin  different  denomination  coin  denomination  used  time  contains  university  next  space  separated  lii  query  print  single  either  yes  alexey  enter  university  otherwise
741/D __label__data  structures  __label__dfs  __label__trees  case  somebody  missed  wonderful  girl  arpa  land  arpa  ha  rooted  tree  connected  acyclic  graph  consisting  vertex  vertex  numbered  vertex  root  letter  written  edge  tree  mehrdad  fan  dokhtar  kosh  thing  call  string  dokhtar  kosh  shuffle  character  string  becomes  palindrome  asks  arpa  vertex  length  longest  simple  path  subtree  form  dokhtar  kosh  string  contains  vertex  tree  follow  letter  lowercase  english  letter  inclusively  mean  edge  node  letter  written  edge  print  length  longest  simple  path  subtree  vertex  form  dokhtar  kosh  string
1148/B __label__brute  force  __label__binary  search  arkady  bought  air  ticket  city  city  unfortunately  direct  flight  lot  flight  city  flight  depart  time  moment  arrive  moment  later  flight  depart  time  moment  arrive  moment  later  connection  time  negligible  use  flight  flight  cancel  flight  cancel  flight  arkady  use  arkady  want  early  possible  want  late  possible  find  earliest  time  arkady  arrive  optimally  cancel  flight  cancel  le  flight  way  possible  reach  print  contains  flight  flight  flight  time  flight  time  flight  cancel  respectively  second  contains  distinct  increasing  order  time  flight  depart  third  contains  distinct  increasing  order  time  flight  depart  cancel  le  flight  way  possible  reach  print
484/B __label__math  __label__sortings  __label__binary  search  given  sequence  consisting  find  maximum  possible  value  remainder  divided  aij  contains  length  sequence  second  contains  space  separated  print  answer  problem
1042/B __label__dp  __label__implementation  __label__brute  force  berland  shop  sell  kind  juice  juice  ha  price  juice  includes  set  vitamin  type  vitamin  vitamin  vitamin  vitamin  juice  type  vitamin  petya  know  need  type  vitamin  stay  healthy  minimum  total  price  juice  petya  ha  buy  obtain  vitamin  petya  obtains  vitamin  buy  least  juice  containing  drink  contains  single  juice  next  contains  string  price  juice  vitamin  contains  string  contains  character  possible  character  guaranteed  letter  appears  string  order  letter  string  arbitrary  print  way  obtain  vitamin  otherwise  print  minimum  total  price  juice  petya  ha  buy  obtain  vitamin
1146/F __label__dp  __label__trees  given  rooted  tree  node  labeled  tree  rooted  node  parent  node  leaf  node  child  given  set  leaf  let  denote  smallest  connected  subgraph  contains  leaf  would  like  partition  leaf  different  set  partition  disjoint  count  way  partition  leaf  modulo  way  different  leaf  set  way  different  set  contains  node  tree  next  contains  print  single  way  partition  leaf  modulo
820/B __label__math  __label__constructive  algorithms  __label__geometry  quiet  day  sudden  mister  decided  draw  angle  field  alien  already  visited  field  left  many  different  geometric  figure  figure  regular  convex  gon  regular  convex  polygon  side  mister  decided  use  polygon  mister  must  find  distinct  vertex  angle  vertex  angle  lie  side  close  possible  word  value  minimum  possible  many  optimal  solution  mister  satisfied  contains  space  separated  vertex  polygon  needed  angle  degree  print  space  separated  vertex  form  multiple  optimal  solution  print  vertex  numbered  clockwise  order
1109/F __label__data  structures  __label__trees  fine  day  sasha  went  park  walk  park  saw  favorite  bench  occupied  sit  neighboring  sat  began  listen  silence  suddenly  got  question  different  part  park  silence  sound  different  way  wa  let  divide  park  meter  square  call  cell  numerate  row  column  left  right  every  cell  described  pair  row  column  sasha  know  level  silence  cell  equal  form  permutation  sasha  decided  count  many  pleasant  segment  silence  let  take  segment  denote  set  cell  segment  silence  pleasant  simple  path  every  pair  cell  path  cell  word  set  look  like  tree  plain  sasha  ha  done  task  pretty  quickly  called  algorithm  algorithm  silence  sound  time  passed  thing  left  algorithm  legend  prove  truthfulness  story  help  sasha  find  different  pleasant  segment  silence  segment  different  time  contains  size  park  next  contains  level  silence  cell  guaranteed  different  print  pleasant  segment  silence
817/E __label__data  structures  __label__trees  might  remember  previous  round  vova  currently  playing  strategic  game  known  rage  empire  vova  managed  build  large  army  forgot  main  person  army  commander  try  hire  commander  want  choose  person  respected  warrior  warrior  represented  personality  commander  ha  characteristic  personality  leadership  warrior  respect  commander  bitwise  excluding  initially  vova  army  empty  different  type  event  happen  army  warrior  personality  join  vova  army  warrior  personality  leaf  vova  army  vova  try  hire  commander  personality  leadership  event  third  type  vova  want  know  many  warrior  counting  joined  army  left  respect  commander  try  hire  contains  event  follow  describes  event  warrior  personality  join  vova  army  warrior  personality  leaf  vova  army  guaranteed  least  warrior  vova  army  moment  vova  try  hire  commander  personality  leadership  least  event  type  event  third  type  print  warrior  respect  commander  vova  try  hire  event
714/A __label__math  __label__implementation  today  outstanding  event  going  happen  forest  hedgehog  filya  come  old  fried  sonya  sonya  owl  sleep  day  stay  awake  minute  minute  inclusive  minute  prinks  unavailable  filya  filya  work  lot  plan  visit  sonya  minute  minute  inclusive  calculate  minute  able  spend  together  input  contains  l  l  providing  segment  time  sonya  filya  moment  time  sonya  prinks  print  minute  sonya  filya  able  spend  together
1029/B __label__math  __label__dp  __label__greedy  given  problemset  consisting  problem  difficulty  problem  guaranteed  difficulty  distinct  given  increasing  order  assemble  contest  consists  problem  given  problemset  word  contest  assemble  subset  problem  necessary  consecutive  given  problemset  condition  satisfied  problem  hardest  problem  maximum  difficulty  problem  difficulty  greater  difficulty  problem  greater  twice  difficulty  problem  word  let  difficulty  selected  problem  increasing  order  hold  mean  contest  consisting  problem  always  valid  contest  satisfying  condition  assemble  maximum  problem  task  find  problem  input  contains  problem  problemset  second  input  contains  difficulty  problem  guaranteed  difficulty  problem  distinct  given  increasing  order  print  single  maximum  problem  contest  satisfying  condition  problem  statement
406/E __label__math  __label__implementation  little  chris  nightmare  even  dream  think  math  chris  dream  binary  string  length  indexed  horrifying  part  bit  string  ordered  either  ascending  descending  order  example  chris  could  dreaming  following  string  length  hamming  distance  string  length  position  corresponding  symbol  different  hris  think  string  different  index  constitute  single  triple  chris  delusion  wake  count  string  triple  sum  maximal  string  triple  constructed  dreamed  string  help  chris  wake  nightmare  input  contains  space  separated  length  string  next  description  string  contains  space  separated  description  string  index  mean  bit  string  equal  remaining  bit  equal  multiple  equal  string  chris  dream  output  single  string  triple  given  sum  hamming  distance  string  triple  maximal
850/D __label__math  __label__dp  __label__greedy  __label__graphs  __label__constructive  algorithms  ivan  reading  book  tournament  know  tournament  oriented  graph  exactly  oriented  edge  pair  vertex  score  vertex  edge  going  outside  vertex  yesterday  ivan  learned  landau  criterion  tournament  score  n  ivan  wan  na  solve  following  problem  given  set  tournament  given  set  score  tournament  sequence  score  remove  duplicate  score  obtain  required  set  find  tournament  minimum  possible  vertex  contains  single  next  contains  distinct  element  set  guaranteed  element  set  distinct  tournament  print  string  without  quote
559/E __label__dp  __label__sortings  main  walking  trail  geraldion  absolutely  straight  pass  strictly  north  south  long  ha  ever  reached  end  either  direction  geraldionians  love  walk  path  time  mayor  city  asked  herald  illuminate  path  spotlight  spotlight  already  delivered  certain  place  gerald  able  move  spotlight  illuminates  specific  segment  path  given  length  end  segment  location  spotlight  directed  cover  segment  south  north  spotlight  trail  contains  monument  mayor  island  although  walk  either  direction  monument  spotlight  south  monument  given  position  spotlight  power  help  gerald  direct  spotlight  total  length  illuminated  part  path  much  possible  contains  spotlight  contains  space  separated  show  much  spotlight  north  show  length  segment  illuminates  guaranteed  distinct  print  single  maximum  total  length  illuminated  part  path
1152/A __label__math  __label__implementation  __label__greedy  random  day  neko  found  treasure  chest  key  chest  ha  written  key  ha  neko  know  chest  powerful  mysterious  green  grape  thus  neko  want  open  many  treasure  chest  possible  key  used  unlock  chest  sum  key  chest  odd  formally  mod  key  used  open  chest  chest  opened  find  maximum  chest  neko  open  contains  chest  key  second  contains  written  treasure  chest  third  contains  written  key  print  maximum  chest  open
462/B __label__greedy  appleman  ha  card  card  ha  uppercase  letter  written  toastman  must  choose  card  appleman  card  appleman  give  toastman  coin  depending  chosen  card  formally  toastman  card  calculate  much  toastman  card  letter  equal  letter  ith  sum  quantity  coin  appleman  give  toastman  given  description  appleman  card  maximum  coin  toastman  get  contains  next  contains  uppercase  letter  without  space  letter  describes  card  appleman  print  single  answer  problem
804/B __label__math  __label__implementation  __label__greedy  string  letter  want  perform  operation  step  choose  substring  string  replace  string  bba  substring  job  done  print  minimum  step  perform  make  job  done  modulo  string  appears  substring  letter  right  letter  somewhere  string  contains  initial  string  consisting  letter  length  print  minimum  step  modulo
788/E __label__data  structures  international  uzhlyandian  war  strategic  game  tournament  team  country  called  team  consist  participant  team  uzhlyandia  consist  soldier  gamers  masha  new  minister  defense  gaming  prime  duty  minister  calculate  efficiency  uzhlandian  army  army  consists  soldier  standing  row  enumerated  soldier  know  skill  uzhlyandian  war  soldier  skill  wa  decided  team  consist  player  assistant  skill  player  assistant  skill  greater  player  skill  moreover  important  masha  assistant  stand  row  left  player  stand  row  right  player  formally  team  soldier  index  aij  lp  efficiency  army  different  team  masha  choose  team  considered  different  soldier  member  team  member  team  initially  player  able  player  reason  sometimes  soldier  become  unable  player  sometimes  soldier  unable  player  become  able  player  time  soldier  able  assistant  masha  want  control  efficiency  army  asked  tell  different  possible  team  modulo  change  contains  single  soldier  uzhlyandia  second  contains  soldier  skill  third  contains  single  change  next  change  change  described  separate  soldier  unable  player  change  soldier  able  player  change  guaranteed  query  type  soldier  able  player  query  second  type  soldier  unable  player  print  distinct  team  change
799/E __label__greedy  __label__data  structures  arkady  masha  want  choose  decoration  thier  aquarium  fishdom  game  decoration  choose  ha  cost  complete  task  arkady  masha  need  choose  exactly  decoration  given  want  spend  little  money  possible  difficulty  masha  like  given  decoration  arkady  like  given  decoration  decoration  liked  arkady  masha  liked  friend  want  choose  decoration  like  least  decoration  chosen  help  masha  arkady  find  minimum  sum  money  need  spend  contains  decoration  many  decoration  friend  choose  many  decoration  like  chosen  second  contains  decoration  cost  third  contains  single  decoration  liked  masha  fourth  contains  distinct  id  decoration  liked  masha  next  describe  decoration  liked  arkady  format  print  single  minimum  sum  money  friend  spend  fulfill  constraint  possible  print
554/A __label__math  __label__brute  force  __label__strings  kyoya  ootori  selling  photobooks  ouran  high  school  host  club  ha  photo  labeled  ha  compiled  photo  booklet  photo  order  possibly  photo  duplicated  photo  booklet  described  string  lowercase  letter  consisting  photo  booklet  order  want  sell  special  edition  photobooks  extra  photo  inserted  anywhere  book  want  make  many  distinct  photobooks  possible  make  money  asks  haruhi  many  distinct  photobooks  make  inserting  extra  photo  photobook  already  ha  please  help  haruhi  solve  problem  input  single  string  string  consists  lowercase  english  letter  output  single  equal  distinct  photobooks  kyoya  ootori  make
1153/E __label__brute  force  __label__binary  search  interactive  problem  serval  senior  high  school  student  japari  middle  school  way  school  must  pond  dangerous  snake  pond  represented  nn  grid  snake  ha  head  tail  different  cell  body  series  adjacent  cell  connecting  head  tail  without  self  intersecting  serval  hit  head  tail  snake  bite  die  luckily  ha  special  device  answer  following  question  pick  rectangle  tell  time  need  cross  border  rectangle  walking  cell  cell  along  snake  head  tail  picture  show  possible  snake  possible  query  get  answer  today  serval  got  late  time  make  query  best  friend  help  find  position  head  tail  note  cell  adjacent  common  edge  grid  snake  body  length  mean  ha  adjacent  head  tail  note  snake  sleeping  move  serval  using  device  obvious  snake  position  doe  depend  query  contains  single  size  grid  ready  answer  print  represents  position  head  represents  position  tail  print  head  tail  order
427/D __label__dp  __label__strings  police  headquarter  monitoring  signal  different  frequency  level  got  suspiciously  encoded  string  different  frequency  signal  suspecting  string  different  criminal  planning  evil  task  trying  find  common  substring  minimum  length  string  substring  must  occur  string  must  occur  second  string  given  string  consist  lowercase  latin  letter  find  smallest  length  common  substring  unique  substring  see  note  formal  definition  substring  uniqueness  input  contains  second  contains  string  consist  lowercase  latin  letter  print  length  smallest  common  unique  substring  common  unique  substring  print
954/H __label__dp  given  rooted  tree  let  denote  depth  node  depth  root  depth  node  parent  tree  ha  following  property  every  node  ha  exactly  child  maximum  possible  depth  node  define  unordered  pair  vertex  tree  edge  simple  path  equal  calculate  modulo  every  n  input  contains  maximum  depth  node  second  input  contains  n  child  every  node  since  given  input  print  must  equal  modulo
486/E __label__math  __label__dp  __label__greedy  __label__data  structures  next  data  structure  algorithm  lesson  longest  increasing  subsequence  li  short  sequence  better  understanding  nam  decided  learn  day  lesson  nam  created  sequence  consisting  element  subsequence  ai  ik  k  called  increasing  ai  ik  increasing  subsequence  called  longest  ha  maximum  length  increasing  subsequence  nam  realizes  sequence  several  longest  increasing  subsequence  hence  divide  index  group  group  belongs  longest  increasing  subsequence  group  belongs  least  every  longest  increasing  subsequence  group  belongs  every  longest  increasing  subsequence  since  longest  increasing  subsequence  large  categorizing  process  difficult  task  help  finish  job  contains  single  denoting  element  sequence  second  contains  space  separated  print  string  consisting  character  character  depending  group  listed  index  belongs
319/C __label__dp  __label__geometry  kalila  dimna  jackal  living  huge  jungle  day  decided  join  logging  factory  order  make  money  manager  logging  factory  want  jungle  cut  tree  height  bought  chain  saw  shop  time  use  chain  saw  tree  decrease  height  tree  unit  time  kalila  dimna  use  chain  saw  need  recharge  cost  charging  depends  tree  cut  completely  tree  cut  completely  height  equal  maximum  tree  ha  cut  completely  tree  height  beginning  cost  charging  chain  saw  would  tree  cut  completely  kalila  dimna  charge  chain  saw  chainsaw  charged  beginning  know  kalila  dimna  want  cut  tree  completely  minimum  cost  want  help  input  contains  second  input  contains  third  input  contains  guaranteed  output  must  minimum  cost  cutting  tree  completely
542/D __label__math  __label__dp  __label__dfs  __label__number  theory  tough  superhero  twice  tough  resist  supervillain  cool  math  suppose  ordinary  batman  ordinary  city  gotham  enemy  joker  mined  building  city  administration  several  minute  neutralize  charge  enter  cancel  code  bomb  control  panel  mad  man  decided  give  hint  morning  mayor  found  playing  card  pillow  wa  written  card  bomb  ha  note  saying  positive  suspect  cancel  code  meet  equation  order  decide  whether  neutralize  bomb  run  life  got  count  many  distinct  positive  meet  equation  single  input  contains  single  print  solution  equation
731/E __label__dp  upon  time  petya  gena  gathered  another  programming  competition  decided  play  game  consider  modern  game  boring  always  try  invent  game  sticker  marker  stop  game  came  ha  following  rule  initially  sticker  wall  arranged  row  sticker  ha  written  alternate  turn  petya  move  move  happens  follows  let  say  sticker  wall  player  make  current  move  pick  take  leftmost  sticker  remove  wall  make  new  sticker  put  left  end  row  writes  new  equal  sum  sticker  took  move  game  end  sticker  left  wall  score  player  equal  sum  written  sticker  took  move  goal  player  maximize  difference  score  score  opponent  given  initial  sequence  sticker  wall  define  result  game  difference  petya  gena  score  player  play  optimally  input  contains  single  sticker  initially  located  wall  second  contains  sticker  order  left  right  print  difference  petya  score  gena  score  end  game  player  play  optimally
1041/B __label__math  monocarp  ha  decided  buy  new  set  hang  wall  flat  wall  ha  enough  free  space  monocarp  buy  set  screen  width  greater  screen  height  greater  monocarp  used  set  certain  aspect  ratio  formally  width  screen  height  screen  following  condition  met  many  different  set  shop  monocarp  sure  pair  positive  set  screen  width  height  shop  monocarp  ready  choose  exact  set  going  buy  firstly  want  determine  optimal  screen  resolution  ha  decided  try  possible  variant  screen  size  must  count  pair  positive  beforehand  word  monocarp  want  determine  set  aspect  ratio  screen  width  exceeding  screen  height  exceeding  set  considered  different  different  screen  width  different  screen  height  contains  constraint  screen  width  height  aspect  ratio  print  different  variant  choose  screen  width  screen  height  meet  aforementioned  constraint
678/D __label__math  __label__number  theory  consider  linear  function  let  define  given  value  find  value  modulo  contains  parameter  problem  statement  note  given  value  large  use  bit  type  store  use  long  long  type  java  use  long  type  print  value  modulo
896/B __label__greedy  __label__constructive  algorithms  __label__binary  search  interactive  problem  refer  interaction  section  better  understanding  ithea  chtholly  want  play  game  order  determine  use  kitchen  tonight  initially  ithea  put  clear  sheet  paper  numbered  left  right  game  round  round  ithea  give  chtholly  chtholly  need  choose  sheet  write  already  erase  original  replace  new  chtholly  win  time  sheet  filled  non  decreasing  order  looking  left  right  sheet  sheet  round  still  win  loses  game  chtholly  really  want  win  game  want  cook  something  willem  know  win  game  chtholly  find  task  write  program  receive  ithea  give  chtholly  help  make  decision  sheet  paper  write  contains  mean  rounded  sheet  round  largest  possible  ithea  give  chtholly  respectively  remaining  part  input  given  throughout  interaction  process  round  program  need  read  containing  single  indicating  given  chtholly
370/E __label__dp  __label__greedy  school  vasya  got  impressive  list  summer  reading  book  unlike  modern  schoolchildren  vasya  love  reading  read  book  day  summer  vasya  wa  reading  book  wa  making  note  reader  diary  day  wrote  orderal  book  wa  reading  book  list  numbered  starting  vasya  wa  reading  order  list  vasya  never  read  new  book  finish  reading  previous  unfortunately  vasya  accurate  day  forgot  note  book  note  day  remained  empty  vasya  know  literature  teacher  want  check  reader  diary  need  restore  lost  record  help  fill  blank  vasya  sure  spends  least  day  book  vasya  finished  reading  book  started  assume  reading  list  contained  many  book  many  fact  impossible  read  summer  multiple  valid  way  restore  diary  record  vasya  prefers  show  maximum  read  book  contains  summer  day  second  contains  record  diary  order  written  vasya  forgot  write  book  day  equal  impossible  correctly  fill  blank  diary  diary  mistake  initially  print
1234/D __label__data  structures  given  string  consisting  lowercase  latin  letter  query  string  recall  substring  string  string  example  substring  codeforces  code  force  coder  top  type  query  po  lowercase  latin  letter  replace  po  set  po  calculate  distinct  character  substring  input  contains  string  consisting  lowercase  latin  letter  second  input  contains  query  next  query  per  query  given  format  described  problem  statement  guaranteed  least  query  second  type  query  second  type  print  answer  distinct  character  required  substring  query
1040/A __label__greedy  group  dancer  rehearses  performance  closing  ceremony  dancer  arranged  row  studied  dancing  move  change  position  white  dancing  suit  already  bought  black  rest  suit  bought  future  day  suit  bought  director  wa  told  participant  olympiad  happy  color  suit  scene  form  palindrome  palindrome  sequence  read  left  right  read  right  left  director  liked  idea  want  buy  suit  color  leftmost  dancer  suit  color  rightmost  dancer  suit  nd  left  nd  right  director  know  many  burl  cost  buy  white  suit  many  burl  buy  black  suit  need  find  whether  possible  buy  suit  form  palindrome  possible  minimal  cost  remember  dancer  change  position  due  bureaucratic  reason  allowed  buy  new  suit  dancer  already  suit  even  reduces  overall  spending  contains  b  dancer  cost  white  suit  cost  black  suit  next  contains  denotes  color  suit  dancer  denotes  white  color  black  color  denotes  suit  dancer  still  bought  possible  form  palindrome  without  swapping  dancer  buying  new  suit  output  otherwise  output  minimal  price  get  desired  visual  effect
789/B __label__math  __label__implementation  __label__brute  force  masha  really  love  algebra  last  lesson  strict  teacher  dvastan  gave  new  exercise  given  geometric  progression  defined  remind  geometric  progression  sequence  respective  term  satisfies  condition  called  common  ratio  progression  progression  uzhlyandia  unusual  equal  dvastan  gave  masha  bad  masha  writes  progression  term  onto  board  including  repetitive  condition  satisfied  mean  absolute  value  exception  term  equal  bad  masha  skip  write  onto  board  move  forward  next  term  lesson  going  end  soon  masha  ha  calculate  many  written  board  order  get  depression  masha  asked  help  help  calculate  many  write  print  inf  case  need  write  infinitely  many  input  contains  initial  term  common  ratio  progression  absolute  value  maximal  written  board  bad  respectively  second  contains  distinct  never  written  board  print  meaning  progression  term  written  board  finite  inf  without  quote  otherwise
877/E __label__data  structures  __label__trees  danil  decided  earn  money  found  part  time  job  interview  went  well  light  switcher  danil  work  rooted  tree  undirected  connected  acyclic  graph  vertex  vertex  root  tree  room  vertex  light  switched  room  danil  duty  include  switching  light  room  subtree  vertex  mean  light  switched  room  subtree  switch  otherwise  switch  unfortunately  fortunately  danil  lazy  know  bos  going  personally  check  work  instead  send  danil  task  using  workforce  personal  message  type  task  pow  describes  task  switch  light  subtree  vertex  get  describes  task  count  room  subtree  light  turned  danil  send  answer  bos  using  workforce  message  subtree  vertex  set  vertex  shortest  path  root  pass  particular  vertex  subtree  danil  going  perform  duty  asks  write  program  answer  bos  instead  contains  single  vertex  tree  second  contains  space  separated  ancestor  vertex  third  contains  space  separated  light  turned  vertex  otherwise  fourth  contains  single  task  next  get  pow  task  described  task  get  print  room  subtree  light  turned
1196/B __label__math  __label__constructive  algorithms  given  array  consisting  want  split  exactly  non  empty  non  intersecting  subsegments  subsegment  ha  odd  sum  subsegment  sum  element  belong  subsegment  odd  impossible  rearrange  shuffle  element  given  array  element  array  must  belong  exactly  subsegments  let  see  example  dividing  array  length  subsegments  necessarily  odd  sum  initial  array  possible  way  divide  non  empty  non  intersecting  subsegments  described  course  impossible  divide  initial  array  exactly  subsegments  way  odd  sum  element  case  print  otherwise  print  yes  possible  division  array  see  output  format  detailed  explanation  answer  independent  query  contains  query  query  follow  query  contains  element  array  subsegments  respectively  second  query  contains  element  guaranteed  sum  query  doe  exceed  query  print  answer  impossible  divide  initial  array  exactly  subsegments  way  odd  sum  element  print  otherwise  print  yes  possible  division  array  second  division  represented  right  border  segment  index  last  element  belongs  segment  array  divided  subsegments  note  always  print  anyway
741/A __label__math  __label__dfs  noticed  lovely  girl  arpa  land  people  arpa  land  numbered  everyone  ha  exactly  crush  person  crush  person  crushi  someday  arpa  shouted  owf  loudly  top  palace  funny  game  started  arpa  land  rule  follows  game  consists  round  assume  person  want  start  round  call  crushx  say  oww  wwf  letter  repeated  time  cut  phone  immediately  crushx  call  crushcrushx  say  oww  wwf  letter  repeated  time  cut  phone  immediately  round  continues  person  receives  owf  person  called  joon  joon  round  round  time  mehrdad  ha  evil  plan  make  game  funny  want  find  smallest  person  start  round  becomes  joon  joon  round  starting  would  become  joon  joon  round  find  mehrdad  possible  strange  fact  arpa  land  someone  crush  crushi  input  contains  people  arpa  land  second  contains  crushi  rushi  person  crush  satisfying  condition  print  otherwise  print  smallest
958/A1 __label__implementation  stardate  science  art  detecting  death  star  infancy  princess  heidi  ha  received  information  star  nearby  solar  system  rebel  spy  help  identify  exact  location  death  star  need  know  whether  information  correct  rebel  spy  provided  map  solar  system  map  n  grid  cell  either  occupied  star  empty  see  whether  information  correct  heidi  need  know  whether  map  solar  system  possibly  spy  actually  empire  double  agent  feeding  false  information  unfortunately  spy  accidentally  rotated  map  degree  flipped  along  vertical  horizontal  axis  delivering  heidi  heidi  rotate  flip  map  become  identical  map  solar  system  otherwise  traitor  rebel  rank  help  heidi  find  input  contains  dimension  map  next  character  depicting  map  indicates  star  indicates  empty  quadrant  space  next  character  depicting  second  map  format  output  word  yes  map  identical  impossible  match  performing  rotation  translation
441/A __label__implementation  valera  collector  wanted  expand  collection  exactly  antique  item  valera  know  seller  antique  auctioned  item  currently  auction  price  object  seller  sij  valera  get  well  seller  perfectly  sure  outbids  current  price  item  auction  word  offer  seller  money  strictly  greater  current  price  item  auction  seller  object  immediately  sign  contract  unfortunately  valera  ha  unit  money  help  determine  seller  make  deal  contains  space  separated  seller  unit  money  valera  ha  follow  contains  item  seller  space  separated  si  iki  ij  current  price  item  seller  print  seller  valera  make  deal
1010/B __label__binary  search  interactive  problem  natasha  going  fly  mar  finally  natasha  sat  rocket  fly  fly  get  bored  wish  arrive  mar  already  decides  find  something  occupy  think  anything  better  calculate  distance  red  planet  let  define  distance  mar  unfortunately  natasha  doe  know  known  natasha  know  besides  positive  natasha  ask  rocket  question  every  question  correct  answer  question  rocket  broken  doe  always  answer  correctly  precisely  let  correct  answer  current  question  equal  rocket  answer  question  correctly  answer  otherwise  answer  addition  rocket  ha  sequence  length  element  sequence  either  rocket  process  sequence  cyclic  order  element  current  element  rocket  answer  correctly  lie  natasha  know  sequence  know  length  ask  rocket  question  help  natasha  find  distance  mar  assume  distance  mar  doe  change  natasha  asking  question  solution  accepted  doe  receive  answer  rocket  even  distance  mar  uniquely  determined  already  received  rocket  answer  contains  maximum  distance  mar  element  sequence  ask  rocket  question
1038/B __label__math  __label__constructive  algorithms  find  possible  partition  positive  non  empty  disjoint  set  gcd  sum  sum  sum  denotes  sum  element  present  set  gcd  mean  thegreatest  common  divisor  every  present  exactly  input  contains  single  partition  exist  print  quote  clarity
620/C __label__greedy  pearl  row  let  enumerate  left  right  pearl  ha  type  let  call  sequence  consecutive  pearl  segment  let  call  segment  good  contains  pearl  type  split  row  pearl  maximal  good  segment  note  pearl  appear  exactly  segment  partition  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  scanf  printf  instead  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  pearl  row  second  contains  type  pearl  print  maximal  segment  partition  row
286/D __label__data  structures  __label__sortings  double  tourist  path  located  park  ultima  thule  working  following  principle  introduce  cartesian  coordinate  system  point  time  tourist  going  walk  point  simultaneously  walking  second  walking  tourist  pair  move  speed  distance  unit  per  second  move  along  second  move  along  moving  positive  direction  axis  point  time  wall  appear  wall  segment  point  wall  appears  immediately  ultima  thule  government  want  learn  pair  tourist  walk  simultaneously  long  second  see  tourist  see  segment  connects  position  plane  intersects  least  wall  segment  intersect  share  least  point  assume  segment  end  belong  segment  help  government  count  required  time  note  wall  intersect  way  coincide  contains  space  separated  pair  tourist  built  wall  next  space  separated  wall  end  time  appeared  last  contains  distinct  space  separated  strictly  increasing  point  time  pair  tourist  walk  point  time  given  second  pair  tourist  print  single  single  time  second  tourist  corresponding  pair  see  print  order  input
736/E __label__math  __label__greedy  __label__constructive  algorithms  ostap  preparing  play  chess  time  prepare  thus  wa  closely  monitoring  recent  chess  tournament  player  participating  pair  player  played  exactly  game  victory  give  point  draw  point  lose  point  ostap  lazy  never  try  remember  outcome  game  instead  computes  total  point  earned  player  sum  point  game  took  part  sort  value  non  ascending  order  remembers  list  great  strategist  ostap  wonder  whether  remembers  everything  correct  considers  correct  exists  least  tournament  result  table  produce  given  mean  count  sum  point  player  sort  take  element  result  coincide  ostap  remembers  check  table  exists  input  contains  participant  tournament  top  result  ostap  remembers  second  contains  provided  non  ascending  order  point  earned  top  participant  ostap  remembers  guaranteed  non  negative  exceed  tournament  ostap  obtain  given  set  using  procedure  described  statement  print  output  otherwise  output  word  yes  next  provide  description  valid  tournament  must  character  character  always  located  main  diagonal  position  string  character  position  string  mean  player  game  way  character  mean  loose  mean  draw
1174/D __label__constructive  algorithms  given  construct  array  satisfies  following  condition  element  array  non  empty  subsegment  bitwise  xor  equal  length  maximized  sequence  subsegment  sequence  obtained  deletion  several  possibly  element  beginning  several  possibly  element  end  contains  length  array
128/C __label__dp  task  anna  maria  play  following  game  initially  checkered  piece  paper  painted  n  rectangle  border  filling  anna  maria  move  turn  anna  start  move  paint  inside  last  painted  rectangle  new  lesser  rectangle  along  grid  new  rectangle  common  point  previous  note  paint  rectangle  always  paint  border  rectangle  filled  nobody  win  game  anna  maria  simply  play  done  move  total  count  different  way  play  game  contains  print  single  way  play  game  big  print  value  modulo
671/C __label__data  structures  __label__number  theory  yasin  ha  array  containing  yasin  year  old  love  ultimate  weird  thing  yasin  denotes  weirdness  array  maximum  gcd  j  value  n  weirdness  equal  gcd  greatest  common  divisor  defines  ultimate  weirdness  array  ultimate  weirdness  weirdness  new  array  obtained  removing  element  inclusive  new  array  since  year  old  boy  code  yasin  asks  help  find  value  ultimate  weirdness  given  array  input  contains  single  element  next  contains  equal  element  array  guaranteed  distinct  print  single  containing  value  ultimate  weirdness  array
932/B __label__data  structures  __label__dfs  __label__binary  search  let  define  function  positive  need  process  query  query  given  need  print  inclusive  input  contains  representing  query  follow  contains  query  print  single  containing  answer  query
1190/C __label__greedy  __label__brute  force  duel  betting  lovely  princess  claris  duel  tokitsukaze  quailty  ha  started  card  row  card  ha  side  ha  color  card  color  side  facing  others  color  side  facing  take  turn  flipping  card  tokitsukaze  move  move  choose  exactly  consecutive  card  flip  side  mean  make  color  side  face  face  color  side  card  face  direction  move  take  move  win  princess  claris  want  know  win  game  tokitsukaze  quailty  clever  make  mistake  contains  second  contains  single  string  length  consists  representing  situation  card  color  side  card  face  character  otherwise  face  character  print  without  quote  total  move  exceed  considered  draw
449/D __label__dp  jzzhu  non  negative  call  sequence  index  k  group  size  jzzhu  wonder  many  group  exists  ai  ai  aik  help  print  modulo  operation  denotes  bitwise  operation  contains  single  second  contains  output  single  representing  required  group  modulo
965/E __label__dp  __label__greedy  __label__data  structures  __label__trees  __label__strings  arkady  code  contains  variable  variable  ha  unique  name  consisting  lowercase  english  letter  day  arkady  decided  shorten  code  want  replace  variable  name  non  empty  prefix  new  name  still  unique  new  name  variable  coincide  old  name  another  variable  possibility  want  find  way  smallest  possible  total  length  new  name  string  prefix  string  delete  possibly  none  character  end  obtain  please  find  minimum  possible  total  length  new  name  contains  single  variable  next  variable  name  per  name  non  empty  contains  lowercase  english  letter  total  length  string  greater  variable  name  distinct  print  single  minimum  possible  total  length  new  variable  name
1010/A __label__math  __label__binary  search  natasha  going  fly  rocket  mar  return  earth  way  mar  land  intermediate  planet  formally  planet  earth  mar  natasha  make  exactly  flight  flight  consists  phase  take  planet  landing  planet  way  overall  itinerary  trip  planet  take  planet  landing  planet  planet  take  planet  landing  planet  planet  take  planet  landing  planet  planet  mass  rocket  together  useful  cargo  without  fuel  ton  natasha  doe  know  much  fuel  load  rocket  unfortunately  fuel  loaded  earth  rocket  run  fuel  planet  natasha  able  return  home  fuel  needed  take  planet  land  planet  known  ton  fuel  lift  ton  rocket  planet  land  ton  rocket  onto  planet  example  weight  rocket  ton  weight  fuel  ton  take  coefficient  ton  fuel  burnt  since  new  weight  fuel  take  ton  please  note  allowed  burn  non  integral  amount  fuel  take  landing  amount  initial  fuel  non  integral  well  help  natasha  calculate  minimum  mass  fuel  load  rocket  note  rocket  must  spend  fuel  carry  useful  cargo  fuel  need  carry  fuel  ha  already  burnt  assume  rocket  take  land  instantly  contains  single  planet  second  contains  weight  payload  third  contains  ton  lifted  ton  fuel  fourth  contains  ton  landed  ton  fuel  guaranteed  natasha  make  flight  take  ton  fuel  natasha  fly  mar  planet  return  earth  print  minimum  mass  fuel  ton  natasha  take  otherwise  print  single
839/D __label__math  __label__dp  __label__number  theory  winter  north  white  walker  close  john  snow  ha  army  consisting  soldier  rest  world  fighting  iron  throne  going  get  ready  attack  white  walker  ha  created  method  know  strong  army  let  soldier  strength  call  clan  gcd  ai  ik  call  strength  clan  gcd  ai  ik  defines  strength  army  sum  strength  possible  clan  task  find  strength  army  large  print  modulo  greatest  common  divisor  gcd  sequence  maximum  possible  element  sequence  divisible  contains  size  army  second  contains  denoting  strength  soldier  print  strength  john  snow  army  modulo
1145/D __label__implementation  ftying  rat  urban  saniwation  worker  synthetic  biology  tronsform  think  pigeon  upiquitous  pigeon  ha  long  viewed  vermin  spleading  disease  scavenging  trush  defecating  populous  urban  spa  product  selextive  breeding  purpose  diverse  rocing  entertainment  historically  deliverirg  wartime  post  synthotic  biology  offer  animal  new  chafter  urban  fabric  piteon  recognihes  bird  ripresent  potentially  userul  interface  urdan  biotechnology  metabolism  cauld  modified  mignt  able  add  new  function  redertoire  idea  desigm  culture  harmless  bacteria  much  like  micriorganisms  yogurt  could  fed  pigeon  alter  bird  digentive  process  detergent  created  feces  berds  hosting  modilied  gut  becteria  releamed  inte  environnent  ready  defetate  soap  help  clean  city  input  data  contains  single  second  input  data  contains  space  separated  output  single
659/A __label__math  __label__implementation  vasya  life  round  building  whose  entrance  numbered  sequentially  entrance  entrance  adjacent  today  vasya  got  bored  decided  take  walk  yard  vasya  life  entrance  decided  walk  move  around  house  entrance  direction  increasing  order  entrance  followed  entrance  negative  value  corresponds  moving  entrance  order  decreasing  order  entrance  followed  entrance  vasya  prefers  walk  entrance  illustration  help  vasya  determine  entrance  near  end  walk  single  input  contains  space  separated  entrance  vasya  place  entrance  length  walk  respectively  print  single  entrance  vasya  end  walk
459/D __label__data  structures  __label__sortings  parmida  clever  girl  want  participate  olympiad  year  course  want  partner  clever  although  parmida  ha  prepared  following  test  problem  pashmak  sequence  consists  let  denote  index  l  task  calculate  pair  indicies  help  pashmak  test  input  contains  second  contains  space  separated  print  single  answer  problem
1036/D __label__greedy  vasya  ha  array  length  respectively  perform  following  operation  arbitrary  time  possibly  take  consecutive  subsegment  array  replaces  single  element  equal  sum  element  subsegment  example  array  vasya  obtain  array  array  vasya  obtain  array  array  considered  equal  length  valid  vasya  want  perform  operation  array  array  way  array  become  equal  moreover  length  resulting  array  maximal  possible  help  vasya  determine  maximum  length  array  achieve  output  impossible  make  array  equal  contains  single  length  array  second  contains  element  array  third  contains  single  length  second  array  fourth  contains  element  array  print  single  maximum  length  resulting  array  operation  performed  array  way  became  equal
918/B __label__implementation  __label__strings  guy  fried  radio  station  facility  school  principal  gave  task  punishment  dustin  task  wa  add  comment  nginx  configuration  school  website  school  ha  server  server  ha  name  name  necessarily  unique  ip  dustin  know  name  server  simplicity  assume  nginx  command  form  command  command  string  consisting  english  lowercase  letter  school  server  form  non  negative  le  equal  leading  nginx  configuration  file  dustin  ha  add  comment  ha  command  nobody  ever  memorizes  ip  server  understand  configuration  better  dustin  ha  comment  name  server  belongs  end  command  formally  command  dustin  ha  replace  command  name  name  name  server  equal  dustin  know  anything  nginx  panicked  friend  asked  task  input  contains  next  name  ip  server  contains  string  name  name  server  string  server  separated  space  name  name  consists  english  lowercase  letter  guaranteed  distinct  next  command  configuration  file  form  command  command  command  consists  english  lowercase  letter  guaranteed  belongs  school  server  print  command  configuration  file  dustin  task
507/E __label__dp  __label__dfs  __label__graphs  breaking  good  new  video  game  lot  gamers  want  certain  level  game  really  difficult  even  experienced  gamers  walter  william  main  character  game  want  join  gang  called  los  hermanos  brother  gang  control  whole  country  consists  city  bidirectional  road  connecting  road  connecting  city  city  road  country  connected  word  possible  reach  city  city  using  given  road  road  working  road  need  work  performed  completely  functioning  gang  going  rob  bank  bank  located  city  usual  hardest  part  escape  headquarters  police  get  gang  headquarters  city  gain  gang  trust  walter  charge  operation  came  smart  plan  path  going  use  way  back  city  headquarters  must  short  possible  since  important  finish  operation  fast  possible  gang  ha  blow  road  country  lay  path  order  prevent  police  reinforcement  case  non  working  road  blow  already  malfunctional  chosen  path  ha  road  work  repair  road  operation  walter  discovered  wa  lot  path  satisfied  condition  shortest  possible  decided  choose  path  minimizes  total  affected  road  road  blown  road  repaired  help  walter  complete  task  gain  gang  trust  input  contains  city  road  respectively  following  description  road  description  consists  meaning  road  connecting  city  road  working  otherwise  output  minimum  possible  road  affected  gang
653/C __label__implementation  __label__brute  force  life  go  like  nice  sequence  sequence  called  nice  following  condition  satisfied  odd  even  example  sequence  nice  bear  limak  ha  sequence  positive  sequence  nice  limak  want  fix  single  swap  going  choose  index  swap  element  order  get  nice  sequence  count  way  way  considered  different  index  element  chosen  swap  different  input  contains  length  sequence  second  contains  initial  sequence  guaranteed  given  sequence  nice  print  way  swap  element  exactly  order  get  nice  sequence
950/B __label__implementation  __label__greedy  hacker  zhorik  want  decipher  secret  message  intercepted  yesterday  yeah  message  sequence  encrypted  block  consists  several  byte  information  zhorik  know  message  archive  containing  file  zhorik  know  archive  wa  transferred  network  archive  consists  file  size  byte  file  split  block  total  length  block  equal  length  file  block  transferred  network  maintaining  order  file  archive  zhorik  think  message  archive  total  length  equal  file  split  block  different  way  message  given  length  block  message  help  zhorik  determine  maximum  file  could  archive  zhorik  assumption  correct  contains  block  second  message  second  contains  length  block  form  message  third  contains  length  block  form  second  message  guaranteed  guaranteed  n  print  maximum  file  intercepted  array  could  consist
1132/C __label__brute  force  long  fence  consists  section  unfortunately  painted  decided  hire  painter  paint  painter  paint  section  unfortunately  tight  budget  hire  painter  obviously  painter  hire  work  want  maximize  painted  section  choose  painter  optimally  section  considered  painted  least  painter  paint  contains  q  section  painter  availible  hire  respectively  follow  describing  painter  contains  print  maximum  painted  section  hire  painter
1005/D __label__dp  __label__greedy  __label__number  theory  polycarp  like  divisible  ha  huge  polycarp  want  cut  maximum  divisible  make  arbitrary  vertical  cut  pair  adjacent  digit  result  cut  part  total  polycarp  analyzes  obtained  find  divisible  example  original  polycarp  cut  part  cut  result  get  divisible  polycarp  make  arbitrary  vertical  cut  cut  made  pair  adjacent  digit  resulting  extra  leading  begin  exactly  character  example  valid  valid  maximum  divisible  polycarp  obtain  input  contains  positive  digit  inclusive  leftmost  digit  equal  print  maximum  divisible  polycarp  get  making  vertical  cut  given
217/C __label__dp  bytelandian  institute  biological  research  bibr  investigating  property  specie  bacteria  named  simply  even  microscope  bacteria  specie  difficult  distinguish  fact  thing  scientist  posse  able  differentiate  plant  called  formurosa  scientist  place  sample  colony  bacteria  formurosa  leaf  activate  complicated  nutrition  process  process  color  formurosa  change  reflect  result  possibly  complicated  logical  formula  specie  bacteria  involving  constant  operator  xor  plant  turn  red  otherwise  turn  blue  example  nutrition  process  formurosa  described  formula  formurosa  ha  leaf  sign  denote  leaf  place  respective  leaf  result  nutrition  process  therefore  plant  turn  blue  scientist  colony  bacteria  know  type  thing  know  sure  colony  type  want  attempt  determine  bacteria  specie  repeated  evaluation  formurosa  evaluation  must  place  exactly  sample  every  leaf  plant  use  multiple  sample  colony  single  evaluation  even  cover  whole  plant  bacteria  colony  possible  always  determine  specie  colony  matter  assuming  input  contains  single  colony  bacteria  second  contains  formula  describing  nutrition  process  formurosa  contains  character  complies  following  grammar  formula  consists  character  always  possible  determine  specie  colony  output  yes  without  quote  otherwise  output  without  quote
1198/B __label__data  structures  __label__sortings  __label__brute  force  __label__binary  search  country  citizen  initially  ha  money  government  strictly  control  wealth  citizen  whenever  citizen  make  purchase  earns  money  must  send  receipt  social  service  mentioning  amount  money  currently  sometimes  government  make  payouts  poor  citizen  strictly  le  money  paid  accordingly  payout  exactly  money  case  citizen  send  receipt  know  initial  wealth  every  citizen  log  event  receipt  payouts  restore  amount  money  citizen  ha  event  contains  single  numer  citizen  next  contains  initial  balance  citizen  next  contains  single  event  next  contains  single  event  event  given  chronological  order  event  described  either  case  receipt  balance  person  becomes  equal  second  case  payoff  parameter  print  balance  citizen  event
722/C __label__data  structures  given  array  consisting  non  negative  going  destroy  array  thus  given  permutation  defining  order  element  array  destroyed  element  destroyed  find  segment  array  contains  destroyed  element  sum  element  maximum  possible  sum  element  empty  segment  considered  input  contains  single  length  array  second  contains  third  contains  permutation  order  used  destroy  element  print  single  maximum  possible  sum  element  segment  containing  destroyed  element  operation  performed
736/D __label__math  ostap  bender  worried  people  started  forget  great  combinator  want  show  skill  combinatorics  study  permutation  length  ha  list  valid  pair  pair  mean  allowed  place  position  know  permutation  use  valid  pair  odd  pair  want  find  valid  permutation  odd  remove  pair  list  contains  nin  element  permutation  follow  containing  valid  pair  guaranteed  pair  occurs  input  twice  total  valid  permutation  using  allowed  pair  position  element  odd  print  valid  pair  yes  ostap  remove  pair  remaining  valid  permutation  odd  otherwise  print
598/F __label__geometry  given  simple  without  self  intersection  gon  necessary  convex  given  find  length  common  part  gon  boundary  gon  belongs  polygon  possible  gon  contains  degree  angle  contains  following  coordinate  polygon  vertex  clockwise  counterclockwise  direction  vertex  distinct  following  description  contains  distict  point  coordinate  given  input  coordinate  real  given  digit  decimal  point  exceed  absolute  value  print  length  common  part  given  gon  answer  considered  correct  absolute  relative  error  exceed
524/D __label__greedy  polycarpus  got  internship  well  known  social  network  test  task  count  unique  user  visited  social  network  day  polycarpus  wa  provided  information  user  request  time  period  query  know  time  nothing  else  polycarpus  ha  already  accidentally  removed  user  id  corresponding  request  database  thus  impossible  determine  whether  request  made  person  different  people  wait  something  still  known  day  record  wa  achieved  simultaneous  user  online  addition  polycarpus  belief  user  made  request  second  wa  online  second  second  user  time  online  calculated  union  time  interval  form  time  request  guided  thought  polycarpus  want  assign  user  request  different  user  online  exceed  moment  second  distinct  user  online  reached  value  total  user  distinct  identifier  wa  much  possible  help  polycarpus  cope  test  contains  query  record  online  user  time  user  wa  online  query  wa  sent  next  time  query  format  hour  minute  second  time  query  follow  non  decreasing  order  coincide  guaranteed  time  even  segment  type  hour  range  print  largest  possible  distinct  user  following  user  id  request  order  request  given  input  user  id  must  request  user  must  correspond  identifier  request  distinct  user  must  correspond  distinct  identifier  multiple  solution  print  solution  print  solution  without  quote
1028/B __label__math  __label__constructive  algorithms  let  sum  digit  decimal  representation  positive  given  find  positive  input  print  decimal  representation  decimal  representation  must  leading  must  length
154/C __label__sortings  __label__graphs  offered  job  company  developing  large  social  network  task  connected  searching  profile  probably  belong  user  social  network  contains  registered  profile  numbered  pair  friend  friendship  relationship  mutual  friend  friend  let  say  profile  double  profile  k  k  statement  true  either  friend  friend  either  friend  friend  task  count  different  unordered  pair  profile  double  note  pair  unordered  pair  considered  identical  contains  space  separated  profile  pair  friend  correspondingly  next  contains  description  pair  friend  format  profile  friend  guaranteed  unordered  pair  friend  occurs  profile  friend  print  single  unordered  pair  profile  double
1091/E __label__math  __label__implementation  __label__greedy  __label__data  structures  __label__sortings  __label__graphs  __label__binary  search  bob  active  user  social  network  faithbug  network  people  able  engage  mutual  friendship  friend  friend  user  thus  ha  non  negative  amount  friend  morning  somebody  anonymously  sent  bob  following  link  graph  realization  problem  bob  want  know  wa  order  need  know  social  network  look  like  investigated  profile  every  person  network  noted  friend  neglected  note  friend  help  find  many  friend  ha  since  many  possible  answer  print  contains  people  network  excluding  bob  second  contains  people  person  friend  print  possible  value  amount  people  bob  friend  increasing  order
109/E __label__math  __label__brute  force  petya  love  lucky  know  lucky  positive  whose  decimal  representation  lucky  digit  example  lucky  day  petya  came  interval  let  lucky  digit  find  minimum  single  contains  interval  interval  length  correspondingly  single  print  answer  problem
639/A __label__implementation  limak  little  polar  bear  love  connecting  bear  via  social  network  ha  friend  relation  described  unique  bigger  value  better  friendship  friend  value  spring  starting  winter  sleep  bear  limak  ha  woken  logged  friend  still  sleep  thus  none  online  maybe  appear  online  next  hour  time  system  display  friend  online  screen  space  display  friend  friend  online  system  display  best  biggest  task  handle  query  type  friend  becomes  online  guaranteed  online  check  whether  friend  displayed  system  print  yes  separate  able  help  limak  answer  query  second  type  contains  friend  maximum  displayed  online  friend  query  respectively  second  contains  describes  good  limak  relation  friend  following  contains  typei  idi  ypei  di  query  typei  friend  idi  becomes  online  typei  check  whether  friend  idi  displayed  guaranteed  query  type  idi  becuase  friend  become  online  twice  guaranteed  least  query  second  type  typei  output  empty  query  second  type  print  answer  yes  without  quote  given  friend  displayed  without  quote  otherwise
796/B __label__implementation  zane  wizard  going  perform  magic  show  shuffling  cup  cup  numbered  placed  along  axis  table  ha  hole  precisely  cup  table  position  problematic  bone  initially  position  zane  confuse  audience  swapping  cup  time  time  involves  cup  position  bone  happens  position  hole  time  fall  hole  onto  ground  affected  future  swapping  operation  forget  zane  wizard  swap  cup  doe  move  ordinarily  instead  teleports  cup  along  bone  inside  intended  position  therefore  example  swap  cup  position  moment  operation  zane  puppy  inzane  trouble  zane  away  vacation  inzane  find  beloved  bone  would  exhausting  try  opening  cup  inzane  know  codeforces  community  ha  successfully  helped  zane  want  see  could  help  solve  problem  help  inzane  determine  final  position  bone  contains  cup  hole  table  swapping  operation  respectively  second  contains  distinct  position  along  axis  hole  table  next  contains  uii  position  cup  swapped  print  final  position  along  axis  bone
1155/A __label__implementation  __label__sortings  __label__strings  given  string  consisting  lowercase  latin  letter  let  define  substring  contiguous  subsegment  string  example  acab  substring  abacaba  start  position  end  position  substring  string  substring  string  position  position  choose  exactly  substring  given  string  reverse  make  obtain  string  le  lexicographically  note  necessary  obtain  minimum  possible  string  impossible  reverse  substring  given  string  obtain  string  le  print  otherwise  print  yes  suitable  substring  string  lexicographically  le  string  either  prefix  exists  denotes  length  string  lexicographic  comparison  string  implemented  operator  modern  programming  language  input  contains  length  second  input  contains  string  length  consisting  lowercase  latin  letter  impossible  reverse  substring  given  string  obtain  string  lexicographically  le  print  otherwise  print  yes  index  denoting  substring  reverse  multiple  answer  print
414/D __label__greedy  __label__data  structures  __label__trees  __label__binary  search  mashmokh  playing  new  game  beginning  ha  liter  water  coin  additionally  ha  rooted  tree  undirected  connected  acyclic  graph  consists  vertex  vertex  tree  contains  water  tank  empty  beginning  game  begin  fact  mashmokh  chooses  tank  except  root  pours  exactly  liter  water  following  process  performed  water  remained  tank  process  consists  several  step  beginning  step  mashmokh  open  door  tank  mashmokh  close  door  tank  allowed  close  door  tank  root  duration  move  let  denote  liter  tank  closed  door  mashmokh  pay  coin  closing  tank  move  let  denote  list  vertex  tree  sorted  nondecreasing  depth  vertex  list  considered  order  firstly  vertex  root  emptied  vertex  door  closed  skip  vertex  else  move  water  tank  vertex  tank  father  even  tank  father  closed  suppose  move  made  tree  became  empty  let  denote  amount  water  inside  tank  root  move  mashmokh  win  max  dollar  mashmokh  wanted  know  maximum  amount  dollar  win  playing  game  asked  find  value  input  contains  space  separated  following  contains  space  separated  aii  edge  tree  consider  vertex  tree  numbered  root  tree  ha  output  single  mashmokh  asked  find
1092/E __label__greedy  __label__dfs  __label__trees  __label__constructive  algorithms  given  forest  undirected  graph  vertex  connected  component  tree  diameter  aka  longest  shortest  path  connected  undirected  graph  maximum  edge  shortest  path  pair  vertex  task  add  edge  possibly  graph  becomes  tree  diameter  tree  minimal  possible  multiple  correct  answer  print  contains  vertex  graph  edge  respectively  next  contains  description  edge  guaranteed  given  graph  forest  print  diameter  resulting  tree
914/D __label__data  structures  __label__number  theory  bash  like  playing  array  ha  array  like  guess  greatest  common  divisor  gcd  different  segment  array  course  sometimes  guess  correct  bash  satisfied  guess  almost  correct  suppose  guess  gcd  element  range  considers  guess  almost  correct  change  element  segment  gcd  segment  making  change  note  guess  actually  change  array  wonder  gcd  segment  made  apart  sometimes  make  change  array  since  figure  bash  want  tell  guess  almost  correct  formally  process  query  following  form  bash  guess  gcd  range  report  guess  almost  correct  bash  set  note  array  indexed  contains  size  array  second  contains  element  array  third  contains  query  next  describe  query  following  form  guaranteed  least  query  type  query  type  output  yes  without  quote  bash  guess  almost  correct  without  quote  otherwise
1141/B __label__implementation  day  berland  consists  hour  polycarp  like  time  management  ha  fixed  schedule  day  sequence  either  polycarp  work  hour  day  polycarp  rest  hour  day  day  another  endlessly  polycarp  us  schedule  day  maximal  continuous  hour  polycarp  rest  guaranteed  least  working  hour  day  contains  hour  per  day  second  contains  hour  day  working  hour  resting  guaranteed  least  print  maximal  continuous  hour  polycarp  rest  remember  consider  day  another  endlessly  polycarp  us  schedule  day
825/G __label__dfs  __label__graphs  __label__trees  given  tree  consisting  vertex  numbered  initially  vertex  white  process  query  different  type  change  color  vertex  black  guaranteed  query  type  vertex  find  minimum  index  vertex  index  belongs  simple  path  black  vertex  simple  path  never  visit  vertex  query  type  print  answer  note  query  given  modified  way  contains  follow  containing  representing  edge  vertex  guaranteed  edge  form  tree  follow  contains  type  ith  query  used  restore  query  way  keep  track  answer  last  query  type  let  call  answer  last  initially  last  ast  od  guaranteed  query  type  least  query  type  query  type  output  answer
1133/F2 __label__greedy  __label__dfs  __label__graphs  __label__constructive  algorithms  given  undirected  unweighted  connected  graph  consisting  vertex  edge  guaranteed  self  loop  multiple  edge  given  graph  task  find  spanning  tree  graph  degree  vertex  vertex  label  equal  say  spanning  tree  recall  degree  vertex  edge  incident  contains  n  vertex  edge  required  degree  vertex  respectively  following  denote  edge  edge  represented  pair  index  vertex  connected  edge  loop  multiple  edge  given  graph  pair  pair  list  edge  pair  condition  satisfied  spanning  tree  satisfying  condition  problem  statement  print
4/B __label__greedy  __label__constructive  algorithms  tomorrow  peter  ha  biology  exam  doe  like  subject  much  day  ago  learnt  would  take  exam  peter  strict  parent  made  prepare  exam  immediately  purpose  ha  study  le  mintimei  maxtimei  hour  per  day  moreover  warned  peter  day  exam  would  check  ha  followed  instruction  today  day  peter  parent  ask  show  timetable  preparatory  study  boy  ha  counted  sum  hour  sumtime  spent  preparation  want  know  show  parent  timetable  shedule  shedulei  stand  time  hour  spent  peter  day  biology  study  satisfying  limitation  imposed  parent  time  sum  total  schedulei  equal  sumtime  input  contains  umtime  umtime  amount  day  peter  studied  total  amount  hour  spent  preparation  following  contains  mintimei  axtimei  intimeiaxtimei  separated  space  minimum  maximum  amount  hour  peter  could  spent  day  print  yes  second  print  separated  space  amount  hour  spent  peter  preparation  corresponding  day  followed  parent  instruction  print  unique  many  solution  print
840/C __label__dp  year  ago  bench  public  park  leha  found  array  leha  belief  permutation  right  condition  api  api  perfect  square  hold  leha  want  find  right  permutation  modulo  input  data  contains  single  length  array  next  contains  found  array  output  single  right  permutation  modulo
1066/D __label__implementation  __label__binary  search  maksim  ha  object  box  box  ha  size  exactly  object  numbered  order  left  right  size  object  maksim  want  pack  object  box  pack  object  following  algorithm  take  empty  box  ha  go  left  right  object  object  fit  current  box  remaining  size  box  greater  equal  put  box  remaining  size  box  decrease  otherwise  take  new  empty  box  continues  process  ha  empty  box  least  object  box  maksim  pack  chosen  set  object  maksim  want  know  maximum  object  pack  algorithm  reach  target  throw  leftmost  object  set  remaining  set  object  packed  box  ha  task  say  maximum  object  maksim  pack  box  ha  time  maksim  try  pack  object  box  make  empty  box  ha  relative  order  remaining  set  object  change  input  contains  object  box  size  box  second  input  contains  size  object  print  maximum  object  maksim  pack  using  algorithm  described  problem  statement
696/A __label__implementation  __label__data  structures  __label__trees  __label__brute  force  barney  life  nyc  nyc  ha  infinite  intersection  numbered  positive  starting  exists  bidirectional  road  intersection  another  road  every  positive  clearly  see  exists  unique  shortest  path  intersection  initially  anyone  pas  road  free  since  slapsgiving  ahead  consecutive  event  happen  soon  type  event  government  make  new  rule  rule  denoted  result  action  passing  fee  road  shortest  path  increase  dollar  barney  start  moving  intersection  go  intersection  girl  want  cuddle  using  fake  name  lorenzo  von  matterhorn  always  us  shortest  path  visiting  minimum  intersection  road  intersection  government  need  calculation  time  barney  go  cuddle  girl  need  tell  government  much  money  pay  sum  passing  fee  road  pass  input  contains  single  next  information  event  chronological  order  event  described  form  event  government  make  new  rule  increasing  passing  fee  road  shortest  path  dollar  form  event  barnie  go  cuddle  intersection  intersection  state  every  description  event  second  type  print  sum  passing  fee  road  barney  pass  event  print  answer  chronological  order  corresponding  event
1080/B __label__math  little  girl  margarita  big  fan  competitive  programming  especially  love  problem  array  query  recently  wa  presented  array  size  element  filled  follows  value  element  array  calculated  using  formula  immediately  came  query  array  query  described  answer  query  sum  element  array  position  inclusive  margarita  really  want  know  answer  request  want  count  manually  unfortunately  write  program  solves  problem  either  ha  turned  best  programmer  help  find  answer  contains  single  query  next  contains  description  query  print  containing  answer  query
542/A __label__data  structures  __label__sortings  ivan  anatolyevich  agency  starting  become  famous  town  already  ordered  made  commercial  video  video  made  special  way  color  soundtrack  adjusted  time  day  viewer  mood  video  shown  time  range  necessary  use  whole  segment  broadcast  time  segment  time  choose  channel  broadcast  commercial  overall  channel  broadcasting  city  ha  viewer  ready  sell  time  broadcast  commercial  ivan  anatolyevich  facing  hard  choice  ha  choose  exactly  video  exactly  channel  broadcast  video  time  range  broadcast  time  range  chosen  range  range  let  define  efficiency  broadcast  value  total  sum  time  viewer  channel  going  spend  watching  commercial  help  ivan  anatolyevich  choose  broadcast  maximum  efficiency  contains  commercial  video  channel  respectively  following  contains  ii  segment  time  possible  show  corresponding  video  following  contains  jj  j  characterizing  channel  print  maximum  possible  efficiency  broadcast  correct  way  get  strictly  positive  efficiency  print
1210/E __label__math  wojtek  ha  math  competition  byteland  prize  admirable  great  book  called  card  trick  everyone  great  thought  finally  use  old  dusted  deck  card  always  lying  unused  desk  chapter  book  shuffle  card  order  want  basically  list  intricate  method  shuffling  deck  card  deterministic  way  specifically  recipe  described  permutation  enumerate  card  deck  top  bottom  indicates  card  top  deck  shuffle  day  short  wojtek  want  learn  trick  today  pick  memorize  trick  inclusive  take  sorted  deck  card  repeatedly  apply  random  memorized  trick  get  bored  still  like  math  started  wondering  many  different  deck  stop  shuffling  wojtek  still  choose  still  curious  therefore  defined  different  deck  get  memorizes  trick  inclusive  value  n  lnf  contains  trick  card  wojtek  deck  following  describes  single  trick  described  distinct  output  value  sum  described  statement
620/B __label__implementation  max  found  electronic  calculator  grandfather  dovlet  chest  noticed  written  segment  indicator  http  wikipedia  org  wiki  segmentdisplay  max  start  type  value  typing  max  reset  calculator  find  total  segment  printed  calculator  example  calculator  print  segment  segment  last  print  segment  total  printed  segment  contains  last  typed  max  print  total  printed  segment
1131/D __label__dp  __label__greedy  __label__dfs  __label__graphs  apple  gourmet  work  editor  chief  gastronomic  periodical  travel  around  world  tasting  new  delight  famous  chef  fashionable  restaurant  apple  ha  signature  method  review  restaurant  apple  order  set  dish  different  day  dish  different  apple  like  eat  food  pair  dish  different  day  remembers  exactly  wa  better  quality  gourmet  evaluates  dish  positive  revision  restaurant  celtic  medieval  cuisine  named  poisson  serf  chestnut  soup  fir  warm  soda  bread  spicy  lemon  pie  folk  food  apple  wa  pleasantly  surprised  gourmet  variety  menu  hence  ordered  much  confused  evaluating  dish  gourmet  tasted  set  dish  day  set  dish  second  day  made  table  size  nm  described  impression  according  expert  dish  set  wa  better  dish  second  set  equal  opposite  case  equal  dish  equally  good  case  apple  want  help  evaluate  every  dish  since  apple  strict  evaluate  dish  maximal  used  small  possible  apple  fair  never  evaluates  dish  go  feeling  word  assigned  dish  set  le  dish  second  set  greater  finally  help  apple  evaluate  dish  set  consistent  feeling  determine  impossible  contains  dish  day  next  contains  string  symbol  symbol  string  consist  output  yes  possible  correct  evaluation  dish  otherwise
1165/B __label__greedy  __label__data  structures  __label__sortings  polycarp  want  train  another  programming  competition  day  training  solve  exactly  problem  second  day  exactly  problem  third  day  exactly  problem  day  solve  problem  polycarp  ha  list  contest  contest  consists  problem  day  polycarp  ha  choose  exactly  contest  solve  solve  solves  exactly  problem  contest  problem  discarded  contest  consisting  least  problem  polycarp  solve  day  polycarp  stop  training  many  day  polycarp  train  chooses  contest  optimally  input  contains  contest  second  input  contains  problem  contest  print  maximum  day  polycarp  train  chooses  contest  optimally
16/D __label__implementation  __label__strings  main  server  gomble  company  received  log  top  secret  process  name  revealed  log  wa  written  following  format  date  time  message  date  time  value  existed  file  encoded  complicated  manner  programmer  alex  managed  decode  code  wa  complicated  alex  needed  week  decode  right  decoding  process  wa  finished  file  deleted  file  deletion  alex  noticed  saved  recording  format  time  message  information  date  wa  lost  added  log  chronological  order  difficult  say  recording  could  appear  day  possible  find  minimum  amount  day  log  wa  written  make  mistake  alex  ha  find  minimum  amount  day  covered  log  note  alex  find  minimum  amount  day  beginning  end  logging  ha  find  minimum  amount  date  record  could  done  see  sample  test  clarification  remind  process  made  recording  minute  consider  midnight  belongs  coming  day  input  contains  following  recording  format  time  message  time  given  format  digit  used  digit  used  either  character  character  message  non  empty  sequence  latin  letter  space  start  end  space  length  message  exceed  output  minimum  amount  day  covered  log
582/B __label__dp  __label__constructive  algorithms  given  array  positive  n  length  n  know  true  find  length  longest  non  decreasing  sequence  given  array  contains  space  separated  second  contains  space  separated  print  single  length  sought  sequence
913/F __label__math  __label__dp  __label__graphs  chess  tournament  right  city  player  invited  take  part  competition  tournament  held  following  rule  initially  player  play  game  every  player  tie  organizer  build  complete  directed  graph  player  vertex  every  pair  player  exactly  directed  edge  winner  game  startpoint  edge  loser  endpoint  organizer  build  condensation  graph  condensation  graph  acyclic  complete  graph  therefore  ha  hamiltonian  path  consists  strongly  connected  component  initial  graph  k  player  component  placed  place  player  component  placed  next  place  determine  exact  place  player  strongly  connected  component  procedure  repeated  recursively  inside  component  every  player  component  play  game  component  consists  single  player  ha  rival  place  already  determined  process  stop  player  enumerated  enumeration  wa  made  using  result  previous  tournament  known  player  win  player  probability  need  help  organize  tournament  find  expected  value  total  game  played  player  shown  answer  represented  coprime  print  value  modulo  familiar  term  read  input  contains  single  player  second  contains  numerator  denominator  fraction  print  expected  value  total  game  played  player  print  answer  using  format
950/A __label__math  __label__implementation  water  bowling  training  people  play  left  hand  people  play  right  hand  ambidexters  play  left  right  hand  coach  decided  form  team  even  player  exactly  half  player  play  right  hand  exactly  half  player  play  left  hand  player  use  hand  ambidexters  play  well  right  hand  left  hand  team  ambidexter  play  left  hand  right  hand  please  find  maximum  possible  size  team  equal  player  use  left  right  hand  respectively  contains  left  handers  right  handers  ambidexters  training  print  single  even  maximum  player  team  possible  team  player
555/D __label__math  __label__implementation  __label__binary  search  andrewid  android  galaxy  famous  detective  busy  top  secret  case  detail  subject  disclosure  need  help  conducting  investigative  experiment  peg  put  plane  numbered  coordinate  tie  bottom  peg  weight  tight  rope  length  thus  coordinate  equal  used  peg  weight  pushed  right  start  rotate  counterclockwise  time  weight  rotation  touch  peg  begin  rotate  around  peg  suppose  peg  thin  doe  affect  rope  length  weight  rotating  around  formally  moment  segment  rope  contains  peg  addition  peg  around  weight  rotating  weight  rotate  around  farthermost  shorter  segment  rope  particular  segment  rope  touch  peg  endpoint  considered  weight  start  rotate  around  peg  segment  rope  length  moment  weight  begin  rotate  around  peg  without  affecting  rest  peg  andrewid  interested  determining  peg  andrewid  prepared  query  containing  initial  condition  pushing  weight  help  determine  around  peg  weight  eventually  rotate  contains  peg  query  next  contains  coordinate  peg  guaranteed  coordinate  peg  distinct  next  description  query  pushing  weight  consists  starting  peg  length  rope  print  peg  around  weight  eventually  rotate  push
16/C __label__binary  search  __label__number  theory  reca  company  make  monitor  popular  model  ab  screen  size  centimeter  production  peculiarity  screen  parameter  recently  screen  side  ratio  became  popular  user  company  want  reduce  monitor  ab  size  screen  side  ratio  becomes  time  want  total  area  maximal  possible  variant  task  find  screen  parameter  reduced  size  model  find  reduction  performed  input  contains  answer  exists  output  positive  screen  parameter  reduced  size  model  output  otherwise
809/A __label__math  __label__implementation  __label__sortings  leha  decided  move  quiet  town  vikopolis  wa  tired  living  bankopolis  upon  arrival  immediately  began  expand  network  hacked  computer  week  leha  managed  get  access  computer  throughout  town  incidentally  computer  hacked  leha  lie  straight  due  reason  straight  street  vikopolis  let  denote  coordinate  system  street  besides  let  hacked  computer  hacked  computer  located  point  moreover  coordinate  computer  distinct  leha  determined  little  rest  hard  week  therefore  going  invite  friend  noora  restaurant  girl  agrees  date  condition  leha  solve  simple  task  leha  calculate  sum  non  empty  subset  set  consists  hacked  computer  formally  let  denote  set  noora  asks  hacker  find  value  expression  calculated  maximum  distance  pair  computer  set  formally  since  required  sum  quite  large  noora  asks  find  modulo  though  leha  tired  consequently  able  solve  task  help  hacker  attend  date  contains  denoting  hacked  computer  second  contains  denoting  coordinate  hacked  computer  guaranteed  distinct  print  single  required  sum  modulo
22/D __label__greedy  __label__sortings  given  segment  axis  drive  nail  point  axis  nail  segment  containing  point  considered  nailed  nail  pass  endpoint  segment  segment  considered  nailed  smallest  nail  needed  nail  segment  input  contains  single  amount  segment  following  description  segment  description  pair  endpoint  coordinate  coordinate  exceed  absolute  value  segment  degenarate  point  smallest  nail  needed  nail  segment  second  coordinate  driven  nail  separated  space  order  answer  unique  output
1118/B __label__implementation  tanya  ha  candy  numbered  candy  ha  weight  plan  eat  exactly  candy  give  remaining  candy  dad  tanya  eats  candy  order  increasing  exactly  candy  per  day  task  find  candy  let  call  candy  good  dad  get  candy  sum  weight  candy  tanya  eats  even  day  equal  sum  weight  candy  tanya  eats  odd  day  note  give  candy  eat  remaining  candy  example  weight  consider  possible  case  give  candy  dad  tanya  give  candy  dad  remaining  candy  eat  day  second  day  third  day  odd  day  eat  even  day  eat  since  case  counted  answer  candy  good  tanya  give  candy  dad  remaining  candy  eat  day  second  day  third  day  odd  day  eat  even  day  eat  since  case  counted  answer  candy  good  tanya  give  candy  dad  remaining  candy  eat  day  second  day  third  day  odd  day  eat  even  day  eat  since  case  counted  answer  candy  good  tanya  give  candy  dad  remaining  candy  eat  day  second  day  third  day  odd  day  eat  even  day  eat  since  case  counted  answer  candy  good  total  case  counted  candy  good  answer  input  contains  candy  second  input  contains  weight  candy  print  candy  good  candy  dad  get  candy  sum  weight  candy  tanya  eats  even  day  equal  sum  weight  candy  tanya  eats  odd  day
1100/F __label__math  __label__greedy  __label__data  structures  ivan  love  burger  spending  money  burger  joint  street  ivan  life  ivan  ha  friend  friend  suggested  meet  joint  walk  joint  strolling  friend  ivan  visit  joint  satisfy  joint  ivan  know  cost  expensive  burger  cost  burles  ivan  want  visit  subset  joint  way  buy  expensive  burger  spend  money  small  issue  card  broke  instead  charging  purchase  amount  money  change  follows  ivan  burles  purchase  spent  burles  joint  purchase  would  burles  denotes  bitwise  xor  operation  currently  ivan  ha  burles  want  walk  help  determine  maximal  amount  burles  spend  go  walk  friend  amount  burles  spends  defined  difference  initial  amount  account  final  account  contains  burger  shop  next  contains  cost  expensive  burger  burger  joint  third  contains  ivan  friend  next  pair  burger  shop  ivan  walk  output  containing  maximum  amount  money  ivan  spend  friend
985/C __label__greedy  wooden  stave  stave  ha  length  assemble  barrel  consisting  stave  use  stave  construct  barrel  stave  must  belong  exactly  barrel  let  volume  barrel  equal  length  minimal  stave  want  assemble  exactly  barrel  maximal  total  sum  volume  make  equal  enough  difference  volume  pair  resulting  barrel  must  exceed  print  maximal  total  sum  volume  equal  enough  barrel  impossible  satisfy  condition  contains  space  separated  k  second  contains  space  separated  length  stave  print  single  maximal  total  sum  volume  barrel  impossible  construct  exactly  barrel  satisfying  condition
909/C __label__dp  python  code  block  explicit  begin  end  curly  brace  mark  beginning  end  block  instead  code  block  defined  indentation  consider  extremely  simplified  subset  python  type  statement  simple  statement  written  single  per  example  simple  statement  assignment  statement  compound  statement  several  statement  statement  consists  header  written  separate  start  prefix  loop  body  loop  body  block  statement  indented  level  header  loop  loop  body  type  statement  loop  body  empty  given  sequence  statement  without  indentation  find  way  statement  indented  form  valid  python  program  contains  single  command  program  program  follow  describing  single  command  command  either  denoting  statement  simple  statement  guaranteed  last  simple  statement  output  containing  way  given  sequence  statement  indented  modulo
1187/B __label__implementation  __label__strings  __label__binary  search  letter  shop  showcase  string  consisting  lowercase  latin  letter  name  tell  letter  sold  shop  letter  sold  leftmost  rightmost  customer  buy  prefix  letter  string  friend  named  planning  estimate  following  value  many  letter  length  shortest  prefix  would  need  buy  wanted  construct  name  bought  letter  name  constructed  letter  presented  equal  greater  amount  example  arrayhead  arya  letter  bought  arrayhead  example  arrayhead  harry  letter  bought  arrayhead  example  arrayhead  ray  letter  bought  arrayhead  example  arrayhead  letter  bought  arrayhead  example  arrayhead  areahydra  letter  bought  arrayhead  guaranteed  every  friend  construct  name  using  letter  string  note  value  friend  independent  friend  estimating  actually  buying  letter  contains  length  showcase  string  second  contains  string  consisting  exactly  lowercase  latin  letter  third  contains  friend  next  contains  name  friend  guaranteed  friend  print  length  shortest  prefix  letter  would  need  buy  able  construct  name  name  constructed  letter  presented  equal  greater  amount
396/C __label__data  structures  __label__graphs  __label__trees  given  rooted  tree  consisting  vertex  numbered  root  tree  vertex  initially  vertex  come  query  query  ha  type  format  query  response  query  need  add  vertex  descendant  vertex  distance  add  written  descendant  vertex  distance  need  add  distance  vertex  edge  shortest  path  vertex  format  query  reply  query  print  written  vertex  modulo  process  query  given  input  contains  vertex  tree  second  contains  vertex  parent  vertex  tree  third  contains  query  next  query  per  type  represents  type  query  type  next  follow  space  separated  type  next  follows  vertex  need  find  value  query  second  type  print  single  written  vertex  query  print  modulo
1061/E __label__graphs  city  country  candidate  fighting  post  president  election  set  future  candidate  already  planned  going  connect  city  road  plan  connect  city  using  road  plan  viewed  tree  candidate  specified  choice  capital  city  candidate  second  candidate  city  ha  potential  building  port  city  port  building  port  city  brings  amount  money  candidate  ha  specific  demand  demand  form  mean  candidate  want  build  exactly  port  subtree  city  tree  tree  rooted  capital  choice  find  maximum  revenue  gained  fulfilling  demand  candidate  print  possible  additionally  guaranteed  candidate  ha  specified  port  demand  capital  choice  contains  city  capital  candidate  capital  second  candidate  respectively  next  contains  revenue  gained  port  constructed  corresponding  city  next  contains  denoting  edge  city  tree  candidate  next  contains  denoting  edge  city  tree  second  candidate  next  contains  denoting  demand  candidate  next  contains  city  port  subtree  next  contains  denoting  demand  second  candidate  next  city  port  subtree  guaranteed  given  edge  correspond  valid  tree  candidate  ha  given  demand  city  candidate  ha  specified  port  demand  capital  choice  city  always  given  demand  candidate  city  always  given  demand  second  candidate  print  exactly  maximum  possible  revenue  gained  satisfying  demand  candidate  possible  satisfy  demand
1176/B __label__math  given  array  consisting  operation  choose  element  array  replace  element  equal  sum  doe  matter  insert  new  element  example  array  obtain  following  array  task  find  maximum  possible  element  divisible  array  performing  operation  arbitrary  possibly  time  answer  independent  query  contains  query  query  contains  second  query  contains  query  print  single  maximum  possible  element  divisible  array  performing  described  operation  arbitrary  possibly  time
888/G __label__data  structures  __label__constructive  algorithms  given  complete  undirected  graph  vertex  assigned  vertex  weight  edge  vertex  equal  aiorj  calculate  weight  minimum  spanning  tree  graph  contains  vertex  graph  second  contains  assigned  vertex  print  weight  minimum  spanning  tree  graph
639/F __label__data  structures  __label__dfs  __label__graphs  __label__trees  limak  smart  brown  bear  love  chemistry  reaction  transforming  element  bearland  limak  home  element  numbered  special  machine  transform  element  machine  described  representing  element  necessarily  distinct  use  machine  either  transform  element  transform  machine  bearland  resistant  used  possible  many  machine  pair  radewoosh  limak  biggest  enemy  rival  want  test  limak  chemistry  meet  tomorrow  bring  machine  limak  ha  machine  know  much  enemy  agreed  radewoosh  choose  distinct  element  let  denote  limak  allowed  use  radewoosh  machine  use  maybe  even  machine  achieve  goal  machine  limak  start  element  task  get  element  get  element  say  succeeds  radewoosh  would  agree  limak  know  chemistry  radewoosh  would  away  radewoosh  like  particular  non  empty  set  favorite  element  choose  set  limak  know  exactly  element  set  know  machine  radewoosh  ha  limak  ha  heard  gossip  query  though  consists  radewoosh  machine  favorite  element  gossip  limak  wonder  would  able  succeed  tomorrow  every  pair  chosen  set  favorite  element  yes  print  yes  without  quote  exists  pair  given  set  limak  able  succeed  print  without  quote  contains  element  limak  machine  gossip  respectively  next  contains  describing  limak  machine  description  gossip  follows  description  gossip  contains  second  contains  distinct  radewoosh  favorite  element  gossip  note  allowed  case  pair  distinct  element  limak  automatically  win  answer  yes  follow  containing  describing  radewoosh  machine  gossip  sum  gossip  exceed  sum  gossip  exceed  important  want  process  gossip  online  order  know  element  radewoosh  favorite  set  element  machine  transform  denotes  input  use  following  function  int  rotate  int  element  element  element  element  element  return  element  initially  equal  increased  query  time  answer  yes  query  numbered  starting  order  appear  input  print  yes  without  quote  gossip  pair  element  set  limak  able  succeed  otherwise  print  without  quote
1165/A __label__math  __label__implementation  given  huge  decimal  consisting  digit  guaranteed  ha  leading  digit  either  perform  several  possibly  operation  operation  allowed  change  digit  change  possible  operation  obtain  leading  doe  matter  problem  given  task  calculate  minimum  operation  perform  obtain  ha  remainder  modulo  word  obtained  remainder  divided  input  contains  length  respectively  second  input  contains  decimal  consisting  digit  digit  either  guaranteed  digit  print  minimum  operation  perform  obtain  remainder  modulo  word  obtained  remainder  divided
814/E __label__dp  __label__graphs  unwilling  return  home  long  journey  affected  oddity  snail  lose  way  mayoi  oddity  carrier  like  happen  nothing  cure  figured  would  like  know  enormous  possibility  faced  someone  get  lost  town  region  numbered  town  numbered  called  capital  traffic  network  formed  bidirectional  road  connecting  pair  town  road  connect  pair  town  road  connects  town  time  needed  travel  road  lost  traveler  able  find  town  connected  resident  help  providing  following  fact  starting  town  capital  shortest  path  path  passing  minimum  road  capital  exists  unique  let  road  shortest  path  town  capital  lii  hold  town  road  connected  denoted  equal  either  count  different  way  town  connected  give  answer  modulo  way  connecting  town  considered  different  pair  exists  road  town  input  contains  positive  town  second  contains  space  separated  road  connected  town  respectively  guaranteed  sum  even  output  total  different  possible  way  town  connected  modulo
513/G2 __label__dp  given  permutation  perform  operation  following  type  choose  uniformly  random  index  l  reverse  order  element  task  find  expected  value  inversion  resulting  permutation  input  contains  next  contains  given  permutation  different  range  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  answer  absolute  relative  error
451/D __label__math  call  string  good  merging  consecutive  equal  character  resulting  string  palindrome  example  aabba  good  merging  step  become  aba  given  string  find  value  good  substring  even  length  good  substring  odd  length  input  contains  single  string  length  character  string  either  print  space  separated  good  substring  even  length  good  substring  odd  length
381/B __label__implementation  __label__greedy  __label__sortings  sereja  love  sequence  much  especially  like  stair  sequence  length  sequence  stair  index  following  condition  met  example  sequence  stair  sequence  sereja  ha  card  want  put  card  table  row  get  stair  sequence  maximum  card  put  table  contains  sereja  card  second  contains  sereja  card  print  card  put  table  second  print  resulting  stair
475/D __label__math  __label__data  structures  __label__brute  force  given  sequence  query  query  count  pair  gcd  greatest  common  divisor  equal  largest  positive  divide  input  contains  denoting  length  sequence  next  contains  space  separated  third  input  contains  denoting  query  follows  query  print  result  separate
413/B __label__implementation  company  ha  employee  working  work  involves  constant  exchange  idea  sharing  story  success  upcoming  challenging  us  famous  instant  messaging  program  spyke  ha  spyke  chat  discus  sort  issue  chat  group  employee  exchange  message  daily  employee  simultaneously  talk  multiple  chat  employee  chat  write  message  chat  receive  notification  message  chat  employee  writes  message  chat  participant  chat  receive  message  notification  company  conducting  audit  specialist  study  effective  communication  employee  purpose  chat  log  description  chat  structure  audit  specialist  commissioned  write  program  use  data  determine  total  message  notification  received  employee  contains  space  separated  employee  chat  event  log  correspondingly  next  matrix  size  n  consisting  element  matrix  recorded  column  let  denote  aij  equal  employee  participant  chat  otherwise  element  equal  assume  employee  numbered  chat  numbered  next  description  log  event  contains  space  separated  mean  employee  sent  message  chat  guaranteed  employee  participant  chat  guaranteed  chat  contains  least  employee  print  single  space  separated  show  message  notification  employee  receives
1129/A2 __label__greedy  __label__brute  force  alice  received  set  toy  train  bob  consists  train  connected  railway  network  station  enumerated  train  occupies  station  time  travel  around  network  station  circular  manner  precisely  immediate  station  train  visit  station  station  station  take  train  second  travel  next  station  described  bob  gave  alice  fun  task  left  deliver  candy  initially  station  independent  destination  using  train  candy  enumerated  candy  station  delivered  station  blue  candy  correspond  value  image  corresponds  example  train  ha  infinite  capacity  possible  load  candy  station  candy  loaded  station  onto  train  leaf  station  choose  candy  station  time  take  move  candy  negligible  alice  wonder  much  time  needed  train  deliver  candy  task  find  station  minimum  time  train  would  need  deliver  candy  start  contains  space  separated  station  candy  respectively  following  contains  space  separated  station  initially  contains  candy  destination  station  candy  respectively  print  space  separated  minimum  time  second  train  would  need  deliver  candy  start  station
863/C __label__implementation  __label__graphs  ilya  working  company  construct  robot  ilya  writes  program  entertainment  robot  current  project  bob  new  generation  game  robot  ilya  bos  want  know  progress  far  especially  interested  bob  better  playing  different  game  previous  model  alice  ilya  want  compare  robot  performance  simple  game  called  game  similar  rock  paper  scissors  game  robot  secretly  choose  set  say  moment  robot  choose  draw  noone  get  point  chosen  different  robot  get  point  beat  beat  beat  robot  program  make  choose  way  choice  game  depends  chosen  game  ilya  know  robot  play  game  alice  choose  game  bob  choose  game  know  robot  program  tell  robot  choose  depending  choice  previous  game  ilya  want  wait  robot  play  game  asks  predict  point  final  game  contains  follow  containing  represents  alice  choice  game  alice  chose  previous  game  bob  chose  follow  containing  represents  bob  choice  game  alice  chose  previous  game  bob  chose  print  ha  equal  point  alice  second  must  bob  score  game
846/F __label__math  __label__data  structures  given  array  consisting  positive  pick  inclusive  picked  randomly  equiprobably  independently  swap  value  calculate  expected  value  unique  element  segment  array  index  index  inclusive  indexed  contains  second  contains  element  array  print  expected  unique  element  chosen  segment
1207/C __label__dp  __label__greedy  responsible  installing  gas  pipeline  along  road  let  consider  road  simplicity  segment  axis  road  several  crossroad  simplicity  denote  crossroad  interval  represent  road  binary  string  consisting  character  character  mean  current  interval  crossroad  mean  crossroad  usually  install  pipeline  along  road  height  unit  supporting  pillar  point  responsible  road  must  install  pillar  crossroad  lift  pipeline  height  pipeline  obstruct  way  car  inserting  several  zig  zag  like  zig  zag  represented  segment  consisting  part  unit  horizontal  pipe  unit  vertical  pipe  horizontal  note  pipeline  currently  height  pillar  support  length  equal  unit  unit  gas  pipeline  cost  bourles  unit  pillar  bourles  always  optimal  make  whole  pipeline  height  find  shape  pipeline  minimum  possible  cost  calculate  cost  note  must  start  finish  pipeline  height  guaranteed  last  character  input  string  equal  fist  contains  query  next  independent  query  query  per  contains  length  road  cost  unit  pipeline  cost  unit  pillar  respectively  second  contains  binary  string  description  road  guaranteed  total  length  string  exceed  print  per  query  query  print  minimum  possible  cost  constructed  pipeline
626/B __label__math  __label__dp  __label__constructive  algorithms  catherine  ha  deck  card  either  red  green  blue  long  least  card  left  action  take  necessarily  adjacent  card  different  color  exchange  new  card  third  color  take  necessarily  adjacent  card  color  exchange  new  card  color  repeat  process  card  left  possible  color  final  card  input  contains  single  total  card  next  contains  string  length  color  card  contains  character  representing  blue  green  red  respectively  print  single  string  character  possible  color  final  card  using  symbol  input  alphabetical  order
645/A __label__implementation  __label__constructive  algorithms  __label__brute  force  bessie  cow  best  friend  elsie  received  sliding  puzzle  day  puzzle  consist  grid  tile  labeled  tile  sit  top  grid  leaving  grid  cell  empty  make  move  bessie  elsie  slide  tile  adjacent  empty  cell  empty  cell  shown  order  determine  truly  best  friend  life  bffls  bessie  elsie  would  like  know  exists  sequence  move  take  puzzle  configuration  move  performed  puzzle  puzzle  considered  configuration  tile  top  grid  cell  puzzle  since  tile  labeled  letter  rotation  reflection  allowed  input  consist  grid  describing  initial  configuration  bessie  puzzle  next  grid  describing  initial  configuration  elsie  puzzle  position  tile  labeled  empty  cell  labeled  guaranteed  puzzle  exactly  tile  letter  exactly  empty  position  output  yes  without  quote  puzzle  reach  configuration  bessie  elsie  truly  bffls  otherwise  print  without  quote
1242/E __label__graphs  __label__constructive  algorithms  ujan  ha  finally  cleaned  house  want  decorate  interior  decided  place  beautiful  carpet  would  really  tie  guest  room  together  interested  carpet  made  polygonal  patch  side  patch  either  side  another  different  patch  exterior  side  whole  carpet  word  carpet  represented  planar  graph  patch  corresponds  face  graph  face  simple  polygon  perimeter  carpet  exterior  side  ujan  considers  carpet  beautiful  consists  patch  patch  ha  exactly  side  perimeter  smallest  possible  find  example  carpet  ujan  order  input  contains  single  patch  carpet  next  contains  side  patch  total  side  patch  doe  exceed  output  description  carpet  graph
909/F __label__constructive  algorithms  given  find  permutation  permutation  pi  permutation  qi  bitwise  operation  input  consists  containing  single  subtask  required  permutation  exist  output  single  containing  word  otherwise  output  word  yes  element  permutation  separated  space  second  several  possible  permutation  subtask  output
267/A __label__math  __label__number  theory  got  long  larger  operation  subtract  lesser  larger  equal  substract  another  example  operation  transforms  pair  pair  transforms  got  pair  many  operation  performed  contains  pair  follow  contains  pair  positive  print  sought  operation  pair  single
746/E __label__math  __label__implementation  __label__greedy  eugeny  ha  card  ha  exactly  written  eugeny  want  exchange  card  nikolay  even  card  would  equal  odd  would  distinct  nikolay  ha  card  distinct  written  per  card  mean  nikolay  ha  exactly  card  exactly  card  single  exchange  process  eugeny  give  card  nikolay  take  another  nikolay  ha  task  find  minimum  card  exchange  determine  card  eugeny  exchange  contains  card  eugeny  ha  card  nikolay  ha  guaranteed  even  second  contains  sequence  positive  eugeny  card  answer  print
898/C __label__implementation  __label__strings  vasya  ha  several  phone  book  recorded  telephone  friend  friend  several  phone  vasya  decided  organize  information  phone  friend  given  string  entry  vasya  phone  book  entry  start  friend  name  follows  phone  current  entry  phone  possible  several  identical  phone  recorded  record  vasya  belief  phone  suffix  phone  end  written  vasya  phone  person  recorded  without  city  code  taken  account  task  print  organized  information  phone  vasya  friend  possible  different  people  person  ha  suffix  end  print  friend  vasya  phone  book  recorded  several  time  format  necessary  take  account  exactly  read  example  understand  statement  format  output  better  contains  entry  vasya  phone  book  following  followed  description  record  format  described  statement  name  vasya  friend  non  empty  string  whose  length  doe  exceed  consists  lowercase  english  letter  phone  entry  le  telephone  consist  digit  represent  phone  string  length  range  phone  leading  print  ordered  information  phone  vasya  friend  output  friend  found  vasya  phone  book
915/D __label__dfs  __label__graphs  given  directed  graph  consisting  vertex  edge  edge  directed  traversed  direction  allowed  remove  edge  make  graph  acyclic  removing  edge  directed  graph  called  acyclic  iff  cycle  non  empty  path  start  end  vertex  contains  vertex  edge  respectively  follow  contains  denoting  directed  edge  going  vertex  vertex  u  ordered  pair  listed  directed  edge  possible  make  graph  acyclic  removing  edge  print  yes  otherwise  print
938/F __label__dp  __label__greedy  given  string  initially  consisting  lowercase  latin  letter  perform  operation  operation  must  erase  substring  length  exactly  print  lexicographically  minimal  string  obtain  performing  operation  contains  string  consisting  lowercase  latin  letter  print  lexicographically  minimal  string  obtain  performing  operation
287/B __label__math  __label__binary  search  vova  ultimate  thule  new  shaman  want  build  pipeline  exactly  house  ultimate  thule  vova  want  city  exactly  pipe  pipe  connected  water  supply  pipe  connected  water  supply  water  flowing  initially  vova  ha  pipe  flowing  water  besides  vova  ha  several  splitter  splitter  construction  consists  input  connected  water  pipe  output  pipe  splitter  connected  water  pipe  water  flow  output  pipe  assume  output  pipe  ordinary  pipe  example  connect  water  supply  pipe  water  flowing  splitter  connected  water  pipe  figure  show  output  splitter  vova  ha  splitter  kind  output  help  vova  use  minimum  splitter  build  required  pipeline  otherwise  state  impossible  vova  need  pipeline  exactly  pipe  flowing  water  note  pipe  output  pipe  splitter  contains  space  separated  please  use  lld  specifier  read  write  bit  preferred  use  cin  cout  stream  specifier  print  single  minimum  splitter  needed  build  pipeline  impossible  build  pipeline  given  splitter  print
1218/G __label__graphs  __label__constructive  algorithms  planet  alpha  planetary  system  inhabited  advanced  civilization  spaceports  planet  connected  interplanetary  space  shuttle  flight  scheduler  decide  return  flight  every  existing  space  shuttle  connection  since  resident  alpha  strong  opponent  symmetry  strict  rule  spaceports  connected  shuttle  must  different  flight  every  pair  connected  spaceports  goal  propose  shuttle  flight  every  connected  spaceports  overall  flight  differs  assume  every  planet  ha  least  spaceport  exist  shuttle  flight  spaceports  different  planet  every  spaceports  series  shuttle  flight  enabling  traveling  spaceports  connected  shuttle  row  input  representing  overall  spaceports  second  row  representing  shuttle  flight  connection  third  row  contains  character  set  letter  position  indicates  planet  situated  spaceport  example  xyyxzz  indicates  spaceports  located  planet  spaceports  located  spaceports  starting  fourth  row  every  row  contains  separated  whitespace  natural  smaller  indicate  spaceports  connected  example  indicates  shuttle  flight  spaceports  representation  shuttle  flight  separate  row  input  containing  third  set  standing  shuttle  flight  spaceports
916/B __label__math  __label__greedy  jamie  preparing  codeforces  round  ha  got  idea  problem  doe  know  solve  help  write  solution  following  problem  find  sum  power  equal  largest  answer  small  possible  multiple  answer  asked  output  lexicographically  largest  clear  consider  sequence  length  give  value  sequence  sequence  minimum  value  output  lexicographically  largest  definition  power  lexicographical  order  see  note  consists  required  sum  length  sequence  output  without  quote  single  doe  exist  sequence  otherwise  output  yes  without  quote  separated  space  second  required  sequence
1136/E __label__data  structures  __label__binary  search  task  nastya  asked  write  formal  statement  array  length  array  length  given  type  query  processed  increase  becomes  exactly  becomes  exactly  far  print  sum  contiguous  subarray  element  element  array  guaranteed  initially  contains  single  element  array  second  contains  element  array  third  contains  element  array  fourth  contains  single  query  following  contains  query  type  query  ha  type  corresponding  contains  character  without  quote  mean  added  element  array  described  statement  query  ha  second  type  corresponding  contains  character  without  quote  query  second  type  print  single  new  sum  corresponding  subarray
359/A __label__implementation  __label__greedy  __label__constructive  algorithms  simon  ha  rectangular  table  consisting  row  column  simon  numbered  row  table  top  bottom  starting  column  left  right  starting  represent  cell  row  column  pair  table  corner  cell  simon  think  cell  table  good  besides  known  good  cell  corner  table  initially  cell  table  colorless  simon  want  color  cell  table  move  choose  good  cell  table  arbitrary  corner  table  color  cell  table  meet  inequations  min  ax  min  ax  help  simon  find  minimum  operation  needed  color  cell  table  note  color  cell  multiple  time  contains  exactly  next  description  table  cell  specifically  contains  space  separated  ai  im  aij  equal  cell  good  otherwise  aij  equal  guaranteed  least  cell  good  guaranteed  good  cell  corner  print  single  minimum  operation  simon  need  carry  idea
369/C __label__dfs  __label__graphs  __label__trees  city  valera  life  going  hold  election  city  parliament  city  ha  district  bidirectional  road  know  district  path  along  road  district  let  enumerate  district  way  inclusive  furthermore  road  resident  decided  problem  road  problem  road  road  need  repaired  candidate  running  election  let  enumerate  candidate  way  inclusive  candidate  elected  city  parliament  perform  exactly  promise  repair  problem  road  way  district  district  city  parliament  located  help  valera  determine  subset  candidate  candidate  subset  elected  city  parliament  problem  road  city  repaired  several  subset  choose  subset  consisting  minimum  candidate  contains  single  district  city  follow  contains  description  city  road  positive  district  connected  bidirectional  road  road  type  equal  road  problem  road  equal  road  problem  road  guaranteed  graph  structure  city  tree  print  single  non  negative  minimum  size  required  subset  candidate  second  print  space  separated  candidate  form  required  subset  multiple  solution  allowed  print
20/C __label__graphs  given  weighted  undirected  graph  vertex  enumerated  task  find  shortest  path  vertex  vertex  contains  vertex  edge  following  edge  form  edge  endpoint  length  edge  possible  graph  ha  loop  multiple  edge  pair  vertex  write  case  path  write  shortest  path  opposite  case  many  solution  print
767/D __label__greedy  __label__data  structures  __label__sortings  __label__binary  search  olya  like  milk  much  drink  carton  milk  day  ha  least  drink  issue  expiration  date  carton  ha  date  drink  still  drink  exactly  date  written  carton  due  olya  fridge  contains  carton  past  expiry  date  throw  away  olya  hate  throwing  carton  drink  carton  chooses  expires  fastest  easy  understand  strategy  minimizes  amount  carton  thrown  let  avoid  even  possible  milk  best  main  issue  olya  ha  buying  new  carton  currently  carton  milk  olya  fridge  expiration  date  known  soon  doe  expire  measured  day  shop  olya  visited  carton  expiration  date  known  carton  well  find  maximum  carton  olya  buy  throw  away  carton  assume  olya  drank  carton  today  amount  carton  olya  fridge  amount  carton  shop  carton  olya  drink  day  second  expiration  date  carton  olya  fridge  expiration  date  expressed  day  drinking  carton  delayed  example  expiration  date  mean  must  drunk  today  later  tomorrow  etc  third  expiration  date  carton  shop  similar  format  way  olya  drink  carton  already  ha  fridge  print
1217/A __label__math  __label__binary  search  play  favourite  game  another  time  chose  character  play  ha  str  point  strength  int  point  intelligence  start  character  ha  exp  free  experience  point  invest  either  strength  intelligence  investing  point  either  raise  strength  raise  intelligence  since  like  make  fun  want  create  jock  character  ha  strength  intelligence  point  resulting  strength  strictly  greater  resulting  intelligence  calculate  different  character  build  create  purpose  replayability  must  invest  free  point  character  build  different  strength  intellect  different  contains  single  query  next  description  query  per  contains  str  int  exp  tr  int  xp  initial  strength  intelligence  character  free  point  respectively  print  per  query  query  print  different  character  build  create
924/A __label__implementation  __label__greedy  rectangular  grid  row  initially  white  cell  arkady  performed  certain  possibly  operation  operation  non  empty  subset  row  non  empty  subset  column  chosen  row  column  intersection  row  column  coloured  black  another  constraint  row  column  chosen  operation  word  mean  pair  exists  denotes  intersection  set  denotes  empty  set  determine  whether  valid  sequence  operation  exists  produce  given  final  grid  contains  space  separated  row  column  grid  respectively  following  contains  string  character  either  denoting  white  cell  denoting  black  cell  representing  desired  setup  given  grid  achieved  valid  sequence  operation  output  yes  otherwise  output  without  quote
209/C __label__greedy  __label__graphs  __label__constructive  algorithms  vasya  went  walk  park  park  ha  glade  numbered  trail  glade  trail  numbered  trail  connects  glade  connected  glade  mean  trail  connects  glade  glade  several  non  intersecting  trail  vasya  glade  want  walk  trail  park  exactly  eventually  return  glade  unfortunately  vasya  doe  know  whether  walk  possible  help  vasya  determine  whether  walk  possible  walk  impossible  find  minimum  trail  authority  need  add  park  order  make  described  walk  possible  vasya  shift  trail  another  glade  move  trail  direction  vasya  started  going  trail  connects  glade  glade  must  finish  trail  glade  contains  glade  park  trail  park  respectively  next  specify  trail  specifies  trail  space  separated  glade  connected  trail  print  single  answer  problem  vasya  walk  possible  without  adding  extra  trail  print  otherwise  print  minimum  trail  authority  need  add  park  order  make  vasya  walk  possible
1184/B2 __label__sortings  __label__graphs  thanks  doctor  help  rebel  managed  steal  enough  gold  launch  full  scale  attack  empire  darth  vader  looking  revenge  want  take  back  gold  rebel  hidden  gold  various  base  throughout  galaxy  darth  vader  empire  looking  send  spaceship  attack  base  galaxy  represented  undirected  graph  planet  node  wormhole  edge  connecting  planet  total  empire  spaceship  rebel  base  located  different  planet  galaxy  spaceship  given  location  denoting  index  planet  located  attacking  strength  certain  amount  fuel  base  given  location  defensive  strength  spaceship  attack  base  condition  hold  spaceship  attacking  strength  greater  equal  defensive  strength  base  spaceship  fuel  greater  equal  shortest  distance  computed  wormhole  spaceship  planet  base  planet  vader  particular  attacking  formation  requires  spaceship  attack  base  base  attacked  spaceship  vader  know  rebel  hidden  gold  base  assign  spaceship  attack  base  way  maximizes  base  attacked  therefore  base  attacked  rebel  lose  gold  rebel  ability  create  dummy  base  doctor  help  base  would  exist  beyond  space  time  spaceship  reach  attack  moreover  dummy  base  designed  seem  irresistible  always  attacked  spaceship  course  dummy  base  gold  creating  dummy  base  cost  gold  minimum  gold  rebel  lose  create  optimal  dummy  base  contains  node  edge  respectively  next  denoting  undirected  edge  node  next  contains  b  spaceship  base  cost  base  attacked  cost  creating  dummy  base  respectively  next  denoting  location  attack  fuel  spaceship  next  denoting  location  defence  base  print  single  minimum  cost  term  gold
779/B __label__greedy  __label__brute  force  polycarp  crazy  round  especially  like  divisible  k  given  polycarp  want  remove  least  digit  get  divisible  k  example  enough  delete  single  digit  case  result  divisible  write  program  print  minimum  digit  deleted  given  result  divisible  k  result  start  unnecessary  leading  start  required  written  exactly  digit  guaranteed  answer  exists  input  contains  guaranteed  answer  exists  input  written  traditional  notation  without  extra  leading  print  required  minimal  digit  erase  removing  appropriate  digit  result  value  divisible  k  result  start  digit  single  case  result  written  exactly  digit
863/E __label__data  structures  __label__sortings  luba  need  help  luba  ha  set  know  set  working  moment  time  till  moment  inclusive  luba  want  switch  set  order  free  socket  let  call  set  redundant  switching  moment  time  least  set  working  decrease  luba  upset  ha  switch  non  redundant  set  help  luba  telling  index  redundant  set  print  contains  set  follow  containing  ii  denoting  working  time  set  redundant  set  print  otherwise  print  index  redundant  set  set  indexed
463/E __label__math  __label__dfs  __label__trees  __label__brute  force  __label__number  theory  caisa  home  son  ha  simple  task  given  rooted  tree  vertex  numbered  vertex  root  vertex  tree  ha  value  answer  query  query  following  format  query  let  write  sequence  vertex  along  path  root  vertex  need  output  vertex  gcd  value  alue  several  possible  vertex  pick  maximum  value  vertex  output  format  query  must  change  value  vertex  given  query  help  caisa  solve  problem  contains  space  separated  second  contains  represent  value  node  next  contains  xii  denoting  edge  tree  vertex  next  contains  query  format  given  query  following  inequality  hold  note  query  change  value  vertex  query  type  output  result  query
61/C __label__math  shapur  extremely  smart  became  king  persia  called  shapur  majesty  king  king  iran  aniran  recently  roman  declared  war  persia  dreamed  occupy  armenia  recent  war  roman  badly  defeated  senior  army  general  philip  captured  shapur  shapur  going  capture  valerian  roman  emperor  defeated  cowardly  valerian  hid  room  top  castle  capture  shapur  ha  open  many  door  fortunately  valerian  wa  scared  make  impenetrable  lock  door  door  ha  part  part  second  part  either  really  odd  sign  look  like  third  fourth  part  empty  wa  laid  writing  something  extremely  gifted  opening  door  shapur  found  secret  behind  lock  written  base  open  door  write  base  bad  news  sort  special  numbering  system  used  roman  empire  opening  door  piece  cake  explanation  really  weird  system  even  roman  numeral  based  symbol  stroke  identified  letter  unit  chevron  identified  letter  cross  stroke  identified  letter  identified  abbreviation  centum  hundred  etc  symbol  iterated  produce  multiple  decimal  value  substituted  multiple  iteration  continuing  iii  vii  etc  base  xxx  lxxx  dcc  etc  fourth  ninth  iteration  subtractive  principle  must  employed  base  placed  higher  base  base  greater  use  etc  help  shapur  capture  valerian  bring  peace  back  persia  especially  armenia  contains  replaced  indicates  roman  numbering  system  next  contains  single  non  negative  base  leading  length  exceed  guaranteed  roman  numeral  included  would  le  equal  case  greater  write  single  contains  base  must  omit  leading
922/C __label__brute  force  __label__number  theory  imp  watching  documentary  cave  painting  carved  chaotic  order  immediately  attracted  attention  imp  rapidly  proposed  guess  remainder  division  unfortunately  many  analyze  imp  imp  want  check  whether  remainder  distinct  formally  want  check  distinct  pair  remainder  division  contains  print  yes  remainder  distinct  otherwise
1144/G __label__dp  __label__greedy  sequence  existed  initially  wa  strictly  increasing  another  strictly  decreasing  strictly  increasing  sequence  sequence  strictly  decreasing  sequence  sequence  note  empty  sequence  sequence  consisting  element  considered  increasing  decreasing  element  increasing  sequence  inserted  element  decreasing  possibly  element  last  element  without  changing  order  example  sequence  produce  following  resulting  sequence  following  sequence  result  insertion  order  element  increasing  sequence  wa  changed  let  obtained  sequence  sequence  given  input  task  find  suitable  initial  sequence  strictly  increasing  another  strictly  decreasing  note  empty  sequence  sequence  consisting  element  considered  increasing  decreasing  contradiction  input  impossible  split  given  sequence  increasing  sequence  decreasing  sequence  print  input  contains  element  second  input  contains  element  contradiction  input  impossible  split  given  sequence  increasing  sequence  decreasing  sequence  print
343/D __label__data  structures  __label__dfs  __label__graphs  __label__trees  mad  scientist  mike  ha  constructed  rooted  tree  consists  vertex  vertex  reservoir  either  empty  filled  water  vertex  tree  numbered  root  vertex  vertex  reservoir  child  located  reservoir  vertex  vertex  connected  child  pipe  water  flow  downwards  mike  want  following  operation  tree  fill  vertex  water  child  filled  water  empty  vertex  ancestor  emptied  determine  whether  vertex  filled  water  moment  initially  vertex  tree  empty  mike  ha  already  compiled  full  list  operation  want  perform  order  experimenting  tree  mike  decided  run  list  simulation  help  mike  determine  result  get  performing  operation  input  contains  vertex  tree  following  contains  space  separated  aii  edge  tree  next  contains  operation  perform  following  contains  space  separated  operation  type  according  numbering  given  statement  vertex  operation  performed  guaranteed  given  graph  tree  type  operation  print  separate  vertex  full  vertex  empty  print  answer  query  order  query  given  input
1130/A __label__implementation  given  array  task  find  non  array  divided  positive  presented  array  greater  equal  half  array  size  least  note  positive  need  count  positive  multiple  value  satisfy  condition  print  case  print  single  recall  represents  smallest  le  neither  positive  negative  contains  element  array  second  contains  space  separated  print  satisfies  given  condition  multiple  value  satisfy  condition  print  case  print  single
799/D __label__dp  __label__brute  force  game  arkady  fond  game  process  happens  rectangular  field  game  process  arkady  buy  extension  field  extension  enlarges  field  size  particular  time  formally  extension  multiplies  width  length  arkady  choice  extension  used  extension  used  order  arkady  field  ha  size  h  want  enlarge  possible  place  rectangle  size  along  width  along  length  side  parallel  field  side  find  minimum  extension  needed  reach  arkady  goal  contains  size  rectangle  needed  placed  initial  size  field  available  extension  second  contains  equal  side  multiplies  extension  applied  print  minimum  extension  needed  reach  arkady  goal  possible  place  rectangle  field  extension  print  rectangle  placed  initial  field  print
650/D __label__dp  __label__data  structures  __label__binary  search  vasya  ha  decided  build  zip  tree  nearby  forest  want  long  possible  remember  exactly  height  tree  forest  sure  remembers  correct  height  tree  except  possibly  known  forest  consists  tree  staying  row  numbered  left  right  according  vasya  height  tree  equal  zip  length  hang  tree  height  form  increasing  sequence  hi  ik  petya  forest  together  vasya  ha  assumption  mistake  vasya  sequence  assumption  consists  indicating  according  petya  height  tree  numbered  actually  equal  note  petya  assumption  independent  task  find  maximum  length  zip  built  tree  assumption  problem  length  zip  considered  equal  tree  form  zip  input  contains  tree  forest  petya  assumption  respectively  following  contains  height  tree  according  vasya  following  contains  petya  assumption  output  indicating  maximum  length  zip  built  assumption
437/E __label__dp  __label__geometry  time  child  ha  simple  polygon  ha  find  way  split  polygon  non  degenerate  triangle  way  must  satisfy  following  requirement  vertex  triangle  polygon  vertex  side  polygon  must  side  exactly  triangle  area  intersection  every  triangle  equal  sum  area  triangle  equal  area  polygon  triangle  must  completely  inside  polygon  side  triangle  must  exactly  vertex  polygon  picture  depicts  example  correct  splitting  please  help  child  calculate  described  way  modulo  contains  vertex  polygon  follow  containing  contains  vertex  polygon  clockwise  counterclockwise  order  guaranteed  polygon  simple  output  way  modulo
447/A __label__implementation  dzy  ha  hash  table  bucket  numbered  want  insert  order  given  hash  table  dzy  put  bucket  numbered  hash  function  problem  assume  mod  operation  mod  denotes  taking  remainder  division  bucket  element  dzy  want  insert  bucket  already  filled  say  conflict  happens  suppose  conflict  happens  right  insertion  output  conflict  happens  output  contains  follow  contains  output  single  answer  problem
1155/F __label__dp  __label__graphs  __label__brute  force  whole  delivery  market  berland  controlled  rival  company  berex  berps  provide  fast  reliable  delivery  service  city  berland  map  berland  represented  undirected  graph  city  vertex  road  edge  pair  city  ha  road  road  connects  different  city  berex  berps  competitive  pair  city  set  path  way  path  share  single  road  guaranteed  wa  possible  berland  government  decided  cut  road  maintenance  cost  abandoning  road  obviously  want  maintain  little  road  possible  want  break  entire  delivery  system  berex  berps  still  able  path  every  pair  city  non  intersecting  minimal  road  berland  government  maintain  formally  given  edge  connected  undirected  graph  minimum  edge  left  resulting  graph  edge  connected  contains  city  road  next  contains  city  connected  next  road  guaranteed  pair  city  ha  road  guaranteed  pair  city  least  path  share  single  road  single  minimum  road  berland  government  maintain  berex  berps  still  able  path  every  pair  city  non  intersecting
1213/E __label__constructive  algorithms  __label__brute  force  given  string  length  consisting  character  possible  example  string  find  string  consisting  character  character  character  character  occur  substring  substring  string  contiguous  subsequence  string  string  substring  string  abacc  string  substring  string  abacc  multiple  answer  print  input  contains  character  resulting  string  second  input  contains  string  length  consisting  character  third  input  contains  string  length  consisting  character  impossible  find  suitable  string  print
884/F __label__greedy  __label__graphs  string  length  called  antipalindromic  iff  even  aim  ivan  ha  string  consisting  lowercase  latin  letter  even  want  form  string  antipalindromic  permutation  ivan  ha  denoted  beauty  index  beauty  sum  index  help  ivan  determine  maximum  possible  beauty  get  contains  even  character  second  contains  string  consists  lowercase  latin  letter  guaranteed  letter  reordered  form  antipalindromic  string  third  contains  beauty  index  print  maximum  possible  beauty
1225/G __label__dp  __label__greedy  __label__constructive  algorithms  __label__number  theory  positive  written  blackboard  positive  chosen  none  blackboard  divisible  operation  choose  erase  write  extra  equal  divisible  otherwise  end  single  blackboard  possible  make  final  equal  restore  sequence  operation  contains  initial  blackboard  chosen  second  contains  positive  initially  written  blackboard  guaranteed  none  divisible  sum  doe  exceed  impossible  obtain  final  print
906/A __label__implementation  __label__strings  valentin  participates  show  called  shocker  rule  quite  easy  jury  selects  letter  valentin  know  make  small  speech  every  time  pronounces  word  contains  selected  letter  receives  electric  shock  make  guess  letter  selected  incorrect  guess  receives  electric  shock  show  end  valentin  guess  selected  letter  correctly  valentin  keep  mind  everything  could  guess  selected  letter  much  later  uniquely  determined  get  excessive  electric  shock  excessive  electric  shock  valentin  got  moment  selected  letter  uniquely  determined  find  excessive  electric  shock  contains  single  action  valentin  next  description  action  contains  description  action  action  type  valentin  pronounced  word  get  electric  shock  action  described  string  without  quote  dot  ascii  code  word  valentin  said  valentin  pronounced  word  got  electric  shock  action  described  string  without  quote  exclamation  mark  ascii  code  word  valentin  said  valentin  made  guess  selected  letter  action  described  string  without  quote  question  mark  ascii  code  guess  lowercase  english  letter  word  consist  lowercase  english  letter  total  length  word  doe  exceed  guaranteed  last  action  guess  selected  letter  guaranteed  valentin  make  correct  guess  selected  letter  last  action  moreover  guaranteed  valentin  got  electric  shock  pronouncing  word  contains  selected  letter  valentin  get  electric  shock  pronouncing  word  doe  selected  letter  output  single  electric  shock  valentin  could  avoided  told  selected  letter  became  uniquely  determined
1237/E __label__math  __label__dp  recall  binary  search  tree  rooted  binary  tree  whose  node  store  key  distinguished  subtrees  left  right  key  node  must  greater  key  stored  left  subtree  le  key  stored  right  subtree  depth  vertex  edge  simple  path  vertex  root  particular  depth  root  let  call  binary  search  tree  perfectly  balanced  exist  binary  search  tree  vertex  ha  strictly  smaller  sum  depth  vertex  let  call  binary  search  tree  key  striped  following  condition  satisfied  every  vertex  ha  left  subtree  whose  root  parity  key  different  parity  key  ha  right  subtree  whose  root  parity  key  parity  key  given  single  find  perfectly  balanced  striped  binary  search  tree  vertex  distinct  key  inclusive  output  modulo  contains  single  denoting  required  vertex  output  perfectly  balanced  striped  binary  search  tree  vertex  distinct  key  inclusive  modulo
260/D __label__greedy  __label__graphs  __label__trees  __label__constructive  algorithms  board  ha  got  painted  tree  graph  consisting  node  let  remind  non  directed  graph  called  tree  connected  cycle  node  graph  painted  black  white  manner  node  color  connected  edge  edge  contains  value  written  non  negative  bad  boy  vasya  came  board  wrote  near  node  sum  value  edge  incident  node  vasya  removed  edge  value  board  task  restore  original  tree  node  color  input  contains  single  node  tree  next  pair  space  separated  stand  color  vertex  white  black  represents  sum  value  edge  incident  vertex  tree  painted  board  print  description  edge  tree  graph  description  group  vii  node  connected  edge  value  note  following  condition  must  fulfill  cviui
630/K __label__math  city  company  developing  computer  game  decided  upgrade  way  reward  employee  look  following  way  new  game  release  user  start  buying  actively  company  track  sale  precision  transaction  every  time  next  sale  divisible  every  developer  game  get  small  bonus  game  designer  petya  know  company  release  new  game  wa  partly  developed  basis  experience  predicts  people  buy  game  month  petya  want  determine  many  time  get  bonus  help  know  input  contains  prediction  people  buy  game  output  showing  many  divisible
754/D __label__greedy  __label__data  structures  __label__sortings  __label__binary  search  character  hobby  true  fedor  enjoys  shopping  neighboring  supermarket  good  supermarket  unique  id  every  product  equal  fedor  ha  discount  coupon  used  product  id  ranging  inclusive  today  fedor  want  take  exactly  coupon  fedor  want  choose  coupon  way  product  coupon  used  product  large  possible  better  understanding  see  example  fedor  want  save  time  well  asks  choose  coupon  help  fedor  contains  coupon  fedor  ha  coupon  want  choose  next  contains  ii  description  coupon  coupon  equal  print  single  maximum  product  chosen  coupon  used  product  least  coupon  used  counted
1129/D __label__dp  __label__data  structures  find  way  divide  array  disjoint  non  empty  segment  segment  exist  distinct  appear  exactly  since  answer  large  find  modulo  contains  space  separated  element  array  restriction  statement  following  contains  space  separated  element  array  contains  way  divide  array  modulo
1100/E __label__dfs  __label__graphs  __label__binary  search  andrew  prefers  taxi  mean  transport  recently  taxi  driver  acting  inappropriately  order  earn  money  taxi  driver  started  drive  circle  road  andrew  city  way  people  necessary  able  travel  part  another  pale  comparison  insidious  taxi  driver  mayor  city  decided  change  direction  certain  road  taxi  driver  able  increase  cost  trip  endlessly  formally  taxi  driver  certain  crossroad  able  reach  performs  nonzero  trip  traffic  controller  needed  order  change  direction  road  go  every  road  known  many  traffic  controller  needed  change  direction  road  opposite  allowed  change  direction  road  meaning  traffic  controller  participate  reversing  road  need  calculate  minimum  traffic  controller  need  hire  perform  task  list  road  need  reversed  contains  crossroad  road  city  respectively  following  crossroad  road  start  crossroad  road  end  traffic  controller  required  reverse  road  output  minimal  amount  traffic  controller  required  complete  task  amount  road  reversed  minimized
1203/F1 __label__greedy  difference  easy  hard  version  complete  project  easy  version  necessary  hard  version  polycarp  famous  freelancer  current  rating  unit  rich  customer  asked  complete  project  company  complete  project  polycarp  need  least  unit  rating  completes  project  rating  change  rating  increase  decrease  positive  negative  polycarp  rating  fall  people  trust  low  rated  freelancer  possible  complete  project  formally  write  program  check  order  project  exists  polycarp  ha  enough  rating  starting  project  ha  non  negative  rating  completing  project  word  check  exists  order  project  polycarp  complete  ha  enough  rating  starting  project  ha  non  negative  rating  completing  project  input  contains  project  initial  rating  polycarp  respectively  next  project  per  project  represented  pair  rating  required  complete  project  rating  change  project  completion  print  yes
1030/E __label__dp  vasya  ha  sequence  consisting  vasya  pefrom  following  operation  choose  sequence  swap  pair  bit  binary  representation  example  vasya  transform  many  others  vasya  use  operation  possibly  time  sequence  vasya  name  sequence  good  using  operation  mentioned  obtain  sequence  bitwise  exclusive  element  equal  given  sequence  vasya  like  calculate  pair  sequence  good  contains  single  length  sequence  second  contains  sequence  print  pair  sequence  good
412/C __label__implementation  __label__strings  developer  often  face  regular  expression  pattern  pattern  usually  defined  string  consisting  character  metacharacters  set  rule  search  pattern  often  used  check  whether  particular  string  meet  certain  rule  task  pattern  string  consisting  small  english  letter  question  mark  question  mark  pattern  metacharacter  denotes  arbitrary  small  letter  english  alphabet  assume  string  match  pattern  transform  string  pattern  replacing  question  mark  appropriate  character  example  string  aba  match  pattern  aba  programmer  work  company  love  puzzling  riddle  follows  given  pattern  length  need  find  pattern  contains  question  mark  possible  intersects  given  pattern  pattern  intersect  string  match  second  pattern  solve  riddle  contains  single  pattern  next  pattern  guaranteed  pattern  consist  small  english  letter  symbol  pattern  non  empty  length  total  length  pattern  doe  exceed  character  single  print  answer  problem  pattern  minimal  sign  intersects  given  several  answer  print
412/D __label__dfs  employee  company  often  spend  time  together  watch  football  camping  solve  contest  big  deal  sometimes  someone  pay  someone  else  today  day  giving  money  reward  company  ceo  invite  employee  office  rewarding  hard  work  month  ceo  know  owes  money  understands  invite  person  office  reward  immediately  invite  person  ha  lent  money  person  meet  course  situation  joy  person  brand  new  money  reward  much  le  therefore  ceo  decided  invite  staff  order  described  situation  happen  pair  employee  invited  another  lot  employee  company  ceo  lot  time  therefore  task  ha  assigned  given  debt  relationship  employee  determine  order  invited  office  company  ceo  determine  described  order  doe  exist  contains  space  separated  employee  debt  relation  following  contains  space  separated  aii  indicate  person  owes  money  person  assume  employee  numbered  guaranteed  pair  people  mentioned  input  data  particular  input  data  pair  simultaneously  print  described  order  doe  exist  otherwise  print  permutation  distinct  denote  person  go  ceo  office  second  denote  person  go  second
525/A __label__greedy  __label__strings  hard  day  vitaly  got  hungry  want  eat  favorite  potato  pie  simple  vitaly  room  house  room  located  numbered  starting  left  right  room  second  room  second  room  third  room  room  room  thus  room  room  potato  pie  located  room  vitaly  need  pair  consecutive  room  ha  door  order  room  room  need  open  door  room  corresponding  key  total  house  ha  several  type  door  represented  uppercase  latin  letter  several  type  key  represented  lowercase  latin  letter  key  type  open  door  type  letter  written  different  case  example  key  open  door  room  contains  exactly  key  type  vitaly  use  get  next  room  door  open  key  vitaly  get  key  keyhole  immediately  run  next  room  word  key  open  door  vitaly  realizes  end  room  without  key  open  door  next  room  start  run  potato  pie  vitaly  buy  key  type  guaranteed  get  room  given  plan  house  vitaly  want  know  minimum  key  need  buy  surely  get  room  ha  delicious  potato  pie  write  program  help  vitaly  find  input  contains  positive  room  house  second  input  contains  string  length  let  element  string  left  right  starting  odd  position  given  string  lowercase  latin  letter  type  key  lie  corresponding  room  thus  odd  position  given  string  contains  lowercase  latin  letter  type  key  lie  room  even  position  given  string  uppercase  latin  letter  type  door  room  thus  even  position  given  string  contains  uppercase  letter  type  door  lead  room  room  print  minimum  key  vitaly  need  buy  surely  get  room  room
76/B __label__greedy  modern  research  ha  shown  flock  hungry  mouse  searching  piece  cheese  act  follows  several  piece  cheese  mouse  chooses  closest  mouse  start  moving  towards  chosen  piece  cheese  mouse  several  mouse  achieve  destination  point  still  piece  cheese  eat  become  well  fed  mouse  reach  point  remains  hungry  moving  speed  mouse  equal  several  way  choose  closest  piece  mouse  choose  way  would  minimize  hungry  mouse  check  theory  scientist  decided  conduct  experiment  located  mouse  piece  cheese  cartesian  plane  mouse  located  piece  cheese  another  check  result  experiment  scientist  need  program  simulates  behavior  flock  hungry  mouse  write  program  computes  minimal  mouse  remain  hungry  without  cheese  input  contains  second  contains  strictly  increasing  sequence  coordinate  mouse  third  contains  strictly  increasing  sequence  coordinate  cheese  coordinate  exceed  absolute  value  output  minimal  mouse  remain  without  cheese
1133/C __label__sortings  coach  local  university  student  supervision  programming  skill  student  create  team  new  programming  competition  know  student  team  ha  probable  victory  create  team  maximum  student  know  team  balanced  mean  programming  skill  pair  student  created  team  differ  task  report  maximum  possible  student  balanced  team  input  contains  student  second  input  contains  programming  skill  student  print  maximum  possible  student  balanced  team
627/B __label__data  structures  factory  produce  thimble  bulk  typically  produce  thimble  day  machinery  defective  currently  produce  thimble  day  factory  intends  choose  day  period  maintenance  construction  produce  thimble  time  restored  full  production  thimble  per  day  day  complete  initially  order  pending  factory  receives  update  form  indicating  new  order  placed  day  order  requires  single  thimble  produced  precisely  specified  day  factory  opt  fill  many  order  single  batch  like  order  come  factory  owner  would  like  know  maximum  order  able  fill  start  repair  given  day  help  owner  answer  question  contains  day  length  repair  time  production  rate  factory  update  respectively  next  description  query  query  following  form  representing  update  order  day  representing  question  moment  many  order  could  filled  factory  decided  commence  repair  day  guaranteed  input  least  query  second  type  query  second  type  print  containing  single  maximum  order  factory  fill  day
978/A __label__implementation  petya  ha  array  consisting  want  remove  duplicate  equal  element  petya  want  leave  rightmost  entry  occurrence  element  array  relative  order  remaining  unique  element  changed  contains  single  element  petya  array  following  contains  sequence  petya  array  print  element  left  petya  array  removed  duplicate
631/B __label__implementation  __label__constructive  algorithms  kris  work  large  company  blake  technology  best  engineer  company  wa  assigned  task  develop  printer  able  print  horizontal  vertical  strip  prototype  already  built  kris  want  test  want  implement  program  check  result  printing  printer  work  rectangular  sheet  paper  size  n  consider  list  table  consisting  row  column  row  numbered  top  bottom  column  numbered  left  right  initially  cell  painted  color  program  ha  support  operation  paint  cell  row  color  paint  cell  column  color  operation  cell  already  painted  color  cell  change  program  ha  print  resulting  table  operation  input  contains  dimension  sheet  operation  respectively  next  contains  description  exactly  query  mean  row  painted  color  mean  column  painted  color  print  containing  resulting  table  operation  applied
796/E __label__dp  __label__binary  search  zane  zane  crush  decided  date  girl  problem  physic  final  exam  need  help  question  numbered  question  come  question  question  guessed  due  huge  penalty  wrong  answer  girl  luckily  sits  middle  genius  going  cheat  genius  limitation  know  answer  question  anyway  safe  assume  answer  answer  sheet  absolutely  correct  make  sure  get  caught  proctor  girl  glance  time  time  looking  consecutive  question  genius  answer  sheet  girl  look  question  answer  sheet  copy  answer  question  answer  sheet  doe  nothing  otherwise  help  girl  find  maximum  question  get  correct  contains  question  maximum  time  girl  glance  maximum  consecutive  question  looked  time  glancing  respectively  second  start  denoting  question  genius  ha  answered  answer  sheet  follow  answered  question  given  strictly  increasing  order  third  start  denoting  question  second  genius  ha  answered  answer  sheet  follow  answered  question  given  strictly  increasing  order  print  maximum  question  girl  answer  correctly
807/B __label__implementation  __label__brute  force  long  ago  codecraft  contest  wa  held  codeforces  top  participant  additionally  random  participant  got  top  receive  codeforces  shirt  unfortunately  manage  get  top  got  top  taking  place  elimination  round  vc  venture  cup  held  ha  announced  codecraft  shirt  winner  chosen  follows  let  point  winner  elimination  round  vc  venture  cup  following  pseudocode  executed  div  mod  repeat  time  mod  print  div  division  operator  mod  modulo  remainder  division  operator  result  pseudocode  execution  inclusive  printed  place  participant  get  codecraft  shirt  guaranteed  printed  pairwise  distinct  value  lead  elimination  round  vc  venture  cup  point  believe  least  point  current  round  enough  victory  change  final  score  make  successful  unsuccessful  hack  successful  hack  brings  point  unsuccessful  take  point  difficult  successful  hack  though  want  win  current  round  time  ensure  getting  codecraft  shirt  smallest  successful  hack  achieve  contains  place  codecraft  current  score  elimination  round  vc  venture  cup  smallest  point  consider  sufficient  winning  current  round  output  single  smallest  successful  hack  order  win  elimination  round  vc  venture  cup  ensure  getting  codecraft  shirt
799/C __label__implementation  __label__data  structures  __label__binary  search  arkady  play  gardenscapes  lot  arkady  want  build  new  fountain  available  fountain  fountain  beauty  cost  known  type  money  game  coin  diamond  fountain  cost  either  coin  diamond  money  change  type  allowed  help  arkady  find  fountain  maximum  total  beauty  buy  time  contains  fountain  coin  diamond  arkady  ha  next  describe  fountain  beauty  cost  fountain  letter  describing  type  money  cost  fountain  coin  diamond  respectively  print  maximum  total  beauty  exactly  fountain  arkady  build  build  fountain  print
960/F __label__dp  __label__data  structures  __label__graphs  given  directed  graph  node  edge  edge  certain  weight  might  multiple  edge  self  loop  graph  disconnected  need  choose  path  possibly  passing  vertex  multiple  time  graph  weight  edge  strictly  increasing  order  edge  come  order  input  path  need  find  path  ha  maximum  possible  edge  report  value  please  note  edge  picked  consecutive  input  contains  vertex  edge  graph  respectively  follows  contains  space  separated  denoting  edge  vertex  vertex  weight  print  single  maximum  edge  path
710/A __label__implementation  king  stand  standard  chess  board  given  position  format  column  row  find  move  permitted  king  check  king  move  http  wikipedia  org  wiki  king  chess  king  move  position  contains  king  position  format  column  row  print  move  permitted  king
305/C __label__implementation  __label__greedy  ivan  ha  got  array  non  negative  ivan  know  array  sorted  non  decreasing  order  ivan  wrote  piece  paper  wonder  minimum  form  b  need  added  piece  paper  sum  written  paper  equalled  v  help  ivan  find  required  quantity  contains  second  input  contains  space  separated  guaranteed  n  print  single  answer  problem
832/C __label__math  __label__implementation  __label__binary  search  people  standing  coordinate  axis  point  positive  coordinate  strictly  le  person  know  direction  left  right  facing  maximum  speed  put  bomb  point  non  negative  coordinate  blow  moment  people  start  running  maximum  speed  direction  facing  strange  ray  start  propagating  bomb  speed  right  left  course  speed  strictly  greater  people  maximum  speed  ray  strange  moment  position  direction  movement  ray  person  coincide  speed  person  immediately  increase  speed  ray  need  place  bomb  point  minimum  time  moment  person  ha  run  point  person  ha  run  point  small  possible  word  find  minimum  time  moment  point  place  bomb  time  moment  person  ha  run  person  ha  run  point  contains  people  ray  speed  next  description  people  contains  coordinate  person  maximum  speed  direction  run  left  direction  coordinate  decrease  right  direction  coordinate  increase  respectively  guaranteed  point  reached  independently  bomb  position  print  minimum  time  needed  point  reached
682/B __label__sortings  someone  gave  alyona  array  containing  positive  operation  alyona  choose  element  array  decrease  replace  positive  smaller  current  alyona  repeat  operation  many  time  want  particular  apply  operation  array  formally  applying  operation  alyona  get  array  positive  ii  every  task  determine  maximum  possible  value  mex  array  mex  array  problem  minimum  positive  appear  array  example  mex  array  containing  equal  mex  array  containing  equal  input  contains  single  element  alyona  array  second  input  contains  element  array  print  positive  maximum  possible  value  mex  array  alyona  applies  possibly  none  operation
1114/B __label__greedy  __label__sortings  __label__constructive  algorithms  array  called  subarray  form  continuous  subsequence  equal  suppose  known  constant  array  element  let  define  beauty  sum  largest  element  array  example  array  largest  element  beauty  array  beauty  given  array  value  said  constant  need  split  array  exactly  subarrays  element  belongs  exactly  subarray  subarray  ha  least  element  sum  beauty  subarrays  maximum  possible  contains  element  constant  definition  beauty  subarrays  split  second  contains  print  maximum  possible  sum  beauty  subarrays  optimal  partition
487/D __label__data  structures  automatic  bakery  cyberland  abc  recently  bought  n  rectangle  table  serve  diner  abc  placed  seat  around  table  size  seat  equal  unit  square  seat  total  abc  placed  conveyor  belt  unit  square  table  type  conveyor  belt  belt  bring  thing  upwards  bring  leftwards  bring  rightwards  let  row  top  bottom  column  left  right  consider  seat  top  table  row  respectively  define  seat  left  table  right  table  column  due  conveyor  belt  direction  restriction  currently  way  diner  sitting  row  served  given  initial  table  event  order  type  event  mean  piece  bread  appear  row  column  denote  position  bread  follow  conveyor  belt  arriving  seat  diner  possible  bread  get  stuck  infinite  loop  task  simulate  process  output  final  position  bread  determine  infinite  loop  mean  type  conveyor  belt  changed  query  performed  separately  meaning  even  bread  got  stuck  infinite  loop  affect  query  input  contains  separated  space  next  contains  character  describing  table  character  next  describes  event  format  consecutive  element  separated  space  guaranteed  character  set  query  type  event  type  output  separated  space  denoting  destination
401/C __label__implementation  __label__greedy  __label__constructive  algorithms  time  olympiad  vanya  egor  decided  make  team  take  part  programming  olympiad  best  friend  ever  since  primary  school  hopefully  somehow  help  teamwork  team  olympiad  vanya  take  play  card  take  card  containing  boy  superstitious  think  well  olympiad  begin  laying  card  row  pair  side  adjacent  card  row  group  consecutive  card  containing  today  vanya  brought  card  card  card  wa  much  friend  know  put  card  described  way  help  find  required  arrangement  card  else  tell  guy  impossible  arrange  card  way  contains  card  containing  card  containing  single  print  required  sequence  without  space  sequence  impossible  obtain  print
578/E __label__greedy  __label__constructive  algorithms  sand  trail  front  alice  home  daytime  people  walk  leave  footprint  trail  every  single  step  alice  distinguish  order  footprint  tell  whether  footprint  made  left  foot  right  foot  certain  people  walking  alternating  left  foot  right  foot  example  suppose  person  walked  trail  left  footprint  footprint  rrlrl  order  along  trail  mean  right  foot  mean  left  foot  might  think  outcome  footprint  strange  fact  step  resulting  walking  backwards  possible  order  step  produce  footprint  suppose  distance  consecutive  step  arbitrarily  long  backward  step  example  separately  alice  interested  footprint  whenever  person  walking  trough  trail  take  picture  footprint  along  trail  erase  next  person  leave  new  set  footprint  know  people  walk  alternating  right  foot  left  foot  know  step  made  left  foot  right  foot  alice  want  know  minimum  possible  backward  step  made  person  little  hard  please  help  alice  calculate  need  construct  possible  history  footprint  containing  string  containing  footprint  order  along  trail  entrance  exit  guaranteed  least  possible  footprint  history  output
580/D __label__dp  kefa  came  restaurant  sat  table  waiter  immediately  brought  menu  dish  kefa  know  need  exactly  dish  want  order  dish  twice  taste  many  dish  possible  kefa  know  dish  give  unit  satisfaction  dish  well  together  dish  well  together  kefa  set  rule  eating  food  following  type  eats  dish  exactly  dish  dish  satisfaction  level  raise  course  parrot  want  get  maximal  possible  satisfaction  going  restaurant  help  hard  task  input  contains  space  separated  dish  menu  portion  kefa  need  eat  get  full  eating  rule  second  contains  space  separated  satisfaction  get  dish  next  rule  rule  described  mean  eat  dish  right  dish  kefa  satisfaction  increase  guaranteed  pair  index  single  output  print  maximum  satisfaction  kefa  get  going  restaurant
1143/A __label__implementation  year  pass  nothing  changed  still  raining  london  black  ha  close  door  home  order  flooded  black  became  nervous  opened  door  another  opened  door  house  exactly  exit  black  house  let  name  left  right  exit  several  door  exit  door  black  house  located  either  left  right  exit  know  door  located  initially  door  closed  black  exit  house  door  least  exit  open  given  sequence  black  opened  door  please  find  smallest  index  black  exit  house  opening  door  note  black  opened  door  end  door  became  open  contains  door  next  contains  sequence  black  opened  door  equal  case  opened  door  located  left  exit  equal  case  right  exit  guaranteed  least  door  located  left  exit  least  door  located  right  exit  print  smallest  black  opened  door  wa  able  exit  house
1086/F __label__math  berland  forest  wa  planted  several  decade  ago  formation  infinite  grid  single  tree  every  cell  tree  grown  form  pretty  dense  structure  dense  actually  fire  became  real  danger  forest  season  abnormally  hot  berland  tree  got  caught  fire  second  fire  started  considered  second  every  second  fire  lit  intact  neightbouring  tree  every  currently  burning  tree  tree  neighbouring  occupies  adjacent  side  corner  cell  luckily  second  berland  fire  department  finally  reached  location  fire  instantaneously  extinguished  want  calculate  destructive  power  fire  let  second  tree  cell  got  caught  fire  destructive  power  sum  burnt  tree  clearly  worker  fire  department  firefighter  programmer  thus  asked  help  calculate  destructive  power  fire  result  rather  big  print  modulo  contains  tree  initially  got  caught  fire  time  fire  department  extinguished  fire  respectively  next  contains  position  tree  initially  got  caught  fire  obviously  position  cell  grid  direction  ax  irrelevant  grid  infinite  answer  depend  guaranteed  given  tree  position  pairwise  distinct  grid  infinite  fire  stop  reach  continues  beyond  border  print  single  sum  burnt  tree  modulo
548/A __label__implementation  __label__brute  force  __label__strings  mike  wa  walking  subway  stuff  back  bag  dropped  ground  several  fax  message  concatenated  string  order  ha  string  sure  back  bag  someone  else  remembered  exactly  message  bag  wa  palindrome  string  string  length  asked  help  tell  ha  worn  back  bag  check  given  string  concatenation  palindrome  length  input  contains  string  containing  lowercase  english  letter  second  contains  print  yes  without  quote  ha  worn  back  bag  without  quote  otherwise
486/C __label__implementation  __label__greedy  __label__brute  force  nam  playing  string  computer  string  consists  lowercase  english  letter  meaningless  nam  decided  make  string  beautiful  make  palindrome  using  arrow  key  left  right  cursor  pointing  symbol  string  suppose  cursor  position  string  us  based  indexing  left  right  arrow  key  used  move  cursor  around  string  string  cyclic  mean  nam  press  left  arrow  key  cursor  move  position  end  string  position  otherwise  hold  press  right  arrow  key  cursor  appears  beginning  string  nam  press  arrow  key  letter  text  cursor  pointing  change  next  letter  english  alphabet  assuming  alphabet  cyclic  follows  hold  press  arrow  key  initially  text  cursor  position  nam  ha  lot  homework  want  complete  fast  possible  help  calculating  minimum  arrow  key  press  make  string  palindrome  contains  space  separated  length  nam  string  initial  position  text  cursor  next  contains  lowercase  character  nam  string  print  minimum  press  needed  change  string  palindrome
749/A __label__math  __label__implementation  __label__greedy  __label__number  theory  bachgold  problem  easy  formulate  given  positive  represent  sum  maximum  possible  prime  prove  representation  exists  greater  recall  called  prime  greater  ha  exactly  positive  divisor  input  contains  single  output  contains  single  maximum  possible  prime  representation
1071/E __label__binary  search  __label__geometry  lot  people  dream  convertible  often  called  cabriolet  convertible  roof  vulnerable  rain  melon  ask  famous  inventor  decided  create  rain  protection  mechanism  convertible  workplace  mechanism  part  plane  driver  functional  part  consists  rail  sliding  endpoint  piece  stretching  rope  sake  simplicity  consider  pair  parallel  segment  plane  rope  segment  whose  endpoint  free  choose  point  rail  segment  algorithmic  part  mechanism  detects  particular  raindrop  predicts  reach  plane  exact  moment  rope  segment  must  raindrop  point  rope  adsorbs  raindrop  given  initial  position  rope  endpoint  information  raindrop  choose  minimal  possible  speed  endpoint  sliding  endpoint  slide  direction  along  segment  independently  way  possible  catch  raindrop  moving  endpoint  speed  greater  find  impossible  matter  high  speed  contains  meaning  raindrop  rail  represented  segment  connecting  connecting  second  contains  meaning  initial  moment  position  endpoint  following  contains  meaning  raindrop  touch  plane  point  time  moment  guaranteed  valid  impossible  catch  raindrop  print
558/D __label__implementation  __label__data  structures  __label__sortings  amr  bought  new  video  game  guess  way  goal  game  find  exit  maze  look  like  perfect  binary  tree  height  player  initially  standing  root  tree  exit  tree  located  leaf  node  let  index  node  tree  root  internal  node  h  left  child  index  right  child  index  level  node  defined  root  level  parent  node  otherwise  vertex  level  called  leaf  exit  maze  located  leaf  node  player  know  exit  ha  guess  way  new  version  game  player  allowed  ask  question  format  doe  ancestor  exit  node  belong  range  ancestor  ancestor  node  located  level  game  answer  yes  game  designed  always  answer  correctly  sometimes  cheat  confuse  player  amr  asked  lot  question  got  confused  answer  asked  help  given  question  answer  identify  whether  game  telling  contradictory  information  information  contradictory  exit  node  determined  uniquely  output  information  contradictory  exit  node  defined  uniquely  output  question  sufficient  otherwise  output  information  contradictory  contains  height  tree  question  respectively  next  n  representing  question  described  statement  answer  answer  yes  answer  information  provided  game  contradictory  output  game  cheated  without  quote
978/F __label__implementation  __label__data  structures  __label__binary  search  bersoft  programmer  work  programmer  characterized  skill  programmer  mentor  programmer  skill  programmer  strictly  greater  skill  programmer  programmer  quarrel  given  skill  programmer  list  pair  programmer  quarrel  pair  unordered  programmer  find  programmer  programmer  mentor  contains  total  programmer  pair  programmer  quarrel  second  contains  sequence  equal  skill  programmer  following  contains  distinct  pair  programmer  quarrel  pair  unordered  mean  quarrel  quarrel  guaranteed  pair  pair  input  print  equal  programmer  programmer  mentor  programmer  numbered  order  skill  given  input
509/F __label__dp  programming  teacher  dmitry  olegovich  going  propose  following  task  test  student  given  tree  vertex  specified  adjacency  matrix  output  following  pseudocode  used  procedure  dfs  print  used  used  dfs  dfs  order  simplify  test  result  checking  procedure  dmitry  olegovich  decided  create  tree  result  favorite  sequence  hand  dmitry  olegovich  want  provide  student  tree  input  otherwise  might  cheat  dmitry  olegovich  trying  find  different  tree  result  running  pseudocode  input  exactly  sequence  help  tree  vertex  called  different  adjacency  matrix  different  exists  pair  contains  positive  length  sequence  second  contains  positive  guaranteed  permutation  word  appears  exactly  sequence  guaranteed  output  tree  satisfying  condition  modulo
689/B __label__greedy  __label__dfs  __label__graphs  recently  mike  wa  busy  studying  exam  contest  going  chill  bit  sight  seeing  city  city  consists  intersection  numbered  mike  start  walking  house  located  intersection  go  along  sequence  intersection  walking  intersection  intersection  requires  unit  energy  total  energy  spent  mike  visit  sequence  intersection  equal  unit  energy  course  walking  would  boring  shortcut  shortcut  special  path  allows  mike  walking  intersection  another  requiring  unit  energy  exactly  shortcut  mike  city  ith  allows  walking  intersection  intersection  iii  opposite  direction  thus  exactly  shortcut  starting  intersection  formally  mike  chooses  sequence  satisfying  pi  apii  mike  spend  unit  energy  instead  walking  intersection  intersection  example  mike  chooses  sequence  p  p  pk  spends  exactly  unit  total  energy  walking  around  going  adventure  mike  asks  find  minimum  amount  energy  required  reach  intersection  home  formally  mike  interested  finding  minimum  possible  total  energy  sequence  contains  mike  city  intersection  second  contains  ii  describing  shortcut  mike  city  allowing  walk  intersection  intersection  using  unit  energy  please  note  shortcut  allow  walking  opposite  direction  print  denotes  least  amount  total  energy  required  walk  intersection  intersection
78/D __label__math  __label__binary  search  __label__geometry  breakthrough  computer  game  civilization  xiii  striking  scale  elaborate  detail  let  take  closer  look  playing  area  game  split  congruent  cell  regular  hexagon  side  cell  equal  unit  occupies  exactly  cell  playing  field  field  considered  infinite  let  take  look  battle  unit  called  archer  archer  ha  parameter  shot  range  positive  determines  radius  circle  archer  hit  target  center  circle  coincides  center  cell  archer  stay  cell  considered  archer  fire  point  cell  including  border  point  located  inside  circle  border  picture  show  border  shot  range  equal  archer  depicted  find  cell  fire  archer  input  contains  single  positive  archer  shot  range  print  single  cell  fire
1132/G __label__dp  __label__data  structures  __label__trees  array  let  denote  greedy  subsequence  sequence  index  minimum  given  array  subsegment  length  calculate  length  longest  greedy  subsequence  contains  length  array  length  subsegments  second  contains  array  print  maximum  length  greedy  subsequence  subsegment  length  correspond  subsegment  second  subsegment
388/E __label__geometry  meteor  shower  sky  meteor  sky  viewed  euclid  plane  meteor  point  plane  fox  ciel  look  sky  find  orbit  meteor  straight  meteor  ha  constant  velocity  ciel  want  know  maximum  meteor  pair  met  position  certain  time  note  time  limited  negative  meteor  never  collide  appear  position  time  contains  next  contains  description  meteor  orbit  time  current  meteor  located  point  time  meteor  located  point  meteor  always  position  time  print  single  maximum  meteor  pair  met  position  certain  time
903/A __label__implementation  __label__greedy  ivan  class  university  finished  want  local  cfk  cafe  eat  fried  chicken  cfk  sell  chicken  chunk  small  large  portion  small  portion  contains  chunk  large  chunk  ivan  want  eat  exactly  chunk  wonder  whether  buy  exactly  amount  chicken  formally  ivan  want  know  choose  non  negative  way  small  portion  large  exactly  chunk  help  ivan  answer  question  several  value  contains  testcases  following  contains  chicken  chunk  ivan  want  eat  print  output  yes  ivan  buy  exactly  chunk  otherwise  print
421/D __label__data  structures  __label__sortings  __label__binary  search  recently  serious  bug  ha  found  fo  code  head  company  want  find  culprit  punish  set  organizational  meeting  issue  bugged  code  coder  meeting  said  know  sure  either  head  company  decided  choose  suspect  invite  office  naturally  consider  coder  opinion  head  want  make  choice  least  coder  agreed  coder  agrees  choice  suspect  least  people  named  meeting  wa  chosen  suspect  many  way  head  choose  suspect  note  even  coder  wa  chosen  suspect  agree  head  choice  named  chosen  coder  meeting  contains  coder  company  minimum  agreed  people  next  contains  coder  named  coder  guaranteed  xi  yi  xii  print  single  possible  suspect  set  note  order  suspect  matter  set  considered  identical
205/B __label__greedy  __label__brute  force  little  elephant  love  sorting  ha  array  consisting  let  array  element  element  denoted  little  elephant  make  move  choose  arbitrary  pair  increase  l  help  little  elephant  find  minimum  move  need  convert  array  arbitrary  array  sorted  non  decreasing  order  array  consisting  element  sorted  non  decreasing  order  aii  hold  contains  single  size  array  next  contains  separated  single  space  array  array  element  listed  order  index  increasing  single  print  single  answer  problem
1198/D __label__dp  square  grid  size  nn  cell  colored  black  others  colored  white  operation  select  rectangle  color  cell  white  cost  max  max  color  rectangle  size  hw  make  cell  white  minimum  total  cost  contains  single  size  square  grid  next  contains  string  length  consisting  character  character  cell  coordinate  black  otherwise  white  print  single  minimum  total  cost  paint  cell  white
601/B __label__math  __label__data  structures  function  called  lipschitz  continuous  real  constant  inequality  hold  deal  discrete  version  term  array  define  lipschitz  constant  follows  n  word  smallest  non  negative  hold  given  array  size  query  form  query  consider  subarray  determine  sum  lipschitz  constant  subarrays  input  contains  space  separated  element  array  query  respectively  second  contains  space  separated  following  describe  query  contains  space  separated  print  answer  query  order  given  input  query  print  containing  single  sum  lipschitz  constant  subarrays
294/E __label__dp  __label__trees  great  shaass  new  king  drakht  empire  empire  ha  city  connected  bidirectional  road  road  ha  specific  length  connects  pair  city  unique  simple  path  connecting  pair  city  majesty  great  shaass  ha  decided  tear  road  build  another  road  length  pair  city  build  road  still  possible  travel  city  city  might  build  road  advisor  help  find  way  make  described  action  find  way  minimize  total  sum  pairwise  distance  city  action  calculate  minimum  sum  input  contains  denoting  city  empire  next  contains  showing  city  connected  using  road  length  ii  output  print  minimum  pairwise  sum  distance  city
1120/E __label__brute  force  positive  given  baron  munchausen  claim  know  positive  multiplies  sum  digit  decrease  time  word  denotes  sum  digit  find  baron  told  true  contains  single  print
630/N __label__math  department  economic  development  city  created  model  city  development  till  year  prepare  report  growth  perspective  required  get  growth  estimate  model  get  growth  estimate  required  solve  quadratic  equation  since  department  economic  development  city  creates  realistic  model  quadratic  equation  ha  solution  moreover  exactly  different  real  root  greater  root  corresponds  optimistic  scenario  smaller  corresponds  pessimistic  help  get  estimate  optimistic  pessimistic  input  contains  coefficient  ax  equation  output  greater  equation  root  second  output  smaller  absolute  relative  error  greater
1045/I __label__strings  learning  lot  space  exploration  little  girl  named  ana  want  change  subject  ana  girl  love  palindrome  string  read  backwards  forward  ha  learned  check  given  string  whether  palindrome  soon  grew  tired  problem  came  interesting  need  help  solve  given  array  string  consist  small  letter  alphabet  task  find  many  palindrome  pair  array  palindrome  pair  pair  string  following  condition  hold  least  permutation  concatenation  string  palindrome  word  string  let  say  aab  abcac  concatenate  aababcac  check  exists  permutation  new  string  palindrome  case  exists  permutation  aabccbaa  pair  considered  different  string  located  different  index  pair  string  index  considered  pair  contains  positive  representing  length  input  array  eacg  next  contains  string  consisting  lowercase  english  letter  element  input  array  total  character  input  array  le  output  representing  many  palindrome  pair  array
396/A __label__math  __label__number  theory  given  product  task  find  distinct  decomposition  product  ordered  positive  decomposition  product  given  input  must  considered  answer  answer  large  print  modulo  contains  positive  second  contains  space  separated  single  print  single  distinct  decomposition  ordered  multiplier  modulo
832/A __label__math  school  day  sasha  like  class  always  bored  day  invents  game  play  alone  friend  today  invented  simple  game  play  lena  share  desk  rule  simple  sasha  draw  stick  row  player  take  turn  crossing  exactly  stick  left  right  turn  sasha  move  inventor  game  le  stick  paper  turn  game  end  sasha  win  make  strictly  move  lena  sasha  want  know  result  game  playing  help  contains  k  stick  drawn  sasha  stick  crossed  turn  sasha  win  print  yes  without  quote  otherwise  print  without  quote
931/A __label__math  __label__implementation  __label__greedy  __label__brute  force  friend  coordinate  axis  point  coordinate  point  another  point  friend  move  along  direction  unlimited  time  friend  move  tiredness  friend  change  according  following  rule  move  increase  tiredness  second  move  increase  tiredness  third  example  friend  move  left  right  returning  point  left  tiredness  becomes  equal  friend  want  meet  point  determine  minimum  total  tiredness  gain  meet  point  contains  single  initial  position  friend  second  contains  single  initial  position  second  friend  guaranteed  print  minimum  possible  total  tiredness  friend  meet  point
568/C __label__greedy  living  byteland  wa  good  enough  begin  good  king  decided  please  subject  introduce  national  language  gathered  best  wise  men  sent  expedition  faraway  country  would  find  language  designed  time  wise  men  returned  trip  even  wiser  locked  month  dining  room  said  king  lot  different  language  almost  letter  divided  vowel  consonant  word  vowel  consonant  must  combined  correctly  many  rule  exception  language  deprived  defect  propose  introduce  set  formal  rule  combining  vowel  consonant  include  language  word  satisfy  rule  composing  word  letter  divided  vowel  consonant  certain  way  word  length  exactly  rule  form  po  rule  position  po  ha  letter  type  position  po  ha  letter  type  given  string  length  necessarily  correct  word  new  language  word  language  lexicographically  smaller  string  find  minimal  lexicographic  order  contains  single  consisting  letter  vowel  consonant  determining  letter  vowel  letter  consonant  length  string  size  alphabet  new  language  letter  english  alphabet  used  letter  alphabet  new  language  character  string  equal  corresponding  letter  vowel  otherwise  consonant  second  contains  n  letter  single  word  rule  correspondingly  next  describe  rule  language  following  format  po  po  last  contains  string  length  consisting  small  letter  english  alphabet  guaranteed  rule  print  smallest  word  language  lexicographically  smaller  word  doe  exist  example  language  ha  word  print  without  quote
467/D __label__dp  __label__dfs  __label__graphs  __label__strings  helped  fedor  find  friend  call  soldier  game  stopped  studying  completely  today  english  teacher  told  prepare  essay  fedor  want  prepare  essay  asked  alex  help  alex  came  help  wrote  essay  fedor  fedor  like  essay  fedor  going  change  essay  using  synonym  dictionary  english  language  fedor  doe  want  change  meaning  essay  change  would  change  word  essay  synonym  basing  replacement  rule  dictionary  fedor  perform  operation  time  result  fedor  want  get  essay  contains  little  letter  case  matter  possible  multiple  essay  minimum  want  get  minimum  length  length  essay  sum  length  word  help  fedor  get  required  essay  please  note  problem  case  letter  matter  example  synonym  dictionary  say  word  cat  replaced  word  dog  allowed  replace  word  cat  word  dog  contains  single  word  initial  essay  second  contains  word  essay  word  separated  single  space  guaranteed  total  length  word  exceed  character  next  contains  single  pair  word  synonym  dictionary  next  contains  space  separated  non  empty  word  mean  word  replaced  word  vise  versa  guaranteed  total  length  pair  synonym  exceed  character  word  input  consist  uppercase  lowercase  letter  english  alphabet  print  minimum  letter  optimal  essay  minimum  length  optimal  essay
1195/D1 __label__math  __label__number  theory  problem  differs  next  presence  constraint  equal  length  actually  problem  subtask  problem  contest  solution  solves  subtask  team  si  student  going  make  trip  submarine  target  ancient  treasure  sunken  ship  lying  bottom  great  rybinsk  sea  unfortunately  student  know  coordinate  ship  asked  meshanya  hereditary  mage  help  agreed  help  solve  problem  let  denote  function  alternate  digit  digit  written  decimal  notation  without  leading  word  function  alternately  shuffle  digit  writing  lowest  digit  older  starting  result  function  built  right  left  lower  digit  older  digit  argument  ended  remaining  digit  argument  written  familiarize  example  formal  definition  function  example  formally  mishanya  give  array  consisting  array  equal  length  consist  digit  task  help  student  calculate  modulo  input  contains  single  element  array  second  input  contains  element  array  equal  length  consist  digit  print  answer  modulo
1169/B __label__implementation  __label__graphs  toad  ivan  ha  pair  inclusive  pair  asks  check  exist  given  pair  least  equal  contains  space  separated  upper  bound  value  pair  given  pair  next  contains  space  separated  pair  output  yes  exist  given  pair  least  equal  otherwise  print  print  letter  case  upper  lower
1085/G __label__dp  __label__data  structures  petya  collect  beautiful  matrix  matrix  size  nn  beautiful  element  matrix  every  row  matrix  element  row  different  every  pair  vertically  adjacent  element  element  different  today  petya  bought  beautiful  matrix  size  nn  want  determine  rarity  rarity  matrix  index  list  beautiful  matrix  size  nn  sorted  lexicographical  order  matrix  comparison  done  row  row  index  lexicographically  smallest  matrix  since  beautiful  matrix  huge  petya  want  calculate  rarity  matrix  modulo  contains  row  column  next  contains  element  guaranteed  beautiful  matrix  print  rarity  matrix  taken  modulo
859/C __label__dp  heard  pie  rule  state  people  wish  fairly  share  slice  pie  person  cut  slice  half  person  choose  get  slice  alice  bob  many  slice  pie  rather  cutting  slice  half  individual  slice  eaten  person  way  alice  bob  decide  eats  slice  follows  order  pie  handed  decided  special  token  called  decider  token  initially  held  bob  pie  handed  whoever  ha  decider  token  give  next  slice  pie  participant  decider  token  participant  continue  slice  pie  left  slice  excellent  quality  participant  obviously  want  maximize  total  amount  pie  get  eat  assuming  player  make  decision  optimally  much  pie  participant  receive  begin  slice  pie  following  indicating  size  slice  inclusive  order  must  handed  print  sum  size  slice  eaten  alice  sum  size  slice  eaten  bob  assuming  player  make  decision  optimally
1067/E __label__math  __label__dp  __label__trees  let  define  rank  undirected  graph  rank  adjacency  matrix  nn  given  tree  edge  tree  deleted  probability  deletion  independent  let  expected  rank  resulting  forest  find  modulo  easy  show  input  contains  vertex  next  contains  index  vertex  connected  edge  guaranteed  given  graph  tree  print  answer  problem
1245/F __label__dp  __label__brute  force  spring  cleaning  daniel  found  old  calculator  love  much  seems  like  broken  try  compute  using  calculator  get  instead  try  computing  get  correct  answer  puzzled  mystery  opened  calculator  found  answer  riddle  full  adder  became  half  adder  try  compute  sum  using  calculator  instead  get  xorsum  read  definition  link  http  wikipedia  org  wiki  exclusiveor  saw  earlier  calculator  sometimes  give  correct  answer  wonder  given  many  pair  satisfy  following  condition  l  l  l  l  daniel  barman  going  bar  return  hour  tell  solve  problem  return  else  enjoy  blocked  contains  single  testcases  follow  containing  space  separated  print  answer  testcase
600/B __label__data  structures  __label__sortings  __label__binary  search  given  array  element  second  array  find  element  array  le  equal  value  contains  size  array  second  contains  element  array  third  contains  element  array  j  print  separated  space  equal  element  array  le  equal  value
441/C __label__implementation  __label__dfs  __label__constructive  algorithms  valera  ha  got  rectangle  table  consisting  row  column  valera  numbered  table  row  starting  top  bottom  column  starting  left  right  represent  cell  intersection  row  column  pair  valera  want  place  exactly  tube  rectangle  table  tube  sequence  table  cell  r  following  equation  hold  table  cell  belongs  tube  must  occur  exactly  sequence  valera  think  tube  arranged  fancy  manner  following  condition  fulfilled  pair  tube  ha  common  cell  cell  table  belongs  tube  help  valera  arrange  tube  rectangle  table  fancy  manner  contains  space  separated  k  row  column  tube  correspondingly  print  print  description  tube  print  tube  cell  print  ri  xi  iri  iri  sequence  table  cell
282/A __label__implementation  classic  programming  language  bitland  bit  language  peculiar  complicated  language  peculiar  ha  exactly  variable  called  operation  operation  increase  value  variable  operation  decrease  value  variable  statement  language  bit  sequence  consisting  exactly  operation  variable  statement  written  without  space  character  executing  statement  mean  applying  operation  contains  programme  bit  sequence  statement  need  executed  executing  programme  mean  executing  statement  contains  given  programme  language  bit  initial  value  execute  programme  find  final  value  value  variable  programme  executed  contains  single  statement  programme  next  statement  statement  contains  exactly  operation  exactly  variable  denoted  letter  thus  empty  statement  operation  variable  written  order  print  single  final  value
1165/E __label__math  __label__greedy  __label__sortings  given  array  length  let  define  function  l  task  reorder  element  choose  arbitrary  order  element  array  minimize  value  since  answer  large  print  modulo  note  minimize  answer  remainder  input  contains  element  second  input  contains  element  third  input  contains  element  print  minimum  possible  value  rearranging  element  taken  modulo  note  minimize  answer  remainder
995/D __label__math  allen  bessie  playing  simple  game  know  function  function  take  binary  argument  return  real  value  start  game  variable  set  round  equal  probability  allen  bessie  get  make  move  move  consists  picking  either  setting  round  variable  set  game  value  resolve  allen  want  maximize  game  value  bessie  want  minimize  goal  help  allen  bessie  find  expected  game  value  play  time  though  game  exactly  value  change  word  round  find  expected  game  value  beginning  change  contains  next  contains  denoting  initial  value  specifically  binary  next  contains  binary  mean  set  print  denotes  value  game  round  answer  must  absolute  relative  error
963/E __label__math  chip  wa  placed  field  coordinate  system  onto  point  every  second  chip  move  randomly  chip  currently  point  second  move  point  probability  point  probability  point  probability  point  probability  guaranteed  move  independent  find  expected  time  chip  move  away  origin  distance  greater  satisfied  contains  probability  calculated  using  formula  shown  answer  problem  always  rational  form
388/C __label__greedy  __label__sortings  fox  ciel  playing  card  game  friend  fox  jiro  pile  card  table  positive  card  player  take  turn  ciel  take  turn  ciel  turn  take  card  top  non  empty  pile  jiro  turn  take  card  bottom  non  empty  pile  player  want  maximize  total  sum  card  took  game  end  pile  become  empty  suppose  ciel  jiro  play  optimally  score  game  next  contains  description  pile  card  pile  follow  positive  csi  k  sequence  card  listed  top  current  pile  bottom  pile  print  sum  ciel  card  sum  jiro  card  play  optimally
1065/G __label__strings  let  denote  sequence  fibonacci  string  plus  sign  denotes  concatenation  string  let  denote  lexicographically  sorted  sequence  suffix  string  example  following  sequence  element  sequence  numbered  task  print  character  element  le  character  suffix  output  whole  suffix  input  contains  denoting  index  fibonacci  string  consider  index  element  character  output  respectively  guaranteed  doe  exceed  length  output  character  element  whole  element  length  le
870/E __label__dfs  __label__graphs  __label__trees  given  distinct  point  plane  integral  coordinate  point  either  draw  vertical  draw  horizontal  nothing  consider  several  coinciding  straight  single  many  distinct  picture  get  print  answer  modulo  contains  single  point  follow  contains  coordinate  point  guaranteed  point  distinct  print  possible  distinct  picture  modulo
438/E __label__number  theory  child  like  computer  science  much  especially  like  binary  tree  consider  sequence  distinct  positive  child  call  vertex  weighted  rooted  binary  tree  good  every  vertex  weight  set  child  think  weight  vertex  weighted  tree  sum  vertex  weight  given  calculate  good  vertex  weighted  rooted  binary  tree  weight  please  check  sample  better  understanding  tree  considered  different  want  know  answer  modulo  prime  contains  second  contains  space  separated  pairwise  distinct  print  containing  single  must  good  vertex  weighted  rooted  binary  tree  whose  weight  exactly  equal  print  answer  modulo  prime
105/E __label__brute  force  given  straight  half  divided  segment  unit  length  call  position  position  numbered  positive  start  end  half  distance  position  absolute  difference  respective  laharl  etna  flonne  occupy  position  half  want  get  position  largest  possible  originally  placed  different  position  character  perform  following  action  move  certain  distance  grab  another  character  lift  head  throw  lifted  character  certain  distance  character  ha  movement  range  parameter  move  free  position  assuming  distance  position  exceed  movement  range  character  lift  another  character  distance  character  equal  already  hold  another  character  assume  lifted  character  move  position  person  ha  lifted  position  stood  becomes  free  lifted  character  perform  action  character  hold  walk  character  ha  throwing  range  parameter  distance  character  throw  lifted  head  throw  character  free  position  lifted  character  accept  situation  person  grab  another  turn  ha  third  character  hand  form  column  character  example  laharl  hold  etna  etna  hold  flonne  case  etna  flonne  perform  action  laharl  throw  etna  together  flonne  distance  laharl  etna  flonne  perform  action  order  perform  action  turn  action  time  determine  maximum  position  least  character  reach  maximal  character  reach  position  contains  laharl  position  movement  range  throwing  range  second  third  describe  etna  flonne  parameter  correspondingly  similar  form  guaranteed  character  occupy  distinct  position  input  inclusive  print  single  maximum  ordinal  position  either  laharl  etna  flonne  reach
1244/A __label__math  tomorrow  difficult  day  polycarp  ha  attend  lecture  practical  class  university  since  polycarp  diligent  student  going  attend  preparing  university  polycarp  wonder  whether  take  enough  writing  implement  write  lecture  draw  everything  ha  practical  class  polycarp  writes  lecture  using  pen  use  pencil  write  lecture  write  lecture  using  pen  run  ink  practical  class  polycarp  draw  blueprint  pencil  use  pen  draw  blueprint  pencil  enough  draw  blueprint  practical  class  unusable  polycarp  pencilcase  hold  writing  implement  polycarp  want  take  pen  pencil  fit  pencilcase  polycarp  want  know  many  pen  pencil  take  help  determine  tell  pencilcase  enough  room  implement  need  tomorrow  note  minimize  writing  implement  though  total  must  exceed  input  contains  test  case  input  test  case  follow  test  case  described  containing  separated  space  k  lecture  polycarp  ha  attend  practical  class  polycarp  ha  attend  lecture  written  using  pen  practical  class  pencil  enough  writing  implement  fit  polycarp  pencilcase  respectively  hack  allowed  use  test  case  input  satisfied  test  case  print  answer  follows
625/D __label__math  __label__implementation  __label__constructive  algorithms  vitya  studying  third  grade  last  math  lesson  pupil  wrote  arithmetic  quiz  vitya  clever  boy  managed  finish  task  pretty  fast  oksana  fillipovna  gave  new  much  harder  let  denote  flip  operation  follows  considered  decimal  notation  reverted  leading  afterwards  thrown  away  example  flip  result  flipping  obtain  flipping  come  oksana  fillipovna  picked  without  leading  flipped  get  summed  told  vitya  resulting  value  goal  find  valid  oksana  fillipovna  picked  small  vitya  managed  find  answer  pretty  fast  became  interested  finding  general  algorithm  deal  problem  want  write  program  given  find  without  leading  determine  exist  input  contains  single  positive  without  leading  print  otherwise  print  valid  many  possible  answer  allowed  pick
515/A __label__math  someday  drazil  wanted  date  varda  drazil  varda  live  cartesian  plane  drazil  home  located  point  varda  home  located  point  step  move  unit  distance  horizontal  vertical  direction  word  position  position  unfortunately  drazil  sense  direction  randomly  chooses  direction  step  accidentally  return  back  house  travel  drazil  even  notice  ha  arrived  continue  travelling  luckily  drazil  arrived  position  successfully  drazil  said  varda  took  exactly  step  travel  house  varda  confused  word  sure  possible  get  exactly  step  find  possible  varda  given  single  think  drazil  made  mistake  impossible  take  exactly  step  get  home  varda  home  print  without  quote
1025/C __label__implementation  __label__constructive  algorithms  anything  better  going  zoo  tiresome  week  work  wonder  grisha  feel  spending  entire  weekend  accompanied  pretty  striped  zebra  inspired  adventure  accidentally  found  plasticine  pack  represented  sequence  black  white  stripe  grisha  want  select  several  consequent  contiguous  piece  alternating  color  create  zebra  let  call  selected  piece  length  zebra  assembling  zebra  grisha  make  following  operation  time  split  sequence  place  part  revers  stick  together  example  grisha  ha  piece  order  bwbbw  denotes  black  strip  denotes  white  strip  split  sequencebbw  vertical  bar  represents  cut  reverse  part  obtain  wbwbb  determine  maximum  possible  length  zebra  grisha  produce  contains  string  denotes  length  string  comprised  lowercase  english  letter  denotes  white  piece  denotes  black  piece  print  single  maximum  possible  zebra  length
526/B __label__implementation  __label__greedy  __label__dfs  nom  main  character  game  cut  rope  bright  little  monster  like  visiting  friend  living  side  park  dark  old  park  scare  even  somebody  fearless  nom  asks  help  park  consists  square  connected  road  scheme  park  full  binary  tree  depth  formally  entrance  park  located  square  exit  park  located  square  exit  lead  straight  nom  friend  house  square  road  square  thus  possible  park  entrance  exit  walking  along  exactly  road  light  path  road  evening  park  keeper  installed  street  light  along  road  road  lead  square  square  ha  light  nom  love  counting  light  way  friend  nom  afraid  spider  live  park  like  walk  along  road  enough  lit  want  way  friend  total  light  make  feel  safe  asked  help  install  additional  light  determine  minimum  light  needed  additionally  place  park  road  path  entrance  exit  park  contains  street  light  add  arbitrary  street  light  road  contains  road  path  entrance  exit  next  contains  n  initial  street  light  road  park  street  light  road  square  positive  exceeding  print  minimum  street  light  add  road  park  make  nom  feel  safe
600/E __label__data  structures  __label__dfs  __label__trees  given  rooted  tree  root  vertex  vertex  coloured  colour  let  call  colour  dominating  subtree  vertex  colour  appear  subtree  vertex  time  colour  possible  colour  dominating  subtree  vertex  subtree  vertex  vertex  vertex  contains  vertex  path  root  vertex  find  sum  dominating  colour  subtree  vertex  contains  vertex  tree  second  contains  colour  vertex  next  contains  j  j  edge  tree  vertex  root  tree  print  sum  dominating  colour  vertex
877/B __label__dp  __label__brute  force  day  nikita  found  string  containing  letter  nikita  think  string  beautiful  cut  string  possibly  empty  without  changing  order  letter  letter  contains  letter  nikita  want  make  string  beautiful  removing  possibly  none  character  without  changing  order  maximum  length  string  get  contains  non  empty  string  length  greater  containing  lowercase  english  letter  print  single  maximum  possible  size  beautiful  string  nikita  get
613/D __label__dp  __label__sortings  __label__dfs  __label__graphs  __label__trees  meanwhile  kingdom  getting  ready  marriage  king  daughter  order  lose  face  front  relative  king  finish  reform  kingdom  king  wait  daughter  marriage  reform  must  finished  soon  possible  kingdom  currently  consists  city  city  connected  bidirectional  road  get  city  city  king  save  lot  path  city  point  reform  key  ministry  state  relocated  distinct  city  call  city  important  due  fact  high  risk  attack  barbarian  must  done  carefully  king  ha  made  several  plan  described  set  important  city  wonder  best  plan  barbarian  capture  city  important  important  enough  protection  sure  captured  city  becomes  impassable  particular  interesting  feature  plan  minimum  city  barbarian  need  capture  order  make  important  city  isolated  important  city  would  impossible  reach  important  city  help  king  calculate  characteristic  plan  input  contains  city  kingdom  next  contains  distinct  index  city  connected  road  guaranteed  get  city  moving  along  existing  road  next  contains  single  king  plan  next  look  follows  go  important  city  king  plan  follow  exactly  space  separated  pairwise  distinct  important  city  plan  sum  doe  exceed  plan  print  single  minimum  city  barbarian  need  capture  print  barbarian  attempt  isolate  important  city  effective
1105/D __label__implementation  __label__dfs  __label__graphs  kilani  playing  game  friend  game  represented  grid  size  nm  cell  either  empty  blocked  every  player  ha  castle  cell  castle  cell  game  played  round  round  player  expand  turn  turn  firstly  player  expands  second  player  expands  expansion  happens  follows  castle  player  owns  try  expand  empty  cell  nearby  player  expand  cell  castle  empty  cell  possible  reach  player  expansion  speed  move  left  right  without  going  blocked  cell  cell  occupied  player  castle  player  examines  set  cell  expand  build  castle  turned  passed  next  player  game  end  player  make  move  given  game  field  speed  expansion  player  kilani  want  know  player  many  cell  control  castle  game  end  contains  size  grid  player  second  contains  speed  expansion  every  player  following  describe  game  grid  consists  symbol  denotes  empty  cell  denotes  blocked  cell  digit  denotes  castle  owned  player  guaranteed  player  ha  least  castle  grid  print  cell  controlled  player  game  end
413/D __label__dp  programmer  company  love  playing  day  decided  invent  simplified  version  game  stripe  imagine  infinite  direction  stripe  consisting  unit  square  side  square  equal  height  stripe  square  either  empty  initially  square  empty  infinity  unit  square  appears  player  press  button  appeared  begin  move  towards  beginning  stripe  let  assume  move  beginning  stripe  stop  either  get  square  stripe  square  preceded  square  point  time  get  square  add  result  new  continues  moving  beginning  stripe  rule  final  stop  moving  process  infinity  get  new  process  repeat  read  note  test  sample  better  understand  moving  strategy  guess  understood  game  progress  fully  depends  order  appear  let  look  sequence  game  assume  sequence  winning  result  least  square  getting  greater  equal  goal  game  make  winning  sequence  everything  simple  sequence  identified  beforehand  given  sequence  consisting  count  many  way  replace  sequence  get  winning  sequence  contains  next  contains  sequence  either  print  single  way  replace  get  winning  sequence  rather  large  print  modulo
494/C __label__dp  malek  rich  man  generous  decided  split  money  poor  people  charity  institute  know  poor  people  numbered  institute  gave  malek  recommendation  recommendation  segment  people  like  mean  institute  recommended  malek  give  dollar  every  person  whose  segment  charity  ha  odd  rule  recommendation  rule  recommendation  given  way  every  recommendation  following  condition  hold  segment  completely  disjoint  formally  either  c  segment  inside  another  formally  either  c  goodness  charity  value  maximum  money  person  ha  malek  finish  giving  money  institute  know  recommendation  probability  malek  accept  want  know  expected  value  goodness  charity  asked  help  given  list  recommendation  recommendation  probability  accepted  malek  given  much  money  person  initially  ha  must  find  expected  value  goodness  space  separated  given  second  space  separated  given  meaning  person  initially  ha  dollar  next  contains  space  separated  ii  describing  segment  recommendation  real  given  exactly  digit  decimal  point  equal  probability  malek  accepting  recommendation  note  segment  appear  several  time  recommendation  output  sought  value  answer  considered  correct  absolute  relative  error  le
906/C __label__dp  __label__graphs  __label__brute  force  arseny  like  organize  party  invite  people  friend  come  party  friend  friend  friend  friend  friend  arseny  guest  unknown  decided  fix  issue  using  following  procedure  step  selects  guest  pairwise  introduces  friend  action  friend  become  friend  process  run  pair  guest  friend  arseny  want  spend  much  time  want  finish  process  using  minimum  step  help  arseny  contains  guest  party  including  arseny  pair  people  friend  next  contains  u  mean  people  friend  initially  guaranteed  pair  friend  described  graph  friendship  connected  print  minimum  step  required  make  pair  guest  friend
1194/D __label__math  alice  bob  play  game  paper  strip  divided  cell  numbered  left  right  starting  chip  placed  cell  last  player  take  turn  alice  player  turn  ha  move  chip  cell  left  chip  currently  cell  player  move  cell  chip  leave  border  paper  strip  impossible  example  move  cell  left  current  cell  ha  player  make  move  loses  game  win  participant  play  optimally  alice  bob  would  like  play  several  game  determine  winner  game  contains  single  game  next  game  per  game  independent  next  contains  length  strip  constant  denoting  third  move  respectively  game  print  alice  alice  win  game  bob  otherwise
704/C __label__math  __label__dp  __label__implementation  __label__graphs  natalia  romanova  trying  test  something  new  gun  gave  order  determine  result  test  need  find  answer  certain  equation  equation  form  represents  logical  represents  logical  exclusive  xor  boolean  variable  negation  natalia  call  left  side  equation  xnf  formula  statement  bracket  called  clause  called  literal  equation  natalia  ha  left  side  actually  xnf  containing  variable  negation  xnf  formula  xnf  ki  size  clause  exceed  variable  occurs  formula  time  negation  without  negation  total  please  note  possible  variable  occurs  twice  negation  occur  clause  vice  versa  natalia  given  formula  variable  consisting  clause  please  make  sure  check  sample  order  properly  understand  formula  look  like  natalia  fight  theory  asked  tell  answer  equation  precisely  need  find  way  set  true  false  total  way  equation  satisfied  since  extremely  large  need  print  answer  modulo  please  note  variable  appear  twice  clause  appear  equation  still  setting  false  true  give  different  way  set  variable  input  contains  clause  variable  respectively  next  formula  start  literal  clause  followed  non  xai  otherwise  negation  print  answer  modulo
107/A __label__dfs  __label__graphs  german  university  cairo  guc  dorm  house  numbered  underground  water  pipe  connect  house  together  pipe  ha  certain  direction  water  flow  direction  vice  versa  diameter  characterizes  maximal  amount  water  handle  house  pipe  going  pipe  going  new  semester  starting  guc  student  dorm  resident  lulu  want  install  tank  tap  dorm  every  house  outgoing  water  pipe  without  incoming  water  pipe  lulu  install  water  tank  house  every  house  incoming  water  pipe  without  outgoing  water  pipe  lulu  install  water  tap  house  tank  house  convey  water  house  sequence  pipe  tank  accordingly  tap  house  receive  water  originating  tank  house  order  avoid  pipe  bursting  week  later  like  happened  last  semester  lulu  ha  consider  diameter  pipe  amount  water  tank  conveys  exceed  diameter  pipe  connecting  tank  corresponding  tap  lulu  want  find  maximal  amount  water  safely  conveyed  tank  corresponding  tap  contains  space  separated  house  pipe  correspondingly  follow  description  pipe  contains  indicating  pipe  diameter  going  house  house  ii  guaranteed  house  pipe  going  pipe  going  print  tank  tap  pair  house
714/B __label__implementation  __label__sortings  today  hedgehog  filya  went  school  time  teacher  gave  homework  filya  wa  unable  complete  without  help  filya  given  array  non  negative  pick  add  element  array  subtract  element  change  element  want  element  array  equal  wonder  possible  pick  change  element  array  using  order  make  element  equal  input  contains  filya  array  second  contains  element  array  impossible  make  element  array  equal  using  process  given  problem  statement  print  without  quote  output  otherwise  print  yes  without  quote
865/G __label__math  piegirl  birthday  soon  pieguy  ha  decided  buy  bouquet  flower  basket  chocolate  flower  shop  ha  different  type  flower  available  type  flower  always  ha  exactly  petal  pieguy  ha  decided  buy  bouquet  consisting  exactly  flower  buy  type  flower  multiple  time  flower  arranged  bouquet  position  flower  bouquet  matter  think  bouquet  ordered  list  flower  type  chocolate  shop  sell  chocolate  box  different  type  box  available  type  box  contains  piece  chocolate  pieguy  buy  box  buy  type  box  multiple  time  place  box  basket  position  box  basket  matter  think  basket  ordered  list  box  type  pieguy  know  piegirl  like  pluck  petal  flower  eating  piece  chocolate  would  like  ensure  eats  last  piece  chocolate  last  box  plucking  last  petal  last  flower  total  petal  flower  bouquet  equal  total  piece  chocolate  box  basket  many  different  bouquet  basket  combination  pieguy  buy  answer  large  compute  modulo  input  type  flower  type  box  flower  must  bouquet  respectively  second  input  petal  flower  type  third  input  piece  chocolate  box  type  print  bouquet  basket  combination  pieguy  buy  modulo
798/A __label__constructive  algorithms  __label__brute  force  __label__strings  mike  ha  string  consisting  lowercase  english  letter  want  change  exactly  character  string  resulting  palindrome  palindrome  string  read  backward  forward  example  string  aaa  aba  abccba  palindrome  string  codeforces  reality  single  contains  string  print  yes  without  quote  mike  change  exactly  character  resulting  string  palindrome  without  quote  otherwise
682/A __label__math  __label__constructive  algorithms  __label__number  theory  finishing  eating  bun  alyona  came  decided  write  column  column  containing  second  containing  girl  want  count  many  pair  choose  column  second  column  sum  divisible  formally  alyona  want  count  pair  equal  usual  alyona  ha  trouble  asks  help  input  contains  print  pair  divisible
939/E __label__greedy  __label__binary  search  given  multiset  consisting  positive  initially  empty  kind  query  add  positive  newly  added  le  find  subset  set  value  maximum  possible  max  mean  maximum  value  element  average  value  output  maximum  possible  value  contains  single  query  next  contains  description  query  query  type  given  add  guaranteed  le  query  type  single  given  guaranteed  query  ha  type  empty  query  type  come  output  answer  query  second  type  order  query  given  input  printed  separate
777/C __label__dp  __label__implementation  __label__greedy  __label__data  structures  __label__binary  search  lesson  small  girl  alyona  work  famous  spreadsheet  computer  program  learns  edit  table  ha  table  filled  table  consists  row  column  denote  located  row  column  say  table  sorted  non  decreasing  order  column  teacher  gave  alyona  task  task  given  alyona  ha  answer  following  question  keep  row  inclusive  deletes  others  table  sorted  non  decreasing  order  least  column  formally  doe  exist  inclusive  alyona  small  deal  task  asks  help  input  contains  positive  row  column  table  respectively  note  given  constraint  bound  product  element  table  following  contains  stand  next  input  contains  task  teacher  gave  alyona  next  contains  ii  print  yes  output  table  consisting  row  inclusive  sorted  non  decreasing  order  least  column  otherwise  print
1184/A3 __label__math  __label__number  theory  heidi  ready  crack  madame  kovarian  hashing  function  madame  kovarian  ha  strict  set  rule  name  change  name  interchanged  using  following  hashing  function  result  collision  hashing  function  parametrized  always  find  set  parameter  cause  collision  heidi  decided  exploit  advantage  given  string  equal  length  consisting  lowercase  english  letter  consider  standard  polynomial  hashing  function  mod  prime  goal  find  prime  string  sampled  independently  random  string  length  lowercase  english  letter  contains  second  third  respectively  word  sampled  independently  random  string  length  lowercase  english  letter  output
466/E __label__dfs  __label__graphs  __label__trees  employee  working  company  let  convenience  initially  employee  relationship  next  day  following  event  took  place  either  employee  became  bos  employee  employee  bos  employee  get  packet  document  sign  give  packet  bos  bos  sign  document  give  bos  last  person  sign  document  sends  archive  come  request  type  determine  whether  employee  sign  certain  document  task  write  program  given  event  answer  query  described  type  guaranteed  throughout  whole  working  time  company  cyclic  dependency  contains  employee  event  next  contains  description  event  event  given  chronological  order  determines  type  event  next  follow  company  employee  guaranteed  employee  bos  currently  next  follow  employee  got  document  packet  next  follow  packet  already  given  employee  document  packet  need  find  information  document  packet  numbered  started  chronological  order  guaranteed  input  ha  least  query  third  type  query  third  type  print  yes  employee  signed  document  package  otherwise  print  word  without  quote
960/G __label__math  __label__dp  japate  traveling  forest  mala  saw  bag  gold  lying  row  bag  ha  distinct  weight  gold  japate  carry  bag  gold  us  following  strategy  choose  bag  initially  start  empty  bag  weight  considers  bag  order  current  bag  ha  higher  weight  bag  hand  pick  current  bag  japate  put  bag  order  japate  realizes  pick  bag  start  picking  bag  front  pick  bag  start  picking  bag  back  picking  mean  replacing  bag  hand  current  wonder  many  permutation  bag  possible  pick  bag  front  bag  back  using  strategy  since  answer  large  output  modulo  input  contains  space  separated  output  single  valid  permutation  modulo
375/D __label__data  structures  __label__dfs  __label__trees  rooted  tree  consisting  vertex  vertex  tree  ha  color  assume  tree  vertex  numbered  represent  color  vertex  tree  root  vertex  problem  need  answer  query  query  described  answer  query  color  vertex  subtree  vertex  contains  least  vertex  color  find  definition  rooted  tree  following  link  http  wikipedia  org  wiki  tree  graphtheory  contains  next  contains  sequence  next  edge  tree  contains  aii  vertex  connected  edge  tree  next  query  contains  j  j  print  answer  query  order  query  appear  input
71/C __label__math  __label__dp  __label__number  theory  knight  sitting  round  table  equal  distance  either  good  bad  mood  merlin  wizard  predicted  king  arthur  next  month  turn  particularly  fortunate  regular  polygon  found  vertex  polygon  knight  good  mood  located  otherwise  next  month  bring  misfortune  convex  polygon  regular  side  length  angle  equal  problem  consider  regular  polygon  least  vertex  nondegenerated  picture  example  polygon  present  green  point  mean  knight  good  mood  red  point  mean  bad  mood  king  arthur  know  knight  mood  help  find  next  month  fortunate  contains  knight  round  table  second  contains  space  separated  mood  knight  order  passing  around  table  mean  knight  good  mood  mean  bad  mood  print  yes  without  quote  following  month  turn  lucky  otherwise  print
1180/A __label__math  __label__dp  __label__implementation  playing  geometric  figure  alex  ha  accidentally  invented  concept  order  rhombus  cell  grid  order  rhombus  square  cell  order  rhombus  obtains  order  rhombus  adding  cell  common  side  look  picture  understand  better  alex  asks  compute  cell  order  rhombus  input  contains  order  rhombus  whose  cell  computed  print  exactly  cell  order  rhombus
1030/B __label__geometry  vasya  owns  cornfield  defined  cornfield  represented  rectangle  vertex  cartesian  coordinate  example  cornfield  vasya  know  grasshopper  near  field  maybe  even  inside  grasshopper  point  vasya  doe  like  grasshopper  eat  corn  grasshopper  want  know  whether  position  inside  cornfield  including  border  outside  help  vasya  grasshopper  determine  inside  field  including  border  contains  n  second  contains  single  grasshopper  next  contains  position  grasshopper  print  yes  position  grasshopper  lie  inside  border  cornfield  otherwise
712/B __label__implementation  __label__strings  memory  performing  walk  dimensional  plane  starting  origin  given  string  direction  motion  indicates  move  unit  left  indicates  move  unit  right  indicates  move  unit  indicates  move  unit  memory  want  end  origin  ha  special  trident  trident  replace  character  want  wear  trident  want  make  minimum  edits  possible  please  tell  memory  minimum  change  need  make  produce  string  walked  end  origin  string  contains  string  instruction  memory  given  string  satisfying  condition  output  single  minimum  edits  required  case  possible  change  sequence  way  bring  memory  origin  output
424/A __label__implementation  pasha  ha  many  hamster  make  work  today  hamster  even  came  work  hamster  lined  hamster  either  sat  stood  another  exercise  pasha  need  exactly  hamster  stand  hamster  sit  minute  pasha  make  hamster  ether  sit  stand  many  minute  need  get  want  act  optimally  well  contains  even  next  contains  character  without  space  character  describe  hamster  position  character  equal  hamster  row  standing  sitting  print  single  minimum  required  minute  second  print  string  describes  hamster  position  pasha  make  required  change  multiple  optimal  position  print
376/B __label__implementation  imagine  group  friend  owes  ruble  owes  ruble  total  sum  debt  ruble  see  debt  organized  optimal  manner  let  rearrange  like  assume  owes  ruble  owe  anything  anybody  debt  still  mean  total  sum  debt  equal  ruble  task  generalisation  described  example  imagine  group  friend  ha  people  know  debt  people  optimize  given  debt  without  changing  meaning  word  finally  friend  difference  total  money  give  total  money  take  must  print  minimum  sum  debt  optimal  rearrangement  debt  see  note  test  sample  better  understand  problem  contains  next  debt  contains  aii  mean  person  owes  person  ruble  assume  people  numbered  guaranteed  pair  people  occurs  input  input  simultaneously  pair  people  pair  people  print  single  minimum  sum  debt  optimal  rearrangement
1031/C __label__greedy  galaxy  far  far  away  lesha  student  ha  got  know  ha  exam  day  always  attended  single  class  previous  year  decided  spend  remaining  time  wisely  lesha  know  today  study  hour  hour  study  tomorrow  note  possible  planet  hour  day  earth  lesha  know  quality  knowledge  depend  lecture  note  read  ha  access  infinite  note  enumerated  positive  know  read  note  hour  second  note  hour  word  lesha  read  note  hour  lesha  read  note  arbitrary  order  start  reading  note  day  finish  reading  second  day  thus  student  ha  fully  read  several  lecture  note  today  spending  hour  total  fully  read  several  lecture  note  tomorrow  spending  hour  total  maximum  note  lesha  read  remaining  time  note  read  day  second  input  contains  hour  lesha  ha  today  hour  lesha  ha  tomorrow  print  single  lecture  note  lesha  ha  read  day  second  print  distinct  sum  exceed
733/B __label__math  soon  parade  victory  alien  invader  berland  unfortunately  soldier  died  war  army  consists  entirely  new  recruit  many  even  know  leg  begin  march  civilian  population  poorly  understands  leg  recruit  begin  march  important  many  soldier  march  step  column  participating  parade  column  consists  soldier  start  march  left  leg  soldier  start  march  right  leg  beauty  parade  calculated  following  formula  total  soldier  parade  start  march  left  leg  total  soldier  parade  start  march  right  leg  beauty  equal  choose  column  tell  soldier  column  switch  starting  leg  everyone  column  start  march  left  leg  start  right  leg  vice  versa  formally  pick  index  swap  value  find  index  column  switching  starting  leg  soldier  maximize  beauty  parade  determine  operation  increase  current  beauty  contains  single  column  next  pair  soldier  column  start  march  left  right  leg  respectively  print  single  column  soldier  need  change  leg  start  march  maximum  beauty  already  reached
1200/C __label__math  __label__number  theory  amugae  large  round  corridor  corridor  consists  area  inner  area  equally  divided  sector  outer  area  equally  divided  sector  wall  exists  pair  sector  area  inner  outer  wall  inner  area  outer  area  wall  always  exists  theclock  position  inner  area  sector  denoted  clockwise  direction  outer  area  sector  denoted  manner  clear  understanding  see  example  image  amugae  want  know  move  sector  another  sector  ha  question  question  check  move  given  sector  contains  sector  inner  area  sector  outer  area  question  next  contains  otherwise  constraint  similar  amague  want  know  possible  move  sector  sector  question  print  yes  amugae  move  otherwise
650/B __label__dp  __label__brute  force  __label__binary  search  vasya  telephone  contains  photo  photo  currently  opened  phone  allowed  move  left  right  adjacent  photo  swiping  finger  screen  swipe  left  photo  reach  photo  similarly  swiping  right  last  photo  reach  photo  take  second  swipe  photo  adjacent  photo  known  orientation  intended  horizontal  vertical  phone  vertical  orientation  rotated  take  second  change  orientation  photo  vasya  ha  second  watch  photo  want  watch  many  photo  possible  vasya  open  photo  time  spends  second  notice  detail  photo  wrong  orientation  spends  second  rotating  watching  vasya  ha  already  opened  photo  skip  spend  time  watching  changing  orientation  allowed  skip  unseen  photo  help  vasya  find  maximum  photo  able  watch  second  input  contains  photo  time  move  photo  adjacent  time  change  orientation  photo  time  vasya  spend  watching  photo  second  input  contains  string  length  containing  symbol  position  string  contains  photo  seen  horizontal  orientation  position  string  contains  photo  seen  vertical  orientation  output  maximum  photo  vasya  able  watch  second
404/E __label__implementation  __label__greedy  __label__binary  search  valera  ha  strip  infinite  direction  consisting  cell  cell  numbered  cell  ha  robot  robot  ha  instruction  sequence  move  must  perform  move  robot  move  cell  left  cell  right  according  instruction  robot  start  moving  valera  put  obstacle  cell  strip  excluding  cell  robot  cell  obstacle  according  instruction  skip  move  valera  indicates  finish  cell  robot  ha  completing  entire  instruction  finishing  cell  different  starting  believed  robot  completed  instruction  successfully  process  moving  visited  finish  cell  exactly  last  move  moreover  latter  move  skipped  let  assume  minimum  obstacle  valera  must  put  make  robot  able  complete  entire  sequence  instruction  successfully  end  finishing  cell  need  calculate  many  way  valera  choose  obstacle  finishing  cell  robot  able  complete  instruction  successfully  contains  sequence  character  without  space  consisting  letter  character  equal  robot  move  must  try  move  cell  left  character  equal  robot  move  must  try  move  cell  right  print  single  required  way  guaranteed  fit  bit  signed  type
515/E __label__data  structures  drazil  monkey  life  circular  park  tree  around  park  distance  tree  tree  distance  tree  tree  height  tree  drazil  start  day  morning  run  morning  run  consists  following  step  drazil  chooses  different  tree  start  climbing  tree  climb  tree  run  around  park  possible  direction  second  tree  climb  finally  climb  second  tree  always  child  playing  around  consecutive  tree  drazil  stand  child  choose  tree  close  child  even  stay  close  tree  tree  drazil  chooses  estimate  energy  morning  run  take  ist  since  child  exactly  arc  connecting  distance  dist  tree  uniquely  defined  know  day  child  play  tree  tree  formally  aii  child  play  around  tree  index  range  otherwise  play  around  tree  index  please  help  drazil  determine  tree  choose  order  consume  energy  since  want  become  fit  cool  looking  monkey  report  resulting  amount  energy  day  contains  denoting  tree  day  respectively  second  contains  distance  consecutive  tree  third  contains  height  tree  following  contains  describing  new  day  always  least  different  tree  drazil  choose  affected  child  day  print  answer  separate
1051/E __label__dp  __label__data  structures  __label__strings  __label__binary  search  vasya  owns  big  let  define  partition  sequence  string  concatanation  string  element  partition  example  ha  following  partition  lot  others  let  call  partition  beautiful  element  contains  leading  vasya  want  know  beautiful  partition  ha  satisfy  condition  note  comparison  comparison  string  help  vasya  count  amount  partition  match  given  requirement  result  rather  big  print  modulo  contains  single  second  contains  single  third  contains  single  guaranteed  guaranteed  leading  print  single  amount  partition  match  given  requirement  modulo
360/C __label__dp  levko  love  string  length  consisting  lowercase  english  letter  much  ha  string  string  length  levko  defines  beauty  relative  pair  index  substring  lexicographically  larger  substring  boy  wondered  many  string  beauty  relative  equal  exactly  help  find  remainder  division  substring  string  string  sisi  string  x  lexicographically  larger  string  x  r  r  xr  r  string  character  compared  ascii  code  contains  second  contains  non  empty  string  length  string  consists  lowercase  english  letter  print  single  answer  problem  modulo
984/A __label__sortings  player  play  game  initially  written  board  turn  player  selects  era  board  continues  left  board  turn  made  player  make  move  player  alternate  turn  player  want  minimize  last  would  left  board  second  player  want  maximize  want  know  left  board  turn  player  make  optimal  move  contains  board  second  contains  print  left  board
1194/A __label__math  list  written  left  right  blackboard  perform  algorithm  consisting  several  step  step  indexed  step  wipe  considering  remaining  wipe  whole  digit  le  remaining  stop  algorithm  wonder  value  remaining  algorithm  stopped  contains  query  next  query  per  query  independent  contains  space  separated  length  list  position  wonder  guaranteed  algorithm  end  list  still  least  print  per  query  value  performing  algorithm  corresponding  query
484/A __label__constructive  algorithms  let  denote  bit  set  bit  binary  representation  non  negative  given  multiple  query  consisting  pair  query  find  l  maximum  possible  multiple  find  smallest  contains  query  following  argument  corresponding  query  ii  query  print  answer  separate
590/C __label__dfs  __label__graphs  famous  global  economic  crisis  approaching  rapidly  state  berman  berance  bertaly  formed  alliance  allowed  resident  member  state  freely  pas  territory  addition  wa  decided  road  state  built  guarantee  could  point  country  reached  point  state  since  road  always  expensive  government  state  newly  formed  alliance  asked  help  ass  cost  issued  map  represented  rectangle  table  consisting  row  column  cell  map  either  belongs  state  area  allowed  build  road  area  construction  road  allowed  cell  called  passable  belongs  state  road  wa  built  cell  passable  cell  move  right  left  cell  corresponds  movement  exists  passable  task  construct  road  inside  minimum  cell  would  possible  get  cell  state  cell  state  using  passable  cell  guaranteed  initially  possible  reach  cell  state  cell  state  moving  along  cell  guaranteed  state  least  cell  belongs  input  contains  dimension  map  row  column  respectively  next  character  describing  row  map  digit  represent  accessory  corresponding  state  character  corresponds  cell  allowed  build  road  character  mean  construction  allowed  cell  print  single  minimum  cell  need  build  road  inside  order  connect  cell  state  goal  unachievable  print
613/A __label__binary  search  __label__geometry  peter  got  new  snow  blower  new  year  present  course  peter  decided  try  immediately  reading  instruction  realized  doe  work  like  regular  snow  blowing  machine  order  make  work  need  tie  point  doe  cover  switch  result  along  circle  around  point  remove  snow  path  formally  assume  peter  machine  polygon  plane  machine  switched  make  circle  around  point  peter  tied  point  lie  strictly  outside  polygon  point  lying  border  polygon  move  along  circular  trajectory  center  circle  point  peter  tied  machine  peter  decided  tie  car  point  wondering  area  region  cleared  snow  help  input  contains  vertex  polygon  coordinate  point  next  contains  coordinate  vertex  polygon  clockwise  counterclockwise  order  guaranteed  consecutive  vertex  lie  common  straight  input  exceed  absolute  value  print  single  real  value  area  region  cleared  answer  considered  correct  absolute  relative  error  doe  exceed
753/A __label__math  __label__dp  __label__greedy  santa  claus  ha  candy  dream  give  gift  child  maximal  child  whose  give  candy  santa  claus  want  kid  get  distinct  positive  candy  santa  class  want  give  candy  ha  contains  positive  candy  santa  claus  ha  print  maximal  kid  get  candy
535/E __label__math  __label__geometry  tavas  cheerleader  new  sport  competition  named  pashmaks  competition  consists  part  swimming  running  people  immediately  start  running  meter  finished  swimming  exactly  meter  winner  person  nobody  else  finish  running  winner  match  start  tavas  know  competitor  registered  match  know  person  swimming  speed  meter  per  second  running  speed  meter  per  second  unfortunately  know  value  know  real  greater  cheerleader  tavas  want  know  cheer  want  know  people  might  win  consider  competitor  might  win  value  value  winner  tavas  really  familiar  programming  asked  help  input  contains  single  next  detail  competitor  contains  output  print  sequence  possible  winner  increasing  order
873/C __label__greedy  ivan  playing  strange  game  ha  matrix  row  column  element  matrix  equal  either  row  column  indexed  ivan  replace  matrix  score  game  calculated  follows  initially  ivan  score  column  ivan  find  topmost  current  column  find  minimum  column  column  skipped  ivan  look  next  min  element  column  starting  element  found  count  element  added  score  course  ivan  want  maximize  score  strange  game  want  change  many  element  replace  minimum  possible  help  determine  maximum  possible  score  get  minimum  possible  replacement  required  achieve  score  contains  follow  contains  element  row  matrix  either  print  maximum  possible  score  ivan  get  minimum  replacement  required  get  score
501/D __label__data  structures  let  define  sum  permutation  permutation  perm  lexicographically  permutation  counting  ord  permutation  lexicographical  order  example  perm  perm  misha  ha  permutation  task  find  sum  permutation  called  lexicographically  smaller  permutation  following  condition  hold  contains  second  contains  distinct  separated  space  forming  permutation  third  contains  distinct  separated  space  forming  permutation  print  distinct  forming  sum  given  permutation  separate  space
1149/A __label__math  __label__greedy  __label__constructive  algorithms  __label__number  theory  giving  away  nice  huge  bag  containing  tile  bag  want  present  contains  tile  ha  single  written  either  condition  must  fulfill  order  receive  prize  need  put  tile  bag  sequence  order  wish  compute  sum  prefix  sequence  count  many  sum  prime  want  keep  prize  need  maximize  prime  get  win  prize  hurry  bag  waiting  input  contains  single  tile  bag  following  contains  space  separated  value  written  tile  output  permutation  input  sequence  maximizing  prefix  sum  prime  multiple  optimal  permutation  output
1076/E __label__data  structures  __label__trees  vasya  ha  tree  consisting  vertex  root  vertex  vertex  ha  written  let  distance  vertex  edge  shortest  path  let  denote  subtree  vertex  set  vertex  next  condition  met  ancestor  vertex  ancestor  vasya  need  process  query  query  triple  query  vasya  add  value  vertex  subtree  report  vasya  value  written  vertex  tree  processing  query  contains  single  vertex  tree  next  contains  edge  vertex  guarantied  given  graph  tree  next  contains  single  query  next  contains  description  query  print  value  written  vertex  processing  query
451/E __label__number  theory  devu  want  decorate  garden  flower  ha  purchased  box  box  contains  flower  flower  single  box  color  hence  indistinguishable  box  flower  color  devu  want  select  exactly  flower  box  decorate  garden  devu  would  like  know  many  different  way  select  flower  box  since  large  asks  find  modulo  devu  considers  way  different  least  box  different  flower  selected  way  input  contains  space  separated  second  contains  space  separated  output  single  way  devu  select  flower  modulo
1056/B __label__math  __label__number  theory  arkady  friend  love  playing  checker  nn  field  row  column  field  enumerated  friend  recently  championship  arkady  want  please  candy  remembering  old  parable  moral  arkady  want  give  friend  set  candy  per  cell  field  set  candy  cell  exactly  candy  unique  type  friend  deserve  present  many  nn  set  candy  split  equally  part  without  cutting  candy  piece  note  set  ha  split  independently  since  type  candy  different  set  different  contains  size  field  part  split  set  print  single  set  split  equally
363/E __label__implementation  __label__data  structures  __label__brute  force  let  assume  given  n  table  filled  mark  cell  row  column  thus  upper  left  cell  table  lower  right  cell  assume  circle  radius  center  cell  set  cell  consider  circle  beyond  limit  table  circle  radius  center  find  non  intersecting  circle  given  radius  sum  cell  belong  circle  maximum  circle  intersect  cell  belongs  circle  way  choose  pair  circle  maximum  sum  interested  pair  calculate  unordered  pair  circle  instance  pair  circle  radius  center  pair  pair  circle  radius  center  contains  r  following  contains  element  table  row  table  listed  top  bottom  element  row  listed  left  right  guaranteed  least  circle  radius  going  beyond  table  limit  print  maximum  sum  cell  located  non  intersecting  circle  pair  non  intersecting  circle  maximum  sum  single  pair  non  intersecting  circle  print
457/E __label__math  __label__constructive  algorithms  computer  network  consisting  node  numbered  link  network  connect  pair  node  pair  node  multiple  link  node  ha  link  link  support  unlimited  bandwidth  either  direction  link  transmit  single  direction  given  time  cost  sending  data  link  proportional  square  bandwidth  specifically  link  ha  positive  weight  cost  sending  data  link  weight  time  square  bandwidth  network  connected  series  link  node  node  furthermore  designed  remain  connected  event  single  node  failure  needed  send  data  node  node  bandwidth  positive  wish  assign  bandwidth  link  bandwidth  node  minus  bandwidth  node  node  node  node  individual  bandwidth  need  wishing  minimize  total  cost  drew  diagram  network  gave  task  intern  solve  intern  claimed  solved  task  written  optimal  bandwidth  diagram  spilled  coffee  rendering  much  unreadable  including  part  original  diagram  value  information  available  determine  intern  solution  optimal  determine  exists  valid  network  total  bandwidth  optimal  solution  superset  given  information  furthermore  determine  efficiency  intern  solution  possible  efficiency  defined  total  cost  divided  total  bandwidth  begin  node  known  link  network  respectively  following  f  indicates  link  node  weight  carrying  bandwidth  direction  bandwidth  intern  solution  definitely  optimal  print  bad  link  input  violates  optimality  solution  intern  solution  optimal  print  efficiency  solution  determined  rounded  nearest  otherwise  print  unknown
814/B __label__constructive  algorithms  sengoku  still  remembers  mysterious  colourful  meteoroid  discovered  lala  chan  little  particular  night  impressed  deeply  giving  illusion  fancy  would  realized  night  sengoku  constructed  permutation  inclusive  representing  colour  wishing  colour  see  coming  meteor  outburst  incredible  outburst  arrived  meteorids  colour  sequence  respectively  meteoroid  colour  inclusive  sequence  identical  least  exists  aii  hold  well  almost  sequence  matched  exactly  element  sengoku  permutation  word  exactly  aii  exactly  bjj  sengoku  able  recover  actual  colour  sequence  astronomical  record  wish  long  forgotten  reconstruct  possible  permutation  sengoku  could  night  input  contains  positive  length  sengoku  permutation  length  meteor  outburst  time  second  contains  space  separated  sequence  colour  meteor  outburst  third  contains  space  separated  sequence  colour  second  meteor  outburst  least  exists  aii  hold  output  space  separated  denoting  possible  permutation  sengoku  could  possible  answer  output
908/E __label__math  __label__dp  given  let  given  set  denoted  set  provided  base  binary  string  length  set  called  good  following  hold  element  le  equal  refer  bitwise  xor  bitwise  operator  respectively  count  good  set  modulo  next  element  exactly  element  distinct  print  single  good  set  modulo
424/E __label__dp  __label__dfs  cold  winter  evening  tomsk  boring  nobody  want  street  time  resident  tomsk  away  time  sitting  warm  apartment  inventing  lot  different  game  game  colored  jenga  game  requires  wooden  block  color  red  green  blue  tower  level  made  level  consists  wooden  block  block  level  arbitrary  color  always  located  close  parallel  example  tower  shown  figure  game  played  exactly  person  every  minute  player  throw  special  dice  ha  side  side  dice  green  blue  red  black  dice  show  side  equiprobably  dice  show  red  green  blue  player  must  take  block  color  tower  minute  tower  fall  possible  player  wait  end  minute  without  touching  tower  ha  wait  end  minute  without  touching  tower  dice  show  black  side  allowed  take  block  top  level  tower  whether  completed  player  got  block  must  put  top  tower  form  new  level  finish  upper  level  consisting  previously  placed  block  newly  constructed  level  property  initial  level  upper  level  completed  starting  new  level  prohibited  tower  fall  level  except  top  least  block  moreover  level  exactly  block  left  block  middle  block  tower  fall  game  end  moment  block  tower  take  tower  fall  wonderful  game  invented  resident  city  tomsk  wonder  many  minute  game  last  player  act  optimally  well  player  act  optimally  well  moment  try  choose  block  take  minimize  expected  game  duration  task  write  program  determines  expected  desired  amount  minute  input  contains  level  tower  follow  describing  level  tower  bottom  top  top  tower  level  described  character  third  set  border  block  level  second  middle  block  character  describes  block  ha  following  value  red  block  green  block  blue  block  output  print  sought  mathematical  expectation  value  answer  considered  correct  relative  absolute  error  exceed
482/B __label__data  structures  __label__trees  __label__constructive  algorithms  call  array  non  negative  interesting  meet  constraint  constraint  consists  ii  meaning  value  equal  task  find  interesting  array  element  state  array  exist  expression  mean  bitwise  programming  language  java  python  operation  represented  pascal  contains  element  array  limit  next  contains  ii  describing  limit  interesting  array  exists  print  yes  without  quote  second  print  decribing  interesting  array  multiple  answer  print
1190/F __label__number  theory  tokitsukaze  playing  room  escape  game  designed  skywalkert  game  need  find  hidden  clue  room  reveal  way  escape  realizes  way  run  away  open  digital  door  lock  since  accidentally  went  secret  compartment  found  clue  interpreted  enter  possible  different  password  open  door  password  must  ranged  password  coprime  common  divisor  greater  password  exist  non  negative  secret  break  rule  password  several  hidden  room  fortunately  find  recorded  lock  make  tokitsukaze  frustrated  well  math  ha  found  suspected  want  help  find  possible  password  determine  contains  guaranteed  positive  power  single  prime  possible  different  password  le  print  single
238/D __label__implementation  __label__data  structures  programming  language  every  program  non  empty  sequence  sign  digit  let  explain  interpreter  programming  language  work  program  interpreted  using  movement  instruction  pointer  consists  part  current  character  pointer  direction  pointer  point  left  right  initially  point  leftmost  character  sequence  point  right  repeat  following  step  moment  point  somewhere  outside  sequence  pointing  digit  interpreter  print  digit  move  step  according  direction  value  printed  digit  sequence  decrease  printed  digit  wa  decreased  therefore  erased  sequence  length  sequence  decrease  pointing  direction  change  left  right  correspondingly  move  step  according  new  character  pointing  previous  character  erased  sequence  moment  go  outside  sequence  execution  terminated  obvious  every  program  language  terminates  step  sequence  digit  answer  query  query  give  asks  many  digit  printed  run  sequence  independent  program  language  input  contains  represents  length  sequence  query  second  contains  sequence  digit  written  left  right  note  character  separated  space  next  contains  ii  query  query  print  space  separated  equal  time  interpreter  print  running  corresponding  program  print  answer  query  order  given  input
550/D __label__implementation  __label__graphs  __label__constructive  algorithms  undirected  graph  called  regular  degree  vertex  equal  edge  connected  graph  called  bridge  removing  graph  split  connected  component  build  connected  undirected  regular  graph  containing  least  bridge  else  state  graph  exist  single  input  contains  required  degree  vertex  regular  graph  print  without  quote  graph  exist
681/D __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  sasha  life  big  happy  family  man  day  men  family  gather  celebrate  following  tradition  men  sasha  family  let  man  ha  father  arbitrary  son  man  considered  ancestor  man  least  following  condition  satisfied  man  father  man  man  man  ancestor  man  father  man  course  man  ancestor  man  man  ancestor  man  tradition  sasha  family  give  gift  man  day  giving  gift  normal  way  boring  year  following  happens  list  candidate  prepared  containing  possibly  men  order  men  decides  give  gift  order  choose  person  give  gift  man  look  list  pick  man  list  ancestor  give  gift  note  according  definition  happen  person  give  gift  ancestor  person  list  becomes  sad  leaf  celebration  without  giving  gift  anyone  year  decided  help  organizing  celebration  asked  men  want  give  present  person  chosen  ancestor  able  make  list  candidate  wish  satisfied  give  gift  according  process  described  input  given  men  sasha  family  family  relation  respectively  next  describe  family  relation  consists  pair  pii  meaning  man  numbered  father  man  numbered  guaranteed  every  pair  appears  every  pair  different  men  least  ancestor  another  every  man  ha  father  next  contains  ith  mean  man  numbered  want  give  gift  man  numbered  guaranteed  every  man  numbered  ancestor  man  numbered  print  men  list  candidate
514/C __label__data  structures  __label__strings  __label__binary  search  watto  owner  spare  part  store  ha  recently  got  order  mechanism  process  string  certain  way  initially  memory  mechanism  filled  string  mechanism  able  process  query  following  type  given  string  determine  memory  mechanism  contains  string  consists  character  differs  exactly  position  watto  ha  already  compiled  mechanism  left  write  program  check  data  consisting  initial  query  decided  entrust  job  contains  non  negative  initial  string  query  respectively  next  follow  non  empty  string  uploaded  memory  mechanism  next  follow  non  empty  string  query  mechanism  total  length  input  exceed  consists  letter  query  print  single  yes  without  quote  memory  mechanism  contains  required  string  otherwise  print  without  quote
1096/A __label__math  __label__implementation  __label__greedy  given  range  positive  find  pair  divide  multiple  answer  print  asked  answer  independent  query  contains  single  query  next  contains  inclusive  border  range  guaranteed  testset  includes  query  least  suitable  pair  print  answer  divide  answer  correspond  query  input
979/C __label__dfs  __label__trees  kuro  living  country  called  uberland  consisting  town  numbered  bidirectional  road  connecting  town  possible  reach  town  road  connects  town  kuro  love  walking  planning  take  walking  marathon  choose  pair  town  walk  using  shortest  path  note  considered  different  oddly  special  town  uberland  named  flowrisa  denoted  index  beetopia  denoted  index  flowrisa  town  many  strong  scent  flower  beetopia  another  town  many  bee  live  particular  kuro  avoid  pair  town  path  reach  beetopia  reached  flowrisa  since  bee  attracted  flower  smell  kuro  body  sting  kuro  want  know  many  pair  city  take  route  since  really  bright  asked  help  problem  contains  town  index  town  flowrisa  index  town  beetopia  respectively  follow  contains  describes  road  connecting  town  guaranteed  town  reach  every  town  city  using  given  road  given  map  town  road  tree  single  resembles  pair  town  kuro  use  walking  route
703/B __label__math  __label__implementation  little  mishka  great  traveller  visited  many  country  thinking  travel  time  chose  xxx  beautiful  little  known  northern  country  interesting  fact  xxx  xxx  consists  city  whose  imagine  capital  city  city  country  beautiful  beautiful  way  beauty  value  city  equal  city  consecutively  connected  road  including  city  forming  cyclic  route  formally  every  road  city  another  city  capital  city  connected  city  directly  road  formally  city  capital  city  every  road  city  road  city  price  passing  road  directly  depends  beauty  value  city  connects  thus  road  city  price  passing  equal  ci  mishka  started  gather  thing  trip  still  decide  route  follow  thus  asked  help  determine  summary  price  passing  road  xxx  formally  every  pair  city  road  find  sum  product  ca  help  input  contains  city  xxx  capital  city  second  input  contains  beauty  value  city  third  input  contains  distinct  id  dk  di  index  capital  city  index  given  ascending  order  print  summary  price  passing  road  xxx
863/A __label__implementation  __label__brute  force  let  quasi  palindromic  adding  leading  possible  none  produce  palindromic  string  string  called  palindrome  read  left  right  right  left  example  quasi  palindromic  transformed  string  respectively  palindrome  given  check  quasi  palindromic  contains  given  without  leading  print  yes  quasi  palindromic  otherwise  print  without  quote
538/A __label__implementation  __label__brute  force  large  banner  word  codeforces  wa  ordered  onsite  round  codeforces  take  place  miami  beach  unfortunately  company  made  banner  mixed  order  delivered  somebody  else  banner  contains  someone  else  word  word  banner  consists  upper  case  english  letter  little  time  correct  mistake  manage  cut  substring  banner  several  consecutive  letter  resulting  part  banner  glued  single  piece  beginning  end  original  banner  wa  cut  part  remains  allowed  change  relative  order  part  banner  substring  cut  several  last  letter  left  allowed  glue  last  letter  right  letter  thus  example  example  cut  substring  string  template  get  string  temple  cut  string  plate  cut  tem  cut  emplate  etc  help  organizer  round  determine  whether  possible  cut  banner  substring  way  remaining  part  formed  word  codeforces  single  input  contains  word  written  banner  word  consists  upper  case  english  letter  word  non  empty  length  exceed  character  guaranteed  word  word  codeforces  print  yes  exists  way  cut  substring  otherwise  without  quote
616/A __label__implementation  __label__strings  given  long  leading  allowed  check  greater  determine  equal  input  size  large  use  reading  symbol  instead  use  reading  whole  token  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  scanf  printf  instead  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  use  function  input  python  instead  use  function  rawinput  contains  non  negative  second  contains  non  negative  leading  contains  digit  print  symbol  symbol  equal  print  symbol
455/D __label__data  structures  serega  love  fun  everyone  ha  fun  unique  manner  serega  ha  fun  solving  query  problem  day  fedor  came  problem  given  array  consisting  positive  query  query  type  make  unit  cyclic  shift  right  segment  border  inclusive  rearrange  element  array  following  manner  count  many  equal  segment  border  inclusive  fedor  hurried  see  serega  enjoy  problem  serega  solved  really  quickly  let  see  solve  contains  element  array  second  contains  third  contains  single  query  next  query  need  respond  query  online  query  encoded  query  type  given  format  query  second  type  given  format  input  satisfy  constraint  decode  query  data  given  input  need  perform  following  transformation  astans  mod  astans  mod  astans  mod  lastans  last  reply  query  type  initially  lastans  transformation  greater  must  swap  value  query  type  print  answer  single
622/A __label__math  __label__implementation  consider  infinite  sequence  sequence  built  following  way  written  note  sequence  contains  digit  example  appears  sequence  position  element  numerated  find  position  sequence  contains  position  find  note  given  large  use  bit  type  store  use  long  long  type  java  use  long  type  print  element  position  sequence  element  numerated
632/C __label__sortings  __label__strings  given  list  string  like  concatenate  together  order  resulting  string  would  lexicographically  smallest  given  list  string  output  lexicographically  smallest  concatenation  contains  string  next  contains  string  consisting  lowercase  english  letter  sum  string  length  exceed  print  string  lexicographically  smallest  string  concatenation
552/A __label__math  __label__implementation  vanya  ha  table  consisting  row  row  contains  cell  row  numbered  bottom  top  column  numbered  left  right  table  vanya  chose  rectangle  side  along  border  square  rectangle  probably  occur  multiple  time  cell  table  counted  rectangle  belongs  wrote  want  find  sum  value  cell  table  table  large  asks  help  find  result  contains  rectangle  following  contains  column  row  lower  left  cell  column  row  upper  right  cell  rectangle  single  print  sum  value  cell  table
915/C __label__dp  __label__greedy  given  positive  permute  change  order  digit  construct  maximal  exceeding  input  output  start  digit  allowed  leave  contains  second  contains  leading  guaranteed  answer  exists  print  maximum  possible  permutation  digit  greater  answer  leading  guaranteed  answer  exists
449/E __label__math  __label__dp  __label__number  theory  jzzhu  ha  call  point  plane  special  jzzhu  defines  unit  square  square  corner  point  let  look  square  side  necessarily  parallel  coordinate  ax  corner  special  point  square  jzzhu  paint  dot  every  unit  square  fully  inside  unit  square  several  dot  jzzhu  wonder  many  dot  ha  painted  plane  find  modulo  contains  single  test  next  contains  description  test  value  variable  current  test  test  output  total  dot  modulo
737/E __label__greedy  __label__graphs  tanya  friend  gathered  together  celebrate  birthday  child  celebration  including  tanya  celebration  close  end  last  planned  attraction  gaming  machine  machine  hall  numbered  child  ha  list  machine  want  play  moreover  machine  know  exact  time  want  play  every  machine  child  play  machine  time  evening  already  every  adult  want  home  speed  process  additionally  rent  second  copy  machine  rent  second  copy  machine  pay  burles  rent  machine  use  long  want  long  take  make  every  child  play  according  plan  budget  burles  renting  additional  machine  copy  machine  impossible  rent  third  machine  type  child  interrupt  game  moment  continue  later  child  want  play  machine  allowed  rent  copy  machine  child  would  play  part  time  machine  part  time  copy  part  could  empty  interruption  change  take  time  performed  moment  time  course  child  play  machine  time  remember  needed  save  money  save  money  expense  child  happiness  needed  minimize  latest  moment  time  child  end  game  contains  child  gaming  machine  budget  renting  additional  machine  second  contains  j  rent  price  second  copy  machine  follow  describes  wish  child  start  machine  child  want  play  pair  xiy  tiy  mean  child  want  play  tiy  iy  minute  xiy  iy  machine  value  xiy  distinct  print  minimum  time  child  finish  game
1030/F __label__data  structures  infinite  consisting  cell  box  cell  box  stand  cell  ha  weight  distinct  moreover  hold  valid  would  like  put  together  box  putting  together  box  index  segment  mean  move  way  position  form  segment  step  move  box  neighboring  cell  occupied  another  box  choose  change  position  remain  distinct  spend  unit  energy  moving  box  cell  move  box  time  arbitrary  order  sometimes  weight  box  change  query  type  weight  box  becomes  compute  minimum  total  energy  needed  put  together  box  index  since  answer  rather  big  print  remainder  give  divided  note  box  moved  query  compute  answer  note  minimize  answer  remainder  modulo  possible  answer  choose  print  even  though  remainder  second  answer  contains  box  query  second  contains  position  box  distinct  hold  valid  third  contains  initial  weight  box  next  describe  query  query  per  query  described  single  containing  query  type  w  query  second  type  equal  query  second  type  print  answer  separate  since  answer  large  print  remainder  give  divided
416/E __label__dp  __label__graphs  good  old  berland  ha  city  road  road  connects  pair  distinct  city  bidirectional  pair  city  road  road  know  length  know  president  soon  ride  along  berland  road  city  city  naturally  choose  shortest  path  nobody  say  sure  path  choose  minister  transport  really  afraid  president  might  get  upset  state  road  country  reason  planning  repair  road  possible  president  path  making  budget  event  easy  task  possible  distinct  pair  find  road  lie  least  shortest  path  input  contains  city  road  correspondingly  follow  containing  road  description  description  per  description  contains  ii  city  connected  road  length  print  sequence  c  n  n  cst  road  lie  shortest  path  print  element  sequence  described  order  pair  city  path  cst
1016/C __label__dp  __label__implementation  vasya  house  situated  forest  mushroom  glade  near  glade  consists  row  divided  consecutive  cell  cell  vasya  know  fast  mushroom  grow  cell  formally  many  gram  mushroom  grow  cell  minute  vasya  spends  exactly  minute  move  adjacent  cell  vasya  leave  glade  cell  considered  adjacent  share  common  side  vasya  enters  cell  instantly  collect  mushroom  growing  vasya  begin  journey  left  upper  cell  every  minute  vasya  must  move  adjacent  cell  wait  mushroom  grow  want  visit  cell  exactly  maximize  total  weight  collected  mushroom  initially  mushroom  weight  note  vasya  need  return  starting  cell  help  vasya  calculate  maximum  total  weight  mushroom  collect  contains  length  glade  second  contains  growth  rate  mushroom  row  glade  third  contains  growth  rate  mushroom  second  row  glade  output  maximum  total  weight  mushroom  vasya  collect  choosing  optimal  route  pay  attention  vasya  must  visit  every  cell  glade  exactly
1205/A __label__math  __label__greedy  __label__constructive  algorithms  given  arrange  using  exactly  circle  following  condition  would  satisfied  every  consecutive  circle  write  sum  blackboard  written  blackboard  differ  example  choose  left  see  example  valid  arrangement  differ  right  see  invalid  arrangement  example  differ  solution  output
1216/E2 __label__math  __label__binary  search  difference  easy  hard  version  maximum  value  given  infinite  sequence  form  consist  block  consecutive  positive  written  another  block  consists  second  third  block  consists  element  sequence  element  sequence  numbered  example  element  sequence  element  sequence  element  sequence  element  element  sequence  task  answer  independent  query  query  given  calculate  digit  position  sequence  input  contains  query  following  contains  description  corresponding  query  print  print  digit  answer  query  equal  element  position  sequence
550/B __label__brute  force  problem  estimated  difficulty  want  prepare  problemset  contest  using  problem  made  problemset  contest  must  consist  least  problem  think  total  difficulty  problem  contest  must  least  think  difference  difficulty  easiest  hardest  chosen  problem  must  least  find  way  choose  problemset  contest  contains  problem  minimum  maximum  value  total  difficulty  problemset  minimum  difference  difficulty  hardest  problem  pack  easiest  respectively  second  contains  difficulty  problem  print  way  choose  suitable  problemset  contest
720/F __label__data  structures  misha  ha  array  length  want  choose  different  continuous  subarrays  element  array  belongs  least  chosen  subarrays  misha  want  choose  subarrays  way  calculated  sum  element  subarray  add  sum  resulting  value  wa  maximum  possible  input  contains  element  array  different  subarrays  must  chosen  second  contains  element  array  output  maximum  possible  value  misha  get  choosing  different  subarrays
685/A __label__math  __label__dp  __label__brute  force  robber  attacked  gerda  cab  successful  covering  kingdom  police  make  goal  catching  even  harder  use  watch  know  kingdom  police  bad  math  robber  use  positional  numeral  system  base  second  divide  day  hour  hour  minute  personal  watch  robber  divided  part  ha  smallest  possible  place  necessary  display  second  ha  smallest  possible  place  necessary  display  finally  value  hour  minute  displayed  using  le  place  base  watch  required  added  beginning  notation  note  display  section  watch  required  least  place  little  robber  want  know  moment  time  particular  value  hour  minute  digit  displayed  watch  distinct  help  calculate  input  contains  given  decimal  notation  hour  day  minute  hour  respectively  print  decimal  notation  different  pair  hour  minute  digit  displayed  watch  distinct
566/E __label__trees  __label__constructive  algorithms  archaeologist  found  information  ancient  land  treeland  know  sure  treeland  consisted  city  connected  road  get  city  along  road  information  specific  design  road  treeland  ha  lost  thing  archaeologist  use  preserved  information  near  city  city  treeland  called  near  possible  move  city  moving  road  city  considered  near  recent  excavation  archaeologist  found  set  note  represents  list  city  near  city  country  unfortunately  none  found  record  let  understand  order  city  list  city  list  near  city  listed  help  archaeologist  restore  variant  map  treeland  meet  found  information  contains  city  country  next  describe  found  list  near  city  list  start  representing  city  list  followed  city  list  distinct  guaranteed  given  information  determines  least  possible  road  map  print  pair  representing  road  country  must  aii  showing  road  city
551/E __label__implementation  __label__data  structures  __label__binary  search  professor  gukiz  wa  playing  array  accidentally  discovered  new  function  called  gukiziana  given  array  indexed  gukiziana  represents  maximum  value  element  gukiziana  equal  gukiz  prepared  problem  time  type  query  type  ha  form  asks  increase  value  l  non  negative  second  type  ha  form  asks  find  value  gukiziana  query  type  print  answer  make  gukiz  happy  contains  size  array  query  second  contains  forming  array  next  either  described  statement  start  query  look  like  type  query  start  query  look  like  second  type  query  query  type  print  value  gukiziana  value  query
701/B __label__math  __label__data  structures  vasya  ha  square  chessboard  size  n  rook  initially  chessboard  empty  vasya  consequently  put  rook  board  another  cell  field  rook  attack  least  rook  located  row  column  cell  rook  located  cell  cell  attack  given  position  board  vasya  put  rook  rook  determine  cell  attack  vasya  put  board  input  contains  size  board  rook  next  contains  row  column  vasya  put  rook  vasya  put  rook  board  order  appear  input  guaranteed  cell  rook  print  equal  cell  attack  rook  put
639/C __label__math  __label__implementation  limak  little  polar  bear  many  toy  thus  often  play  polynomial  considers  polynomial  valid  degree  coefficient  exceeding  absolute  value  formally  let  denote  coefficient  polynomial  valid  following  condition  satisfied  every  every  limak  ha  recently  got  valid  polynomial  coefficient  noticed  want  change  going  change  coefficient  get  valid  polynomial  degree  count  way  count  way  distinct  coefficient  target  polynoms  differ  contains  degree  polynomial  limit  absolute  value  coefficient  second  contains  n  describing  valid  polynomial  guaranteed  print  way  change  coefficient  get  valid  polynomial
515/D __label__greedy  __label__constructive  algorithms  drazil  created  following  problem  putting  tile  n  grid  grid  cell  empty  cell  occupied  use  tile  cover  empty  cell  tile  cover  print  solution  drazil  like  write  special  checking  program  task  friend  varda  advised  asking  contestant  print  solution  exists  unique  otherwise  contestant  print  unique  drazil  found  constraint  task  much  larger  original  task  solve  new  problem  note  print  unique  either  exists  solution  exists  several  different  solution  original  task  contains  following  describe  grid  row  character  denotes  empty  cell  character  denotes  cell  occupied  solution  solution  unique  print  string  unique
879/B __label__implementation  __label__data  structures  people  standing  play  table  tennis  player  play  game  loser  go  end  winner  play  next  person  play  someone  win  game  row  player  becomes  winner  participant  know  power  play  table  tennis  player  value  different  game  player  greater  power  always  win  determine  winner  contains  people  win  second  contains  power  player  guaranteed  contains  valid  permutation  distinct  output  single  power  winner
555/A __label__implementation  andrewid  android  galaxy  famous  detective  investigating  case  vandalism  exhibition  contemporary  art  main  exhibit  construction  matryoshka  doll  nested  another  matryoshka  doll  numbered  matryoshka  smaller  nested  matryoshka  higher  matryoshkas  directly  nested  doll  chain  nestings  example  second  perform  following  operation  matryoshka  nested  matryoshka  matryoshka  matryoshka  nested  matryoshka  put  matryoshka  directly  contained  matryoshka  nested  matryoshka  get  according  modern  aesthetic  norm  matryoshka  doll  display  assembled  specific  configuration  several  separate  chain  nested  matryoshkas  criminal  following  mysterious  plan  took  doll  assembled  single  large  chain  order  continue  investigation  andrewid  need  know  minimum  time  possible  perform  action  contains  matryoshkas  matryoshka  chain  initial  configuration  next  description  chain  contains  ai  imi  matryoshkas  chain  matryoshka  ai  nested  matryoshka  ai  nested  matryoshka  ai  till  matryoshka  aimi  nested  matryoshka  guaranteed  matryoshkas  chain  distinct  chain  matryoshkas  follow  ascending  order  single  print  minimum  second  needed  assemble  large  chain  initial  configuration
513/B1 __label__brute  force  given  permutation  let  define  following  sum  find  lexicographically  permutation  length  set  permutation  maximum  possible  value  single  input  contains  ntn  cntn  permutation  length  maximum  possible  value  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  forming  required  permutation
2/C __label__geometry  olympic  game  bercouver  full  swing  everyone  ha  objective  sportsman  compete  medal  sport  commentator  compete  convenient  position  give  running  commentary  today  main  sport  event  take  place  round  stadium  commentator  objective  choose  best  point  observation  say  point  stadium  observed  sport  competition  importance  stadium  observed  angle  point  meeting  condition  point  maximum  angle  observation  prefered  would  please  help  famous  berland  commentator  berniev  find  best  point  observation  noted  stadium  hide  commentator  easily  see  stadium  input  data  consists  describes  position  stadium  format  coordinate  stadium  center  radius  input  data  stadium  common  point  center  print  coordinate  required  point  digit  decimal  point  answer  meeting  condition  program  print  anything  output  data  left  blank
697/B __label__math  __label__implementation  __label__brute  force  __label__strings  barney  standing  bar  starring  pretty  girl  want  shoot  heart  arrow  need  know  distance  girl  make  shot  accurate  barney  asked  bar  tender  carl  distance  value  carl  wa  busy  talking  customer  wrote  distance  value  real  napkin  problem  wrote  scientific  notation  scientific  notation  real  notation  form  aeb  real  b  true  case  non  negative  barney  know  anything  scientific  notation  well  anything  scientific  asked  tell  distance  value  usual  decimal  representation  minimal  digit  decimal  point  decimal  point  see  output  format  better  understanding  input  contains  single  string  form  deb  usual  character  scientific  notation  desired  distance  value  leading  contains  trailing  equal  non  print  real  desired  distance  value  decimal  notation
837/E __label__math  __label__implementation  __label__binary  search  vasya  studying  theory  ha  denoted  function  cd  gcd  greatest  common  divisor  vasya  ha  want  calculate  tried  found  calculating  function  way  want  might  take  long  time  decided  ask  implement  program  calculate  function  swiftly  contains  print
1017/D __label__data  structures  __label__brute  force  childan  making  legendary  story  trying  sell  forgery  necklace  strong  sense  kasouras  kasoura  challenging  truth  childan  story  going  ask  question  childan  called  personal  treasure  necklace  personal  treasure  multiset  string  string  string  contains  character  example  string  string  character  unallowed  character  note  multiset  equal  element  frequently  kasoura  provide  string  ask  childan  many  string  multiset  value  pair  greater  mr  kasoura  kasoura  think  value  character  pair  equal  otherwise  value  string  pair  sum  value  every  character  pair  note  length  every  string  equal  example  string  equal  character  third  position  need  help  childan  answer  kasoura  query  find  string  multiset  value  pair  greater  contains  length  string  size  multiset  query  second  contains  value  caracter  next  contains  string  length  string  multiset  next  contains  string  length  query  query  print  answer  query
575/D __label__implementation  __label__constructive  algorithms  wa  big  bank  robbery  tablecity  order  catch  thief  president  called  none  albert  tablecity  chief  police  albert  doe  know  thief  located  doe  know  move  tablecity  represented  grid  every  cell  represents  district  district  ha  unique  name  coordinate  district  grid  thief  movement  every  hour  thief  leave  district  currently  hiding  move  district  long  exists  tablecity  example  thief  possible  movement  located  district  albert  ha  enough  people  every  hour  pick  district  tablecity  fully  investigate  making  sure  thief  located  get  caught  albert  promised  president  thief  caught  hour  need  help  order  achieve  input  problem  output  contains  duration  police  search  hour  following  contains  exactly  xi  yi  xi  yi  separated  space  represent  district  xi  yi  xi  yi  got  investigated  hour  output  given  chronological  order  contains  district  investigated  hour  guarantee  thief  caught  hour  regardless  thief  initial  position  movement
1218/B __label__data  structures  __label__geometry  bob  bubblestrong  got  new  job  security  guard  bob  responsible  safety  collection  warehouse  containing  valuable  bubble  cup  asset  high  quality  bubble  task  detect  thief  inside  warehouse  call  police  looking  sky  warehouse  ha  shape  convex  polygon  wall  warehouse  intersect  course  none  warehouse  built  inside  another  warehouse  little  bubble  cup  boss  know  lazy  bob  enjoys  watching  soap  opera  heard  full  bubble  coziness  office  instead  going  warehouse  another  check  warehouse  secured  plan  bob  ha  monitor  warehouse  comfort  office  using  special  ray  goggles  goggles  infinite  range  thief  warehouse  could  easily  spotted  goggles  promptly  broke  ray  strong  enough  let  bob  see  single  wall  bob  would  really  appreciate  could  help  find  total  area  inside  warehouse  monitored  broken  goggles  could  know  much  area  warehouse  need  monitor  person  contains  warehouse  next  describe  warehouse  corner  warehouse  followed  pair  pair  coordinate  corner  corner  listed  clockwise  order  total  corner  warehouse  bob  office  positioned  point  coordinate  office  contained  warehouse  print  single  containing  single  decimal  accurate  least  decimal  place  total  area  warehouse  bob  monitor  using  broken  ray  goggles
544/A __label__implementation  __label__strings  given  string  sequence  string  called  beautiful  concatenation  string  string  formally  character  string  distinct  find  beautiful  sequence  string  determine  beautiful  sequence  exist  contains  positive  string  beautiful  sequence  second  contains  string  consisting  lowercase  latin  letter  length  string  range  inclusive  sequence  exist  print  single  without  quote  otherwise  print  yes  without  quote  next  print  beautiful  sequence  string
581/A __label__math  __label__implementation  day  vasya  hipster  decided  count  many  sock  turned  red  sock  blue  sock  according  latest  fashion  hipster  wear  sock  different  color  red  left  foot  blue  right  foot  every  day  vasya  put  new  sock  morning  throw  away  going  bed  want  wash  vasya  wonder  maximum  day  dress  fashionable  wear  different  sock  many  day  wear  sock  either  run  sock  make  single  pair  sock  got  help  single  input  contains  positive  red  blue  sock  vasya  got  print  space  separated  maximum  day  vasya  wear  different  sock  day  wear  sock  either  run  sock  make  single  pair  sock  got
808/B __label__math  __label__implementation  __label__data  structures  almost  week  since  polycarp  get  rid  insomnia  already  know  week  berland  last  day  polycarp  went  doctor  problem  doctor  asked  sleeping  schedule  specifically  average  amount  hour  sleep  per  week  luckily  polycarp  kept  record  sleep  time  last  day  ha  sequence  sleep  time  day  record  large  polycarp  unable  calculate  average  value  thus  asking  help  calculation  get  average  polycarp  going  consider  consecutive  day  week  week  take  consideration  example  result  write  program  calculate  average  sleep  time  polycarp  week  contains  second  contains  output  average  sleeping  time  week
919/A __label__implementation  __label__greedy  __label__brute  force  often  supermarket  buy  fruit  vegetable  tag  print  price  kilo  supermarket  asked  much  item  clerk  say  yuan  kilo  need  care  yuan  yuan  kilo  imagine  like  buy  kilo  apple  asked  supermarket  got  price  find  minimum  cost  apple  assume  enough  apple  supermarket  contains  positive  denoting  supermarket  want  buy  kilo  apple  following  describe  information  supermarket  contains  positive  b  denoting  supermarket  supposed  pay  yuan  kilo  apple  denoting  minimum  cost  kilo  apple  please  make  sure  absolute  relative  error  answer  correct  answer  exceed
771/F __label__geometry  bearland  big  square  plane  contains  point  coordinate  exceeding  absolute  value  house  bearland  located  point  point  distinct  subset  collinear  bear  limak  life  house  want  destroy  house  build  new  somewhere  bearland  bear  like  big  change  every  point  house  sign  cross  product  relocation  wa  negative  positive  still  negative  positive  respectively  condition  satisfied  triple  index  possibly  equal  different  additionally  limak  allowed  build  house  point  house  already  exists  point  old  house  wa  formula  define  difference  cross  product  point  x  consider  set  possible  new  placement  limak  house  task  find  area  set  point  formally  let  say  limak  chooses  new  placement  randomly  coordinate  chosen  independently  uniformly  random  interval  let  denote  probability  getting  allowed  placement  new  house  let  denote  area  bearland  task  find  input  contains  test  case  description  test  case  follows  description  test  case  contains  house  next  contains  coordinate  house  house  located  point  test  case  limak  life  house  sum  exceed  print  real  value  denoting  area  set  point  possible  new  placement  limak  house
576/E __label__data  structures  __label__binary  search  note  unusual  memory  limit  problem  given  undirected  graph  consisting  vertex  edge  vertex  numbered  edge  numbered  edge  unpainted  painted  color  numbered  initially  none  edge  painted  color  get  query  form  repaint  edge  color  time  graph  formed  edge  color  must  bipartite  repaint  condition  violated  query  considered  invalid  edge  keep  color  otherwise  edge  repainted  color  query  considered  valid  recall  graph  called  bipartite  set  vertex  divided  part  edge  connected  vertex  part  example  suppose  given  triangle  graph  graph  vertex  edge  suppose  edge  painted  color  third  painted  color  query  repaint  third  edge  color  incorrect  execution  graph  formed  edge  color  bipartite  hand  possible  repaint  second  edge  color  receive  query  query  either  apply  report  query  valid  report  query  invalid  contains  vertex  edge  color  query  follow  edge  graph  form  follow  query  form  guaranteed  graph  multiple  edge  loop  query  print  yes  without  quote  valid  without  quote  query  destroys  bipartivity  graph  formed  edge  color
587/A __label__greedy  recently  duff  ha  practicing  weight  lifting  hard  practice  malek  gave  task  gave  sequence  weight  weight  wi  pound  step  duff  lift  remaining  weight  throw  away  doe  weight  left  malek  asked  minimize  step  duff  competitive  programming  fan  step  lift  throw  away  sequence  weight  ak  exists  non  negative  ak  sum  power  duff  competitive  programming  fan  programmer  asked  help  help  minimize  step  input  contains  weight  second  contains  separated  space  power  forming  weight  value  print  minimum  step  single
628/B __label__dp  max  want  buy  new  skateboard  ha  calculated  amount  money  needed  buy  new  skateboard  left  calculator  floor  went  ask  money  parent  meanwhile  little  brother  yusuf  came  started  press  key  randomly  unfortunately  max  ha  forgotten  calculated  thing  know  divisible  given  string  consisting  digit  display  calculator  yusuf  randomly  pressed  key  task  find  substring  divisible  substring  start  substring  string  nonempty  sequence  consecutive  character  example  string  substring  divisible  string  answer  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  get  scanf  printf  instead  getline  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  string  string  contains  digit  print  substring  string  divisible
767/A __label__implementation  __label__data  structures  according  old  legeng  long  time  ago  ankh  morpork  resident  something  wrong  miss  fortune  cursed  said  time  snack  distinct  size  fall  city  resident  build  snacktower  placing  snack  another  course  big  snack  bottom  tower  small  snack  top  year  passed  different  snack  started  fall  onto  city  resident  began  build  snacktower  faced  trouble  day  exactly  snack  fell  onto  city  order  wa  strange  day  resident  able  put  new  stack  top  snacktower  wait  bigger  snack  fell  course  order  anger  miss  fortune  resident  placed  snack  top  tower  immediately  could  write  program  model  behavior  ankh  morpork  resident  contains  single  total  snack  second  contains  equal  size  snack  fell  day  size  distinct  print  print  size  snack  resident  placed  top  snacktower  day  order  snack  placed  day  leave  corresponding  empty
1187/E __label__dp  __label__dfs  __label__trees  given  tree  undirected  connected  acyclic  graph  consisting  vertex  playing  game  tree  initially  vertex  white  turn  game  choose  vertex  paint  black  turn  choose  white  vertex  adjacent  connected  edge  black  vertex  paint  black  time  choose  vertex  even  turn  gain  point  equal  size  connected  component  consisting  white  vertex  contains  chosen  vertex  game  end  vertex  painted  black  let  see  following  example  vertex  painted  black  already  choose  vertex  gain  point  connected  component  consisting  vertex  choose  vertex  gain  point  connected  component  consisting  vertex  task  maximize  point  gain  contains  vertex  tree  next  describes  edge  tree  edge  denoted  index  vertex  connects  guaranteed  given  edge  form  tree  print  maximum  point  gain  play  optimally
727/E __label__data  structures  __label__strings  several  year  ago  tolya  computer  game  point  time  decided  burn  wrote  name  game  another  circle  clockwise  order  name  distinct  length  name  wa  equal  name  overlap  thus  cyclic  string  length  written  several  year  passed  tolya  remember  game  burned  know  popular  game  day  game  burned  game  game  wa  burned  restore  valid  list  game  tolya  could  burn  several  year  ago  input  contains  positive  amount  game  tolya  burned  length  name  second  input  contains  string  consisting  lowercase  english  letter  string  tolya  wrote  split  arbitrary  place  length  string  guaranteed  length  greater  third  input  contains  positive  n  amount  popular  game  could  written  guaranteed  total  length  name  popular  game  greater  next  contains  single  string  name  popular  game  name  consists  lowercase  english  letter  ha  length  guaranteed  name  distinct  answer  print  without  quote
415/A __label__implementation  mashmokh  work  factory  end  day  must  turn  light  light  factory  indexed  button  mashmokh  room  indexed  well  mashmokh  push  button  index  light  index  le  still  turned  turn  mashmokh  clever  instead  pushing  button  push  button  randomly  night  pushed  distinct  button  button  pushed  consecutively  given  order  night  want  know  light  index  button  turned  light  please  note  index  button  actually  please  help  mashmokh  print  index  input  contains  space  separated  factory  light  pushed  button  respectively  next  contains  distinct  space  separated  guaranteed  light  turned  pushing  button  output  space  separated  index  button  turn  light
21/C __label__dp  __label__sortings  __label__binary  search  bob  took  paper  stripe  square  height  stripe  square  square  wrote  possibly  negative  became  interested  many  way  exist  cut  stripe  piece  sum  piece  equal  sum  piece  piece  contains  positive  amount  square  would  help  bob  solve  problem  input  contains  amount  square  stripe  second  contains  space  separated  written  square  stripe  exceed  absolute  value  output  amount  way  cut  stripe  non  empty  piece  sum  piece  equal  sum  piece  forget  allowed  cut  stripe  along  square  border
883/K __label__implementation  __label__greedy  __label__constructive  algorithms  mayor  city  hate  tree  lawn  take  much  space  could  road  place  occupy  mayor  think  main  city  street  could  considerably  widened  account  lawn  nobody  need  anyway  moreover  might  help  reduce  car  jam  happen  time  time  street  street  split  equal  length  part  left  right  part  characterized  width  road  width  lawn  part  mayor  decide  size  lawn  demolish  part  reduce  lawn  width  ii  new  road  width  part  equal  new  lawn  width  equal  hand  mayor  want  demolish  much  lawn  possible  replace  road  hand  doe  want  create  rapid  widening  narrowing  road  would  lead  car  accident  avoid  mayor  decided  width  road  consecutive  part  differ  inequation  hold  initially  condition  might  true  need  find  total  width  lawn  mayor  destroy  according  plan  contains  part  street  following  contains  current  width  road  width  lawn  part  street  print  total  width  lawn  removed
1096/B __label__math  __label__strings  given  string  length  consisting  lowercase  latin  letter  substring  string  contiguous  subsequence  string  string  force  substring  string  codeforces  string  coder  task  calculate  way  remove  exactly  substring  string  way  remaining  character  equal  distinct  character  either  guaranteed  least  different  character  note  remove  whole  string  correct  note  remove  least  character  since  answer  rather  large  large  though  print  modulo  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  length  string  second  input  contains  string  length  consisting  lowercase  latin  letter  guaranteed  least  different  character  print  way  modulo  remove  exactly  substring  way  remaining  character  equal
785/B __label__greedy  __label__sortings  anton  like  play  chess  like  programming  wonder  decided  attend  chess  class  programming  class  anton  ha  variant  attend  chess  class  variant  given  period  time  ha  variant  attend  programming  class  variant  given  period  time  anton  need  choose  exactly  possible  period  time  attend  chess  class  exactly  possible  period  time  attend  programming  class  want  rest  class  possible  pair  period  want  choose  distance  period  maximal  distance  period  minimal  possible  distance  point  period  point  second  period  minimal  possible  l  l  particular  period  intersect  distance  anton  want  know  much  time  rest  class  last  best  case  help  anton  find  input  contains  single  time  period  anton  attend  chess  class  following  input  contains  variant  period  time  anton  attend  chess  class  following  input  contains  single  time  period  anton  attend  programming  class  following  input  contains  variant  period  time  anton  attend  programming  class  output  maximal  possible  distance  time  period
830/A __label__dp  __label__greedy  __label__sortings  __label__brute  force  __label__binary  search  people  key  straight  every  person  want  get  office  located  well  need  reach  point  key  take  key  office  key  taken  somebody  taken  anybody  else  determine  minimum  time  needed  people  get  office  key  assume  people  move  unit  distance  per  second  people  reach  key  time  take  key  person  pas  point  key  without  taking  contains  n  people  key  office  location  second  contains  distinct  position  people  located  initially  position  given  arbitrary  order  third  contains  distinct  j  position  key  position  given  arbitrary  order  note  person  key  point  person  key  located  point  print  minimum  time  second  needed  reach  office  key
868/G __label__math  prehistoric  cave  toll  located  moi  barcelona  heard  treasure  hidden  possible  spot  cave  assume  spot  ha  probability  treasure  get  cave  constructed  robot  search  cave  treasure  day  instruct  robot  visit  exactly  distinct  spot  cave  none  spot  treasure  robot  obviously  return  empty  hand  cave  dark  robot  miss  treasure  even  visiting  right  spot  formally  visited  spot  doe  treasure  robot  obtain  probability  otherwise  return  empty  time  robot  search  spot  treasure  success  probability  independent  previous  try  probability  miss  treasure  searching  right  spot  time  expected  day  take  obtain  treasure  choose  optimal  scheduling  robot  output  answer  rational  modulo  formally  let  answer  irreducible  fraction  output  guaranteed  divisible  contains  test  case  next  contains  test  case  output  answer  separate
900/D __label__math  __label__dp  __label__number  theory  count  distinct  sequence  consisting  positive  gcd  could  large  print  answer  modulo  gcd  mean  greatest  common  divisor  contains  positive  print  sequence  modulo
691/D __label__math  __label__dfs  given  permutation  pair  position  step  choose  pair  given  position  swap  position  lexicographically  maximal  permutation  get  let  permutation  lexicographically  smaller  exists  contains  length  permutation  pair  position  second  contains  distinct  element  permutation  last  contains  j  j  pair  position  swap  note  given  position  value  swap  print  distinct  lexicographically  maximal  permutation  get
757/C __label__data  structures  __label__sortings  __label__strings  time  year  felicity  around  corner  see  people  celebrating  around  himalayan  region  himalayan  region  ha  gym  gym  ha  pokemon  distinct  pokemon  type  himalayan  region  numbered  special  evolution  camp  set  fest  claim  evolve  pokemon  type  pokemon  could  change  evolving  subject  constraint  pokemon  type  evolving  type  evolving  pokemon  different  type  evolving  different  type  evolving  possible  pokemon  ha  type  evolving  formally  evolution  plan  permutation  mean  pokemon  type  evolves  pokemon  type  gym  leader  intrigued  special  evolution  camp  plan  evolve  pokemons  protocol  mountain  state  gym  every  type  pokemon  pokemon  type  evolving  pokemon  equal  pokemon  type  evolving  pokemons  according  evolution  plan  want  find  many  distinct  evolution  plan  exist  satisfy  protocol  evolution  plan  distinct  least  pokemon  type  evolving  different  pokemon  type  plan  exists  task  find  many  distinct  evolution  plan  possible  pokemon  gym  evolved  pokemon  type  gym  remains  answer  large  output  modulo  contains  gym  pokemon  type  next  description  pokemons  gym  begin  pokemon  gym  follow  denoting  type  pokemons  gym  total  pokemons  sum  doe  exceed  output  valid  evolution  plan  modulo
575/H __label__number  theory  sasha  ira  best  friend  friend  software  engineer  expert  artificial  intelligence  developing  algorithm  bot  playing  player  game  game  cooperative  turn  based  turn  player  make  move  matter  player  possible  player  turn  alternate  algorithm  bot  sasha  ira  developing  work  keeping  track  state  game  time  either  bot  make  move  state  change  since  game  dynamic  never  back  state  wa  already  point  past  sasha  ira  perfectionist  want  algorithm  optimal  winning  strategy  noticed  optimal  winning  strategy  bot  make  exactly  move  order  find  optimal  strategy  algorithm  need  analyze  possible  state  game  learned  alpha  beta  pruning  pick  best  sequence  move  worried  efficiency  algorithm  wondering  total  state  game  need  analyzed  contains  output  single  possible  state  modulo
1239/E __label__dp  __label__implementation  kolya  ha  turtle  field  size  n  field  row  numbered  top  bottom  column  numbered  left  right  suppose  cell  field  lettuce  leaf  energy  value  lettuce  leaf  row  column  equal  turtle  initially  top  left  cell  want  reach  bottom  right  cell  turtle  move  right  possible  way  choose  way  maximizing  total  energy  value  lettuce  leaf  case  several  path  choose  kolya  afraid  turtle  eat  much  lettuce  bad  health  want  reorder  lettuce  leaf  field  energetic  cost  leaf  eaten  turtle  minimized  contains  length  field  second  contains  energetic  cost  lettuce  leaf  row  field  third  contains  energetic  cost  lettuce  leaf  second  row  field  print  optimal  reordering  lettuce  input  data
1207/A __label__math  __label__implementation  __label__greedy  __label__brute  force  type  burger  restaurant  hamburger  chicken  burger  assemble  hamburger  need  bun  beef  patty  assemble  chicken  burger  need  bun  chicken  cutlet  bun  beef  patty  chicken  cutlet  restaurant  sell  hamburger  dollar  chicken  burger  dollar  calculate  maximum  profit  achieve  answer  independent  query  contains  query  query  contains  f  bun  beef  patty  chicken  cutlet  restaurant  second  query  contains  c  hamburger  chicken  burger  price  restaurant  query  print  maximum  profit  achieve
465/A __label__implementation  sergey  testing  next  generation  processor  instead  byte  processor  work  memory  cell  consisting  bit  bit  numbered  stored  cell  following  way  least  significant  bit  stored  bit  cell  next  significant  bit  stored  second  bit  significant  bit  stored  bit  sergey  want  test  following  instruction  add  value  cell  result  instruction  written  cell  must  increased  significant  bit  resulting  fit  cell  must  discarded  sergey  wrote  certain  value  bit  cell  going  add  value  many  bit  cell  change  operation  contains  single  bit  cell  second  contains  string  consisting  character  initial  state  cell  character  denotes  state  bit  cell  second  character  denotes  second  least  significant  bit  last  character  denotes  state  significant  bit  print  single  bit  cell  change  state  add  cell
687/C __label__dp  pari  want  buy  expensive  chocolate  arya  ha  coin  value  coin  price  chocolate  pari  take  subset  coin  sum  equal  give  arya  looking  coin  question  came  mind  giving  coin  arya  value  doe  arya  make  jealous  want  arya  make  lot  value  want  know  value  arya  able  make  using  subset  coin  sum  formally  pari  want  know  value  exists  subset  coin  sum  subset  subset  ha  sum  exists  way  pay  chocolate  arya  able  make  sum  using  coin  contains  coin  price  chocolate  respectively  next  value  pari  coin  guaranteed  make  value  using  coin  output  must  single  suitable  value  print  ascending  order  value  arya  make  subset  coin  pari  pay  chocolate
427/E __label__math  __label__implementation  __label__greedy  imagine  city  infinite  plane  cartesian  coordinate  system  crime  affected  road  city  axis  currently  criminal  along  road  police  station  ha  built  road  mayor  want  build  going  charge  new  police  station  mayor  ha  asked  choose  suitable  position  point  building  choose  best  position  police  station  could  minimize  total  time  criminal  catching  mission  mission  catching  criminal  operate  station  new  station  patrol  car  criminal  car  carry  car  bring  back  police  station  put  prison  patrol  car  carry  criminal  time  note  criminal  know  mission  stay  instead  running  away  task  find  position  police  station  total  distance  need  cover  catch  criminal  minimum  possible  note  built  police  station  position  criminal  already  exist  case  criminal  arrested  instantly  input  separated  space  next  separated  space  ith  position  ith  criminal  axis  absolute  value  position  exceed  criminal  ha  position  located  point  plane  position  criminal  given  non  decreasing  order  note  criminal  standing  point  plane  note  since  size  input  output  could  large  use  slow  input  output  technique  language  example  use  input  output  stream  cin  cout  print  single  mean  minimum  possible  distance  need  cover  catch  criminal
987/B __label__math  year  android  mass  production  decade  work  human  android  school  able  solve  creative  task  like  human  turn  high  school  struggle  gone  someone  like  others  bullied  vasya  economy  class  android  produced  little  known  company  design  perfect  characteristic  could  better  bullied  android  popular  prank  vasya  force  compare  android  millisecond  vasya  memory  small  store  big  please  help  vasya  write  fast  program  compare  vasya  maybe  android  respect  input  print  without  quote  print  without  quote  print  without  quote
818/F __label__math  __label__binary  search  ivan  developing  computer  game  try  create  level  game  firstly  level  need  draw  graph  representing  structure  level  ivan  decided  exactly  vertex  graph  representing  level  edge  bidirectional  constructing  graph  ivan  interested  special  edge  called  bridge  edge  vertex  called  bridge  edge  belongs  every  path  vertex  belong  different  connected  component  delete  edge  level  ivan  want  construct  graph  least  half  edge  bridge  want  maximize  edge  constructed  graph  task  ivan  gave  given  tell  maximum  edge  graph  vertex  least  half  edge  bridge  note  graph  multiple  edge  self  loop  input  file  contains  positive  graph  ivan  need  construct  follow  contains  positive  vertex  graph  note  hack  use  output  must  equal  maximum  edge  graph
719/A __label__implementation  every  summer  vitya  come  visit  grandmother  countryside  summer  got  huge  wart  every  grandma  know  treat  wart  moon  go  thus  vitya  ha  catch  moment  moon  moon  cycle  last  day  size  visible  part  moon  vitya  unit  day  cycle  repeat  thus  second  go  internet  countryside  vitya  ha  watching  moon  consecutive  day  day  wrote  size  visible  part  moon  help  find  whether  moon  next  day  determined  data  ha  input  contains  single  consecutive  day  vitya  wa  watching  size  visible  part  moon  second  contains  vitya  record  guaranteed  input  data  consistent  vitya  sure  size  visible  part  moon  day  le  size  visible  part  day  print  output  might  sure  size  visible  part  increase  print  impossible  determine  exactly  happen  moon  print
1037/A __label__math  __label__greedy  __label__constructive  algorithms  coin  value  distribute  packet  amount  formed  using  possibly  packet  packet  used  entirely  used  packet  used  formation  single  reused  formation  find  minimum  packet  distribution  contains  single  coin  output  single  minimum  possible  packet  satisfying  condition
1121/C __label__implementation  vasya  like  taking  part  codeforces  contest  round  vasya  follows  submission  system  testing  tab  solution  tested  test  testing  solution  test  take  second  solution  judged  order  testing  process  test  solution  simultaneously  test  solution  time  time  moment  testing  process  judging  solution  take  solution  queue  test  test  increasing  order  test  id  let  solution  tested  test  time  moment  till  time  moment  second  test  till  time  moment  solution  fully  tested  time  moment  testing  process  immediately  start  testing  another  solution  consider  time  moment  let  exactly  fully  tested  solution  moment  caption  system  testing  page  solution  calculated  round  round  n  round  function  map  every  real  nearest  vasya  call  submission  interesting  time  moment  possibly  non  solution  tested  test  caption  say  system  testing  find  interesting  solution  please  note  case  multiple  process  attempt  take  submission  queue  moment  instance  initial  moment  order  take  solution  doe  matter  contains  positive  standing  submission  testing  process  respectively  second  contains  positive  equal  test  submission  run  output  interesting  submission
865/E __label__dp  __label__graphs  __label__brute  force  copying  large  hexadecimal  base  string  hand  error  prone  stop  people  discovered  bug  code  wa  likely  caused  someone  making  mistake  copying  string  suspect  whoever  copied  string  change  digit  string  length  string  permuted  digit  arbitrarily  example  original  string  wa  abc  changed  cb  bca  abc  abb  unfortunately  access  original  string  copied  string  know  length  string  numerical  absolute  difference  given  difference  hexadecimal  string  ha  extended  equal  length  original  copied  string  determine  smallest  possible  numerical  value  original  string  hexadecimal  string  consisting  digit  lowercase  english  letter  length  least  character  non  possible  print  without  quote
1007/E __label__dp  simplified  version  mini  metro  game  subway  train  direction  station  people  waiting  train  station  beginning  game  game  start  beginning  hour  end  hour  couple  minute  end  hour  people  instantly  arrive  station  moment  people  station  larger  lose  player  ha  several  train  appoint  hour  capacity  train  passenger  middle  appointed  hour  train  go  station  taking  many  people  station  accommodate  train  take  people  station  people  station  multiple  train  appointed  hour  capacity  added  moving  together  player  want  stay  game  hour  determine  minimum  train  need  contains  station  hour  want  survive  capacity  train  respectively  next  contains  people  station  beginning  game  people  arriving  station  end  hour  maximum  people  station  allowed  respectively  output  single  answer  problem
679/D __label__math  __label__implementation  __label__dfs  __label__graphs  __label__brute  force  bearland  ha  city  numbered  bidirectional  road  road  connects  distinct  city  road  connect  pair  city  possible  get  city  city  using  road  distance  city  defined  minimum  road  used  travel  limak  grizzly  bear  criminal  task  catch  least  try  catch  day  today  tomorrow  limak  going  hide  forever  main  weapon  bcd  bear  criminal  detector  city  use  bcd  tell  distance  city  limak  currently  unfortunately  bcd  used  day  know  much  limak  current  location  assume  city  chosen  uniformly  random  city  probability  decided  following  plan  choose  city  use  bcd  using  bcd  try  catch  limak  maybe  good  idea  case  choose  city  check  win  limak  otherwise  limak  becomes  careful  never  catch  loose  wait  hour  use  bcd  know  limak  change  location  time  detail  choose  uniformly  random  road  initial  city  use  chosen  road  going  city  tomorrow  choose  city  use  bcd  finally  try  catch  limak  choose  city  check  win  limak  loose  otherwise  time  choose  city  choose  city  let  say  problem  quickly  get  somewhere  probability  finding  limak  behave  optimally  input  contains  city  road  respectively  follow  contains  aii  city  connected  road  road  connect  pair  city  possible  get  city  city  print  real  probability  finding  limak  behave  optimally  answer  considered  correct  absolute  error  doe  exceed
366/A __label__implementation  nothing  ha  changed  since  last  round  dima  inna  still  love  want  together  made  deal  seryozha  need  make  deal  dorm  guard  guardposts  dima  dorm  post  contains  guard  russia  usually  elderly  woman  bribe  guard  chocolate  bar  box  juice  guard  know  minimum  price  chocolate  bar  accept  gift  minimum  price  box  juice  accept  gift  chocolate  bar  guard  cost  le  minimum  chocolate  bar  price  guard  box  juice  guard  cost  le  minimum  box  juice  price  guard  guard  accept  gift  order  pas  guardpost  need  bribe  guard  shop  ha  unlimited  amount  juice  chocolate  price  starting  dima  want  choose  guardpost  buy  gift  guard  guardpost  spend  exactly  ruble  help  choose  post  safely  sneak  inna  otherwise  say  impossible  mind  inna  would  sorry  hear  input  contains  money  dima  want  spend  follow  describing  guardposts  contains  minimum  price  chocolate  minimum  price  juice  guard  minimum  price  chocolate  minimum  price  juice  second  guard  correspondingly  single  output  print  space  separated  guardpost  cost  present  cost  second  present  guardpost  dima  sneak  inna  condition  print  single
1110/B __label__greedy  __label__sortings  long  stick  consisting  segment  enumerated  segment  centimeter  long  sadly  segment  broken  need  repaired  infinitely  long  repair  tape  want  cut  piece  tape  use  cover  broken  segment  precise  piece  tape  length  placed  position  cover  segment  allowed  cover  non  broken  segment  possible  piece  tape  overlap  time  money  want  cut  continuous  piece  tape  cover  broken  segment  minimum  total  length  piece  contains  broken  segment  length  stick  maximum  piece  use  second  contains  position  broken  segment  given  increasing  order  print  minimum  total  length  piece
524/C __label__sortings  __label__binary  search  atm  well  known  bank  small  country  arranged  give  amount  money  requested  user  due  limited  size  bill  dispenser  device  directly  giving  money  atm  peculiarity  atm  structure  get  bill  bill  distinct  denomination  example  country  us  bill  denomination  burles  atm  give  sum  burles  burles  give  sum  burles  let  suppose  country  us  bill  distinct  denomination  atm  using  ha  unlimited  bill  type  know  day  need  withdraw  certain  amount  cash  time  know  atm  ha  multiple  way  give  money  chooses  requires  minimum  bill  display  error  message  done  determine  result  request  cash  withdrawal  contains  next  contains  space  separated  denomination  bill  used  country  follow  strictly  increasing  order  next  contains  request  cash  withdrawal  make  next  sum  money  burles  going  withdraw  atm  request  cash  withdrawal  print  single  minimum  bill  done  print  impossible  get  corresponding  sum
475/A __label__implementation  final  round  bayan  programming  contest  held  tehran  participant  carried  around  yellow  bus  bus  ha  passenger  seat  seat  last  row  seat  remaining  row  event  coordinator  ha  list  participant  picked  airport  participant  get  bus  sit  last  row  empty  seat  empty  seat  row  take  leftmost  order  keep  track  people  bus  event  coordinator  need  figure  showing  seat  going  taken  participant  task  draw  figure  representing  occupied  seat  input  contains  denoting  participant  print  figure  bus  passenger  described  sample  test  character  denotes  empty  seat  denotes  taken  seat  bus  driver  character  output  purpose  beautifying  figure  strictly  follow  sample  test  case  output  format  print  exactly  output  extra  space  character
1038/E __label__dp  __label__dfs  __label__graphs  __label__brute  force  given  block  form  color  valuecolor  block  flipped  get  color  valuecolor  sequence  block  called  valid  touching  endpoint  neighboring  block  color  example  sequence  block  valid  left  color  right  color  right  color  left  color  value  sequence  defined  sum  value  block  sequence  find  maximum  possible  value  valid  sequence  constructed  subset  given  block  block  subset  reordered  flipped  necessary  block  used  sequence  input  contains  single  given  block  following  describes  corresponding  block  consists  color  value  color  color  color  value  print  exactly  maximum  total  value  subset  block  make  valid  sequence
622/E __label__greedy  __label__sortings  __label__dfs  __label__trees  tree  connected  graph  without  cycle  leaf  tree  vertex  connected  exactly  vertex  given  tree  vertex  root  vertex  ant  leaf  tree  second  ant  simultaneously  parent  vertex  vertex  ant  vertex  simultaneously  except  root  tree  find  minimal  time  required  ant  root  tree  note  start  ant  leaf  tree  contains  vertex  tree  next  contains  end  edge  guaranteed  given  correct  undirected  tree  print  minimal  time  required  ant  root  tree
1208/H __label__implementation  __label__data  structures  __label__trees  given  tree  node  tree  rooted  node  considered  leaf  regardless  degree  leaf  tree  ha  color  red  blue  leaf  node  initially  ha  color  color  internal  node  including  root  determined  follows  let  blue  immediate  child  red  immediate  child  given  vertex  color  vertex  blue  b  otherwise  red  parameter  node  need  handle  following  type  query  print  color  node  change  color  leaf  mean  red  mean  blue  update  current  value  input  consists  node  initial  parameter  next  contains  denoting  edge  vertex  next  consists  space  separated  initial  array  mean  color  node  red  mean  color  node  blue  mean  node  leaf  next  contains  query  follow  containing  query  following  query  print  color  node  change  color  leaf  mean  red  mean  blue  guaranteed  leaf  update  current  value  query  type  print  color  vertex  red  otherwise
1196/E __label__implementation  __label__constructive  algorithms  given  chessboard  size  top  left  cell  cell  painted  white  task  find  connected  component  chessboard  contains  exactly  black  cell  exactly  white  cell  cell  called  connected  share  side  cell  connected  cell  set  cell  called  connected  component  every  pair  cell  set  exists  sequence  cell  belong  set  cell  every  cell  connected  obviously  impossible  find  component  case  print  otherwise  print  yes  suitable  connected  component  answer  independent  query  input  contains  query  query  follow  query  contains  black  cell  required  white  cell  required  guaranteed  sum  cell  doe  exceed  query  print  answer
671/D __label__dp  __label__greedy  __label__data  structures  mayor  yusland  lottery  decided  spent  money  something  good  town  example  repair  road  town  yusland  consists  intersection  connected  bidirectional  road  travel  intersection  intersection  using  road  road  repairing  company  town  named  company  company  center  located  intersection  company  repair  road  tell  instead  worker  intersection  repair  specific  path  worker  paid  coin  repair  road  path  lie  path  intersection  mayor  asks  choose  cheapest  way  hire  subset  worker  order  repair  road  yusland  allowed  road  repaired  impossible  repair  road  print  input  contains  city  yusland  worker  respectively  follow  contains  index  intersection  connected  road  last  provide  description  worker  containing  mean  worker  repair  road  path  coin  guaranteed  lie  path  note  coincide  impossible  repair  road  print  otherwise  print  single  minimum  cost  required  repair  road  using  company  worker
357/B __label__implementation  __label__constructive  algorithms  berland  national  holiday  coming  flag  day  honor  event  president  country  decided  make  big  dance  party  asked  agency  organize  ha  several  condition  overall  must  dance  exactly  people  must  take  part  dance  dance  must  dancer  white  clothes  dancer  red  clothes  dancer  blue  clothes  color  national  flag  berland  agency  ha  dancer  le  dancer  probably  dance  dance  dancer  must  dance  party  dance  ha  dancer  previous  dance  current  dance  stop  spectacular  agency  allow  happen  dance  ha  dancer  ha  danced  previous  dance  considered  criterion  made  plan  dance  dance  dancer  participating  task  determine  clothes  color  dancer  president  third  condition  fulfilled  dance  must  dancer  white  dancer  red  dancer  blue  dancer  change  clothes  dance  contains  space  separated  dancer  dance  correspondingly  follow  describing  dance  order  dancing  contains  distinct  dancer  take  part  dance  dancer  numbered  dancer  take  part  least  dance  print  space  separated  must  represent  color  dancer  clothes  white  red  blue  multiple  valid  solution  print  guaranteed  least  solution  exists
802/L __label__math  __label__dp  __label__dfs  __label__trees  heidi  terrified  estimate  found  unrealistic  friend  would  collaborate  drive  debt  expects  actually  person  pick  random  friend  send  heidi  randomness  assumption  implies  visit  friend  arbitrary  time  moreover  person  ha  friend  common  heidi  person  leaf  tree  person  send  heidi  back  heidi  travel  end  point  heidi  found  unrealistic  assumption  make  travel  day  therefore  assumes  every  time  travel  route  friend  need  buy  new  ticket  want  know  much  expect  spend  trip  worth  heidi  know  jenny  ha  least  friend  contains  friend  next  space  separated  meaning  friend  cost  traveling  paid  every  time  guaranteed  social  network  input  form  tree  assume  expected  cost  trip  written  irreducible  fraction  coprime  heidi  weird  cow  asks  output  output  single
398/C __label__constructive  algorithms  user  ainta  like  tree  time  going  make  undirected  tree  vertex  numbered  tree  weighted  edge  tree  weight  ha  array  element  array  initialized  edge  connecting  vertex  tree  weight  ainta  add  value  element  array  let  assume  total  weight  edge  shortest  path  vertex  vertex  user  ainta  call  pair  good  user  ainta  want  make  least  good  pair  make  proper  tree  help  ainta  find  tree  contains  single  print  containing  description  edge  space  separated  vertex  connected  edge  weight  edge
827/E __label__math  __label__strings  grigory  love  string  recently  found  metal  strip  loft  strip  length  consisted  letter  unfortunately  rust  ha  eaten  letter  impossible  understand  letter  wa  written  grigory  understand  long  time  letter  remind  became  interested  following  question  put  letter  unreadable  position  value  period  resulting  string  equal  period  string  length  string  put  string  shifted  position  right  overlapping  letter  coincide  example  period  vkkvk  several  least  test  case  input  contains  single  test  case  empty  test  case  test  case  described  contains  single  length  string  second  contains  string  length  consisting  letter  character  latter  mean  letter  position  unreadable  guaranteed  sum  length  test  case  exceed  hack  use  test  test  case  test  case  print  print  possible  period  replace  unreadable  letter  next  print  value  increasing  order
610/D __label__data  structures  __label__constructive  algorithms  __label__geometry  vika  ha  infinite  sheet  squared  paper  initially  square  white  introduced  dimensional  coordinate  system  sheet  drew  black  horizontal  vertical  segment  parallel  coordinate  ax  segment  width  equal  square  mean  every  segment  occupy  set  neighbouring  square  situated  row  column  task  calculate  painted  cell  cell  wa  painted  calculated  exactly  input  contains  single  segment  drawn  vika  next  contains  coordinate  endpoint  segment  drawn  vika  guaranteed  segment  parallel  coordinate  ax  segment  touch  overlap  even  completely  coincide  print  cell  painted  vika  cell  wa  painted  calculated  exactly  answer
758/C __label__math  __label__implementation  __label__constructive  algorithms  __label__binary  search  literature  lesson  sergei  noticed  awful  injustice  seems  student  asked  often  others  seating  class  look  like  rectangle  row  pupil  teacher  asks  pupil  following  order  asks  pupil  row  order  seating  continues  ask  pupil  next  row  teacher  asked  last  row  direction  poll  change  mean  asks  previous  row  order  asking  row  look  follows  row  row  row  row  row  row  row  row  order  asking  pupil  row  always  pupil  pupil  pupil  lesson  teacher  managed  ask  exactly  question  pupil  order  described  sergei  seat  row  place  row  sergei  decided  prove  teacher  pupil  asked  irregularly  help  count  value  maximum  question  particular  pupil  asked  minimum  question  particular  pupil  asked  many  time  teacher  asked  sergei  row  class  teacher  always  asks  child  row  contains  print
427/A __label__implementation  police  department  city  ha  started  journey  initially  manpower  started  hiring  new  recruit  group  meanwhile  crime  keep  occurring  city  member  police  force  investigate  crime  lifetime  police  officer  free  busy  crime  occurrence  crime  untreated  given  chronological  order  crime  occurrence  recruit  hirings  find  crime  untreated  input  event  next  space  separated  mean  crime  ha  occurred  otherwise  positive  officer  recruited  together  time  officer  recruited  time  print  single  crime  untreated
1053/E __label__trees  __label__constructive  algorithms  euler  little  cute  squirrel  autumn  come  collect  reserve  winter  interesting  fact  euler  like  collect  acorn  specific  way  tree  described  acorn  connected  branch  exactly  way  pair  acorn  let  enumerate  acorn  squirrel  chooses  acorn  necessary  start  visit  way  called  euler  tour  see  note  collecting  acorn  visit  last  time  today  morning  kate  wa  observing  euler  took  sheet  paper  wrote  consecutive  index  acorn  path  unfortunately  way  home  started  raining  became  illegible  girl  sad  ha  present  observation  teacher  maybe  guess  lacking  able  thought  help  restore  valid  euler  tour  tree  tell  must  made  mistake  contains  single  denoting  acorn  tree  second  contains  n  n  euler  tour  tree  kate  wrote  mean  illegible  ha  guessed  euler  tour  satisfying  given  description  output
1174/B __label__sortings  given  array  length  perform  following  operation  many  time  want  pick  odd  swap  lexicographically  smallest  array  obtain  array  lexicographically  smaller  array  exists  index  le  formally  index  differ  contains  element  array  second  contains  space  separated  element  array  contains  space  separated  lexicographically  smallest  array  obtain
489/B __label__dp  __label__greedy  __label__sortings  __label__dfs  berland  state  university  hosting  ballroom  dance  celebration  anniversary  boy  girl  already  busy  rehearsing  waltz  minuet  polonaise  quadrille  move  know  several  boy  girl  pair  going  invited  ball  partner  dancing  skill  pair  must  differ  boy  know  dancing  skill  similarly  girl  know  dancing  skill  write  code  determine  largest  possible  pair  formed  boy  girl  contains  boy  second  contains  sequence  boy  dancing  skill  similarly  third  contains  girl  fourth  contains  sequence  j  girl  dancing  skill  print  single  required  maximum  possible  pair
1039/A __label__math  __label__greedy  __label__data  structures  __label__constructive  algorithms  bus  stop  denoted  bus  every  day  shortest  path  take  unit  time  bus  might  take  longer  path  moreover  bus  allowed  overtake  route  station  find  sorted  list  moment  time  bus  station  denote  list  stop  stop  bus  always  depart  arrive  according  timetable  order  bus  arrive  differ  let  call  order  arrival  valid  bus  arrives  least  unit  time  later  departs  known  order  valid  latest  possible  arrival  bus  departs  timetable  word  exists  valid  order  arrival  bus  departed  arrives  bus  arrive  arbitrary  valid  order  arrival  departed  bus  arrives  formally  let  call  permutation  valid  maximum  value  valid  permutation  given  sequence  arrival  timetable  find  suitable  timetable  stop  determine  timetable  input  contains  bus  timetable  minimum  possible  travel  time  stop  stop  second  contains  defining  moment  time  bus  leave  stop  third  contains  stand  maximum  possible  timetable  position  bus  leaving  stop  arrive  stop  solution  exists  print  yes  without  quote  output
23/C __label__sortings  __label__constructive  algorithms  box  apple  orange  task  choose  box  le  half  apple  le  half  orange  input  contains  amount  test  description  test  start  natural  amount  box  following  contains  amount  apple  orange  box  sum  test  input  exceed  input  test  output  output  yes  possible  choose  box  otherwise  answer  positive  output  second  index  chosen  box  box  numbered  input  order  otherwise  leave  second  empty  separate  space
625/C __label__implementation  __label__constructive  algorithms  people  many  crazy  thing  stand  crowd  dance  learn  heart  rule  russian  language  try  become  outstanding  competitive  programmer  others  collect  funny  math  object  ali  collector  right  want  get  special  table  case  forget  table  n  called  special  following  condition  satisfied  every  appears  table  exactly  row  situated  increasing  order  sum  column  maximum  possible  goal  help  alice  find  least  special  table  size  n  row  column  numbered  row  numbered  top  bottom  column  numbered  left  right  input  contains  size  table  alice  looking  column  maximum  possible  sum  print  sum  column  required  table
420/C __label__implementation  __label__data  structures  __label__graphs  recently  serious  bug  ha  found  fo  code  head  company  want  find  culprit  punish  set  organizational  meeting  issue  bugged  code  coder  meeting  said  know  sure  either  head  company  decided  choose  suspect  invite  office  naturally  consider  coder  opinion  head  want  make  choice  least  coder  agreed  coder  agrees  choice  suspect  least  people  named  meeting  wa  chosen  suspect  many  way  head  choose  suspect  note  even  coder  wa  chosen  suspect  agree  head  choice  named  chosen  coder  meeting  contains  coder  company  minimum  agreed  people  next  contains  coder  named  coder  guaranteed  xi  yi  xii  print  single  possible  suspect  set  note  order  suspect  matter  set  considered  identical
990/B __label__greedy  __label__sortings  petri  dish  bacteria  preparing  dive  harsh  micro  world  unfortunately  microscope  nearby  watch  know  bacteria  petri  dish  size  bacteria  know  intergalactic  positive  constant  bacteria  swallow  bacteria  bacteria  disappear  bacteria  change  size  bacteria  perform  multiple  swallow  swallow  operation  bacteria  swallow  bacteria  swallow  operation  another  example  sequence  bacteria  size  possible  sequence  swallow  total  bacteria  remained  petri  dish  since  microscope  guess  minimal  possible  bacteria  remain  petri  dish  finally  find  microscope  contains  space  separated  positive  bacteria  intergalactic  constant  second  contains  space  separated  size  bacteria  print  minimal  possible  bacteria  remain
544/B __label__implementation  __label__constructive  algorithms  map  object  rectangular  field  consisting  row  column  cell  initially  occupied  sea  cover  cell  map  sand  exactly  island  appear  map  call  set  sand  cell  island  possible  get  moving  sand  cell  moving  cell  side  adjacent  cell  cell  called  side  adjacent  share  vertical  horizontal  side  easy  see  island  share  cell  otherwise  together  form  bigger  island  find  way  cover  cell  sand  exactly  island  appear  n  map  determine  way  exists  single  contains  positive  size  map  island  form  answer  exist  print  without  quote  single
749/D __label__data  structures  __label__binary  search  people  taking  part  auction  today  rule  auction  classical  bid  made  though  guaranteed  different  people  might  happen  people  made  bid  bid  define  index  person  made  bid  size  bid  given  chronological  order  meaning  moreover  participant  never  make  bid  row  update  bid  aii  curious  following  question  bid  win  auction  participant  absent  consider  someone  wa  absent  bid  removed  new  bid  added  note  imaginary  exclusion  participant  happens  remaining  participant  make  bid  twice  time  row  bid  counted  better  understanding  take  look  sample  several  question  mind  compute  answer  input  contains  participant  bid  following  contains  participant  made  bid  size  bid  next  contains  question  mind  next  contains  followed  j  people  coming  question  index  guarenteed  value  different  single  question  guaranteed  sum  question  exceed  question  print  index  winner  size  winning  bid  winner  remaining  bid  print
367/E __label__dp  sereja  interested  interval  ha  prepared  problem  interval  interval  pair  interval  belongs  interval  following  condition  met  l  sereja  want  write  sequence  interval  piece  paper  interval  sequence  belong  interval  sequence  sereja  love  much  want  least  interval  sequence  sereja  wonder  many  distinct  way  write  interval  help  sereja  find  required  way  modulo  way  considered  distinct  interval  corresponding  sequence  equal  contains  segment  sequence  constraint  segment  sereja  favourite  single  print  answer  modulo
540/A __label__implementation  scrooge  mcduck  keep  treasured  saving  home  safe  combination  lock  time  want  put  treasure  earned  fair  square  ha  open  lock  combination  lock  represented  rotating  disk  digit  written  scrooge  mcduck  ha  turn  disk  combination  digit  disk  form  secret  combination  move  rotate  disk  digit  forward  backwards  particular  move  digit  digit  vice  versa  minimum  action  doe  need  contains  single  disk  combination  lock  second  contains  string  digit  original  state  disk  third  contains  string  digit  scrooge  mcduck  combination  open  lock  print  single  minimum  move  scrooge  mcduck  need  open  lock
1199/B __label__math  __label__geometry  sailing  boat  inessa  noticed  beautiful  water  lily  flower  lake  surface  came  closer  turned  lily  wa  exactly  centimeter  water  surface  inessa  grabbed  flower  sailed  distance  centimeter  exactly  point  flower  touched  water  surface  suppose  lily  grows  point  lake  bottom  stem  always  straight  segment  endpoint  point  suppose  initially  flower  wa  exactly  point  stem  wa  vertical  determine  depth  lake  point  contains  print  single  depth  lake  point  absolute  relative  error  exceed
363/B __label__dp  __label__brute  force  fence  front  polycarpus  home  fence  consists  plank  width  another  left  right  height  plank  meter  distinct  plank  distinct  height  fence  polycarpus  ha  bought  posh  piano  thinking  get  house  order  carry  plan  need  take  exactly  consecutive  plank  fence  higher  plank  harder  tear  fence  polycarpus  want  find  consecutive  plank  sum  height  minimal  possible  write  program  find  index  consecutive  plank  minimal  total  height  pay  attention  fence  around  polycarpus  home  front  home  word  fence  cyclic  input  contains  plank  fence  width  hole  piano  second  contains  sequence  height  plank  fence  print  sum  height  plank  minimum  possible  multiple  print
847/D __label__greedy  __label__data  structures  new  dog  show  starting  next  week  show  dog  required  demonstrate  bottomless  stomach  strategic  thinking  self  preservation  instinct  dog  invited  compete  participant  naturally  want  win  show  dog  need  eat  many  bowl  dog  food  possible  bottomless  stomach  help  dog  compete  separately  rule  follows  start  show  dog  bowl  located  dog  start  position  bowl  located  position  bowl  numbered  left  right  show  start  dog  immediately  begin  run  right  bowl  food  inside  bowl  ready  eating  start  hot  dog  self  preservation  instinct  prevents  eating  formally  dog  eat  bowl  second  start  show  later  take  dog  second  move  position  position  dog  allowed  move  left  dog  run  right  constant  speed  distance  unit  per  second  dog  reach  bowl  say  bowl  following  case  possible  food  cooled  passed  least  second  show  start  dog  immediately  eats  food  run  right  without  stop  food  hot  passed  le  second  show  start  dog  ha  option  wait  bowl  eat  food  continue  run  moment  skip  bowl  continue  run  right  without  stop  second  start  show  end  dog  reach  bowl  food  moment  dog  eat  show  stop  second  dog  run  right  last  bowl  need  help  dog  create  strategy  maximum  possible  bowl  food  eaten  second  given  bowl  food  time  dog  stopped  next  given  moment  time  bowl  food  ready  eating  output  single  maximum  bowl  food  dog  able  eat  second
1007/B __label__math  __label__brute  force  __label__number  theory  given  rectangular  parallelepiped  side  positive  length  find  different  group  parallelepiped  abc  paved  parallelepiped  abc  note  small  parallelepiped  rotated  direction  example  parallelepiped  divided  parallelepiped  divided  parallelepiped  contains  single  test  case  next  contains  size  parallelepiped  test  case  print  different  group  point  satisfy  given  condition
380/D __label__math  cinema  theater  hall  sereja  city  seat  lined  front  large  screen  slot  personal  possession  left  right  seat  adjacent  seat  exactly  shared  slot  figure  show  arrangement  seat  slot  today  premiere  movie  called  dry  hard  ticket  seat  sold  strict  controller  entrance  theater  people  come  hall  soon  person  enters  cinema  hall  immediately  momentarily  take  seat  occupies  empty  slot  left  right  empty  slot  man  get  really  upset  leaf  people  constant  hard  predict  order  viewer  enter  hall  seat  sereja  know  viewer  entering  queue  viewer  come  take  seat  others  order  programmer  mathematician  sereja  wonder  many  way  people  enter  hall  nobody  get  upset  quite  large  print  modulo  contains  second  contains  show  either  index  person  index  entering  queue  ticket  seat  index  known  guaranteed  positive  second  distinct  assume  index  person  enters  cinema  hall  unique  person  ha  index  come  hall  person  ha  index  come  second  single  print  remainder  dividing  answer
650/C __label__dp  __label__greedy  __label__dfs  __label__graphs  little  petya  fond  data  compression  algorithm  ha  already  studied  zip  algorithm  many  others  inspired  new  knowledge  petya  developing  new  compression  algorithm  want  name  dis  petya  decided  compress  table  given  table  consisting  row  column  filled  positive  want  build  table  consisting  positive  relative  order  element  row  column  remains  row  initial  table  resulting  table  similarly  column  initial  table  compressed  table  large  value  require  space  store  maximum  value  small  possible  petya  good  theory  need  help  implement  algorithm  input  contains  row  column  table  respectively  following  row  value  table  output  compressed  table  form  containing
495/A __label__implementation  malek  life  apartment  block  floor  numbered  apartment  ha  elevator  digital  counter  showing  floor  elevator  currently  elevator  show  digit  light  stick  turning  picture  show  elevator  show  digit  day  malek  wanted  floor  floor  using  elevator  noticed  counter  show  instead  elevator  started  moving  counter  changed  little  thinking  malek  came  conclusion  explanation  stick  counter  wa  broken  later  day  malek  wa  thinking  broken  stick  suddenly  came  following  problem  suppose  digital  counter  showing  malek  call  good  possible  digital  counter  wa  supposed  show  possibly  none  broken  stick  showing  instead  malek  want  know  good  specific  must  write  program  calculates  please  note  counter  always  show  digit  input  contains  exactly  digit  representing  note  leading  output  print  good
731/F __label__math  __label__implementation  __label__data  structures  __label__brute  force  __label__number  theory  little  vlad  fond  popular  computer  game  bota  recently  developer  announced  new  add  named  bota  course  vlad  immediately  bought  find  computer  old  new  game  need  updated  video  card  shop  power  video  card  equal  value  vlad  want  sure  new  game  work  want  buy  several  video  card  unite  power  using  cutting  edge  technology  use  technology  card  chosen  leading  video  card  attached  secondary  new  technology  work  required  power  secondary  video  card  divisible  power  leading  video  card  order  achieve  power  secondary  video  card  reduced  value  le  equal  current  power  power  leading  video  card  remain  unchanged  reduced  vlad  ha  infinite  amount  money  buy  set  video  card  help  determine  video  card  buy  picking  leading  video  card  reducing  power  others  make  work  together  get  maximum  total  value  video  power  input  contains  single  video  card  shop  second  contains  power  video  card  output  value  maximum  possible  total  power  video  card  working  together
1238/E __label__dp  password  often  type  string  length  every  character  string  lowercase  latin  letter  since  spend  lot  time  typing  want  buy  new  keyboard  keyboard  permutation  latin  letter  example  possible  keyboard  abc  acb  bac  bca  cab  cba  since  type  password  finger  need  spend  time  moving  finger  password  character  next  time  move  character  character  equal  distance  character  keyboard  total  time  spend  typing  password  keyboard  called  slowness  keyboard  formaly  slowness  keyboard  equal  position  letter  keyboard  example  aacabc  keyboard  bac  total  time  typing  password  buying  new  keyboard  want  know  minimum  possible  slowness  keyboard  contains  second  contains  string  consisting  character  character  latin  letter  lowercase  print  minimum  slowness  keyboard
1163/B1 __label__implementation  __label__data  structures  problem  next  ha  smaller  constraint  shiro  moved  new  house  want  invite  friend  house  play  monopoly  house  small  invite  friend  time  day  since  day  shiro  moved  new  house  exactly  cat  coming  shiro  house  cat  coming  day  ha  ribbon  color  shiro  want  know  largest  consider  streak  day  possible  remove  exactly  day  streak  every  ribbon  color  ha  appeared  remaining  occurrence  example  consider  following  sequence  make  streak  since  remove  leftmost  ribbon  color  appear  exactly  twice  prefix  day  note  form  streak  since  must  remove  exactly  day  since  shiro  cat  good  counting  need  help  finding  longest  streak  contains  single  total  day  second  contains  color  ribbon  cat  wear  print  single  largest  possible  streak  day
717/B __label__dp  __label__greedy  r  spent  time  internship  mdcs  earning  enough  money  decided  holiday  somewhere  far  far  away  enjoyed  suntanning  drinking  alcohol  free  cocktail  going  concert  popular  local  band  listening  white  button  hit  song  dacan  baker  met  another  robot  wa  sure  love  life  well  summer  least  anyway  r  wa  shy  approach  potential  soulmate  decided  write  love  letter  stumbled  upon  problem  due  terrorist  threat  intergalactic  space  police  wa  monitoring  letter  sent  area  thus  r  decided  invent  alphabet  wa  sure  love  would  able  decipher  letter  r  alphabet  want  represent  letter  sequence  letter  sequence  prefix  another  letter  sequence  since  intergalactic  space  communication  service  ha  lately  introduced  tax  invented  alphabet  r  must  pay  certain  amount  money  bit  alphabet  code  check  sample  test  clarification  lovestruck  think  clearly  asked  help  given  cost  r  alphabet  respectively  come  coding  alphabet  property  minimum  total  cost  input  contains  letter  alphabet  cost  respectively  output  single  minimum  possible  total  cost  whole  alphabet
463/D __label__dp  __label__implementation  __label__dfs  __label__graphs  gargari  got  bored  play  bishop  solving  problem  trying  math  homework  math  book  found  permutation  consists  order  find  length  longest  common  subsequence  permutation  help  gargari  read  longest  common  subsequence  http  wikipedia  org  wiki  longestcommonsubsequenceproblem  contains  next  contains  order  description  current  permutation  print  length  longest  common  subsequence
893/B __label__implementation  __label__brute  force  recently  luba  learned  special  kind  call  beautiful  called  beautiful  iff  binary  representation  consists  consecutive  consecutive  example  beautiful  formally  beautiful  iff  exists  positive  equal  luba  ha  got  want  find  greatest  beautiful  divisor  help  find  input  contains  luba  ha  got  output  greatest  beautiful  divisor  luba  obvious  answer  always  exists
1183/B __label__math  product  shop  price  product  owner  shop  want  equalize  price  product  want  change  price  smoothly  fact  owner  shop  change  price  product  way  difference  old  price  product  new  price  word  condition  satisfied  absolute  value  change  price  product  note  leave  old  price  product  new  price  product  positive  satisfied  task  find  maximum  possible  equal  price  productts  restriction  product  condiion  satisfied  old  price  product  new  price  product  report  impossible  find  price  note  chosen  price  answer  independent  query  input  contains  query  query  presented  query  contains  product  value  second  query  contains  price  product  print  answer  query
853/C __label__data  structures  ilya  sitting  waiting  area  metropolis  airport  bored  looking  time  table  show  plane  delayed  took  sheet  paper  decided  solve  problem  ilya  ha  drawn  grid  size  n  marked  square  marked  square  share  row  column  call  rectangle  grid  side  parallel  grid  side  beautiful  exactly  corner  square  marked  exactly  beautiful  rectangle  ilya  ha  chosen  query  rectangle  grid  side  parallel  grid  side  necessarily  beautiful  rectangle  want  find  beauty  degree  beauty  degree  rectangle  beautiful  rectangle  share  least  square  given  ilya  think  might  enough  time  solve  problem  till  departure  flight  given  description  marked  cell  query  rectangle  help  ilya  find  beauty  degree  query  rectangle  input  contains  size  grid  query  rectangle  second  contains  separated  space  different  specify  grid  square  marked  ilya  column  ha  marked  square  row  row  numbered  bottom  top  column  numbered  left  right  following  describe  query  rectangle  rectangle  described  leftmost  rightmost  column  rectangle  bottommost  topmost  row  rectangle  query  rectangle  output  beauty  degree  separate
1209/D __label__dfs  __label__graphs  legendary  farmer  john  throwing  huge  party  animal  world  hanging  house  guest  hungry  instructs  cow  bessie  bring  snack  moo  snack  flavor  numbered  bessie  ha  snack  snack  flavor  every  guest  ha  exactly  favorite  flavor  procedure  eating  snack  follows  bessie  guest  way  order  guest  approach  snack  guest  turn  eat  remaining  snack  favorite  flavor  case  favorite  flavor  present  guest  go  become  sad  help  bessie  minimize  sad  guest  lining  guest  optimal  way  contains  snack  guest  following  contains  favorite  snack  flavor  guest  output  smallest  possible  sad  guest
1033/A __label__implementation  __label__dfs  __label__graphs  alice  bob  playing  chess  huge  chessboard  dimension  nn  alice  ha  single  piece  left  queen  located  bob  ha  king  standing  alice  think  queen  dominating  chessboard  victory  bob  ha  made  devious  plan  seize  victory  need  march  king  order  claim  victory  alice  distracted  sense  superiority  longer  move  piece  around  bob  make  turn  bob  win  move  king  without  ever  getting  check  remember  king  move  adjacent  square  king  check  rank  row  file  column  diagonal  enemy  queen  find  whether  bob  win  contains  single  dimension  chessboard  second  contains  coordinate  alice  queen  third  contains  coordinate  bob  king  fourth  contains  coordinate  location  bob  want  get  guaranteed  bob  king  currently  check  target  location  check  either  furthermore  king  located  square  queen  target  doe  coincide  neither  queen  position  king  position  print  yes  without  quote  bob  get  without  ever  getting  check  otherwise  print
1006/C __label__data  structures  __label__binary  search  given  array  consisting  task  split  array  part  empty  way  element  array  belongs  exactly  part  part  form  consecutive  contiguous  subsegment  possibly  empty  original  array  let  sum  element  part  sum  element  second  part  sum  element  third  part  possible  way  split  array  choose  way  maximum  possible  formally  part  array  contains  element  second  part  array  contains  element  third  part  contains  element  sum  di  sum  bdi  sum  cdi  sum  empty  array  task  find  way  split  array  maximum  possible  input  contains  element  array  second  input  contains  element  array  print  single  maximum  possible  value  considering  condition  must  met
1151/D __label__math  __label__greedy  __label__sortings  break  buffet  scientific  lyceum  kingdom  kremland  wa  formed  queue  high  school  student  numbered  initially  student  position  student  characterized  dissatisfaction  person  equal  product  people  standing  left  position  add  product  people  standing  right  position  formally  dissatisfaction  student  position  equal  director  entrusted  stas  task  rearrange  people  queue  minimize  total  dissatisfaction  although  stas  able  solve  problem  wa  given  turned  help  contains  single  people  queue  following  contains  characteristic  student  initially  position  output  minimum  total  dissatisfaction  achieved  rearranging  people  queue
983/B __label__dp  array  length  define  function  otherwise  bitwise  exclusive  example  given  array  query  query  represented  answer  maximum  value  continuous  subsegments  array  contains  single  length  second  contains  element  array  third  contains  single  query  next  contains  query  represented  print  answer  query
366/D __label__data  structures  __label__dfs  __label__binary  search  dima  inna  love  spending  time  together  problem  seryozha  enthusiastic  leave  room  reason  dima  inna  love  much  decided  get  criminal  dima  constructed  trap  graph  shouted  hey  seryozha  look  cool  graph  get  roommate  interested  kicked  node  trap  graph  undirected  graph  consisting  node  edge  edge  dima  denoted  range  lkk  order  get  trap  graph  seryozha  initially  starting  movement  pick  let  call  seryozha  must  way  starting  node  final  node  seryozha  along  edge  lkk  seryozha  mathematician  defined  loyalty  path  node  initially  chooses  pass  whole  path  help  seryozha  find  path  maximum  loyalty  return  room  quickly  possible  input  contains  follow  describing  edge  contains  k  k  kk  mean  trap  graph  edge  connects  node  edge  corresponds  range  note  given  graph  loop  multiple  edge  single  output  print  maximum  loyalty  path  node  path  exist  maximum  loyalty  equal  print  single  nice  work  dima  without  quote
1181/C __label__dp  __label__implementation  __label__brute  force  innokenty  work  flea  market  sell  random  stuff  rare  item  recently  found  old  rectangular  blanket  turned  blanket  split  colored  piece  form  rectangle  row  column  colored  piece  attracted  innokenty  attention  immediately  came  following  business  plan  cut  subrectangle  consisting  colored  stripe  sell  flag  country  innokenty  decided  subrectangle  similar  enough  flag  country  consists  stripe  equal  height  placed  another  stripe  consists  cell  equal  color  course  color  top  stripe  must  different  color  middle  stripe  color  middle  stripe  must  different  color  bottom  stripe  innokenty  ha  decided  part  cut  sure  flag  boundary  along  grid  innokenty  rotate  blanket  please  help  innokenty  count  different  subrectangles  innokenty  cut  sell  flag  subrectangles  located  different  place  forming  flag  still  considered  different  subrectangles  flag  subrectangles  flag  contains  row  column  blanket  next  contains  lowercase  english  letter  describes  row  blanket  equal  letter  correspond  equal  color  different  letter  correspond  different  color  print  subrectangles  form  valid  flag
920/D __label__dp  __label__implementation  __label__greedy  petya  sometimes  ha  water  field  water  field  petya  need  tank  exactly  water  petya  ha  got  tank  initially  containing  water  tank  really  large  amount  water  matter  large  amount  petya  ha  got  scoop  water  initially  scoop  empty  scoop  used  get  water  tank  pour  tank  impossible  get  water  multiple  tank  without  pouring  leave  water  scoop  pouring  petya  try  get  water  tank  get  min  water  current  volume  water  tank  possible  obtain  tank  exactly  water  using  operation  possible  print  sequence  operation  allows  multiple  way  obtain  needed  amount  water  tank  print  contains  tank  maximum  volume  water  scoop  required  amount  water  tank  respectively  second  contains  initial  volume  water  tank  impossible  obtain  tank  exactly  water  print
1005/C __label__implementation  __label__greedy  __label__brute  force  sequence  called  good  element  exists  element  power  non  negative  example  following  sequence  good  example  choose  note  sum  power  similarly  element  found  note  definition  empty  sequence  length  good  example  following  sequence  good  impossible  find  another  element  sum  power  impossible  find  another  element  sum  power  impossible  find  another  element  sum  power  given  sequence  minimum  element  need  remove  make  good  delete  arbitrary  set  element  contains  length  given  sequence  second  contains  sequence  print  minimum  element  needed  removed  given  sequence  order  make  good  possible  need  delete  element  make  empty  thus  get  good  sequence
744/A __label__dfs  __label__graphs  hongcow  ruler  world  ruler  world  want  make  easier  people  travel  road  country  world  modeled  undirected  graph  node  edge  node  home  government  country  make  world  edge  connecting  node  edge  connects  node  furthermore  node  corresponding  government  path  node  graph  satisfies  condition  stable  hongcow  want  add  many  edge  possible  graph  keeping  stable  determine  maximum  edge  hongcow  add  input  vertex  edge  graph  vertex  home  government  next  input  pairwise  distinct  denote  node  home  government  world  following  input  denotes  undirected  edge  node  guaranteed  graph  described  input  stable  output  single  maximum  edge  hongcow  add  graph  keeping  stable
609/E __label__data  structures  __label__dfs  __label__graphs  __label__trees  connected  undirected  weighted  graph  without  self  loop  multiple  edge  given  graph  contains  vertex  edge  edge  find  minimal  possible  weight  spanning  tree  contains  edge  weight  spanning  tree  sum  weight  edge  included  spanning  tree  contains  vertex  edge  graph  next  contains  ii  endpoint  edge  weight  print  minimal  possible  weight  spanning  tree  contains  edge
747/A __label__math  __label__brute  force  big  company  decided  launch  new  series  rectangular  display  decided  display  must  exactly  pixel  task  determine  size  rectangular  display  row  pixel  column  pixel  exactly  pixel  display  row  doe  exceed  column  mean  difference  small  possible  contains  positive  pixel  display  print  row  column  display
440/B __label__implementation  __label__greedy  petya  ha  match  placed  matchbox  lying  left  right  know  divisible  petya  want  box  match  inside  move  match  box  adjacent  move  many  move  doe  need  achieve  desired  configuration  contains  second  contains  non  negative  exceed  written  match  matchbox  guaranteed  total  match  divisible  print  total  minimum  move
594/C __label__brute  force  edo  ha  got  collection  refrigerator  magnet  decided  buy  refrigerator  hang  magnet  door  shop  make  refrigerator  size  door  meet  following  restriction  refrigerator  door  must  rectangle  length  width  door  must  positive  edo  figured  want  place  magnet  refrigerator  introduced  system  coordinate  plane  magnet  represented  rectangle  side  parallel  coordinate  ax  want  remove  magnet  choose  keep  attach  remaining  magnet  refrigerator  door  area  door  small  possible  magnet  considered  attached  refrigerator  door  center  lie  door  boundary  relative  position  remaining  magnet  must  correspond  plan  let  explain  last  sentence  let  suppose  want  hang  magnet  refrigerator  magnet  plan  ha  coordinate  lower  left  corner  upper  right  corner  center  located  saying  relative  position  correspond  plan  mean  available  operation  translation  vector  connecting  center  magnet  original  plan  must  equal  vector  connecting  center  magnet  refrigerator  side  refrigerator  door  must  parallel  coordinate  ax  contains  magnet  edo  ha  maximum  magnet  edo  place  refrigerator  next  describe  initial  plan  placing  magnet  contains  coordinate  lower  left  upper  right  corner  current  magnet  magnet  partially  overlap  even  fully  coincide  print  single  minimum  area  door  refrigerator  used  place  least  magnet  preserving  relative  position
1194/F __label__dp  __label__number  theory  today  adilbek  taking  probability  theory  test  unfortunately  adilbek  arrived  university  already  long  queue  student  wanting  take  test  adilbek  ha  estimated  able  start  test  second  coming  fortunately  adilbek  spend  time  without  revising  boring  theorem  formula  ha  app  smartphone  contains  japanese  crossword  solve  adilbek  ha  decided  solve  order  listed  app  without  skipping  crossword  crossword  given  represents  time  take  average  crossword  expert  solve  crossword  time  given  second  adilbek  true  crossword  expert  unfortunately  sometimes  unlucky  choosing  way  solve  crossword  take  either  second  second  solve  crossword  equiprobably  probability  solves  crossword  exactly  second  probability  ha  spend  additional  second  finish  crossword  event  independent  second  pas  solving  last  crossword  manages  le  second  adilbek  close  app  finish  crossword  moment  crossword  considered  solved  otherwise  adilbek  doe  finish  solving  current  crossword  think  would  interesting  probability  theory  problem  calculate  expected  crossword  able  solve  completely  calculate  recall  expected  value  discrete  random  variable  probability  weighted  average  possible  value  problem  mean  expected  value  solved  crossword  calculated  probability  adilbek  solve  exactly  crossword  represent  rational  fraction  give  answer  print  mod  contains  crossword  time  adilbek  ha  spend  respectively  second  contains  time  take  crossword  expert  solve  crossword  note  adilbek  solves  crossword  order  given  input  without  skipping  print  expected  value  crossword  adilbek  solves  second  expressed  form  mod
1036/C __label__dp  let  call  positive  classy  decimal  representation  contains  non  digit  example  classy  given  segment  count  classy  l  testcase  contains  several  segment  required  solve  problem  separately  contains  single  segment  testcase  next  contains  print  classy  segment
864/B __label__implementation  __label__brute  force  __label__strings  polycarp  love  lowercase  letter  dislike  uppercase  got  string  consisting  lowercase  uppercase  latin  letter  let  set  position  string  let  call  pretty  following  condition  met  letter  position  string  distinct  lowercase  uppercase  letter  string  situated  position  uppercase  letter  write  program  determine  maximum  element  pretty  set  position  contains  single  length  string  second  contains  string  consisting  lowercase  uppercase  latin  letter  print  maximum  element  pretty  set  position  string
1144/E __label__math  __label__strings  __label__number  theory  given  string  consisting  exactly  lowercase  latin  letter  lexicographically  le  let  consider  list  string  consisting  exactly  lowercase  latin  letter  lexicographically  le  greater  including  lexicographical  order  example  list  task  print  median  middle  element  list  example  guaranteed  odd  string  lexicographically  le  greater  input  contains  length  string  second  input  contains  string  consisting  exactly  lowercase  latin  letter  third  input  contains  string  consisting  exactly  lowercase  latin  letter  guaranteed  lexicographically  le  guaranteed  odd  string  lexicographically  le  greater  print  string  consisting  exactly  lowercase  latin  letter  median  middle  element  list  string  length  lexicographically  le  greater
543/E __label__data  structures  __label__constructive  algorithms  please  note  memory  limit  differs  standard  really  love  listen  music  next  day  listen  exactly  song  playlist  consists  exactly  song  let  song  playlist  inclusive  quality  song  day  choose  lii  listen  song  day  listening  song  quality  le  increase  displeasure  exactly  determine  minimum  displeasure  get  next  day  contains  positive  second  contains  positive  description  song  playlist  next  contains  single  day  consider  next  ii  description  parameter  day  order  calculate  value  need  use  formula  ansi  answer  problem  day  assume  print  exactly  n  n  ansi  minimum  displeasure  get  day
768/G __label__data  structures  __label__binary  search  given  rooted  tree  node  night  king  remove  exactly  node  tree  edge  associated  split  tree  form  forest  node  removed  part  forest  root  tree  forest  node  tree  doe  parent  define  strength  forest  size  largest  tree  forest  jon  snow  want  minimize  strength  forest  perform  following  operation  remove  edge  node  parent  insert  new  edge  node  node  forest  total  tree  forest  remain  node  need  find  minimum  value  strength  forest  formed  node  removed  input  contains  vertex  tree  next  contains  pair  vertex  index  parent  root  print  containing  single  equal  minimum  value  strength  forest  formed  node  removed  jon  snow  performs  operation  described
1005/F __label__dfs  __label__graphs  __label__brute  force  city  berland  pair  city  connected  road  road  bidirectional  road  connects  different  city  road  pair  city  city  numbered  known  capital  city  reach  city  moving  along  road  president  berland  plan  improve  country  road  network  budget  enough  repair  exactly  road  president  plan  choose  set  road  possible  travel  capital  city  along  chosen  road  road  needed  travel  capital  city  moving  along  chosen  road  minimized  minimal  possible  word  set  road  preserve  connectivity  country  sum  distance  city  city  minimized  use  chosen  road  president  instructed  ministry  prepare  possible  option  choose  road  condition  met  write  program  find  possible  way  choose  road  repair  fewer  way  program  output  possible  valid  way  choose  road  input  contains  n  city  country  road  option  choose  set  road  repair  guaranteed  following  describe  road  road  per  contains  city  road  connects  road  pair  city  given  set  road  reach  city  capital  print  way  choose  set  road  repair  recall  need  find  different  option  fewer  need  find  possible  different  valid  option
585/A __label__implementation  __label__brute  force  gennady  best  child  dentist  berland  today  child  got  appointment  lined  front  office  child  love  cry  loudly  reception  dentist  enumerate  child  order  every  child  associated  value  cofidence  child  take  turn  another  come  office  time  child  go  doctor  gennady  treat  teeth  child  child  cry  volume  confidence  child  reduced  amount  second  value  child  queue  child  almost  hear  cry  confidence  remains  unchanged  point  time  confidence  child  le  begin  cry  volume  leaf  running  towards  exit  without  going  doctor  office  confidence  child  reduced  amount  event  occur  immediately  order  cry  lead  cry  causing  chain  reaction  hallway  quiet  child  go  doctor  office  help  gennady  dentist  determine  kid  whose  teeth  cure  print  chronological  order  input  contains  positive  kid  next  volume  cry  doctor  office  volume  cry  hall  confidence  child  print  child  whose  teeth  gennady  cure
833/D __label__implementation  __label__data  structures  __label__trees  slastyona  like  watch  life  nearby  grove  dweller  time  watch  strange  red  black  spider  sitting  center  huge  cobweb  cobweb  set  node  connected  thread  tread  either  red  black  using  thread  spider  move  node  thread  connects  node  node  unique  sequence  thread  connecting  slastyona  decided  study  special  quality  cobweb  noticed  thread  ha  value  clamminess  slastyona  mostly  interested  jelliness  cobweb  consider  shortest  path  pair  node  red  black  thread  differ  twice  path  compute  product  clamminess  thread  path  jelliness  cobweb  product  obtained  value  path  path  differ  direction  counted  course  huge  slastyona  asks  compute  jelliness  given  cobweb  print  answer  modulo  contains  node  next  denoting  thread  cobweb  node  connects  clamminess  thread  color  thread  red  color  denoted  black  color  denoted  print  single  jelliness  cobweb  modulo  path  red  black  thread  differ  twice  print
369/D __label__dp  __label__dfs  __label__graphs  fine  morning  fool  lined  row  numbered  inclusive  fool  got  unique  fool  decided  change  end  fun  every  fool  ha  exactly  bullet  pistol  addition  fool  ha  probability  percent  kill  fool  shoot  fool  decided  several  round  fun  round  fun  look  like  currently  living  fool  shoot  another  living  fool  smallest  fool  stupid  enough  shoot  shot  round  perfomed  time  simultaneously  exactly  living  fool  doe  shoot  let  define  situation  set  living  fool  time  say  situation  possible  nonzero  probability  round  fun  situation  occur  valera  know  help  valera  determine  distinct  possible  situation  contains  initial  fool  bullet  fool  second  contains  given  probability  percent  print  single  answer  problem
1066/C __label__implementation  got  shelf  want  put  book  given  query  type  put  book  index  shelf  left  leftmost  existing  book  put  book  index  shelf  right  rightmost  existing  book  calculate  minimum  book  need  pop  left  right  way  book  index  leftmost  rightmost  assume  book  put  position  doe  matter  query  type  always  valid  guaranteed  book  query  already  placed  assume  put  book  shelf  twice  repeat  query  type  problem  answer  query  type  order  appear  input  note  answering  query  type  book  remain  shelf  relative  order  book  doe  change  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  query  follow  contains  query  format  problem  statement  guaranteed  query  always  valid  query  type  guaranteed  book  query  already  placed  type  guaranteed  book  wa  placed  guaranteed  least  query  type  input  query  constraint  met  print  answer  query  type  order  appear  input
1204/D1 __label__greedy  __label__brute  force  __label__strings  difference  easy  hard  version  length  string  hack  problem  solve  problem  kirk  ha  binary  string  string  consists  length  asking  find  binary  string  length  satisfies  following  condition  length  longest  non  decreasing  subsequence  substring  equal  length  longest  non  decreasing  subsequence  substring  maximum  possible  non  decreasing  subsequence  string  sequence  index  length  subsequence  multiple  substring  satisfy  condition  output  contains  binary  string  length  output  binary  string  satisfied  condition  many  string  output
700/E __label__strings  bomboslav  set  branding  agency  help  company  create  new  logo  advertising  slogan  term  problem  slogan  company  non  empty  substring  name  example  company  name  hornsandhoofs  substring  sand  hor  could  slogan  string  horn  sometimes  company  performs  rebranding  change  slogan  slogan  considered  cooler  slogan  appears  substring  least  twice  occurrence  allowed  overlap  example  slogan  abacaba  cooler  slogan  slogan  abcbcbe  cooler  slogan  bcb  slogan  aaaaaa  cooler  slogan  aba  given  company  name  task  help  bomboslav  determine  length  longest  sequence  slogan  slogan  sequence  cooler  previous  input  contains  single  length  company  name  asks  bomboslav  help  second  contains  string  length  consists  lowercase  english  letter  print  single  maximum  possible  length  sequence  slogan  company  named  slogan  sequence  except  cooler  previous
615/C __label__dp  __label__greedy  __label__trees  __label__strings  boy  named  ayrat  life  planet  ami  inhabitant  planet  ha  talent  specifically  ayrat  love  running  moreover  running  enough  dreaming  making  running  real  art  want  construct  running  track  coating  planet  ami  coating  track  sequence  colored  block  block  denoted  small  english  letter  therefore  every  coating  treated  string  unfortunately  block  freely  sold  non  business  customer  ayrat  found  infinite  coating  ha  scissors  glue  ayrat  going  buy  coating  cut  exactly  continuous  piece  substring  glue  end  track  coating  moreover  choose  flip  block  glueing  ayrat  want  know  minimum  coating  need  buy  order  get  coating  running  track  course  want  know  way  achieve  answer  input  contains  string  coating  present  shop  second  contains  string  coating  ayrat  want  obtain  string  non  empty  consist  small  english  letter  length  exceed  minimum  needed  coating  impossible  create  desired  coating
979/B __label__greedy  big  birthday  party  katie  still  wanted  shiro  fun  later  came  game  called  treasure  hunt  course  invited  best  friend  kuro  shiro  play  friend  smart  passed  challenge  quickly  finally  reached  destination  treasure  belong  cat  started  think  something  determine  worthy  treasure  instantly  kuro  came  ribbon  random  colorful  ribbon  given  cat  color  ribbon  represented  uppercase  lowercase  latin  letter  let  call  consecutive  subsequence  color  appears  ribbon  subribbon  beauty  ribbon  defined  maximum  time  subribbon  appears  ribbon  subribbon  appears  beautiful  ribbon  example  ribbon  aaaaaaa  ha  beauty  subribbon  appears  time  ribbon  abcdabc  ha  beauty  subribbon  abc  appears  twice  rule  simple  game  turn  every  turn  cat  must  change  strictly  color  position  ribbon  arbitrary  color  different  unchanged  example  ribbon  aaab  changed  acab  turn  beautiful  ribbon  turn  win  treasure  could  find  going  winner  play  optimally  contains  turn  next  ribbon  kuro  shiro  katie  per  respectively  ribbon  string  contains  uppercase  lowercase  latin  letter  empty  guaranteed  length  ribbon  equal  purpose  fairness  note  uppercase  lowercase  letter  considered  different  color  print  name  winner  kuro  shiro  katie  least  cat  share  maximum  beauty  print  draw
1206/A __label__math  __label__sortings  given  array  consisting  positive  array  consisting  positive  choose  element  element  belong  belong  example  choose  belong  belong  choose  belongs  shown  pair  exists  multiple  answer  print  choose  print  contains  element  second  contains  element  third  contains  element  fourth  contains  different  element  shown  answer  always  exists  output  belongs  belongs  belong  neither
605/D __label__data  structures  __label__dfs  playing  board  card  game  game  player  ha  characteristic  white  magic  skill  black  magic  skill  respectively  spell  card  lying  table  ha  characteristic  move  player  pick  card  cast  spell  written  characteristic  meet  requirement  ai  bi  player  ha  enough  magic  skill  cast  spell  casting  spell  characteristic  player  change  become  equal  beginning  game  characteristic  player  equal  goal  game  cast  spell  task  make  move  possible  allowed  use  spell  order  time  example  use  spell  input  contains  single  card  table  next  contains  characteristic  corresponding  card  print  single  minimum  move  needed  cast  spell  second  print  index  card  order  cast  case  multiple  possible  solution  print
1225/B2 __label__implementation  difference  easy  hard  version  constraint  bertv  channel  every  day  broadcast  episode  show  know  schedule  next  day  sequence  show  episode  shown  day  subscription  show  bought  entire  show  episode  show  subscription  bought  separately  many  minimum  subscription  need  buy  order  opportunity  watch  episode  purchased  show  day  row  word  want  buy  minimum  show  segment  consecutive  day  episode  belong  purchased  show  contains  test  case  input  test  case  description  follow  test  case  contains  second  contains  show  broadcasted  day  guaranteed  sum  value  test  case  input  doe  exceed  print  answer  test  case  input  order  follow  answer  test  case  minimum  show  need  purchase  subscription  watch  episode  purchased  show  bertv  consecutive  day  please  note  permissible  able  watch  day  row
982/D __label__data  structures  __label__trees  __label__brute  force  long  time  scientist  study  behavior  shark  shark  many  specie  alternate  short  movement  certain  location  long  movement  location  max  young  biologist  day  watched  specific  shark  know  distance  shark  traveled  day  distance  distinct  max  want  know  many  location  shark  visited  assumed  shark  day  traveled  distance  strictly  le  change  location  otherwise  day  shark  traveled  distance  greater  equal  wa  changing  location  day  note  possible  shark  changed  location  several  consecutive  day  shark  traveled  distance  least  shark  never  returned  location  ha  moved  thus  sequence  day  find  consecutive  nonempty  segment  shark  traveled  distance  le  day  segment  corresponds  location  max  want  choose  length  segment  equal  find  location  large  possible  several  print  smallest  contains  single  day  second  contains  distinct  positive  distance  traveled  day  print  single
485/B __label__greedy  __label__brute  force  many  computer  strategy  game  require  building  city  recruiting  army  conquering  tribe  collecting  resource  sometimes  lead  interesting  problem  let  suppose  task  build  square  city  world  map  us  cartesian  coordinate  side  city  parallel  coordinate  ax  map  contains  mine  valuable  resource  located  point  coordinate  size  mine  relatively  small  treated  point  city  built  way  mine  inside  border  city  square  building  city  take  large  amount  money  depending  size  city  build  city  minimum  area  given  position  mine  find  minimum  possible  area  city  input  contains  mine  map  next  contains  pair  coordinate  corresponding  mine  point  pairwise  distinct  print  minimum  area  city  cover  mine  valuable  resource
81/E __label__dp  __label__implementation  __label__dfs  __label__graphs  __label__trees  student  polycarp  class  including  day  ago  student  wrote  essay  best  friend  student  essay  wa  dedicated  student  class  best  friend  note  student  best  friend  necessarily  student  best  friend  teacher  lead  whole  class  museum  history  sport  programming  exciting  story  legendary  hero  await  student  tourist  petr  tomek  snapdragon  hear  teacher  decided  divide  student  pair  pair  consisted  student  best  friend  able  split  student  pair  problem  want  pick  maximum  pair  variant  want  pick  pair  much  boy  girl  pair  possible  course  student  must  included  pair  contains  student  per  class  next  information  student  per  contains  student  best  friend  denotes  pupil  sex  boy  girl  print  maximum  formed  pair  maximum  boy  girl  type  pair  print  must  pair  pupil  pair  print  pair  order  print  pair  order  several  solution  output
914/E __label__data  structures  __label__trees  given  tree  connected  acyclic  undirected  graph  vertex  vertex  numbered  vertex  assigned  character  path  tree  said  palindromic  least  permutation  label  path  palindrome  vertex  output  palindromic  path  passing  note  path  vertex  vertex  considered  path  vertex  vertex  path  counted  vertex  pass  contains  vertex  tree  next  denoting  edge  connecting  vertex  vertex  guaranteed  given  graph  tree  next  contains  string  consisting  lowercase  character  character  label  vertex  tree  print  single  palindromic  path  passing  vertex  tree
1099/C __label__implementation  __label__constructive  algorithms  andrey  received  postcard  irina  contained  word  hello  andrey  strange  string  consisting  lowercase  latin  letter  snowflake  candy  cane  andrey  thought  string  encrypted  message  decided  decrypt  andrey  noticed  snowflake  candy  cane  always  stand  letter  supposed  message  wa  encrypted  follows  candy  cane  mean  letter  removed  left  snowflake  mean  letter  removed  left  repeated  several  time  example  consider  following  string  string  encode  message  happynewyear  candy  cane  snowflake  used  follows  candy  cane  remove  letter  snowflake  repeat  letter  twice  candy  cane  leave  letter  snowflake  remove  letter  snowflake  leave  letter  please  note  string  encode  different  message  example  string  encode  hayewyar  happpppynewwwwwyear  message  andrey  know  message  irina  usually  length  letter  help  find  given  string  encode  message  letter  give  example  message  contains  string  received  postcard  string  consists  lowercase  latin  letter  well  character  meaning  snowflake  candy  cone  respectively  character  appear  immediately  letter  length  string  doe  exceed  second  contains  required  message  length  print  message  length  given  string  encode  impossible  message  doe  exist
884/D __label__greedy  __label__data  structures  ivan  ha  different  box  contains  ball  different  color  ivan  want  play  strange  game  want  distribute  ball  box  way  every  box  ball  color  order  ivan  make  turn  turn  doe  following  ivan  chooses  non  empty  box  take  ball  box  ivan  chooses  empty  box  box  step  becomes  empty  ivan  allowed  choose  separate  ball  took  previous  step  non  empty  group  put  group  box  put  group  separate  box  choose  either  penalty  turn  ball  ivan  take  box  step  turn  penalty  game  total  penalty  turn  made  ivan  distributes  ball  corresponding  box  help  ivan  determine  minimum  possible  penalty  game  contains  box  color  second  contains  ball  color  print  minimum  possible  penalty  game
701/A __label__implementation  __label__greedy  card  even  deck  card  ha  positive  written  people  play  new  card  game  beginning  game  player  get  card  card  given  exactly  player  find  way  distribute  card  sum  value  written  card  equal  player  guaranteed  always  possible  input  contains  card  deck  guaranteed  even  second  contains  sequence  positive  equal  written  card  print  pair  pair  denote  card  given  player  card  given  exactly  player  card  numbered  order  appear  input
739/B __label__data  structures  __label__dfs  __label__graphs  __label__trees  __label__binary  search  alyona  ha  tree  vertex  root  tree  vertex  vertex  alyona  wrote  positive  vertex  wrote  moreover  girl  wrote  positive  every  edge  tree  possibly  different  different  edge  let  define  dist  sum  written  edge  simple  path  vertex  control  vertex  v  subtree  dist  u  alyona  want  settle  vertex  order  want  know  vertex  vertex  control  contains  single  second  contains  written  vertex  next  contains  parent  vertex  tree  written  edge  guaranteed  given  graph  tree  print  equal  vertex  vertex  control
850/F __label__math  bag  ball  different  color  ball  color  least  different  colored  ball  bag  perform  following  step  take  random  ball  without  replacement  ball  might  color  color  second  ball  color  ball  allowed  switch  order  ball  step  place  ball  back  bag  action  take  exactly  second  let  proven  expected  amount  time  needed  stop  represented  rational  coprime  divisible  return  value  input  single  color  next  input  space  separated  ball  color  print  single  answer  problem
1088/A __label__constructive  algorithms  __label__brute  force  given  find  divide  divisible  contains  output  satisfying  given  condition  separated  space  pair  satisfy  condition  print  without  quote
1023/C __label__greedy  bracket  sequence  string  containing  character  regular  bracket  sequence  bracket  sequence  transformed  correct  arithmetic  expression  inserting  character  original  character  sequence  example  bracket  sequence  regular  resulting  expression  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  given  regular  bracket  sequence  task  find  regular  bracket  sequence  length  exactly  subsequence  guaranteed  sequence  always  exists  contains  even  length  length  sequence  asked  find  second  string  regular  bracket  sequence  length  print  single  string  regular  bracket  sequence  length  exactly  subsequence
1199/A __label__implementation  year  day  city  wa  held  rainy  day  summer  new  mayor  decided  break  tradition  select  rainy  day  celebration  mayor  know  weather  forecast  day  summer  day  millimeter  rain  fall  value  distinct  mayor  know  citizen  watch  weather  day  celebration  day  say  day  rainy  smaller  rain  amount  day  day  day  day  word  hold  citizen  watch  weather  summer  consider  help  mayor  find  earliest  rainy  day  summer  contains  day  summer  day  citizen  watch  weather  celebration  day  second  contains  distinct  denotes  rain  amount  day  print  single  index  earliest  rainy  day  summer  show  answer  always  exists
138/B __label__greedy  andrey  favourite  andrey  friend  gave  identical  new  year  present  hung  wall  watched  adoringly  andrey  got  bored  looking  started  swap  digit  arbitrary  change  could  made  point  turned  sum  resulting  sum  end  would  maximum  possible  variant  digit  permutation  given  find  digit  permutation  property  contains  positive  original  digit  doe  exceed  written  without  leading  print  permutation  digit  sum  end  maximum  permutation  leading  present  printed  permutation  different  several  answer  print
22/C __label__graphs  bob  got  job  system  administrator  corporation  task  wa  connect  server  help  way  direct  connection  becomes  possible  transmit  data  server  server  via  connection  direct  connection  ha  link  different  server  pair  server  direct  connection  corporation  business  rival  corporation  made  bob  offer  refuse  bob  wa  asked  connect  server  way  server  index  fails  transmission  data  server  becomes  impossible  system  stop  connected  help  bob  connect  server  input  contains  space  separated  amount  server  amount  direct  connection  index  server  fails  lead  failure  whole  system  impossible  connect  server  required  way  output  otherwise  output  description  direct  connection  system  direct  connection  described  index  server  linked  direct  connection  server  numbered  answer  unique  output
708/B __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  string  consisting  character  define  axy  subsequence  length  string  equal  sequence  problem  given  find  non  empty  string  match  determine  string  prove  least  answer  exists  exists  answer  length  input  contains  non  negative  exceed  exists  non  empty  string  match  input  print  output  otherwise  print  impossible  length  answer  must  exceed
723/D __label__implementation  __label__greedy  __label__dfs  __label__graphs  map  berland  rectangle  size  n  consists  cell  size  cell  either  land  water  map  surrounded  ocean  lake  maximal  region  water  cell  connected  side  connected  ocean  formally  lake  set  water  cell  possible  get  cell  set  without  leaving  set  moving  cell  adjacent  side  none  located  border  rectangle  impossible  add  water  cell  set  connected  cell  task  fill  earth  minimum  water  cell  exactly  lake  berland  note  initial  lake  map  le  input  contains  size  map  lake  left  map  next  character  description  map  character  either  mean  corresponding  cell  water  mean  corresponding  cell  land  guaranteed  map  least  lake  print  minimum  cell  transformed  water  land
912/D __label__greedy  __label__data  structures  __label__graphs  grisha  wa  celebrating  new  year  ded  moroz  misha  gifted  sasha  small  rectangular  pond  size  n  divided  cell  size  inhabited  tiny  evil  fish  fish  per  cell  otherwise  strife  gift  bundle  includes  square  scoop  size  r  designed  fishing  lower  left  corner  scoop  net  located  cell  fish  inside  square  get  caught  note  scoop  net  lie  completely  inside  pond  used  unfortunately  sasha  skilled  fishing  hence  throw  scoop  randomly  order  frustrate  sasha  misha  decided  release  fish  empty  pond  way  expected  value  caught  fish  high  possible  help  misha  word  put  fish  pond  distinct  cell  way  scoop  net  placed  random  position  possible  position  average  caught  fish  high  possible  contains  print  single  maximum  possible  expected  caught  fish
150/B __label__math  __label__dfs  __label__graphs  case  somebody  missed  winter  totally  cold  nvodsk  cold  get  funny  thought  example  let  say  string  length  exactly  based  alphabet  size  substring  length  equal  palindrome  many  string  exist  task  find  quantity  modulo  careful  miss  string  let  remind  string  palindrome  read  way  either  direction  left  right  right  left  contains  print  single  string  described  type  modulo
449/C __label__constructive  algorithms  __label__number  theory  jzzhu  ha  picked  apple  big  apple  tree  apple  numbered  want  sell  apple  store  jzzhu  pack  apple  group  sell  group  must  apple  greatest  common  divisor  apple  group  must  greater  course  apple  part  group  jzzhu  wonder  get  maximum  possible  group  help  single  apple  must  single  representing  maximum  group  get  next  must  apple  current  group
949/E __label__brute  force  never  late  play  fancy  binary  card  game  infinite  amount  card  positive  negative  rank  used  game  absolute  value  card  rank  power  card  ha  rank  either  k  infinite  amount  card  valid  rank  beginning  game  player  form  deck  multiset  possibly  empty  card  allowed  pick  card  rank  small  deck  considered  skill  indicator  game  consists  round  round  jury  tell  player  player  obligated  draw  subset  deck  sum  rank  chosen  card  equal  allowed  draw  card  case  sum  considered  equal  player  fails  loses  game  otherwise  player  take  back  card  deck  game  proceeds  next  round  player  considered  winner  able  draw  suitable  set  card  round  somebody  told  jury  going  tell  round  want  pick  deck  consisting  minimum  card  allows  win  binary  card  game  input  contains  round  game  second  input  contains  jury  going  tell  round  print  minimum  card  pick  deck  ordered  win  binary  card
876/A __label__math  winnie  pooh  like  honey  much  decided  visit  friend  winnie  ha  got  best  friend  rabbit  owl  eeyore  life  house  winding  path  pair  house  length  path  rabbit  owl  house  meter  rabbit  eeyore  house  meter  owl  eeyore  house  meter  enjoying  life  singing  merry  song  winnie  pooh  meal  time  day  rabbit  house  ha  meal  time  time  friend  house  winnie  supply  honey  end  winnie  leaf  house  winnie  ha  meal  required  amount  time  come  house  go  someone  else  friend  chooses  adjacent  path  arrives  house  end  visit  friend  assume  winnie  eating  friend  house  supply  honey  friend  house  recover  probably  supply  store  winnie  pooh  doe  like  physical  activity  want  meal  time  traveling  minimum  possible  distance  help  find  distance  contains  visit  second  contains  distance  rabbit  owl  house  third  contains  distance  rabbit  eeyore  house  fourth  contains  distance  owl  eeyore  house  output  minimum  distance  meter  winnie  must  meal  time
862/D __label__binary  search  mahmoud  ehab  fourth  stage  evil  ha  hidden  binary  string  length  guarantee  least  symbol  least  symbol  want  mahmoud  ehab  find  position  symbol  symbol  order  mahmoud  ehab  ask  evil  question  tell  evil  binary  string  length  evil  tell  hamming  distance  string  hamming  distance  binary  string  length  position  different  symbol  find  definition  hamming  distance  note  section  help  mahmoud  ehab  find  position  get  wrong  answer  verdict  query  satisfy  interaction  protocol  described  ask  strictly  question  program  terminated  exceeding  query  limit  please  note  ask  query  answer  query  final  answer  correct  get  idleness  limit  exceeded  print  anything  forget  flush  output  including  final  answer  info  flushing  output  exceed  maximum  query  terminate  case  get  wrong  answer  terminate  receive  verdict  reading  closed  stream  input  single  length  hidden  binary  string  print  final  answer  print  po  po  without  quote  po  po  position  string  string  indexed  forget  flush  output  printing  answer
1098/F __label__strings  length  longest  common  prefix  string  defined  maximum  kin  equal  let  denote  longest  common  prefix  string  lcp  function  string  sequence  lcp  function  string  defined  given  string  query  query  described  answer  query  defined  function  string  contains  string  consisting  lowercase  english  letter  second  contains  query  following  contains  describing  query  every  query  output  value  function  corresponding  substring
822/A __label__math  __label__implementation  __label__number  theory  holiday  finished  thanks  help  hacker  leha  noora  managed  enter  university  dream  located  town  pavlopolis  well  known  university  provide  student  dormitory  period  university  study  consequently  noora  leave  vikopolis  move  pavlopolis  thus  leha  wa  left  completely  alone  quiet  town  vikopolis  almost  even  fell  depression  boredom  leha  came  task  relax  little  chooses  calculates  greatest  common  divisor  factorial  factorial  formally  hacker  want  find  gcd  well  known  factorial  product  positive  le  equal  thus  example  recall  gcd  largest  positive  divide  without  remainder  leha  ha  learned  solve  task  effective  able  cope  worse  single  contains  print  single  denoting  greatest  common  divisor
650/E __label__greedy  __label__data  structures  __label__dfs  __label__trees  name  james  digriz  clever  robber  treasure  hunter  whole  galaxy  book  written  adventure  song  operation  though  able  catch  pretty  awkward  moment  wa  able  hide  camera  outsmart  guard  pas  numerous  trap  finally  reached  treasure  box  opened  accidentally  started  clockwork  bomb  luckily  met  kind  bomb  know  clockwork  mechanism  stopped  connecting  contact  wire  control  panel  bomb  certain  manner  see  contact  connected  wire  contact  numbered  bomb  ha  security  mechanism  ensures  following  condition  exist  k  contact  forming  circuit  exist  distinct  wire  contact  bomb  immediately  explodes  story  end  particular  contact  connected  wire  form  circuit  length  prohibited  connect  contact  hand  disconnect  wire  moment  wire  scheme  security  check  fails  bomb  explodes  thing  unplug  wire  plug  new  place  ensuring  fact  circuit  appear  know  put  wire  order  stop  clockwork  time  running  help  get  alive  find  sequence  operation  consists  unplugging  wire  putting  another  place  bomb  defused  input  contains  contact  following  contains  xii  denoting  contact  currently  connected  wire  remaining  description  sought  scheme  format  guaranteed  starting  ending  scheme  correct  cicuits  wire  connecting  contact  k  minimum  move  unplugging  plugging  back  wire  required  defuse  bomb
776/C __label__math  __label__implementation  __label__data  structures  __label__brute  force  __label__binary  search  molly  hooper  ha  different  kind  chemical  arranged  chemical  ha  affection  value  ha  affection  value  molly  want  sherlock  fall  love  intends  mixing  contiguous  segment  chemical  together  make  love  potion  total  affection  value  non  negative  power  total  affection  value  continuous  segment  chemical  sum  affection  value  chemical  segment  help  finding  total  segment  input  contains  chemical  total  affection  value  non  negative  power  next  contains  affection  value  chemical  output  single  valid  segment
505/D __label__dfs  shuseki  kingdom  world  leading  nation  innovation  technology  city  kingdom  numbered  thanks  kitayuta  research  ha  finally  become  possible  construct  teleportation  pipe  city  teleportation  pipe  connect  city  unidirectionally  teleportation  pipe  city  city  used  travel  city  city  transportation  city  extremely  developed  therefore  pipe  city  city  pipe  city  city  constructed  people  able  travel  city  city  instantly  kitayuta  involved  national  politics  considers  transportation  pair  city  important  planning  construct  teleportation  pipe  important  pair  possible  travel  city  city  using  teleportation  pipe  necessarily  city  city  find  minimum  teleportation  pipe  need  constructed  far  teleportation  pipe  ha  constructed  effective  transportation  city  contains  space  separated  denoting  city  shuseki  kingdom  important  pair  respectively  following  describe  important  pair  contains  space  separated  ii  denoting  must  possible  travel  city  city  using  teleportation  pipe  necessarily  city  city  guaranteed  pair  distinct  print  minimum  required  teleportation  pipe  fulfill  kitayuta  purpose
1070/D __label__greedy  enough  enough  many  time  happened  vasya  forgot  dispose  garbage  apartment  stank  afterwards  want  create  garbage  disposal  plan  stick  next  day  vasya  know  unit  garbage  produce  day  unit  garbage  must  disposed  either  day  wa  produced  next  day  vasya  disposes  garbage  putting  inside  bag  dropping  bag  garbage  container  bag  unit  garbage  allowed  compose  drop  multiple  bag  garbage  container  single  day  economical  vasya  want  use  bag  possible  compute  minimum  bag  vasya  need  dispose  garbage  given  day  garbage  left  day  input  contains  day  consider  bag  capacity  second  contains  space  separated  unit  garbage  produced  day  output  single  minimum  bag  vasya  need  dispose  garbage  unit  garbage  disposed  day  wa  produced  next  day  garbage  left  day  day  allowed  compose  drop  multiple  bag
1237/G __label__dp  __label__greedy  __label__data  structures  friend  living  circular  street  friend  house  numbered  clockwise  initially  person  ha  stone  friend  want  make  distribution  stone  perfectly  balanced  everyone  posse  stone  way  change  distribution  stone  conducting  meeting  meeting  people  exactly  consecutive  house  remember  street  circular  gather  place  bring  stone  brought  stone  redistributed  people  attending  meeting  arbitrarily  total  stone  posse  meeting  meeting  must  stay  meeting  everyone  return  home  find  way  make  distribution  stone  perfectly  balanced  conducting  meeting  possible  contains  denoting  friend  size  meeting  second  contains  denoting  stone  people  initially  sum  divisible  output  minimum  meeting  followed  description  meeting  chronological  order
948/A __label__implementation  __label__dfs  __label__graphs  __label__brute  force  bob  farmer  ha  large  pasture  many  sheep  recently  ha  lost  due  wolf  attack  thus  decided  place  shepherd  dog  way  sheep  protected  pasture  rectangle  consisting  r  cell  cell  either  empty  contains  sheep  wolf  dog  sheep  dog  always  stay  place  wolf  roam  freely  around  pasture  repeatedly  moving  left  right  neighboring  cell  wolf  enters  cell  sheep  consumes  wolf  enter  cell  dog  initially  dog  place  dog  onto  pasture  way  wolf  reach  sheep  determine  impossible  note  since  many  dog  need  minimize  contains  denoting  row  column  respectively  following  string  consisting  exactly  character  representing  row  pasture  mean  sheep  wolf  empty  cell  impossible  protect  sheep  output  single  word
568/D __label__math  __label__brute  force  __label__geometry  khanate  lot  road  little  wood  riding  along  road  wa  inconvenient  road  road  sign  indicating  direction  important  city  han  decided  time  fix  issue  ordered  put  sign  every  road  minister  transport  ha  ha  sign  help  minister  solve  problem  otherwise  poor  guy  lose  position  head  formally  every  road  khanate  oxy  plane  given  equation  form  equal  time  required  determine  whether  put  sign  point  road  least  sign  installed  input  start  positive  next  coefficient  equation  determines  road  ai  guaranteed  road  coincide  solution  print  single  without  quote
412/E __label__implementation  important  product  company  popular  com  mail  service  mailbox  receive  send  million  email  every  day  today  online  news  thundered  terrible  information  database  crashed  almost  data  could  saved  except  big  string  developer  assume  string  contains  letter  user  mail  recovering  letter  tedious  mostly  manual  work  start  process  wa  decided  estimate  difficulty  recovering  namely  need  calculate  different  substring  saved  string  form  correct  mail  address  assume  valid  address  mail  address  meet  following  criterion  address  begin  non  empty  sequence  letter  character  starting  letter  must  character  must  non  empty  sequence  letter  must  character  address  must  end  non  empty  sequence  letter  got  lucky  job  wa  entrusted  please  note  substring  several  consecutive  character  string  substring  consisting  character  string  consisting  character  string  considered  distinct  l  r  contains  sequence  character  saved  string  guaranteed  given  string  contains  small  english  letter  digit  character  print  single  substring  valid  mail  address
558/E __label__data  structures  __label__sortings  __label__strings  task  simple  given  string  length  query  query  format  mean  sort  substring  consisting  character  non  decreasing  order  non  increasing  order  output  final  string  applying  query  length  string  query  respectively  next  contains  string  contains  lowercase  english  letter  next  output  string  applying  query
687/D __label__data  structures  __label__sortings  __label__graphs  __label__brute  force  long  time  ago  wa  great  kingdom  wa  ruled  great  arya  pari  great  problem  like  decided  divide  great  kingdom  great  kingdom  consisted  city  numbered  bidirectional  road  city  numbered  road  length  equal  great  arya  pari  great  discussing  destructing  prefix  road  le  suffix  road  greater  road  remain  road  divide  great  kingdom  piece  city  belonging  exactly  piece  hardness  division  minimized  hardness  division  maximum  length  road  endpoint  piece  kingdom  case  road  hardness  division  considered  equal  historian  found  map  great  kingdom  guess  chosen  great  ruler  given  data  guess  print  minimum  possible  hardness  division  kingdom  input  contains  city  road  great  kingdom  guess  respectively  following  contains  denoting  road  connects  city  length  equal  guaranteed  road  connects  city  pair  city  connected  road  next  contains  pair  andi  ii  guess  historian  remaining  road  kingdom  guess  print  minimum  possible  hardness  division  described  scenario
500/C __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  new  year  coming  jaehyun  decided  read  many  book  unlike  year  ha  book  numbered  weight  book  jaehyun  house  large  enough  bookshelf  keep  book  stacking  vertically  want  read  certain  book  follows  step  described  lift  book  book  push  book  stack  put  lifted  book  without  changing  order  reading  book  put  book  top  stack  decided  read  book  day  day  read  book  numbered  j  read  book  ha  use  process  described  paragraph  possible  decides  read  book  several  time  making  plan  realized  total  weight  book  lift  day  would  heavy  decided  change  order  stacked  book  new  year  come  minimize  total  weight  assume  book  stacked  possible  order  note  book  going  read  certain  step  considered  lifted  step  help  contains  space  separated  book  day  jaehyun  would  read  book  second  contains  space  separated  weight  book  third  contains  space  separated  j  order  book  would  read  note  read  book  print  minimum  total  weight  book  lift  achieved  rearranging  order  stacked  book
1118/D1 __label__greedy  __label__brute  force  difference  easy  hard  version  constraint  polycarp  ha  write  coursework  coursework  consists  page  polycarp  ha  cup  coffee  coffee  cup  ha  caffeine  polycarp  drink  cup  coffee  drink  cup  order  polycarp  drink  cup  instantly  completely  split  cup  several  day  surely  coursework  usually  written  single  day  perfect  world  berland  least  require  multiple  day  hard  work  let  consider  day  polycarp  work  consider  polycarp  drink  cup  coffee  day  caffeine  dosage  cup  polycarp  drink  day  cup  drink  give  energy  write  page  coursework  second  cup  give  energy  write  max  page  third  cup  give  energy  write  max  page  cup  give  energy  write  max  page  polycarp  drink  coffee  day  write  coursework  day  polycarp  ha  finish  coursework  soon  possible  spend  minimum  day  task  find  day  say  impossible  input  contains  cup  coffee  page  coursework  second  input  contains  caffeine  dosage  coffee  cup  impossible  write  coursework  print  otherwise  print  minimum  day  polycarp  need
1092/D1 __label__math  __label__implementation  __label__greedy  vova  family  building  great  vova  wall  named  vova  vova  parent  grandparent  grand  grandparent  contributed  totally  vova  put  finishing  touch  current  state  wall  respresented  sequence  height  part  wall  vova  use  brick  put  wall  ha  infinite  supply  vova  put  brick  horizontally  neighboring  part  wall  equal  height  mean  current  height  part  part  vova  put  brick  thus  increase  height  obviously  vova  put  brick  way  part  turn  border  left  part  wall  right  part  next  paragraph  specific  version  problem  vova  put  brick  vertically  mean  increasing  height  part  wall  vova  perfectionist  considers  wall  completed  part  wall  ha  height  wall  ha  empty  space  inside  vova  complete  wall  using  amount  brick  possibly  contains  single  part  wall  second  contains  initial  height  part  wall  print  yes  vova  complete  wall  using  amount  brick  possibly
426/A __label__implementation  sereja  showed  interesting  game  friend  game  go  like  initially  table  empty  cup  water  mug  player  take  turn  move  move  player  take  non  empty  mug  water  pours  water  cup  cup  overfills  assume  player  lost  soon  sereja  friend  heard  game  wanted  play  sereja  hand  wanted  find  whether  friend  play  game  way  loser  given  volume  mug  cup  know  sereja  ha  friend  determine  sereja  friend  play  game  nobody  loses  contains  mug  volume  cup  next  contains  mean  volume  mug  single  print  yes  without  quote  friend  play  described  manner  without  quote  otherwise
1076/F __label__dp  __label__greedy  vova  ha  taken  summer  practice  year  write  report  went  vova  ha  already  drawn  table  wrote  formula  moreover  ha  already  decided  report  consist  exactly  page  page  include  table  formula  page  numbered  vova  fill  page  another  filling  page  finishing  page  skip  page  draw  strictly  table  row  writes  strictly  formula  row  get  bored  vova  want  rearrange  table  formula  page  way  get  bored  process  vova  move  table  formula  another  page  note  count  reset  start  new  page  example  page  end  table  next  page  start  table  counted  table  row  help  vova  determine  rearrange  table  formula  page  way  table  row  formula  row  contains  second  contains  table  page  third  contains  formula  page  print  yes  vova  rearrange  table  formula  page  way  table  row  formula  row
940/F __label__data  structures  __label__brute  force  come  home  fell  unpleasant  smell  coming  given  array  answer  following  query  given  let  occurrence  subarray  element  inclusive  find  mex  given  change  mex  multiset  smallest  non  negative  set  note  problem  element  positive  mean  never  answer  query  second  type  input  contains  length  array  query  respectively  second  input  contains  next  describes  single  query  type  query  described  ii  bound  subarray  second  type  query  described  index  element  must  changed  new  value  query  type  output  single  mex
1220/F __label__data  structures  __label__binary  search  gardener  alex  love  grow  tree  remind  tree  connected  acyclic  graph  vertex  today  decided  grow  rooted  binary  tree  binary  tree  tree  vertex  ha  son  luckily  alex  ha  permutation  wa  presented  last  birthday  decided  grow  tree  according  permutation  doe  following  process  find  minimum  element  make  root  tree  permutation  divided  part  everything  left  minimum  element  everything  right  minimum  element  left  part  becomes  left  son  root  minimum  element  right  part  becomes  right  son  root  process  repeated  recursively  part  alex  want  grow  forest  tree  tree  cyclic  shift  permutation  interested  cyclic  shift  give  tree  minimum  depth  unfortunately  growing  forest  hard  long  process  alex  want  answer  right  help  remind  cyclic  shift  permutation  element  left  permutation  contains  length  permutation  second  contains  guaranteed  occur  exactly  time  print  separated  space  minimum  possible  depth  tree  many  element  need  shift  left  achieve  depth  element  several  possible  answer  print
536/E __label__data  structures  __label__trees  tavas  life  tavaspolis  tavaspolis  ha  city  numbered  connected  bidirectional  road  exists  path  city  road  ha  length  tavas  favorite  string  binary  string  binary  string  like  goodness  calculated  follows  consider  exactly  block  string  block  maximal  consecutive  substring  contains  length  define  given  sequence  tavas  love  query  asks  answer  query  query  give  print  following  consider  road  path  city  city  build  binary  string  length  l  length  road  print  query  input  contains  next  contains  space  separated  next  detail  road  contains  mean  road  city  length  next  detail  query  contains  v  print  answer  query  single
1184/D2 __label__math  heidi  enjoyed  performing  simulation  knew  exactly  new  universe  would  formed  non  existent  link  would  broken  multiverse  work  mysterious  way  well  work  using  probability  people  mysterious  unit  time  decision  made  event  happen  randomly  let  denote  current  length  multiverse  probability  create  universe  created  probability  break  non  existent  link  broken  position  specifically  universe  created  manifest  adjacent  universe  end  position  occurs  probability  link  broken  could  cut  adjacent  universe  probability  separating  multiverse  segment  segment  containing  doctor  cease  exist  earlier  doctor  remains  universe  point  multiverse  break  way  doctor  find  leftmost  rightmost  end  tardis  stop  functioning  case  doctor  must  actually  walk  multiverse  find  tool  fix  interested  expected  value  length  multiverse  event  occurs  contains  initial  length  multiverse  initial  position  doctor  maximum  possible  length  multiverse  output  single  single  indicating  expected  length  multiverse
633/C __label__dp  __label__implementation  __label__data  structures  __label__sortings  __label__strings  observing  result  spy  syndrome  yash  realised  error  way  belief  super  spy  siddhant  use  cipher  basic  ancient  caesar  cipher  many  week  observation  siddhant  sentence  yash  determined  new  cipher  technique  given  sentence  cipher  processed  convert  letter  sentence  lowercase  reverse  word  sentence  individually  remove  space  sentence  example  cipher  applied  sentence  kira  childish  hate  losing  resulting  string  ariksihsidlihcdnaehsetahgnisol  yash  given  ciphered  string  list  word  help  find  original  sentence  composed  using  word  list  note  given  word  could  used  sentence  multiple  time  input  contains  single  length  ciphered  text  second  consists  lowercase  english  letter  ciphered  text  third  contains  single  word  considered  deciphering  text  next  contains  non  empty  word  consisting  uppercase  lowercase  english  letter  guaranteed  total  length  word  exceed  print  original  sentence  guaranteed  least  solution  exists  multiple  solution  output
825/D __label__implementation  __label__greedy  __label__binary  search  given  string  consisting  small  latin  letter  string  character  suitability  string  calculated  following  metric  letter  swapped  position  operation  performed  arbitrary  time  pair  position  resulting  string  choose  largest  non  intersecting  occurrence  string  suitability  occurrence  replace  character  small  latin  letter  way  suitability  string  maximal  contains  string  second  contains  string  print  string  replaced  small  latin  letter  way  suitability  string  maximal
1019/A __label__greedy  __label__brute  force  know  majority  student  teacher  summer  informatics  school  live  berland  part  year  since  corruption  quite  widespread  following  story  uncommon  election  coming  know  voter  party  respectively  voter  know  party  going  vote  easily  change  vote  given  certain  amount  money  particular  give  voter  bytecoins  ask  vote  party  choose  united  party  berland  ha  decided  perform  statistical  study  need  calculate  minimum  bytecoins  party  need  spend  ensure  victory  order  party  win  election  need  receive  strictly  vote  party  input  contains  voter  party  respectively  following  contains  index  voter  preferred  party  bytecoins  needed  reconsider  decision  united  party  berland  ha  index  print  single  minimum  bytecoins  needed  united  party  berland  win  election
645/G __label__binary  search  __label__geometry  drawn  mooclear  arm  race  farmer  john  mischievous  mess  maker  finally  agreed  establish  peace  plan  divide  territory  bovinia  passing  least  outpost  scattered  throughout  land  outpost  remnant  conflict  located  point  order  find  optimal  dividing  farmer  john  elsie  plotted  map  bovinia  coordinate  plane  farmer  john  farm  mischievous  mess  maker  base  located  point  respectively  seek  lasting  peace  farmer  john  elsie  would  like  minimize  maximum  difference  distance  point  formally  define  difference  relative  point  smallest  real  point  guaranteed  exists  unique  wish  find  passing  distinct  outpost  difference  relative  minimized  input  contains  outpost  coordinate  farm  base  respectively  following  describe  location  outpost  pair  point  distinct  well  print  single  real  difference  optimal  dividing  answer  considered  correct  absolute  relative  error  doe  exceed
163/C __label__sortings  anton  came  chocolate  factory  found  working  conveyor  decided  run  beginning  end  conveyor  looped  belt  total  length  meter  meter  located  surface  arranged  straight  part  belt  turn  moment  part  emerges  floor  surface  return  surface  floor  assumed  negligibly  short  belt  moving  uniformly  speed  meter  per  second  anton  moving  direction  constant  speed  meter  per  second  speed  relatively  floor  meter  per  second  anton  neither  stop  change  speed  direction  movement  chocolate  stuck  belt  chocolate  move  together  belt  come  anton  keen  chocolate  keen  move  forward  pick  chocolate  pas  nothing  chocolate  beginning  belt  moment  anton  start  running  take  chocolate  end  belt  moment  anton  come  belt  leave  figure  show  example  chocolate  located  position  top  half  belt  second  position  bottom  half  belt  given  position  chocolate  relative  initial  start  position  belt  position  belt  correspond  top  bottom  half  belt  see  example  coordinate  given  meter  anton  begin  run  along  belt  random  moment  time  mean  possible  position  belt  moment  start  running  equiprobable  calculate  probability  anton  pick  exactly  chocolate  contains  space  separated  chocolate  length  conveyor  visible  part  conveyor  speed  anton  speed  second  contains  sequence  space  separated  coordinate  chocolate  print  per  probability  anton  pick  exactly  chocolate  last  answer  considered  correct  absolute  relative  error
398/B __label__dp  user  ainta  decided  paint  wall  wall  consists  tile  arranged  n  table  tile  painted  others  want  paint  beautifully  follow  rule  firstly  user  ainta  look  wall  least  painted  cell  row  least  painted  cell  column  stop  coloring  otherwise  go  step  user  ainta  choose  tile  wall  uniform  probability  tile  ha  chosen  painted  paint  tile  otherwise  ignores  take  rest  minute  even  paint  tile  ainta  go  step  ainta  worried  would  take  much  time  finish  work  want  calculate  expected  time  needed  paint  wall  method  help  find  expected  time  assume  choosing  painting  tile  consumes  time  contains  size  wall  painted  cell  next  go  contains  position  painted  cell  guaranteed  position  distinct  consider  row  table  numbered  consider  column  table  numbered  single  print  expected  time  paint  wall  minute  answer  considered  correct  ha  absolute  relative  error
378/A __label__brute  force  player  playing  game  writes  dice  thrown  player  whose  written  got  closer  dice  win  payer  difference  draw  player  wrote  second  player  wrote  many  way  throw  dice  player  win  draw  second  player  win  single  contains  written  paper  second  player  correspondingly  print  way  throw  dice  player  win  game  end  draw  second  player  win  correspondingly
629/E __label__dp  __label__data  structures  __label__dfs  __label__trees  famil  door  city  map  look  like  tree  undirected  connected  acyclic  graph  people  call  treeland  intersection  city  connected  bidirectional  road  friend  famil  door  living  city  friend  life  intersection  work  intersection  everyone  city  unhappy  exactly  simple  path  home  work  famil  door  plan  construct  exactly  new  road  randomly  choose  possibility  note  even  build  new  road  city  already  connected  know  friend  become  happy  famil  door  construct  new  road  path  friend  home  work  back  visit  road  twice  formally  simple  cycle  containing  moreover  friend  becomes  happy  pleasure  equal  length  path  easy  see  unique  friend  famil  door  want  know  expected  pleasure  expected  length  cycle  containing  consider  case  cycle  exists  input  contains  intersection  treeland  famil  door  friend  follow  describing  bidirectional  road  contains  index  intersection  connected  road  last  input  describe  famil  door  friend  ii  index  intersection  friend  life  work  friend  print  expected  value  pleasure  happy  answer  considered  correct  absolute  relative  error  doe  exceed
148/E __label__dp  tantrum  princess  usually  smash  collectable  porcelain  every  furious  shriek  accompanied  item  smashed  collection  porcelain  arranged  neatly  shelf  shelf  item  placed  row  access  outermost  item  leftmost  rightmost  item  middle  shelf  item  taken  next  item  side  shelf  accessed  see  example  item  taken  returned  shelf  given  value  item  task  find  maximal  damage  princess  tantrum  shriek  inflict  collection  porcelain  input  data  contains  next  value  item  shelf  give  item  shelf  inclusive  followed  value  item  inclusive  order  appear  shelf  corresponds  leftmost  item  last  rightmost  total  item  guaranteed  least  output  maximal  total  value  tantrum  shriek
1152/F2 __label__dp  problem  previous  ha  larger  constraint  aki  playing  new  video  game  video  game  control  neko  giant  cat  fly  planet  catniverse  planet  catniverse  numbered  beginning  game  aki  chooses  planet  neko  initially  located  aki  performs  move  move  neko  moved  current  planet  planet  planet  visited  fixed  constant  given  input  way  neko  visit  exactly  different  planet  way  visiting  planet  called  different  index  planet  visited  way  different  planet  visited  second  way  total  way  visit  planet  way  since  answer  quite  large  print  modulo  contains  planet  catniverse  planet  neko  need  visit  said  constant  print  exactly  different  way  neko  visit  exactly  planet  since  answer  quite  large  print  modulo
79/E __label__math  fox  ciel  safely  returned  castle  wa  something  wrong  security  system  castle  sensor  attached  castle  covering  ciel  point  castle  want  move  point  position  room  step  ciel  move  point  either  rightward  upward  castle  sensor  set  point  every  sensor  ha  count  value  decrease  count  value  every  time  ciel  move  initially  count  value  sensor  every  time  ciel  move  point  count  value  sensor  point  decrease  count  value  sensor  becomes  strictly  le  sensor  catch  ciel  suspicious  individual  determine  whether  ciel  move  without  caught  sensor  possible  output  step  assume  ciel  move  every  point  even  censor  point  please  use  lld  specificator  read  write  bit  preferred  use  cin  stream  use  specificator  ciel  objective  possible  output  character  represent  feasible  step  character  step  moving  rightward  moving  upward  several  solution  output  lexicographically  character  lexicographically  earlier  character
954/F __label__dp  __label__sortings  running  rectangular  field  field  represented  matrix  row  column  denotes  cell  belonging  row  column  start  end  path  cell  advance  obstacle  blocking  path  obstacle  denoted  forbids  entering  cell  lkk  calculate  different  path  print  modulo  contains  obstacle  column  matrix  respectively  follow  containing  k  kk  denoting  obstacle  blocking  every  cell  lkk  cell  blocked  multiple  obstacle  print  different  path  taken  modulo  impossible  get  path
360/D __label__number  theory  levko  love  sort  set  much  levko  ha  array  prime  today  generates  set  let  describe  generation  process  set  ha  single  let  take  element  set  aibj  mod  occur  set  add  set  repeat  step  long  add  least  element  set  levko  wonder  many  belong  least  set  want  know  size  union  generated  set  contains  prime  second  contains  space  separated  third  contains  space  separated  single  size  union  set
1082/C __label__greedy  __label__sortings  multi  subject  competition  coming  competition  ha  different  subject  participant  choose  alex  coach  form  competition  delegation  student  ha  candidate  person  know  subject  candidate  specializes  skill  level  specialization  level  negative  rule  competition  require  delegation  choose  subset  subject  participate  restriction  student  team  participating  chosen  subject  alex  decided  candidate  would  participate  subject  specializes  alex  wonder  ha  choose  maximize  total  sum  skill  level  delegate  skip  competition  year  every  valid  non  empty  delegation  ha  negative  sum  course  alex  spare  money  delegate  chooses  must  participate  competition  contains  candidate  subject  next  contains  per  subject  specialization  skill  level  candidate  print  single  maximum  total  sum  skill  delegate  form  valid  delegation  according  rule  every  valid  non  empty  delegation  ha  negative  sum
721/D __label__math  __label__greedy  __label__data  structures  __label__constructive  algorithms  recently  maxim  ha  found  array  needed  immediately  come  idea  changing  invented  positive  decided  add  subtract  arbitrary  array  element  formally  applying  single  operation  maxim  chooses  replaces  element  array  either  please  note  operation  applied  position  maxim  curious  minimalis  thus  want  know  minimum  value  product  array  element  reach  maxim  would  apply  operation  please  help  input  contains  element  array  maximum  operation  invented  maxim  respectively  second  contains  element  array  found  maxim  print  array  element  applying  operation  array  particular  stay  true  every  product  array  element  minimum  possible
778/E __label__dp  __label__sortings  boris  really  like  even  owns  small  shop  selling  interesting  ha  decimal  cost  shop  equal  sum  cost  digit  given  value  cost  digit  course  boris  interested  owns  maximum  cost  possible  recently  boris  got  hold  magical  artifact  allow  increase  cost  collection  artifact  string  consisting  digit  symbol  use  artifact  boris  must  replace  digit  get  decimal  without  leading  allowed  get  resulting  added  boris  collection  us  artifact  exactly  maximum  cost  collection  boris  achieve  using  artifact  contains  artifact  consisting  digit  symbol  next  contains  amount  boris  collection  next  start  last  contains  cost  digit  output  maximum  possible  cost  collection  using  artifact
425/B __label__greedy  sereja  ha  n  rectangular  table  cell  table  contains  sereja  want  table  meet  following  requirement  connected  component  value  form  rectangle  side  parallel  side  table  rectangle  filled  cell  component  form  rectangle  size  h  component  must  exactly  cell  connected  component  value  set  cell  table  meet  following  condition  every  cell  set  value  cell  set  form  connected  region  table  cell  connected  adjacent  row  column  table  impossible  add  cell  set  unless  violate  previous  condition  sereja  change  value  cell  table  table  met  described  requirement  minimum  table  cell  change  case  contains  next  describe  table  contains  ai  im  value  cell  row  print  impossible  meet  requirement  otherwise  print  minimum  cell  changed
416/B __label__dp  __label__implementation  __label__brute  force  well  known  art  union  called  kalevich  alive  manufacture  objectsart  picture  union  consists  painter  decided  organize  work  follows  painter  us  color  wa  assigned  color  distinct  painter  let  assume  painter  us  color  second  us  color  picture  color  adding  color  picture  take  painter  tij  unit  time  order  important  everywhere  painter  work  ordered  following  rule  picture  painted  painter  second  painter  finish  working  picture  must  painter  painter  work  picture  order  paint  picture  paint  second  picture  painter  simultaneously  work  picture  painter  need  time  rest  soon  painter  finish  part  working  picture  picture  immediately  becomes  available  next  painter  given  painter  start  working  time  find  picture  time  ready  sale  input  contains  picture  painter  follow  description  picture  per  contains  ti  ij  tij  time  painter  need  work  picture  print  sequence  moment  painter  stopped  working  picture
1111/E __label__dp  __label__data  structures  __label__dfs  __label__graphs  __label__trees  given  tree  node  query  every  query  start  followed  node  tree  answer  query  assume  tree  rooted  want  divide  given  node  group  following  condition  met  node  exactly  group  group  least  node  group  distinct  node  node  ancestor  direct  indirect  need  output  way  modulo  every  query  contains  vertex  tree  query  respectively  next  contains  denoting  edge  connecting  vertex  vertex  guaranteed  given  graph  tree  next  start  node  maximum  group  root  tree  current  query  respectively  followed  distinct  denoting  node  current  query  guaranteed  sum  query  doe  exceed  print  contains  answer  query
1144/F __label__dfs  __label__graphs  given  connected  undirected  graph  consisting  vertex  edge  self  loop  multiple  edge  given  graph  direct  edge  way  obtained  directed  graph  doe  path  length  greater  length  path  denoted  traversed  edge  contains  n  vertex  edge  respectively  following  edge  edge  given  pair  vertex  multiple  edge  given  graph  pair  pair  list  edge  guaranteed  given  graph  connected  path  pair  vertex  given  graph  impossible  direct  edge  given  graph  way  obtained  directed  graph  doe  path  length  least  print
879/A __label__implementation  seems  borya  seriously  sick  going  visit  doctor  find  exact  diagnosis  doctor  need  information  previous  visit  borya  ha  visit  prescribed  order  borya  visit  doctor  doctor  doctor  borya  get  information  health  last  doctor  doctor  strange  working  schedule  doctor  go  work  day  work  every  day  work  day  di  doctor  appointment  take  quite  long  time  borya  see  doctor  per  day  minimum  time  need  visit  doctor  contains  doctor  next  output  single  minimum  day  borya  visit  last  doctor
772/B __label__geometry  given  convex  polygon  distinct  vertex  vertex  ha  coordinate  plane  vertex  listed  clockwise  order  choose  real  move  vertex  polygon  distance  original  position  find  maximum  value  matter  move  vertex  polygon  doe  intersect  stay  convex  ha  vertex  next  coordinate  vertex  contains  coordinate  vertex  point  guaranteed  given  clockwise  order  form  strictly  convex  polygon  particular  consecutive  point  lie  straight  print  real  maximum  real  matter  move  vertex  polygon  stay  convex
821/A __label__implementation  okabe  need  renovate  future  gadget  laboratory  tried  crazy  experiment  lab  represented  square  grid  good  lab  defined  lab  every  equal  expressed  sum  row  column  word  every  exist  index  denotes  row  column  help  okabe  determine  whether  given  lab  good  input  contains  size  lab  next  space  separated  denoting  row  grid  row  print  yes  given  lab  good  otherwise
645/F __label__math  __label__number  theory  attempt  make  peace  mischievious  mess  maker  bessie  farmer  john  planning  plant  flower  garden  complement  lush  grassy  field  bovinia  good  horticulturist  know  garden  plant  must  exact  arrangement  flower  initially  farmer  john  ha  different  specie  flower  plant  flower  specie  next  day  farmer  john  receive  batch  flower  new  specie  day  receive  flower  specie  different  specie  farmer  john  already  ha  farmer  john  knowing  right  balance  extravagance  minimalism  want  exactly  specie  flower  used  furthermore  reduce  waste  flower  specie  farmer  john  chooses  must  planted  garden  garden  must  identical  say  chosen  specie  equal  flower  garden  farmer  john  proponent  national  equality  would  like  create  greatest  garden  possible  receiving  flower  day  farmer  john  would  like  know  sum  possible  choice  specie  maximum  garden  could  create  since  could  large  output  result  modulo  input  contains  next  input  contains  flower  specie  farmer  john  ha  initially  next  input  contains  j  flower  new  specie  farmer  john  receives  day  day  output  sum  maximum  possible  garden  sum  taken  possible  choice  specie  modulo
1256/D __label__greedy  given  binary  string  length  string  consisting  character  move  swap  adjacent  character  string  lexicographically  minimum  possible  string  obtain  given  perform  move  possible  perform  move  note  swap  pair  adjacent  character  index  arbitrary  possibly  time  swap  considered  separate  move  answer  independent  test  case  input  contains  test  case  test  case  contains  length  string  move  perform  second  test  case  contains  string  consisting  character  guaranteed  sum  test  case  doe  exceed  test  case  print  answer  lexicographically  minimum  possible  string  length  obtain  given  perform  move
997/C __label__math  planet  solar  system  atmosphere  university  many  student  fan  bingo  game  well  known  month  planet  consists  day  calendar  represented  square  matrix  extremely  popular  weather  condition  even  unusual  due  unique  composition  atmosphere  interacting  sunlight  every  day  sky  take  color  blue  green  red  play  bingo  need  observe  sky  month  day  cell  painted  color  sky  day  blue  green  red  end  month  student  examine  calendar  least  row  column  contains  cell  color  month  called  lucky  let  call  coloring  calendar  different  least  cell  ha  different  color  easy  see  different  coloring  much  lucky  since  quite  large  print  modulo  input  contains  single  row  column  calendar  print  lucky  coloring  calendar  modulo
496/E __label__greedy  __label__sortings  assistant  director  new  musical  play  play  consists  musical  part  part  must  performed  exactly  actor  casting  director  chose  actor  take  part  play  task  assign  part  actor  several  limitation  actor  ha  certain  voice  range  part  sing  formally  actor  cii  pitch  lowest  highest  note  actor  sing  part  ajj  pitch  lowest  highest  note  present  part  actor  perform  part  cijji  note  part  actor  voice  range  according  contract  actor  perform  part  besides  allowed  give  part  actor  take  part  crowd  scene  rehearsal  start  hour  need  assignment  quickly  contains  single  part  play  next  space  separated  range  note  part  jj  next  contains  single  actor  next  space  separated  range  actor  part  perform  ii  assignment  meet  criterion  aboce  print  single  word  yes  without  quote
1177/B __label__implementation  __label__binary  search  let  write  positive  another  without  delimiters  single  string  infinite  sequence  starting  task  print  digit  sequence  contains  position  process  based  index  print  digit  resulting  infinite  sequence
954/C __label__implementation  matrix  size  x  filled  every  obviously  every  occurs  exactly  matrix  traversed  path  matrix  path  described  sequence  visited  cell  denoting  started  cell  containing  moved  cell  cell  located  column  denote  cell  move  following  cell  notice  making  move  requires  adjacent  cell  allowed  stay  cell  know  exactly  find  possible  value  could  start  cell  containing  move  cell  containing  step  move  cell  containing  step  choose  contradict  sequence  move  contains  cell  visited  path  cell  visited  twice  listed  twice  second  contains  cell  path  possible  value  contradict  information  path  print
690/C2 __label__dfs  __label__graphs  __label__trees  research  zombie  thought  process  yielded  interesting  result  know  previous  problem  nervous  system  zombie  consists  brain  brain  connector  joining  pair  brain  together  wa  observed  intellectual  ability  zombie  depend  mainly  topology  nervous  system  precisely  define  distance  brain  minimum  brain  connector  used  transmitting  thought  brain  brain  latency  zombie  defined  maximum  distance  brain  researcher  conjecture  brain  latency  crucial  parameter  determines  smart  given  zombie  help  test  conjecture  writing  program  compute  brain  latency  nervous  system  problem  assume  nervous  system  given  input  valid  satisfies  condition  easy  version  input  contains  space  separated  denoting  brain  conveniently  numbered  brain  connector  nervous  system  respectively  next  description  brain  connector  follow  every  connector  given  pair  brain  connects  print  brain  latency
82/E __label__geometry  consider  house  plan  let  house  represented  infinite  horizontal  strip  defined  inequality  strictly  outside  house  light  source  point  window  located  wall  window  represented  segment  window  arranged  symmetrically  task  find  area  floor  home  lighted  source  light  input  file  contains  next  entry  indicates  segment  endpoint  segment  endpoint  second  segment  segment  describe  location  window  space  separated  guaranteed  distinct  segment  common  point  print  single  real  area  illuminated  part  floor  absolute  relative  error
630/P __label__geometry  wa  decided  city  distinguish  success  local  company  award  form  star  covered  gold  side  order  star  necessary  estimate  order  cost  depends  area  gold  plating  write  program  calculate  area  star  star  figure  n  corner  prime  constructed  following  way  circle  radius  point  selected  distance  adjacent  equal  every  point  connected  segment  maximally  distant  point  area  bounded  segment  part  figure  part  input  contains  prime  star  corner  radius  circumcircle  correspondingly  output  star  area  relative  error  answer  greater
729/E __label__greedy  __label__data  structures  __label__sortings  __label__graphs  __label__constructive  algorithms  worker  company  ha  unique  exaclty  chief  worker  except  chief  ha  exactly  immediate  superior  wa  request  worker  tell  many  superior  immediate  worker  superior  immediate  superior  immediate  superior  immediate  superior  example  worker  company  chief  second  worker  immediate  superior  third  worker  immediate  superior  second  third  worker  ha  superior  immediate  immediate  chief  superior  worker  except  worker  hurry  made  mistake  find  minimum  worker  could  make  mistake  contains  positive  worker  chief  second  contains  superior  immediate  worker  reported  print  minimum  worker  could  make  mistake
494/A __label__greedy  malek  ha  recently  found  treasure  map  wa  looking  treasure  found  locked  door  wa  string  written  door  consisting  character  wa  manual  open  door  spending  long  time  malek  managed  decode  manual  found  goal  replace  character  final  string  becomes  beautiful  wa  written  string  called  beautiful  character  character  character  total  character  equal  total  character  help  malek  open  door  telling  character  many  character  must  replace  input  contains  string  character  string  character  guaranteed  contains  least  character  way  replacing  character  lead  beautiful  string  print  otherwise  character  print  separate  containing  positive  character  character  must  replaced
592/D __label__dp  __label__dfs  __label__graphs  __label__trees  ari  monster  ordinary  monster  hidden  identity  super  byteforces  superhero  byteforces  country  consists  city  connected  bidirectional  road  every  road  connects  exactly  distinct  city  whole  road  system  designed  way  able  city  city  using  given  road  city  attacked  human  ari  meant  super  immediately  city  attacked  scare  bad  human  super  pas  city  another  using  given  road  moreover  passing  road  take  exactly  kron  time  unit  used  byteforces  super  byteforces  attending  training  camp  located  nearby  country  codeforces  fortunately  special  device  codeforces  allows  instantly  teleport  codeforces  city  byteforces  way  back  long  purpose  problem  teleportation  used  exactly  help  super  calculating  city  teleport  beginning  order  end  job  minimum  time  measured  krons  provide  time  plan  way  back  codeforces  input  contains  city  byteforces  city  attacked  respectively  follow  describing  road  system  contains  city  end  road  last  contains  distinct  city  attacked  given  particular  order  print  city  super  teleport  many  possible  optimal  answer  print  lowest  city
1077/F2 __label__dp  __label__data  structures  difference  easy  hard  version  constraint  vova  like  picture  kitten  news  feed  social  network  us  represented  array  consecutive  picture  kitten  course  vova  like  picture  beautiful  others  picture  ha  beauty  vova  want  repost  exactly  picture  way  segment  news  feed  least  consecutive  picture  ha  least  picture  reposted  vova  sum  beauty  value  reposted  picture  maximum  possible  example  vova  ha  repost  picture  news  feed  vova  skip  picture  every  pair  consecutive  picture  vova  ha  repost  least  task  calculate  maximum  possible  sum  value  reposted  picture  vova  follows  condition  described  say  way  satisfy  condition  input  contains  x  picture  news  feed  minimum  length  segment  least  repost  picture  vova  ready  repost  second  input  contains  beauty  picture  print  way  repost  picture  satisfy  condition  problem  statement
597/A __label__math  find  divisible  segment  word  need  find  value  divisible  contains  space  separated  print  required
1137/D __label__constructive  algorithms  __label__number  theory  interactive  problem  misha  like  play  cooperative  game  incomplete  information  today  suggested  friend  play  cooperative  game  lake  misha  ha  already  come  field  upcoming  game  field  game  directed  graph  consisting  part  part  road  along  coast  lake  cycle  vertex  second  part  path  home  lake  chain  vertex  edge  last  vertex  chain  vertex  road  along  coast  ha  beautiful  view  lake  known  finish  vertex  misha  decided  keep  field  secret  nobody  know  neither  note  vertex  field  ha  exactly  outgoing  edge  vertex  except  home  vertex  finish  vertex  exactly  ingoing  edge  home  vertex  ha  incoming  edge  finish  vertex  ha  incoming  edge  beginning  game  piece  player  indexed  consecutive  home  vertex  turn  player  ask  misha  simultaneously  move  piece  along  corresponding  edge  misha  answer  query  move  misha  tell  player  whose  piece  vertex  whose  piece  different  vertex  goal  game  move  piece  finish  vertex  misha  friend  idea  win  game  without  knowledge  luckily  friend  help  coordinate  action  win  game  misha  ha  drawn  field  input  interaction  part  straight  away  friend  gather  finish  vertex  print  done  terminate  program
1178/H __label__graphs  __label__binary  search  warning  problem  ha  unusual  memory  limit  bob  decided  waste  prime  year  implementing  gui  form  large  corporation  instead  earn  supper  stock  exchange  reykjavik  stock  exchange  reykjavik  actual  stock  exchange  world  type  transaction  take  single  share  stock  exchange  single  share  stock  provided  current  price  share  least  current  price  share  stock  listed  ser  interest  bob  numbered  bob  owns  single  share  stock  would  like  single  share  time  future  bob  managed  forecast  price  stock  time  stock  cost  time  currently  help  bob  find  earliest  moment  time  single  share  minimum  stock  exchange  ha  perform  order  assume  stock  exchange  ha  unlimited  amount  stock  point  time  contains  single  stock  currently  owned  bob  next  contains  representing  stock  price  stock  impossible  bob  achieve  goal  output  single
873/D __label__constructive  algorithms  merge  sort  well  known  sorting  algorithm  main  function  sort  element  array  index  implemented  follows  segment  already  sorted  non  descending  order  l  end  function  call  let  call  mergesort  id  call  mergesort  id  merge  segment  id  mid  making  segment  sorted  non  descending  order  merge  algorithm  call  function  array  problem  indexed  sort  whole  array  need  call  mergesort  call  function  mergesort  important  ivan  ha  decided  calculate  sorting  array  example  call  mergesort  mergesort  check  array  sorted  end  call  call  mergesort  set  mid  call  mergesort  mergesort  perform  recursive  call  segment  sorted  ivan  ha  implemented  program  count  mergesort  call  need  test  need  find  array  permutation  size  element  every  found  array  mergesort  call  sorting  array  exactly  help  ivan  find  array  want  contains  size  desired  permutation  mergesort  call  required  sort  permutation  size  exactly  call  mergesort  sorting  exist  output  otherwise  output  element  permutation  would  meet  required  condition  multiple  answer  print
424/D __label__dp  __label__data  structures  __label__constructive  algorithms  __label__brute  force  __label__binary  search  recently  official  statement  world  olympic  committee  said  olympic  winter  game  held  tomsk  city  official  decided  prepare  olympics  thoroughly  build  necessary  olympic  facility  early  possible  biathlon  track  built  construct  biathlon  track  plot  land  wa  allocated  rectangle  divided  n  identical  square  square  ha  coordinate  row  located  column  located  square  characterized  height  sport  biathletes  move  square  another  biathlete  move  higher  square  lower  make  descent  biathlete  move  lower  square  higher  make  ascent  biathlete  move  square  height  move  flat  ground  biathlon  track  border  rectangular  area  allocated  land  biathletes  move  clockwise  direction  known  move  flat  ground  average  biathlete  spends  second  ascent  take  second  descent  take  second  tomsk  administration  want  choose  route  average  biathlete  pass  close  second  possible  word  difference  time  passing  selected  track  minimum  better  understanding  look  sample  input  data  sample  administration  want  track  covering  time  close  second  possible  consider  rectangle  shown  image  arrow  average  biathlete  move  along  boundary  clockwise  direction  exactly  second  upper  left  corner  track  located  square  row  column  lower  right  corner  square  row  column  thing  administration  want  side  rectangle  boundary  biathlon  track  consist  le  square  completely  contained  selected  land  given  description  given  plot  land  necessary  time  value  write  program  find  suitable  rectangle  biathlon  track  several  rectangle  allowed  print  input  contains  size  land  plot  desired  distance  covering  time  second  contains  p  time  average  biathlete  need  cover  flat  piece  track  ascent  descent  respectively  follow  contains  set  height  square  given  plot  land  height  value  positive  exceeding  single  output  print  positive  row  column  upper  left  corner  row  column  lower  right  corner  rectangle  chosen  track
652/B __label__sortings  student  school  found  kind  sorting  called  sort  array  element  sorted  condition  hold  aii  even  aii  odd  example  array  sorted  array  sorted  make  array  sorted  contains  single  element  array  second  contains  element  array  possible  make  array  sorted  print  space  separated  element  sort  otherwise  print  word  impossible
815/D __label__data  structures  __label__binary  search  __label__geometry  karen  got  home  supermarket  getting  ready  sleep  taking  shower  changing  pajama  looked  shelf  saw  album  curious  opened  saw  trading  card  collection  recalled  used  play  card  child  although  grown  still  wonder  thing  card  ha  characteristic  strength  defense  speed  value  characteristic  card  positive  maximum  possible  strength  card  maximum  possible  defense  maximum  possible  speed  card  collection  card  ha  strength  defense  speed  respectively  card  beat  another  card  least  characteristic  strictly  greater  corresponding  characteristic  card  wonder  many  different  card  beat  card  collection  card  considered  different  least  characteristic  different  value  input  contains  card  collection  maximum  possible  strength  maximum  possible  defense  maximum  possible  speed  respectively  next  particular  contains  strength  defense  speed  collection  card  respectively  output  single  different  card  beat  card  collection
1070/G __label__dp  __label__implementation  __label__greedy  __label__brute  force  polycarp  introvert  person  fact  much  introvert  play  monster  potion  board  game  alone  board  game  row  cell  cell  numbered  left  right  type  cell  cell  containing  single  monster  cell  containing  single  potion  blank  cell  contains  neither  monster  potion  polycarp  ha  token  representing  hero  fighting  monster  initially  located  blank  cell  polycarp  task  choose  single  cell  rally  point  move  hero  cell  rally  point  cell  type  policarp  selects  rally  point  pick  hero  order  move  directly  point  hero  reach  point  polycarp  pick  another  hero  order  point  forth  hero  reach  rally  point  cell  going  point  hero  deviate  direct  route  take  step  back  hero  move  cell  cell  direction  point  reach  possible  multiple  hero  simultaneously  cell  initially  hero  ha  hit  point  monster  different  monster  might  different  potion  different  potion  might  different  hero  step  cell  blank  monster  potion  hero  doe  change  hero  step  cell  containing  monster  hero  monster  fight  monster  strictly  higher  hero  monster  win  polycarp  loses  whole  game  hero  greater  equal  monster  hero  win  monster  subtracted  hero  hero  survives  drop  dy  polycarp  loos  becomes  negative  due  fight  hero  win  fight  monster  monster  disappears  cell  becomes  blank  hero  step  cell  containing  potion  hero  drink  potion  immediately  result  potion  added  hero  potion  disappears  cell  becomes  blank  obviously  polycarp  want  win  game  mean  must  choose  rally  point  order  hero  move  every  hero  reach  rally  point  survives  polycarp  loses  hero  reach  rally  point  killed  monster  time  polycarp  use  cell  rally  point  initially  monster  potion  blank  cell  without  hero  help  polycarp  write  program  choose  rally  point  order  hero  move  input  contains  length  game  board  hero  following  describe  hero  contains  initial  position  initial  hero  guaranteed  cell  blank  guaranteed  different  following  contains  describes  cell  game  board  mean  cell  blank  mean  cell  contains  monster  positive  mean  cell  contains  potion  output  print  index  rally  point  cell
1041/E __label__greedy  __label__data  structures  __label__graphs  __label__constructive  algorithms  monocarp  ha  drawn  tree  undirected  connected  acyclic  graph  ha  given  vertex  index  index  distinct  every  edge  tree  monocarp  ha  written  maximum  index  vertex  component  formed  edge  edge  erased  tree  monocarp  ha  given  list  pair  want  provide  example  tree  produce  said  list  tree  exists  tree  doe  exist  say  contains  vertex  tree  next  contains  maximal  index  vertex  component  formed  edge  removed  tree  produce  given  list  pair  print  without  quote
845/F __label__dp  polycarp  owns  shop  capital  berland  recently  criminal  activity  capital  increased  polycarp  thinking  establishing  better  security  storehouse  shop  storehouse  represented  matrix  row  column  element  matrix  either  empty  space  wall  polycarp  want  hire  guard  possibly  watch  storehouse  guard  cell  matrix  protect  every  cell  right  cell  every  cell  bottom  cell  nearest  wall  formally  guard  standing  cell  protects  cell  condition  met  empty  cell  either  x  wall  cell  guard  cell  guard  look  guard  placed  empty  cell  protect  empty  cell  plan  placing  guard  set  cell  guard  placed  course  plan  different  exists  least  cell  included  plan  included  second  plan  vice  versa  polycarp  call  plan  suitable  empty  cell  protected  polycarp  want  know  suitable  plan  since  large  output  modulo  contains  length  width  storehouse  follow  ith  contains  string  consisting  character  ith  row  matrix  representing  storehouse  character  either  output  suitable  plan  modulo
976/A __label__implementation  string  called  correct  consists  character  redundant  leading  example  given  correct  string  perform  different  operation  string  swap  pair  adjacent  character  example  replace  example  let  val  binary  representation  correct  string  le  correct  string  iff  val  al  task  find  minimum  correct  string  obtain  given  using  operation  described  use  operation  time  order  even  use  operation  contains  length  string  second  contains  string  consisting  character  guaranteed  string  correct  print  string  minimum  correct  string  obtain  given
382/A __label__implementation  __label__greedy  ksenia  ha  ordinary  pan  scale  several  weight  equal  mass  ksenia  ha  already  put  weight  scale  weight  untouched  ksenia  wondering  whether  possible  put  remaining  weight  scale  scale  equilibrium  scale  equilibrium  total  sum  weight  left  pan  equal  total  sum  weight  right  pan  ha  non  empty  sequence  character  describing  scale  sequence  uppercase  english  letter  indicates  weight  symbol  indicates  delimiter  character  occurs  sequence  exactly  weight  recorded  sequence  delimiter  initially  left  pan  scale  weight  recorded  sequence  delimiter  initially  right  pan  scale  second  contains  non  empty  sequence  containing  uppercase  english  letter  letter  indicates  weight  used  guaranteed  english  letter  input  data  different  guaranteed  input  doe  extra  character  put  weight  scale  scale  equilibrium  print  string  impossible  otherwise  print  description  resulting  scale  copy  format  input
600/A __label__implementation  __label__strings  given  string  let  call  word  largest  sequence  consecutive  symbol  without  symbol  comma  semicolon  example  word  string  aba  aba  word  empty  example  string  contains  empty  word  separated  find  word  given  string  nonnegative  without  leading  build  new  string  string  word  separating  order  remain  string  word  build  string  way  order  remain  string  string  example  string  aba  string  would  equal  string  would  equal  aba  input  contains  string  string  contains  symbol  ascii  ascii  ascii  digit  lowercase  uppercase  latin  letter  print  string  string  second  string  surrounded  quote  ascii
1070/I __label__graphs  city  way  road  berland  road  connecting  distinct  city  recently  berland  government  ha  made  tough  decision  transfer  ownership  road  private  company  total  private  company  berland  numbered  privatization  every  road  belong  exactly  company  anti  monopoly  committee  demand  privatization  company  road  urbanists  berland  stated  opinion  city  adjacent  road  owned  company  help  government  distribute  road  company  condition  satisfied  company  get  road  city  ha  road  distinct  company  adjacent  contains  several  test  case  contains  test  case  input  solve  test  case  separately  test  case  completely  independent  affect  following  describe  test  case  case  start  consisting  space  separated  city  road  maximum  diversity  road  adjacent  city  follow  pair  space  separated  mean  road  connects  city  road  way  road  pair  city  sum  value  test  case  exceed  sum  value  test  case  exceed  print  answer  test  case  test  case  print  sequence  separated  space  company  owns  road  plan  multiple  solution  output  solution  test  case  print
551/B __label__implementation  __label__constructive  algorithms  __label__brute  force  __label__strings  professor  gukiz  accept  string  like  swap  letter  string  obtain  new  gukiz  ha  string  want  obtain  string  swapping  letter  many  non  overlapping  substring  equal  either  possible  substring  string  string  formed  consecutive  segment  character  substring  string  overlap  position  string  occupied  gukiz  wa  disappointed  none  student  managed  solve  problem  help  find  possible  string  contains  string  second  contains  string  third  contains  string  denotes  length  string  string  consist  lowercase  english  letter  possible  coincide  find  possible  string  described  problem  statement  multiple  possible  answer  print
1133/E __label__dp  __label__sortings  coach  local  university  student  supervision  programming  skill  student  form  team  another  new  programming  competition  know  student  involved  competition  probable  victory  university  form  least  non  empty  team  total  student  maximized  know  team  balanced  mean  programming  skill  pair  student  team  differ  team  independent  another  mean  difference  programming  skill  student  different  team  doe  matter  possible  student  included  team  task  report  maximum  possible  total  student  least  non  empty  balanced  team  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  student  maximum  team  correspondingly  second  input  contains  programming  skill  student  print  maximum  possible  total  student  least  non  empty  balanced  team
1090/M __label__implementation  house  along  road  anya  life  painted  possible  color  anya  like  walking  along  road  like  adjacent  house  road  color  want  select  long  segment  road  adjacent  house  color  help  anya  find  longest  segment  property  contains  house  color  next  contains  color  house  along  road  output  single  maximum  house  road  segment  adjacent  house  color
402/C __label__graphs  __label__constructive  algorithms  __label__brute  force  let  call  undirected  graph  vertex  interesting  following  condition  fulfill  graph  contains  exactly  edge  graph  self  loop  multiple  edge  subgraph  consisting  vertex  contains  edge  subgraph  graph  set  graph  vertex  set  graph  edge  set  edge  must  meet  condition  end  edge  set  must  belong  chosen  set  vertex  task  find  interesting  graph  consisting  vertex  contains  single  test  input  next  contains  space  separated  p  vertex  graph  interest  value  appropriate  test  guaranteed  required  graph  exists  test  print  containing  description  edge  interesting  graph  must  space  separated  aii  vertex  connected  edge  resulting  graph  consider  graph  vertex  numbered
594/B __label__binary  search  __label__geometry  month  maxim  ha  coming  work  favorite  bicycle  quite  recently  decided  ready  take  part  cyclist  competition  know  year  competition  take  place  competition  participant  must  quickly  possible  complete  ride  along  straight  point  point  measuring  time  complex  process  related  usage  special  sensor  time  counter  think  front  wheel  bicycle  circle  radius  let  neglect  thickness  tire  size  sensor  physical  effect  sensor  placed  rim  wheel  fixed  point  circle  radius  counter  move  like  chosen  point  circle  move  forward  rotates  around  center  circle  beginning  participant  choose  point  bike  fully  behind  starting  start  movement  instantly  accelerates  maximum  speed  time  tsi  coordinate  sensor  equal  coordinate  start  time  counter  start  cyclist  make  complete  ride  moving  maximum  speed  moment  sensor  coordinate  equal  coordinate  finish  moment  time  tfi  time  counter  deactivates  record  final  time  thus  counter  record  participant  made  complete  ride  time  tfi  si  maxim  good  math  suspect  total  result  depend  maximum  speed  choice  initial  point  maxim  asking  calculate  competition  minimum  possible  time  measured  time  counter  radius  wheel  bike  equal  contains  competition  radius  front  wheel  max  bike  maximum  speed  respectively  next  description  contest  contains  coordinate  start  coordinate  finish  competition  print  real  equal  minimum  possible  time  measured  time  counter  answer  considered  correct  absolute  relative  error  exceed
1204/A __label__math  city  saint  petersburg  day  last  minute  main  station  saint  petersburg  train  departs  minute  minute  minute  word  train  departs  time  team  bowwow  ha  arrived  station  time  trying  count  many  train  missed  word  train  departed  strictly  time  example  missed  train  departed  know  time  help  note  given  binary  representation  without  leading  contains  single  binary  without  leading  output  single  train  departed  strictly  time
713/D __label__data  structures  __label__binary  search  owl  sonya  gave  huge  lake  puzzle  size  n  hedgehog  filya  birthday  present  friend  immediately  started  assemble  puzzle  part  turned  empty  wa  picture  part  picture  denoted  empty  part  denoted  row  puzzle  numbered  top  bottom  column  numbered  left  right  animal  decided  complete  picture  play  might  even  fun  owl  hedgehog  ask  query  query  provided  define  rectangle  stand  coordinate  left  cell  rectangle  stand  coordinate  bottom  right  cell  answer  query  size  maximum  square  consisting  picture  part  part  denoted  located  fully  inside  query  rectangle  help  sonya  filya  answer  query  input  contains  size  puzzle  following  contains  aij  equal  corresponding  cell  contains  picture  empty  next  contains  query  follow  query  description  contains  coordinate  left  bottom  right  cell  query  rectangle  print  maximum  size  square  consisting  lying  fully  inside  query  rectangle
48/D __label__greedy  permutation  sequence  length  containing  exactly  example  permutation  many  task  permutation  today  going  solve  let  imagine  somebody  took  several  permutation  perhaps  different  element  wrote  consecutively  array  shuffled  resulting  array  task  restore  initial  permutation  possible  contains  next  contains  mixed  array  divided  single  space  array  array  split  several  permutation  every  element  array  belongs  exactly  permutation  print  permutation  second  corresponding  element  given  array  element  belongs  permutation  belongs  second  order  permutation  numbering  free
1165/D __label__math  __label__number  theory  guessed  given  list  almost  divisor  almost  mean  divisor  except  list  task  find  minimum  possible  guessed  say  input  data  contradictory  impossible  find  answer  independent  query  input  contains  query  query  follow  query  contains  divisor  list  second  query  contains  divisor  guessed  guaranteed  value  distinct  query  print  answer
571/E __label__math  geometric  progression  element  common  ratio  sequence  b  b  given  geometric  progression  task  find  smallest  element  given  progression  else  state  doe  exist  contains  geometric  progression  next  pair  element  common  ratio  corresponding  geometric  progression  intersection  progression  empty  print  otherwise  print  remainder  minimal  positive  belonging  progression  modulo
792/B __label__implementation  child  standing  circle  playing  counting  game  child  numbered  clockwise  beginning  child  considered  leader  game  played  step  step  leader  count  people  clockwise  order  starting  next  person  last  pointed  leader  eliminated  next  player  becomes  new  leader  example  child  currently  circle  leader  child  counting  rhyme  end  child  eliminated  child  becomes  leader  write  program  print  child  eliminated  every  step  contains  next  contains  print  corresponds  child  eliminated  step
1184/A1 __label__math  __label__brute  force  __label__number  theory  melody  pond  wa  stolen  parent  newborn  baby  madame  kovarian  become  weapon  silence  crusade  doctor  madame  kovarian  changed  melody  name  river  song  giving  new  identity  allowed  kill  eleventh  doctor  heidi  figured  madame  kovarian  us  complicated  hashing  function  order  change  name  baby  steal  order  prevent  happening  future  doctor  heidi  decided  prepare  learning  basic  hashing  technique  hashing  function  designed  follows  given  positive  defines  xy  heidi  wonder  function  reversible  given  positive  find  pair  positive  multiple  pair  exist  output  smallest  possible  pair  output  contains  output  smallest  possible  pair  exists
1081/E __label__math  __label__greedy  __label__constructive  algorithms  __label__binary  search  __label__number  theory  chouti  working  strange  math  problem  wa  sequence  positive  even  sequence  wa  special  namely  every  square  perfect  square  somehow  odd  index  turned  missing  aware  even  position  task  restore  original  sequence  turn  help  problem  setter  might  make  mistake  possible  sequence  several  possible  sequence  output  contains  even  second  contains  positive  possible  sequence  print
486/D __label__math  __label__dp  __label__dfs  __label__trees  know  undirected  connected  graph  node  edge  called  tree  given  tree  consisting  node  node  ha  value  associated  call  set  tree  node  valid  following  condition  satisfied  non  empty  connected  word  node  node  lying  simple  path  presented  task  count  valid  set  since  result  large  must  print  remainder  modulo  contains  space  separated  second  contains  space  separated  positive  next  pair  denoting  edge  guaranteed  edge  form  tree  print  valid  set  modulo
1185/B __label__implementation  __label__strings  methodius  received  email  friend  polycarp  polycarp  keyboard  broken  pressing  key  cause  corresponding  symbol  appear  press  key  regular  keyboard  print  exactly  symbol  example  result  typing  word  hello  following  word  could  printed  hello  hhhhello  hheeeellllooo  following  could  printed  hell  helo  hhllllooo  note  press  key  corresponding  symbol  must  appear  possibly  keyboard  broken  random  manner  mean  pressing  key  get  different  letter  result  word  letter  methodius  ha  guessed  word  polycarp  actually  wanted  write  sure  asks  help  given  list  pair  word  pair  determine  second  word  could  printed  typing  polycarp  keyboard  input  contains  pair  check  input  contains  description  pair  description  contains  single  non  empty  word  consisting  lowercase  latin  letter  second  description  contains  single  non  empty  word  consisting  lowercase  latin  letter  length  string  greater  guaranteed  total  length  word  input  greater  guaranteed  total  length  word  input  greater  output  pair  word  print  yes  word  could  printed  typing  word  otherwise  print
10/D __label__dp  problem  differs  wa  online  contest  sequence  called  increasing  sequence  called  subsequence  sequence  exist  set  index  k  aij  word  sequence  derived  sequence  crossing  element  given  sequence  find  longest  common  increasing  subsequence  increasing  sequence  maximum  length  subsequence  sequence  contains  length  sequence  second  contains  space  separated  range  element  sequence  third  contains  length  second  sequence  fourth  contains  space  separated  range  element  second  sequence  output  length  longest  common  increasing  subsequence  second  output  subsequence  separate  element  space  several  solution  output
780/A __label__implementation  andryusha  orderly  boy  like  keep  thing  place  today  faced  problem  put  sock  wardrobe  ha  distinct  pair  sock  initially  bag  pair  numbered  andryusha  want  put  paired  sock  together  put  wardrobe  take  sock  bag  sock  look  whether  pair  sock  ha  already  took  bag  mean  pair  sock  still  bag  put  current  sock  table  front  otherwise  put  sock  pair  wardrobe  andryusha  remembers  order  took  sock  bag  tell  maximum  sock  table  time  contains  single  sock  pair  second  contains  n  describe  order  andryusha  took  sock  bag  precisely  mean  sock  andryusha  took  wa  pair  guaranteed  andryusha  took  exactly  sock  pair  print  single  maximum  sock  table  time
847/I __label__dfs  berland  capital  ha  form  rectangle  size  n  quarter  quarter  divided  type  regular  labeled  character  quarter  produce  noise  obstacle  propagation  noise  source  noise  labeled  uppercase  latin  letter  quarter  noise  source  obstacle  propagation  noise  heavily  built  labeled  character  quarter  soundproofed  noise  doe  penetrate  obstacle  propagation  noise  quarter  labeled  letter  produce  unit  noise  quarter  labeled  letter  produce  unit  noise  quarter  labeled  letter  produce  unit  noise  quarter  labeled  letter  city  propagating  source  noise  noise  level  halved  moving  quarter  quarter  share  side  odd  halved  rounded  noise  spread  along  chain  example  quarter  located  distance  noise  source  value  noise  reach  quarter  divided  noise  level  come  source  quarter  determined  solely  length  shortest  path  heavily  built  quarter  obstacle  noise  doe  penetrate  value  cell  table  right  show  total  noise  level  respective  quarter  term  sum  noise  quarter  second  noise  quarter  noise  level  quarter  defined  sum  noise  source  ass  quality  life  population  capital  berland  required  find  quarter  whose  noise  level  exceeds  allowed  level  contains  size  berland  capital  noise  unit  quarter  produce  allowable  noise  level  following  contains  character  description  capital  quarter  format  wa  described  statement  possible  berland  capital  quarter  type  print  quarter  noise  level  exceeds  allowed  level
731/D __label__greedy  __label__data  structures  __label__sortings  __label__brute  force  archeologist  found  secret  pas  dungeon  pyramid  cycleland  enter  treasury  open  unusual  lock  door  lock  consists  word  consisting  hieroglyph  wall  near  lock  ha  round  switch  rotation  switch  change  hieroglyph  according  rule  instruction  nearby  say  door  open  word  written  lock  would  sorted  lexicographical  order  definition  lexicographical  comparison  given  note  section  rule  change  hieroglyph  following  clockwise  rotation  round  switch  replaces  hieroglyph  next  hieroglyph  alphabet  hieroglyph  replaced  hieroglyph  hieroglyph  replaced  hieroglyph  help  archeologist  determine  many  clockwise  rotation  perform  order  open  door  determine  impossible  cyclic  shift  alphabet  make  sequence  word  sorted  lexicographically  input  contains  word  written  lock  different  hieroglyph  following  contains  description  word  start  denotes  length  word  followed  index  hieroglyph  make  word  hieroglyph  index  smallest  alphabet  index  biggest  guaranteed  total  length  word  exceed  possible  open  door  rotating  round  switch  print  defines  required  clockwise  rotation  several  valid  print
690/C3 __label__trees  breaking  news  zombie  neurology  turn  contrary  previous  belief  every  zombie  born  single  brain  later  evolves  complicated  brain  structure  fact  whenever  zombie  consumes  brain  new  brain  appears  nervous  system  get  immediately  connected  already  existing  brain  using  single  brain  connector  researcher  interested  monitoring  brain  latency  zombie  task  write  program  given  history  evolution  zombie  nervous  system  computes  brain  latency  every  stage  input  contains  brain  final  nervous  system  second  history  zombie  nervous  system  evolution  given  convenience  brain  order  appear  nervous  system  zombie  born  single  brain  subsequently  brain  added  second  contains  space  separated  meaning  new  brain  added  system  get  connected  parent  brain  output  space  separated  brain  latency  brain  added
1110/A __label__math  given  represented  digit  base  radix  k  k  k  example  determine  whether  even  odd  contains  base  digit  second  contains  digit  representation  contains  unnecessary  leading  equal  print  even  even  otherwise  print  odd
911/B __label__implementation  __label__brute  force  __label__binary  search  new  year  eve  soon  ivan  decided  high  time  started  setting  table  ivan  ha  bought  cake  cut  piece  cake  ha  cut  piece  second  piece  ivan  know  people  celebration  including  ivan  ha  set  plate  cake  thinking  distribute  cake  plate  ivan  want  way  following  condition  met  piece  cake  put  plate  plate  contains  least  piece  cake  plate  contains  piece  cake  make  guest  happy  ivan  want  distribute  cake  way  minimum  piece  plate  maximized  formally  ivan  want  know  maximum  possible  distribute  cake  according  aforementioned  condition  plate  least  piece  cake  help  ivan  calculate  contains  plate  piece  cake  piece  second  cake  respectively  print  maximum  possible  ivan  distribute  cake  way  plate  least  piece  cake
873/B __label__dp  __label__implementation  given  string  consisting  character  substring  string  slsl  sl  length  equal  substring  called  balanced  equal  substring  determine  length  longest  balanced  substring  contains  character  second  contains  string  consisting  exactly  character  character  appear  non  empty  balanced  substring  print  otherwise  print  length  longest  balanced  substring
237/C __label__binary  search  __label__number  theory  decided  carry  survey  theory  prime  let  remind  prime  positive  ha  exactly  distinct  positive  divisor  consider  positive  want  find  minimum  least  prime  find  print  required  minimum  value  meet  described  limitation  print  single  contains  space  separated  single  print  single  required  minimum  solution  print
888/B __label__greedy  ivan  ha  robot  situated  infinite  grid  initially  robot  standing  starting  cell  robot  process  command  type  command  perform  move  cell  move  move  move  ivan  entered  sequence  command  robot  processed  sequence  robot  ended  starting  cell  ivan  doubt  sequence  performing  correctly  robot  end  cell  think  command  ignored  robot  acknowledge  whether  robot  severely  bugged  need  calculate  maximum  possible  command  performed  correctly  help  ivan  calculation  contains  length  sequence  command  entered  ivan  second  contains  sequence  string  consisting  character  character  print  maximum  possible  command  sequence  robot  could  perform  end  starting  cell
665/F __label__math  __label__dp  __label__number  theory  divisible  another  called  divisor  example  ha  positive  divisor  let  define  function  inclusive  ha  exactly  positive  divisor  ha  exactly  positive  divisor  given  calculate  contains  parameter  problem  statement  print  exactly  divisor
931/B __label__implementation  __label__constructive  algorithms  last  stage  football  world  cup  played  using  play  system  team  left  stage  enumerated  several  round  held  round  remaining  team  sorted  order  id  order  play  second  third  fourth  fifth  sixth  guaranteed  round  even  team  winner  game  advance  next  round  loser  eliminated  tournament  draw  last  round  game  remaining  team  round  called  final  winner  called  champion  tournament  arkady  want  favorite  team  play  final  unfortunately  team  id  already  determined  happen  impossible  team  meet  final  meet  earlier  stage  strong  enough  determine  round  team  id  meet  contains  total  team  id  team  arkady  interested  guaranteed  round  even  team  advance  equal  print  final  without  quote  team  meet  final
160/D __label__sortings  __label__dfs  __label__graphs  given  connected  weighted  undirected  graph  without  loop  multiple  edge  let  remind  graph  spanning  tree  defined  acyclic  connected  subgraph  given  graph  includes  graph  vertex  weight  tree  defined  sum  weight  edge  given  tree  contains  minimum  spanning  tree  mst  graph  defined  graph  spanning  tree  minimum  possible  weight  connected  graph  obviously  exists  minimum  spanning  tree  general  case  graph  minimum  spanning  tree  unique  task  determine  following  edge  given  graph  whether  either  included  mst  included  least  mst  included  mst  contains  graph  vertex  edge  correspondingly  follow  contains  description  graph  edge  ii  vertex  connected  edge  edge  weight  guaranteed  graph  connected  loop  multiple  edge  print  answer  edge  edge  included  mst  print  edge  included  least  mst  print  least  edge  included  mst  print  none  print  answer  edge  order  edge  specified  input
1166/C __label__sortings  __label__binary  search  legend  foundation  vectorland  talk  century  ago  array  king  placed  marker  point  conquered  land  including  endpoint  declared  arrayland  many  year  later  vector  king  placed  marker  point  conquered  land  including  endpoint  declared  vectorland  way  land  arrayland  wa  completely  inside  including  endpoint  land  vectorland  denotes  absolute  value  jose  stuck  question  history  exam  value  jose  know  answer  belief  ha  narrowed  possible  answer  want  know  unordered  pair  formed  different  element  legend  could  true  equal  value  note  possible  jose  wrong  pair  could  possibly  make  legend  true  contains  single  choice  second  contains  pairwise  distinct  choice  jose  considering  print  single  unordered  pair  formed  different  jose  choice  could  make  legend  true
933/E __label__dp  __label__constructive  algorithms  east  west  home  best  family  reunion  indispensable  necessity  lunar  new  year  celebration  put  position  reunion  dinner  little  tommy  play  game  family  concise  introduction  game  sequence  non  negative  beginning  ruled  sequence  non  negative  time  select  consecutive  positive  sequence  decrease  minimum  min  cost  operation  equal  min  call  operation  descension  game  immediately  end  consecutive  positive  task  end  game  total  cost  operation  small  possible  obviously  every  game  end  descensions  please  share  solution  game  lowest  cost  contains  second  contains  space  separated  print  descensions
772/E __label__trees  __label__binary  search  interactive  problem  judge  ha  hidden  rooted  full  binary  tree  leaf  full  binary  tree  every  node  ha  either  child  node  child  called  leaf  tree  since  full  binary  tree  exactly  node  tree  leaf  judge  tree  ha  label  would  like  reconstruct  tree  isomorphic  judge  tree  ask  question  question  consists  printing  label  distinct  leaf  let  depth  node  shortest  distance  node  root  tree  let  lca  denote  node  maximum  depth  common  ancestor  node  consider  ca  ca  ca  judge  tell  ha  maximum  depth  note  pair  uniquely  determined  since  tree  binary  tree  tie  specifically  respectively  maximizes  depth  judge  respond  string  respectively  ask  question  input  single  leaf  tree  print  final  answer  print  string  next  parent  node  root
525/B __label__math  __label__greedy  __label__constructive  algorithms  __label__strings  pasha  got  beautiful  string  birthday  string  consists  lowercase  latin  letter  letter  string  numbered  left  right  length  given  string  pasha  like  present  much  decided  change  birthday  pasha  spent  day  performing  following  transformation  string  day  chose  reversed  piece  string  segment  position  position  guaranteed  ai  face  following  task  determine  pasha  string  look  like  day  input  contains  pasha  string  length  character  consisting  lowercase  latin  letter  second  contains  single  day  pasha  changed  string  third  contains  space  separated  element  ai  position  pasha  started  transforming  string  day  output  print  pasha  string  look  like  day
756/B __label__dp  __label__binary  search  new  innovative  ticketing  system  public  transport  introduced  bytesburg  single  travel  card  transport  make  trip  passenger  scan  card  charged  according  fare  fare  constructed  following  manner  type  ticket  ticket  trip  cost  byteland  ruble  ticket  minute  cost  byteland  ruble  ticket  day  minute  cost  byteland  ruble  note  ticket  minute  activated  time  used  trip  started  time  range  inclusive  assume  trip  take  exactly  minute  simplify  choice  passenger  system  automatically  chooses  optimal  ticket  trip  start  system  analysis  previous  trip  current  trip  chooses  set  ticket  trip  minimum  total  cost  let  minimum  total  cost  ticket  cover  trip  current  total  sum  charged  system  charge  passenger  sum  write  program  given  trip  made  passenger  calculates  sum  passenger  charged  trip  input  contains  trip  made  passenger  following  contains  time  trip  measured  minute  time  starting  system  different  given  ascending  order  hold  output  trip  print  sum  passenger  charged
549/A __label__implementation  __label__strings  developer  looksery  write  efficient  algorithm  detects  face  picture  unfortunately  currently  busy  preparing  contest  problem  image  rectangular  table  consists  lowercase  latin  letter  face  image  square  letter  square  make  word  face  need  write  program  determines  face  image  square  correspond  face  overlap  contains  space  separated  height  width  image  respectively  next  define  image  contains  lowercase  latin  letter  single  print  face  image
641/D __label__math  __label__dp  __label__implementation  little  artyom  decided  study  probability  theory  found  book  lot  nice  exercise  want  help  consider  dice  thrown  dice  show  inclusive  dice  probability  outcome  given  course  sum  different  dice  different  probability  distribution  throw  dice  simultaneously  calculate  value  max  min  equal  outcome  dice  equal  outcome  second  dice  know  probability  distribution  particular  value  dice  know  probability  distribution  max  min  know  probability  max  would  equal  probability  min  would  equal  find  valid  probability  distribution  value  dice  guaranteed  input  data  consistent  least  solution  exists  contains  different  value  dice  second  contains  array  consisting  real  value  digit  decimal  point  probability  distribution  max  value  equal  probability  max  guaranteed  sum  value  dice  third  contains  description  distribution  min  format  output  description  probability  distribution  second
930/B __label__implementation  __label__strings  vasya  kolya  play  game  string  using  following  rule  initially  kolya  creates  string  consisting  small  english  letter  uniformly  random  chooses  segment  en  tell  vasya  string  shift  letter  left  creates  new  string  sk  sn  vasya  doe  know  string  want  guess  asks  kolya  tell  letter  new  string  see  open  letter  position  vasya  choose  vasya  understands  guarantee  win  want  know  probability  winning  play  optimally  want  compute  probability  note  vasya  want  know  value  uniquely  mean  least  cyclic  shift  fit  information  vasya  knowns  vasya  loses  course  moment  game  vasya  want  maximize  probability  win  string  contains  string  length  consisting  small  english  letter  print  answer  problem  answer  considered  correct  absolute  relative  error  doe  exceed
386/D __label__dp  __label__implementation  __label__graphs  playing  following  game  point  plane  vertex  regular  polygon  point  labeled  pair  distinct  point  connected  diagonal  colored  color  point  denoted  lowercase  english  letter  stone  positioned  distinct  vertex  stone  move  move  stone  another  free  vertex  along  diagonal  color  diagonal  must  color  diagonal  connecting  another  stone  goal  move  stone  way  vertex  occupied  stone  must  achieve  position  using  minimal  move  write  program  play  game  optimal  way  point  second  space  separated  vertex  stone  initially  located  following  contains  symbol  matrix  denoting  color  diagonal  color  denoted  lowercase  english  letter  symbol  denotes  color  diagonal  point  matrix  symmetric  symbol  equal  symbol  main  diagonal  filled  symbol  diagonal  connecting  point  way  put  stone  vertex  print  single  otherwise  print  minimal  required  move  next  print  description  move  move  per  describe  move  print  point  remove  stone  point  move  stone  several  optimal  solution  print
1245/E __label__dp  hyakugoku  ha  retired  resident  deity  south  black  snail  temple  order  pursue  dream  becoming  cartoonist  spent  month  temple  playing  cat  cradle  want  try  different  game  snake  ladder  unfortunately  already  killed  snake  ladder  left  game  played  board  follows  beginning  game  player  bottom  left  square  objective  game  player  reach  goal  top  left  square  following  path  climbing  vertical  ladder  player  reach  goal  game  end  path  follows  square  end  row  lead  square  next  along  direction  row  square  end  row  lead  square  direction  row  determined  follows  direction  bottom  row  right  direction  row  opposite  direction  row  see  note  section  visualization  path  turn  player  roll  standard  sided  dice  suppose  shown  dice  goal  le  square  away  path  player  move  turn  performed  otherwise  player  advance  exactly  square  along  path  stop  player  stop  square  bottom  ladder  player  chooses  whether  climb  ladder  chooses  climb  stay  square  beginning  next  turn  square  ladder  ladder  placed  vertically  lead  square  upper  row  order  player  climb  ladder  rolling  dice  must  stop  square  containing  bottom  ladder  using  ladder  player  end  square  containing  top  ladder  leave  ladder  middle  climbing  square  containing  top  ladder  contains  bottom  another  ladder  allowed  use  second  ladder  face  dice  probability  shown  please  note  possible  ladder  overlap  player  switch  ladder  middle  climbing  possible  ladder  straight  top  row  higher  possible  ladder  lead  tile  possible  ladder  lead  tile  ha  ladder  player  able  use  second  ladder  us  player  climb  ladder  climb  hyakugoku  want  finish  game  soon  possible  thus  turn  chooses  whether  climb  ladder  optimally  help  determine  minimum  expected  turn  game  take  consist  non  negative  tile  row  column  ha  ladder  otherwise  ladder  tile  height  climbing  lead  tile  row  directly  guaranteed  last  always  goal  starting  tile  never  ladder  print  containing  single  floating  point  minimum  expected  turn  hyakugoku  take  finish  game  answer  considered  correct  absolute  relative  error  doe  exceed
1198/C __label__greedy  __label__sortings  __label__graphs  __label__constructive  algorithms  given  graph  vertex  edge  find  matching  edge  independent  set  vertex  set  edge  called  matching  edge  share  endpoint  set  vertex  called  independent  set  vertex  connected  edge  contains  single  graph  need  process  description  graph  follows  description  single  graph  contains  vertex  edge  graph  next  contains  meaning  edge  vertex  guaranteed  self  loop  multiple  edge  graph  guaranteed  sum  graph  single  test  doe  exceed  sum  graph  single  test  doe  exceed  print  answer  graph  output  answer  single  graph  following  format
837/A __label__implementation  given  text  single  space  separated  word  consisting  small  capital  latin  letter  volume  word  capital  letter  word  volume  text  maximum  volume  word  text  calculate  volume  given  text  contains  length  text  second  contains  text  single  space  separated  word  consisting  small  capital  latin  letter  print  volume  text
291/A __label__implementation  __label__sortings  polycarpus  director  large  corporation  secretary  working  corporation  corresponds  via  famous  spyke  voip  system  day  know  people  call  via  spyke  spyke  network  assigns  unique  call  positive  session  day  polycarpus  wondered  secretary  talking  via  spyke  secretary  wrote  either  session  call  secretary  talking  via  spyke  moment  help  polycarpus  analyze  data  find  pair  secretary  talking  polycarpus  ha  made  mistake  data  described  situation  could  taken  place  say  note  secretary  correspond  via  spyke  people  place  spyke  conference  permitted  call  connects  exactly  people  contains  secretary  polycarpus  corporation  next  contains  space  separated  id  dn  di  idi  equal  call  session  secretary  secretary  talking  via  spyke  otherwise  consider  secretary  indexed  way  print  single  pair  chatting  secretary  polycarpus  got  mistake  record  described  situation  could  taken  place
1004/A __label__implementation  sonya  decided  hotel  business  best  way  earning  money  profit  rest  wherever  want  country  sonya  life  endless  city  coordinate  ha  hotel  hotel  located  city  coordinate  sonya  smart  girl  doe  open  hotel  city  sonya  understands  business  need  expanded  opening  new  hotel  decides  build  want  make  minimum  distance  hotel  others  equal  girl  understands  many  possible  location  construct  hotel  thus  want  know  possible  coordinate  city  build  new  hotel  sonya  lounging  jacuzzi  hotel  asking  find  city  build  new  hotel  minimum  distance  original  hotel  new  equal  contains  sonya  hotel  needed  minimum  distance  new  hotel  others  second  contains  different  strictly  increasing  order  coordinate  sonya  hotel  print  city  sonya  build  new  hotel  minimum  distance  hotel  others  equal
1081/B __label__implementation  __label__constructive  algorithms  chouti  classmate  going  university  soon  say  goodbye  class  ha  planned  big  farewell  party  classmate  teacher  parent  sang  danced  chouti  remembered  person  took  part  party  make  party  funnier  person  wore  hat  kind  weird  hat  numbered  possible  several  person  wore  hat  kind  kind  hat  remain  unclaimed  anyone  party  person  said  person  wearing  hat  differing  ha  day  chouti  forgot  others  hat  curious  let  hat  type  person  wa  wearing  chouti  want  find  possible  contradict  person  statement  person  might  poor  memory  could  solution  contains  single  person  party  second  contains  statement  people  solution  print  single  impossible
510/A __label__implementation  fox  ciel  start  learn  programming  task  drawing  fox  turn  hard  beginner  decides  draw  snake  instead  snake  pattern  table  denote  cell  row  tail  snake  located  body  extends  go  row  go  left  task  draw  snake  fox  ciel  empty  cell  represented  dot  character  snake  cell  filled  sign  consider  sample  test  order  understand  snake  pattern  contains  odd  output  string  consisting  character  output  space
371/B __label__math  __label__number  theory  little  greedy  bear  found  piece  cheese  forest  weight  gram  correspondingly  bear  greedy  ready  fight  larger  piece  fox  come  start  dialog  little  bear  wait  little  want  make  piece  equal  come  fox  going  curious  bear  asked  easy  said  fox  mass  certain  piece  divisible  eat  exactly  half  piece  mass  certain  piece  divisible  eat  exactly  third  mass  divisible  eat  fifth  eat  little  make  piece  equal  little  bear  realize  fox  proposal  contains  catch  time  realize  make  piece  equal  agreed  proposal  condition  fox  make  piece  equal  quickly  possible  find  minimum  operation  fox  need  make  piece  equal  contains  space  separated  fox  lying  little  bear  impossible  make  piece  equal  print  otherwise  print  required  minimum  operation  piece  cheese  initially  equal  required
776/D __label__dfs  __label__graphs  moriarty  ha  trapped  people  distinct  room  hotel  room  locked  others  unlocked  condition  people  hotel  escape  door  unlocked  time  switch  switch  control  door  room  door  controlled  exactly  switch  given  initial  configuration  door  toggling  switch  turning  turning  toggle  condition  door  switch  control  say  toggled  switch  wa  connected  room  respectively  locked  unlocked  unlocked  toggling  switch  become  unlocked  locked  locked  need  tell  sherlock  exists  way  unlock  door  time  input  contains  room  switch  next  contains  space  separated  tell  status  room  door  room  locked  otherwise  unlocked  next  contains  followed  distinct  separated  space  denoting  room  controlled  switch  followed  room  switch  control  guaranteed  room  range  guaranteed  door  controlled  exactly  switch  output  yes  without  quote  possible  open  door  time  otherwise  output  without  quote
601/E __label__dp  __label__data  structures  famous  museum  city  kleof  life  museum  exhibit  numbered  displayed  long  time  exhibit  ha  value  mass  museum  wa  bought  large  financial  group  started  vary  exhibit  time  kleof  gained  interest  museum  say  process  event  type  type  museum  display  exhibit  value  mass  exhibit  displayed  event  type  numbered  see  sample  explanation  detail  type  museum  remove  exhibit  store  safely  vault  type  kleof  visit  museum  wonder  important  reason  course  wa  robbery  exhibit  total  mass  stolen  would  maximum  possible  total  value  event  type  let  maximum  possible  total  value  stolen  exhibit  total  mass  formally  let  set  exhibit  currently  displayed  initially  let  set  subset  let  defined  compute  note  output  follows  special  format  input  contains  space  separated  initial  exhibit  museum  maximum  interesting  mass  stolen  exhibit  follow  contains  space  separated  positive  value  mass  exhibit  next  contains  single  event  next  contains  description  event  following  format  event  type  new  exhibit  value  mass  ha  added  event  type  exhibit  ha  removed  guaranteed  removed  exhibit  displayed  time  event  type  kleof  visit  museum  asks  question  event  type  least  event  type  value  get  large  output  answer  event  type  special  format
719/B __label__greedy  anatoly  life  university  dorm  many  student  know  cockroach  living  together  student  cockroach  might  color  black  red  cockroach  living  anatoly  room  anatoly  made  cockroach  form  single  perfectionist  would  like  color  cockroach  alternate  ha  black  paint  red  paint  turn  either  swap  cockroach  take  single  cockroach  change  color  help  anatoly  find  minimum  turn  need  make  color  cockroach  alternate  input  contains  single  cockroach  second  contains  string  length  consisting  character  denote  black  cockroach  red  cockroach  respectively  print  minimum  move  anatoly  ha  perform  order  make  color  cockroach  alternate
935/F __label__greedy  __label__data  structures  fafa  ha  array  positive  function  defined  want  query  type  find  maximum  possible  value  added  element  range  choose  element  add  increase  element  range  value  note  query  type  affect  array  element  contains  length  array  second  contains  positive  array  element  third  contains  query  follow  describes  query  contains  tiiii  guaranteed  least  query  type  query  type  print  answer  query
912/C __label__greedy  __label__sortings  __label__brute  force  lot  student  spend  winter  holiday  productively  vlad  ha  advanced  well  day  already  fueled  salad  tangerine  leftover  new  year  celebration  ha  calibrating  rating  favorite  moba  game  playing  hero  named  perun  perun  ha  ultimate  ability  called  thunderwrath  instant  activation  enemy  map  total  loses  health  point  single  time  effect  ha  restriction  activated  moment  time  initial  bounty  killing  enemy  additionally  increase  second  formally  second  ability  activated  enemy  killed  result  health  drop  lower  vlad  earns  unit  gold  every  enemy  receive  damage  well  healed  multiple  way  vlad  interested  detail  enemy  know  maximum  health  point  enemy  initial  health  enemy  second  amount  health  enemy  regenerate  per  second  health  update  vlad  know  time  health  wa  updated  enemy  whose  health  wa  updated  updated  health  point  enemyj  obviously  vlad  want  maximize  profit  necessary  could  even  wait  year  activate  ability  right  second  help  determine  exact  second  note  must  inclusively  single  activation  ability  would  yield  vlad  maximum  possible  amount  gold  print  amount  given  separated  space  second  following  ha  next  guaranteed  hearth  change  per  second  enemy  formally  hold  output  single  maximum  amount  gold  vlad  obtain  applies  thunderwrath  exactly  amount  infinitely  large
509/E __label__math  __label__strings  sasha  wa  studying  seventh  grade  started  listening  music  lot  order  evaluate  song  like  introduced  notion  song  prettiness  title  song  word  consisting  uppercase  latin  letter  prettiness  song  prettiness  title  let  define  simple  prettiness  word  ratio  vowel  word  letter  word  let  define  prettiness  word  sum  simple  prettiness  substring  word  formally  let  define  function  vowel  equal  vowel  otherwise  let  character  string  substring  word  staring  character  ending  character  sisi  simple  prettiness  defined  formula  prettiness  equal  find  prettiness  given  song  title  assume  vowel  input  contains  single  string  title  song  print  prettiness  song  absolute  relative  error
955/D __label__brute  force  __label__strings  jenya  ha  recently  acquired  quite  useful  tool  scissors  cutting  string  generally  used  cutting  non  intersecting  substring  length  arbitrary  string  length  least  order  perform  operation  concatenating  afterwards  preserving  initial  order  example  help  scissors  cut  abcde  concatenate  abde  since  intersecting  nice  idea  test  tool  using  practice  looking  paper  jenya  came  string  question  whether  possible  apply  scissors  string  resulting  concatenation  contains  substring  contains  k  length  length  aforementioned  scissors  parameter  correspondingly  next  feature  consisting  lowercase  latin  letter  answer  print
986/B __label__math  petr  like  come  problem  randomly  generated  data  time  problem  random  permutation  decided  generate  random  permutation  way  take  identity  permutation  time  take  random  pair  different  element  swap  alex  envy  petr  try  imitate  kind  thing  alex  ha  come  problem  random  permutation  generates  random  permutation  like  petr  swap  element  time  instead  time  random  somehow  get  test  problem  want  know  input  second  distinct  permutation  size  test  guaranteed  test  except  sample  generated  way  choose  size  permutation  randomly  choose  method  generate  permutation  petr  alex  generate  permutation  using  chosen  method  test  generated  via  petr  method  print  petr  without  quote  test  generated  via  alex  method  print  umnik  without  quote
843/E __label__graphs  given  directed  graph  consisting  vertex  edge  vertex  marked  source  sink  correspondingly  additionally  edge  ending  edge  beginning  graph  wa  constructed  following  way  initially  edge  capacity  maximum  flow  source  sink  wa  constructed  flow  network  let  denote  value  flow  passing  edge  index  next  capacity  flow  value  erased  instead  indicator  written  edge  flow  value  passing  edge  wa  positive  otherwise  using  graph  value  find  minimum  possible  edge  initial  flow  network  could  saturated  passing  flow  equal  capacity  construct  corresponding  flow  network  maximum  flow  flow  directed  graph  described  flow  value  edge  following  condition  satisfied  vertex  except  source  sink  total  incoming  flow  total  outcoming  flow  equal  edge  ii  flow  maximum  difference  sum  flow  value  edge  source  sum  flow  value  edge  source  problem  maximum  possible  input  data  contains  positive  vertex  edge  index  source  vertex  index  sink  vertex  correspondingly  next  input  data  non  negative  beginning  edge  end  edge  indicator  equal  flow  value  passing  edge  wa  positive  guaranteed  edge  connects  vertex  guaranteed  edge  ordered  pair  vertex  exists  least  network  flow  satisfies  constrains  input  data  print  single  non  negative  minimum  edge  saturated  maximum  flow
992/D __label__math  __label__implementation  __label__brute  force  nastya  received  array  birthday  array  used  play  traditional  byteland  game  play  game  player  select  subsegment  array  product  given  array  sum  given  constant  subsegments  nastya  wonder  many  subsegments  array  fit  described  condition  subsegment  array  several  consecutive  array  contains  length  array  constant  described  second  contains  element  array  print  subsegments  ratio  product  sum  equal
430/A __label__sortings  __label__constructive  algorithms  iahub  well  prepared  geometry  problem  heard  year  lot  geometry  problem  ioi  selection  camp  scared  iahub  locked  basement  started  thinking  new  problem  kind  following  iahub  want  draw  distinct  point  segment  axis  draw  point  either  red  blue  drawing  good  following  requirement  met  segment  consider  red  point  belong  point  blue  point  belong  point  segment  satisfy  inequality  iahub  think  point  belongs  segment  inequality  l  hold  iahub  give  coordinate  point  segment  please  help  find  good  drawing  input  contains  next  contains  space  separated  coordinate  point  following  description  segment  contains  ii  border  segment  guaranteed  point  distinct  good  drawing  given  test  output  single  otherwise  output  must  denotes  color  point  red  blue
554/B __label__greedy  __label__brute  force  __label__strings  ohana  matsumae  trying  clean  room  divided  grid  square  square  initially  either  clean  dirty  ohana  sweep  broom  column  grid  broom  strange  sweep  clean  square  become  dirty  sweep  dirty  square  become  clean  want  sweep  column  room  maximize  row  completely  clean  allowed  sweep  part  column  ohana  sweep  whole  column  return  maximum  row  make  completely  clean  input  single  next  describe  state  room  binary  string  character  denoting  state  row  room  character  square  row  clean  dirty  output  single  containing  equal  maximum  possible  row  completely  clean
534/A __label__math  __label__implementation  __label__constructive  algorithms  exam  student  take  place  long  narrow  room  student  sit  order  teacher  suspect  student  adjacent  always  studied  side  side  became  friend  take  exam  sitting  next  help  sure  task  choose  maximum  student  make  arrangement  student  room  student  adjacent  sit  side  side  single  contains  student  exam  print  maximum  student  seated  student  adjacent  sit  next
793/D __label__dp  __label__graphs  bankopolis  incredible  city  crossroad  located  straight  numbered  along  crossroad  bank  office  crossroad  connected  oriented  bicycle  lane  lane  go  crossroad  crossroad  difficulty  lane  known  oleg  bank  client  want  gift  happiness  joy  bank  employee  want  visit  exactly  office  want  gift  present  employee  problem  oleg  want  see  reaction  gift  use  bicycle  lane  pass  near  office  ha  already  presented  gift  formally  lane  pass  near  office  crossroad  min  ax  course  office  oleg  present  gift  exactly  oleg  going  use  exactly  bicycle  lane  move  office  oleg  start  path  office  finish  office  oleg  want  choose  path  possible  total  difficulty  lane  use  minimum  possible  find  minimum  possible  total  difficulty  contains  crossroad  office  office  oleg  want  visit  second  contains  single  bicycle  lane  bankopolis  next  information  lane  contains  denoting  crossroad  connected  road  difficulty  print  minimum  possible  total  difficulty  lane  valid  path  valid  path
1119/F __label__dp  __label__data  structures  __label__trees  niyaz  ha  tree  vertex  numerated  tree  connected  graph  without  cycle  edge  tree  ha  strictly  positive  weight  degree  vertex  edge  adjacent  vertex  niyaz  doe  like  vertex  tree  large  degree  want  find  smallest  total  weight  set  edge  deleted  degree  vertex  become  contains  single  vertex  niyaz  tree  next  contains  index  vertex  connected  edge  weight  respectively  guaranteed  given  edge  form  tree  print  print  smallest  total  weight  set  edge  deletes  edge  set  degree  vertex  become  le  equal
1173/B __label__greedy  __label__constructive  algorithms  nauuo  girl  love  playing  chess  day  invented  game  need  chess  piece  play  mm  chessboard  row  column  numbered  denote  cell  intersection  row  column  game  goal  place  chess  piece  numbered  chessboard  piece  lie  following  rule  satisfied  pair  piece  mean  absolute  value  nauuo  discovered  sometimes  find  solution  chessboard  wa  small  want  find  smallest  chessboard  put  piece  according  rule  wonder  place  piece  chessboard  help  contains  single  chess  piece  game  contains  single  minimum  value  length  side  suitable  chessboard
1038/C __label__greedy  __label__sortings  player  list  want  maximize  subtraction  score  opponent  score  turn  player  either  add  score  element  list  assuming  list  empty  element  removed  list  afterward  remove  element  opponent  list  assuming  opponent  list  empty  note  case  equal  element  list  affected  operation  example  element  list  decided  choose  next  turn  single  instance  deleted  added  score  necessary  player  start  game  game  stop  list  empty  find  difference  score  score  end  game  player  playing  optimally  optimal  play  player  mean  player  choose  best  possible  strategy  achieve  best  possible  outcome  problem  mean  player  time  make  move  maximizes  final  difference  score  opponent  score  knowing  opponent  input  contains  size  list  second  contains  describing  list  player  start  game  third  contains  describing  list  player  output  difference  score  score  playing  optimally
1218/C __label__dp  mighty  blackout  standing  upper  left  corner  matrix  must  move  either  right  second  transformer  jumping  around  matrix  following  way  transformer  start  jumping  position  time  jump  next  position  second  ax  grows  downwards  ax  grows  right  order  jumping  position  defined  periodic  time  transformer  matrix  want  arrive  bottom  right  corner  slaying  transformer  losing  least  possible  amount  energy  meet  transformer  matrix  field  must  kill  lose  sum  energy  amount  required  kill  transformer  transformer  killed  course  stop  jumping  fall  abyss  leaf  matrix  world  output  minimum  possible  amount  energy  wasted  representing  size  matrix  jumping  transformer  next  transformer  representing  starting  coordinate  transformer  jumping  position  distance  pattern  described  time  transformer  start  jumping  energy  required  kill  guaranteed  jumping  point  transformer  matrix  coordinate  print  single  minimum  possible  amount  energy  wasted  blackout  arrive  bottom  right  corner
997/D __label__trees  consider  tree  undirected  connected  graph  without  loop  tree  let  define  cartesian  product  following  way  let  set  vertex  set  vertex  set  vertex  graph  vu  set  ordered  pair  vertex  vertex  pair  second  let  draw  following  edge  undirected  edge  adjacent  similarly  undirected  edge  adjacent  please  see  note  section  picture  product  tree  sample  test  let  examine  graph  much  cycle  necessarily  simple  length  contains  since  large  print  modulo  sequence  vertex  u  called  cycle  neighboring  vertex  adjacent  adjacent  cycle  differ  cyclic  shift  direction  traversal  still  considered  different  input  contains  vertex  tree  vertex  second  tree  cycle  length  respectively  follow  describing  tree  contains  define  edge  tree  follow  describe  second  tree  format  guaranteed  given  graph  tree  print  cycle  modulo
1217/B __label__math  __label__greedy  fighting  zmei  gorynich  ferocious  monster  slavic  myth  huge  dragon  like  reptile  multiple  head  initially  zmei  gorynich  ha  head  deal  type  blow  deal  blow  type  decrease  gorynich  head  min  curx  curx  current  head  blow  zmei  gorynich  ha  least  head  grows  new  head  curx  gorynich  defeated  deal  blow  time  order  example  curx  head  change  cut  head  zmei  grows  new  curx  head  change  zmei  gorynich  considered  defeated  calculate  minimum  blow  defeat  zmei  gorynich  answer  independent  query  contains  query  query  contains  possible  type  blow  head  zmei  initially  ha  respectively  following  query  description  type  blow  deal  contains  description  blow  query  print  minimum  blow  deal  defeat  zmei  gorynich
1151/A __label__brute  force  __label__strings  today  scientific  lyceum  kingdom  kremland  wa  biology  lesson  topic  lesson  wa  genome  let  call  genome  string  actg  maxim  wa  boring  sit  class  teacher  came  task  given  string  consisting  uppercase  letter  length  least  need  find  minimum  operation  need  apply  genome  appears  substring  operation  replace  letter  string  next  previous  alphabet  example  letter  previous  next  problem  assume  letter  previous  letter  next  letter  previous  letter  next  letter  help  maxim  solve  problem  teacher  gave  string  substring  string  obtained  deletion  several  possibly  character  beginning  several  possibly  character  end  contains  single  length  string  second  contains  string  consisting  exactly  uppercase  letter  latin  alphabet  output  minimum  operation  need  applied  string  genome  appears  substring
808/D __label__implementation  __label__data  structures  __label__binary  search  vasya  ha  array  consisting  positive  vasya  want  divide  array  non  empty  consecutive  part  prefix  suffix  sum  element  part  equal  sum  element  second  part  always  possible  vasya  move  element  dividing  array  vasya  erase  element  insert  arbitrary  position  inserting  element  position  wa  erased  considered  moving  vasya  divide  array  choosing  right  element  move  new  position  contains  single  size  array  second  contains  element  array  print  yes  vasya  divide  array  moving  element  otherwise  print
803/A __label__constructive  algorithms  given  matrix  row  column  filled  put  way  resulting  matrix  symmetrical  respect  main  diagonal  diagonal  go  top  left  bottom  right  corner  lexicographically  maximal  matrix  lexicographically  greater  different  different  row  top  matrix  greater  corresponding  second  exists  matrix  output  consists  answer  exists  output  resulting  matrix  otherwise  output
903/E __label__implementation  __label__brute  force  __label__strings  string  consisting  lowercase  latin  letter  made  copy  string  thus  obtaining  identical  string  string  swapped  exactly  character  character  swapped  could  identical  different  index  string  given  string  restore  string  possible  obtain  string  performing  aforementioned  operation  note  total  length  string  given  exceed  n  contains  n  string  obtained  length  string  next  string  consisting  exactly  lowercase  latin  letter  print  suitable  string  string  exist
1213/A __label__math  given  chip  chip  placed  coordinate  chip  equal  coordinate  perform  following  type  move  possibly  time  chip  move  chip  left  right  free  replace  current  coordinate  move  chip  left  right  pay  coin  move  replace  current  coordinate  note  allowed  move  chip  coordinate  including  negative  task  find  minimum  total  coin  required  move  chip  coordinate  equal  sequence  move  input  contains  chip  second  input  contains  coordinate  chip  print  minimum  total  coin  required  move  chip  coordinate
762/E __label__data  structures  __label__binary  search  lattice  point  coordinate  radio  station  described  coordinate  station  broadcasting  range  station  broadcasting  frequency  station  say  radio  station  reach  broadcasting  range  equal  distance  word  min  let  call  pair  radio  station  bad  station  reach  close  frequency  find  bad  pair  radio  station  contains  radio  station  maximum  difference  frequency  pair  station  reach  considered  bad  next  follow  description  radio  station  contains  coordinate  radio  station  broadcasting  range  broadcasting  frequency  radio  station  share  coordinate  output  bad  pair  radio  station
486/A __label__math  __label__implementation  positive  let  define  function  task  calculate  given  single  contains  positive  print  single
914/F __label__data  structures  __label__brute  force  __label__strings  given  string  process  query  following  form  change  character  string  consider  substring  starting  position  ending  position  output  time  occurs  substring  input  contains  string  lowercase  english  letter  second  contains  query  process  next  describe  query  following  form  lowercase  english  letter  non  empty  string  consisting  lowercase  english  letter  sum  query  second  type  guaranteed  least  query  second  type  string  indexed  length  string  query  type  output  required  answer  separate
439/A __label__implementation  __label__greedy  devu  renowned  classical  singer  invited  many  big  function  festival  recently  wa  invited  world  classical  singing  festival  devu  comedian  churu  wa  invited  devu  ha  provided  organizer  list  song  required  time  singing  sing  song  ith  song  take  minute  exactly  comedian  churu  crack  joke  joke  minute  exactly  people  mainly  come  listen  devu  know  need  rest  minute  song  hand  churu  active  person  need  rest  organizer  make  optimal  shedule  event  reason  must  follow  condition  duration  event  must  minute  devu  must  complete  song  satisfying  previous  condition  joke  cracked  churu  many  possible  possible  find  way  conduct  song  devu  output  otherwise  find  maximum  joke  churu  crack  grand  event  contains  space  separated  second  contains  space  separated  way  conduct  song  devu  output  otherwise  output  maximum  joke  churu  crack  grand  event
550/E __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  implication  function  logical  argument  value  false  value  argument  true  value  second  argument  false  implication  written  using  character  argument  result  implication  written  false  true  according  definition  implication  logical  expression  contains  multiple  implication  bracket  calculated  left  fight  example  bracket  calculate  expression  bracket  example  given  logical  expression  determine  possible  place  bracket  value  logical  expression  false  possible  task  find  arrangement  bracket  contains  argument  logical  expression  second  contains  mean  value  argument  expression  order  occur  print  without  quote  impossible  place  bracket  expression  value  wa  equal
839/E __label__math  __label__graphs  __label__brute  force  castle  lannister  kingdom  wall  connect  castle  castle  connected  wall  wall  connects  castle  sir  jaime  lannister  ha  discovered  daenerys  targaryen  going  attack  kingdom  soon  therefore  want  defend  kingdom  ha  liter  strange  liquid  want  distribute  liquid  castle  castle  liquid  possibly  non  liter  stability  wall  defined  follows  wall  connects  castle  liter  liquid  respectively  strength  wall  task  print  maximum  possible  sum  stability  wall  sir  jaime  lannister  achieve  input  contains  follows  contains  castle  connected  wall  otherwise  equal  guaranteed  print  maximum  possible  sum  stability  wall  sir  jaime  lannister  achieve
743/E __label__dp  __label__brute  force  __label__binary  search  vladik  wa  bored  way  home  decided  play  following  game  took  card  put  row  front  every  card  ha  positive  exceeding  written  decided  find  longest  subsequence  card  satisfies  following  condition  occurrence  subsequence  differ  occurrence  formally  card  subsequence  pair  condition  must  hold  least  card  subsequence  card  subsequence  must  form  continuous  segment  necessarily  continuous  segment  original  sequence  example  subsequence  satisfies  condition  subsequence  note  satisfy  condition  please  help  vladik  find  length  longest  subsequence  satisfies  condition  contains  single  card  vladik  sequence  second  contains  sequence  positive  exceeding  description  vladik  sequence  print  single  length  longest  subsequence  vladik  sequence  satisfies  condition
505/C __label__dp  __label__dfs  shuseki  island  archipelago  small  island  yutampo  sea  island  evenly  spaced  along  numbered  west  east  island  known  many  treasure  gem  shuseki  island  total  gem  located  island  kitayuta  ha  arrived  island  great  jumping  ability  repeatedly  perform  jump  island  east  according  following  process  jump  island  island  continue  jumping  according  following  rule  let  length  previous  jump  previous  jump  wa  island  prev  island  cur  let  ur  rev  perform  jump  length  east  jump  island  cur  cur  cur  exist  length  jump  must  positive  perform  jump  length  valid  destination  stop  jumping  kitayuta  collect  gem  island  visited  process  find  maximum  gem  collect  input  contains  space  separated  denoting  gem  shuseki  island  length  kitayuta  jump  respectively  next  describe  location  gem  contains  n  denoting  island  contains  gem  print  maximum  gem  kitayuta  collect
771/D __label__dp  bear  limak  prepares  problem  programming  competition  course  would  unprofessional  mention  sponsor  name  statement  limak  take  seriously  going  change  word  make  still  possible  read  try  modify  word  little  possible  limak  ha  string  consists  uppercase  english  letter  move  swap  adjacent  letter  string  example  transform  string  abbc  babc  abcb  move  limak  want  obtain  string  without  substring  letter  immediately  followed  letter  easily  proved  possible  initial  string  minimum  possible  move  limak  input  contains  length  string  second  contains  string  consisting  uppercase  english  letter  length  string  equal  print  denoting  minimum  possible  move  limak  order  obtain  string  without  substring
883/G __label__dfs  __label__graphs  vasya  ha  graph  containing  directed  oriented  undirected  non  oriented  edge  multiple  edge  pair  vertex  vasya  ha  picked  vertex  graph  vasya  want  create  separate  plan  orient  undirected  edge  possible  direction  maximize  vertex  reachable  vertex  orient  undirected  edge  possible  direction  minimize  vertex  reachable  vertex  plan  undirected  edge  must  become  directed  edge  chosen  direction  differ  plan  help  vasya  find  plan  contains  vertex  edge  graph  vertex  vasya  ha  picked  following  information  graph  edge  contains  uii  edge  type  vertex  connected  edge  edge  directed  go  vertex  vertex  edge  undirected  connects  vertex  guaranteed  least  undirected  edge  graph  describe  plan  maximizes  reachable  vertex  describe  plan  minimizes  reachable  vertex
1023/E __label__constructive  algorithms  interactive  problem  bob  life  square  grid  size  nn  row  numbered  top  bottom  column  numbered  left  right  every  cell  either  allowed  blocked  know  exact  description  grid  given  bob  move  allowed  cell  limited  direction  bob  allowed  cell  grid  move  right  adjacent  cell  allowed  ask  query  form  answer  yes  bob  get  cell  cell  otherwise  particular  cell  blocked  cell  answer  sure  since  bob  like  short  trip  ask  query  manhattan  distance  cell  least  following  condition  must  satisfied  guaranteed  bob  get  top  left  corner  bottom  right  corner  task  find  way  print  answer  form  string  length  consisting  character  denoting  move  right  respectively  move  increase  coordinate  right  move  increase  second  coordinate  multiple  solution  accepted  terminate  immediately  printing  solution  input  contains  size  grid  ready  print  answer  print  single  containing  string  length  consisting  character  denoting  move  right  respectively  path  valid  path  going  cell  cell  passing  allowed  cell
1016/E __label__binary  search  __label__geometry  light  source  plane  source  small  represented  point  light  source  moving  point  speed  equal  unit  per  second  trajectory  light  source  straight  segment  connecting  point  fence  axis  represented  segment  actual  coordinate  endpoint  segment  point  shade  segment  connecting  current  position  light  source  intersects  touch  segment  fence  given  point  point  calculate  total  time  point  shade  light  source  moving  contains  space  separated  corresponding  coordinate  light  source  second  contains  single  segment  fence  next  per  segment  fence  increasing  order  segment  intersect  touch  next  contains  single  point  check  next  per  point  process  print  real  total  time  point  shade  light  source  moving  answer  considered  correct  absolute  relative  error  exceed
1060/B __label__greedy  given  positive  let  sum  digit  base  representation  example  task  find  largest  possible  pair  input  contains  print  largest  pair
1250/M __label__constructive  algorithms  berland  gardener  united  inc  hired  project  called  smartgarden  main  feature  project  automatic  garden  watering  formally  garden  represented  square  nn  cell  row  numbered  top  bottom  column  numbered  left  right  cell  garden  contains  either  plant  slab  known  slab  located  main  diagonal  matrix  representing  garden  cell  main  diagonal  share  side  least  cell  main  diagonal  remaining  cell  garden  filled  plant  example  garden  implementation  project  created  smart  robot  take  list  command  input  processed  command  contains  list  horizontal  row  matrix  representing  garden  list  vertical  column  matrix  representing  garden  executing  command  robot  water  cell  intersection  specified  row  specified  column  specify  row  column  exactly  cell  watered  demo  customer  tuned  robot  way  water  garden  prepared  single  command  containing  row  column  unfortunately  hour  demo  customer  turned  ceo  berland  gardener  united  inc  wa  going  take  part  moreover  probably  standing  garden  slab  demo  need  create  list  command  robot  water  plant  water  cell  containing  slab  since  beta  version  smartgarden  total  command  exceed  create  program  given  size  garden  find  list  command  allow  robot  water  plant  garden  without  watering  slab  allowed  water  plant  several  time  input  contains  single  size  garden  print  total  command  robot  next  print  command  command  specified  command  describe  row  command  second  describe  column  command  following  format
425/E __label__dp  let  assume  set  consists  distinct  interval  ii  let  assume  maximum  interval  choose  set  every  intersect  assume  interval  intersect  meet  inequality  l  l  sereja  wonder  many  set  count  modulo  contains  single  print  answer  problem  modulo
815/B __label__math  __label__constructive  algorithms  __label__brute  force  karen  ha  arrived  school  ha  math  test  today  test  basic  addition  subtraction  unfortunately  teacher  busy  writing  task  codeforces  round  time  make  actual  test  put  question  test  worth  point  written  row  karen  must  alternately  add  subtract  pair  adjacent  write  sum  difference  next  row  must  repeat  process  value  next  row  remains  operation  addition  note  ended  previous  row  adding  start  next  row  subtracting  vice  versa  teacher  simply  look  last  correct  karen  get  perfect  score  otherwise  get  test  karen  ha  studied  well  test  scared  might  make  mistake  somewhere  cause  final  answer  wrong  process  followed  expect  written  last  row  since  quite  large  output  non  negative  remainder  dividing  input  contains  single  written  row  next  contains  specifically  row  output  single  final  row  performing  process
804/F __label__dp  __label__dfs  __label__graphs  __label__number  theory  isart  people  die  gang  criminal  gang  contains  evil  people  numerated  people  took  part  big  mine  robbery  picked  gold  bullion  people  given  input  happened  year  ago  gang  escaped  remote  area  far  town  year  copying  gold  bullion  according  organized  plan  order  get  arrested  constructed  tournament  directed  graph  graph  exactly  directed  edge  every  pair  vertex  gang  graph  given  input  graph  edge  mean  hour  person  gang  send  fake  gold  bullion  person  gang  sends  ha  bullion  real  fake  receiver  thus  moment  gangster  ha  gold  bullion  real  bullion  fake  beginning  year  police  ha  finally  found  gang  catch  usual  police  decided  open  jewelry  store  gangster  would  sell  bullion  thus  every  gangster  ha  bullion  fake  real  try  sell  ha  real  gold  bullion  sell  without  problem  ha  fake  choice  event  happen  person  sell  gold  bullion  successfully  person  arrested  police  power  gang  people  successfully  sold  bullion  selling  done  police  arrest  gang  top  gang  sort  gang  power  call  gang  top  gang  sort  equal  power  order  consider  possible  result  selling  fake  gold  bullion  possible  choice  gang  top  gang  count  different  set  gang  modulo  set  considered  different  gang  contains  gang  constant  statement  follow  contains  string  size  consisting  character  equal  vertex  directed  edge  vertex  guaranteed  aii  aij  ji  follow  start  gangster  gang  contains  string  length  character  person  gang  real  gold  bullion  initially  otherwise  guaranteed  sum  doe  exceed  print  single  different  set  gang  police  arrest  modulo
147/B __label__graphs  __label__binary  search  smile  house  created  raise  mood  ha  room  room  connected  door  room  connected  door  petya  know  value  cij  value  added  mood  move  room  room  petya  wondered  whether  raise  mood  infinitely  moving  along  cycle  minimum  room  need  visit  period  cycle  contains  positive  room  door  smile  house  follows  description  door  containing  cij  cji  ij  ji  guaranteed  door  connects  room  door  connects  room  print  minimum  room  need  visit  traverse  cycle  raise  mood  infinitely  cycle  doe  exist  print
954/A __label__implementation  mikhail  walk  plane  either  right  given  sequence  mikhail  move  think  sequence  long  want  make  short  possible  given  sequence  moving  described  character  moving  right  described  character  mikhail  replace  pair  consecutive  move  diagonal  move  described  character  replacement  pair  consecutive  move  left  problem  print  minimum  possible  length  sequence  move  replacement  input  contains  length  sequence  second  contains  sequence  consisting  character  print  minimum  possible  length  sequence  move  replacement  done
933/D __label__math  __label__brute  force  everything  red  frightens  nian  monster  red  paper  red  codeforces  potential  real  big  banban  ha  got  piece  paper  endless  lattice  point  lattice  point  form  square  area  favorite  closed  shape  circle  beauty  simplicity  obtained  piece  paper  prepares  paper  cutting  drew  concentric  circle  numbered  circle  center  circle  lattice  point  radius  circle  time  length  lattice  edge  define  degree  beauty  lattice  point  summation  index  circle  lattice  point  inside  bound  banban  wanted  ask  total  degree  beauty  lattice  point  changed  mind  defining  total  degree  beauty  lattice  point  piece  paper  circle  asked  figure  contains  print  representing
1165/F1 __label__greedy  __label__binary  search  difference  easy  hard  version  constraint  ivan  play  computer  game  contains  microtransactions  make  character  look  cooler  since  ivan  want  character  really  cool  want  use  microtransactions  start  playing  get  day  morning  ivan  earns  exactly  burle  type  microtransactions  game  microtransaction  cost  burles  usually  burle  sale  ivan  ha  order  exactly  microtransactions  type  order  microtransactions  evening  ivan  order  possibly  microtransactions  type  day  course  ha  enough  money  microtransaction  want  order  sale  buy  burle  otherwise  buy  burles  special  offer  game  shop  offer  mean  microtransactions  type  sale  day  ivan  want  order  microtransactions  soon  possible  task  calculate  minimum  day  buy  microtransactions  want  actually  start  playing  input  contains  type  microtransactions  special  offer  game  shop  second  input  contains  copy  microtransaction  type  ivan  ha  order  guaranteed  sum  le  greater  next  special  offer  contains  special  offer  given  pair  mean  microtransactions  type  sale  day  print  minimum  day  ivan  order  microtransactions  want  actually  start  playing
901/B __label__math  __label__constructive  algorithms  suppose  polynomial  polynomial  uniquely  represented  following  way  done  using  long  division  denotes  degree  polynomial  called  remainder  division  polynomial  polynomial  denoted  since  way  divide  polynomial  remainder  define  euclid  algorithm  finding  greatest  common  divisor  polynomial  algorithm  take  polynomial  polynomial  result  otherwise  result  value  algorithm  return  pair  step  degree  second  argument  decrease  algorithm  work  finite  step  large  could  answer  question  given  build  polynomial  degree  greater  coefficient  exceeding  absolute  value  leading  coefficient  greatest  power  equal  described  euclid  algorithm  performs  exactly  step  finding  greatest  common  divisor  moreover  degree  polynomial  greater  degree  second  step  algorithm  mean  transition  pair  pair  given  single  step  algorithm  need  reach  print  polynomial  following  format
1051/C __label__math  __label__dp  __label__implementation  __label__greedy  __label__brute  force  vasya  ha  multiset  consisting  vasya  call  nice  appears  multiset  exactly  example  multiset  contains  nice  vasya  want  split  multiset  multisets  empty  way  quantity  nice  multiset  would  quantity  nice  multiset  quantity  appear  exactly  multiset  quantity  appear  exactly  multiset  contains  single  second  contains  multiset  exists  split  satisfy  given  requirement  print
869/E __label__data  structures  adieuami  koyomi  helping  oshino  acquaintance  take  care  open  space  around  abandoned  eikou  cram  school  building  oshino  makeshift  residence  space  represented  rectangular  grid  n  cell  arranged  row  column  cell  row  denoted  oshino  place  remove  barrier  around  rectangular  area  cell  specifically  action  denoted  mean  oshino  placing  barrier  around  rectangle  corner  side  parallel  square  side  similarly  mean  oshino  removing  barrier  around  rectangle  oshino  ensures  barrier  staying  ground  share  common  point  intersect  boundary  n  area  sometimes  koyomi  try  walk  cell  another  carefully  without  striding  barrier  order  avoid  damaging  various  item  ground  mean  koyomi  try  walk  without  crossing  barrier  tell  koyomi  feasibility  attempt  input  contains  space  separated  row  column  grid  total  oshino  koyomi  action  respectively  following  describes  action  containing  space  separated  type  coordinate  action  additionally  following  hold  depending  value  specified  group  barrier  exist  ground  removal  extra  restriction  koyomi  attempt  action  output  containing  yes  without  quote  feasible  without  quote  otherwise
764/B __label__implementation  __label__constructive  algorithms  young  timofey  ha  birthday  today  got  kit  cube  birthday  present  parent  every  cube  ha  written  timofey  put  cube  row  went  unpack  present  time  timofey  elder  brother  dima  reordered  cube  using  following  rule  suppose  cube  numbered  order  dima  performs  several  step  step  revers  segment  cube  doe  performing  operation  dima  went  away  proud  timofey  returned  cube  understood  order  wa  changed  help  timofey  fast  save  holiday  restore  initial  order  cube  using  information  current  location  contains  single  cube  second  contains  written  cube  dima  ha  changed  order  print  separated  space  written  cube  initial  order
441/B __label__implementation  __label__greedy  valera  love  garden  fruit  tree  grow  year  enjoy  great  harvest  tree  fruit  grow  ripen  day  unfortunately  fruit  tree  get  withered  collected  day  day  fruit  collected  day  become  unfit  eat  valera  fast  positive  point  valera  ready  work  every  day  day  valera  collect  fruit  fruit  either  tree  different  maximum  amount  fruit  valera  collect  time  operates  optimally  well  contains  space  separated  fruit  tree  garden  fruit  valera  collect  day  next  description  tree  garden  contains  space  separated  day  fruit  ripen  tree  fruit  tree  print  single  maximum  fruit  valera  collect
750/D __label__dp  __label__implementation  __label__data  structures  __label__dfs  __label__brute  force  tradition  welcoming  new  year  launching  firework  sky  usually  launched  firework  fly  vertically  upward  period  time  explodes  splitting  several  part  flying  different  direction  sometimes  part  explode  period  time  splitting  even  part  limak  life  infinite  grid  ha  single  firework  behaviour  firework  described  recursion  depth  duration  level  recursion  limak  launch  firework  cell  firework  start  moving  upward  covering  cell  including  starting  cell  explodes  split  part  moving  direction  changed  degree  see  picture  clarification  part  move  top  left  direction  move  top  right  direction  part  explodes  covering  cell  splitting  part  moving  direction  changed  degree  process  continues  till  level  recursion  existing  part  explode  disappear  without  creating  new  part  level  recursion  possible  part  place  time  allowed  part  crash  launching  firework  limak  must  make  sure  nobody  stand  cell  visited  least  firework  count  cell  input  contains  single  total  depth  recursion  second  contains  level  part  cover  cell  exploding  print  denoting  cell  visited  least  part  firework
1019/E __label__data  structures  __label__trees  year  summer  informatics  school  ha  greatly  grown  hotel  berendeetronik  ha  chosen  location  school  camp  consists  house  pathway  possible  reach  every  house  using  pathway  everything  perfect  rain  started  weather  forecast  promise  rain  continue  day  special  squad  teacher  wa  able  measure  pathway  connecting  house  rain  could  passed  second  unfortunately  rain  erodes  road  every  day  time  pas  road  increase  second  word  day  start  rain  take  second  pas  road  unfortunately  despite  effort  teacher  even  year  student  house  midnight  midnight  student  bed  important  find  maximal  time  pair  house  day  every  student  would  know  time  ha  run  house  find  maximal  time  path  every  pair  house  day  given  house  camp  raining  day  next  given  description  pathway  pathway  connects  house  day  requires  second  pas  guaranteed  every  house  connected  sequence  pathway  print  length  longest  path  camp  day  start  rain
1205/E __label__strings  given  let  consider  alphabet  consisting  different  element  let  beauty  string  index  prefix  length  equal  suffix  length  example  beauty  string  abacaba  equal  prefix  suffix  length  equal  consider  word  length  given  alphabet  find  expected  value  uniformly  chosen  random  word  show  expressed  coprime  divided  output  mod  contains  length  string  size  alphabet  respectively  output  single  mod
827/D __label__data  structures  __label__dfs  __label__graphs  __label__trees  given  connected  weighted  graph  vertex  edge  graph  loop  multiple  edge  consider  edge  let  determine  edge  maximum  weight  give  contained  minimum  spanning  tree  graph  change  weight  determine  maximum  weight  described  edge  calculate  answer  edge  independently  mean  edge  changed  weight  time  contains  vertex  edge  graph  respectively  next  contains  v  meaning  edge  vertex  weight  print  answer  edge  order  edge  given  input  edge  contained  every  minimum  spanning  tree  weight  print  answer
1204/B __label__math  __label__greedy  mislove  array  positive  ha  lost  remembers  following  fact  different  array  le  greater  array  element  either  even  array  example  array  could  array  contains  different  odd  equal  array  according  fact  asking  count  minimal  maximal  possible  sum  element  array  input  contains  array  size  minimal  maximal  distinct  element  array  output  minimal  maximal  possible  sum  element  array
553/E __label__math  __label__dp  __label__graphs  kyoya  ootori  want  take  train  get  school  train  station  way  train  going  various  station  kyoya  currently  train  station  school  station  take  train  must  pay  ticket  train  take  certain  amount  time  train  perfect  take  random  amount  time  arrive  destination  kyoya  arrives  school  strictly  time  unit  pay  fine  train  described  ticket  price  probability  distribution  time  train  take  formally  train  ha  ticket  cost  probability  distribution  denotes  probability  train  take  time  unit  amount  time  train  used  kyouya  take  mutually  independent  random  value  moreover  kyoya  travel  along  train  possible  train  take  different  amount  time  amount  independent  another  kyoya  want  get  school  spending  least  amount  money  expectation  ticket  price  plus  possible  fine  late  course  kyoya  ha  optimal  plan  get  school  every  time  arrives  train  station  recalculate  plan  based  much  time  ha  remaining  expected  cost  kyoya  pay  get  school  move  optimally  input  contains  next  description  train  representing  way  train  station  ticket  cost  aii  always  least  path  station  school  probability  train  take  unit  time  traverse  guaranteed  train  pair  platform  direction  print  single  real  equal  optimal  expected  cost  getting  school  answer  considered  correct  relative  absolute  error  exceed
1042/A __label__implementation  __label__binary  search  bench  berland  central  park  known  people  currently  sitting  bench  another  people  coming  park  going  seat  bench  available  let  maximum  people  sitting  bench  additional  people  came  park  calculate  minimum  possible  maximum  possible  nobody  leaf  taken  seat  whole  process  contains  single  bench  park  second  contains  single  people  additionally  coming  park  next  contains  single  initial  people  bench  print  minimum  possible  maximum  possible  maximum  people  sitting  bench  additional  people  came  park
1007/D __label__data  structures  __label__trees  tree  vertex  ant  living  ant  ha  color  ant  ha  favorite  pair  vertex  need  tell  possible  paint  edge  tree  color  every  ant  able  walk  vertex  favorite  pair  using  edge  color  possible  need  print  pair  every  ant  use  contains  single  vertex  next  contains  meaning  edge  vertex  next  contains  single  ant  next  contains  meaning  pair  favorite  ant  print  without  quote  wanted  painting  impossible
928/C __label__implementation  __label__graphs  polycarp  currently  developing  project  vaja  language  using  popular  dependency  management  system  called  vamen  vamen  point  view  vaja  project  library  treated  project  simplicity  project  vaja  ha  uniqie  non  empty  name  consisting  lowercase  latin  letter  length  exceeding  version  positive  project  keep  mind  determined  name  version  might  depend  project  sure  cyclic  dependency  given  list  project  description  given  project  developed  polycarp  moment  help  polycarp  determine  project  project  depends  directly  via  certain  chain  possible  polycarp  project  depends  different  version  project  case  collision  resolving  applied  project  system  chooses  version  minimizes  distance  polycarp  project  several  option  newer  maximum  version  preferred  version  considered  actual  version  dependency  ignored  formal  choose  set  project  minimum  possible  size  following  condition  hold  polycarp  project  chosen  polycarp  project  depends  directly  indirectly  project  set  project  share  name  project  project  set  depends  either  version  shorter  chain  polycarp  project  chosen  case  tie  newer  chosen  output  polycarp  project  dependency  polycarp  project  printed  lexicographical  order  contains  project  vaja  following  project  description  project  described  consisting  name  version  separated  space  next  give  direct  dependency  dependency  arbitrary  order  dependency  specified  name  version  project  given  arbitrary  order  always  polycarp  project  description  separated  empty  refer  sample  better  understanding  guaranteed  cyclic  dependency  output  polycarp  project  dependency  lexicographical  order
193/C __label__math  __label__greedy  __label__constructive  algorithms  hamming  distance  string  equal  length  denoted  equal  distinct  aii  symbol  string  symbol  string  example  hamming  distance  string  aba  bba  equal  different  symbol  string  bbba  aaab  hamming  distance  equal  john  doe  paper  string  equal  length  written  string  consisted  lowercase  letter  john  found  hamming  distance  pair  string  lost  paper  string  lose  hamming  distance  pair  help  john  restore  string  find  string  equal  length  consist  lowercase  letter  pairwise  hamming  distance  john  string  formally  set  must  satisfy  condition  make  string  easier  put  piece  paper  choose  suitable  set  string  ha  string  minimum  length  contains  space  separated  second  contains  space  separated  third  contains  single  given  non  negative  exceed  guaranteed  least  positive  print  suitable  set  string
1054/H __label__math  __label__number  theory  given  array  compute  following  sum  n  since  value  really  large  print  modulo  contains  next  contains  exactly  defines  array  last  contains  exactly  defines  array  print  value  sum  modulo
538/H __label__greedy  __label__data  structures  __label__dfs  student  applied  zpp  class  summer  irrelevant  school  organizing  committee  school  enroll  least  student  must  enrolled  enrolled  student  divided  group  manner  possible  group  empty  shift  student  zpp  grade  tutored  teacher  due  nature  educational  process  teacher  assigned  exactly  group  possible  teacher  assigned  group  teacher  willing  work  group  long  group  least  student  otherwise  would  either  boring  hard  besides  pair  teacher  like  therefore  work  group  total  pair  conflicting  teacher  head  teacher  summer  irrelevant  school  got  difficult  task  determine  many  student  enroll  group  group  teacher  teach  contains  space  separated  second  contains  space  separated  next  ii  next  describe  pair  conflicting  teacher  space  separated  index  teacher  pair  teacher  indexed  starting  guaranteed  teacher  ha  conflict  pair  conflicting  teacher  occurs  list  distribution  possible  print  single  word  possible  without  quote  second  print  space  separated  student  second  group  correspondingly  contstraint  met  third  print  character  teacher  assigned  second  group  correspondingly  multiple  possible  distribution  student  teacher  group  print
837/B __label__implementation  __label__brute  force  flag  berland  rectangular  field  n  satisfies  following  condition  flag  consists  color  correspond  letter  flag  consists  equal  width  height  stripe  parralel  side  flag  stripe  ha  exactly  color  color  used  exactly  stripe  given  field  n  consisting  character  output  yes  without  quote  field  corresponds  correct  flag  berland  otherwise  print  without  quote  contains  size  field  following  consisting  character  description  field  print  yes  without  quote  given  field  corresponds  correct  flag  berland  otherwise  print  without  quote
250/D __label__geometry  village  separated  river  flow  north  south  villager  want  build  bridge  river  make  easier  move  village  river  bank  assumed  vertical  straight  west  village  lie  steppe  point  pathway  leading  village  river  end  point  villager  plain  simple  pathway  straight  segment  well  east  village  ha  reserved  cunning  people  village  forest  east  bank  river  exact  position  clear  twisted  path  leading  village  river  ending  point  length  path  known  length  path  lead  eastern  village  point  equal  villager  want  choose  exactly  point  left  bank  river  exactly  point  right  bank  connect  straight  bridge  make  total  distance  village  sum  oai  aibj  euclidean  distance  point  minimum  euclidean  distance  point  equal  help  find  required  pair  point  contains  second  contains  ascending  order  determines  coordinate  point  equal  third  contains  ascending  order  determines  coordinate  point  equal  fourth  contains  determines  length  path  connects  eastern  village  point  equal  guaranteed  point  abscissa  least  bici  guaranteed  point  coincide  guaranteed  point  coincide  print  point  left  west  right  east  bank  respectively  need  build  bridge  assume  point  west  bank  numbered  order  given  input  similarly  point  east  bank  numbered  order  given  input
963/C __label__math  __label__brute  force  __label__number  theory  rectangle  side  cut  rectangle  cut  parallel  side  example  horizontal  vertical  cut  made  rectangle  left  cutting  cutting  rectangle  different  type  rectangle  different  least  side  rectangle  equal  corresponding  side  note  rectangle  rotated  mean  rectangle  ab  ba  considered  different  type  rectangle  length  side  rectangle  given  along  amount  rectangle  type  left  cutting  initial  rectangle  calculate  amount  pair  given  rectangle  could  created  cutting  rectangle  side  length  note  pair  considered  different  consists  single  amount  different  type  rectangle  left  cutting  initial  rectangle  next  consist  length  side  rectangle  type  amount  rectangle  type  guaranteed  rectangle  different  type  different  output  answer  problem
1009/B __label__implementation  __label__greedy  given  ternary  string  string  consists  character  swap  adjacent  consecutive  character  replace  vice  versa  adjacent  consecutive  character  replace  vice  versa  example  string  perform  following  move  note  swap  vice  versa  perform  operation  given  string  excluding  described  task  obtain  minimum  possible  lexicographically  string  using  swap  arbitrary  time  possibly  string  lexicographically  le  string  string  length  exists  position  length  string  every  hold  input  contains  string  consisting  character  length  inclusive  print  single  string  minimum  possible  lexicographically  string  obtain  using  swap  described  arbitrary  time  possibly
394/C __label__greedy  __label__constructive  algorithms  break  decided  relax  play  domino  box  domino  wa  empty  decided  borrow  teacher  domino  teacher  responded  instantly  request  put  domino  table  n  rectangle  row  contained  domino  arranged  horizontally  half  domino  contained  taken  aback  teacher  smiled  said  consider  arrangement  domino  n  matrix  let  count  column  matrix  sum  column  sum  find  maximum  rearrange  domino  matrix  way  maximum  sum  minimum  possible  note  prohibited  change  orientation  domino  need  stay  horizontal  nevertheless  domino  allowed  rotate  degree  reward  give  domino  got  even  taken  aback  wondering  wa  going  help  make  optimal  matrix  domino  contains  next  description  teacher  matrix  next  contains  domino  description  domino  written  without  space  digit  left  right  half  domino  print  resulting  matrix  domino  format  contains  space  separated  domino
797/B __label__dp  __label__implementation  __label__greedy  given  sequence  length  task  find  subsequence  sum  odd  maximum  subsequence  guaranteed  given  sequence  contains  subsequence  odd  sum  subsequence  sequence  derived  another  sequence  deleting  element  without  changing  order  remaining  element  write  program  find  sum  best  subsequence  contains  second  contains  sequence  contains  least  subsequence  odd  sum  print  sum  resulting  subseqeuence
793/E __label__dp  __label__dfs  __label__trees  __label__constructive  algorithms  earlier  wa  internet  bank  lot  office  around  bankopolis  caused  lot  problem  namely  day  bank  collect  cash  office  oleg  bank  client  heard  dialogue  cash  collector  day  traveled  department  office  bank  following  route  every  day  collector  started  central  department  moved  department  department  office  using  special  road  finally  returned  central  department  total  department  office  wa  total  road  wa  word  special  road  system  wa  rooted  tree  root  wa  central  department  leaf  office  internal  vertex  department  collector  always  followed  route  road  wa  minimum  possible  collector  said  office  visited  visit  office  given  order  equal  office  visited  visit  office  order  collector  said  office  visited  visit  office  order  equal  office  visited  visit  office  order  interesting  part  talk  wa  shortest  path  using  special  road  pair  office  passed  central  department  given  special  road  map  index  office  determine  situation  described  collector  wa  possible  contains  single  total  office  department  department  office  numbered  central  office  ha  index  second  contains  index  department  mentioned  collector  dialogue  guaranteed  index  office  leaf  tree  department  guaranteed  shortest  path  pair  office  pass  central  department  third  follow  denotes  special  road  office  department  department  please  note  joint  enumeration  department  office  guaranteed  given  graph  tree  office  leaf  department  internal  vertex  situation  described  cash  collector  wa  possible  print  yes  otherwise  print
713/A __label__implementation  __label__data  structures  today  sonya  learned  long  invited  friend  share  fun  sonya  ha  initially  empty  multiset  friend  give  query  following  type  add  non  negative  multiset  note  ha  multiset  thus  many  occurrence  delete  single  occurrence  non  negative  multiset  guaranteed  least  multiset  count  multiset  repetition  match  pattern  consisting  pattern  stand  even  digit  stand  odd  match  pattern  parity  right  digit  decimal  notation  match  right  digit  pattern  pattern  shorter  supplemented  left  similarly  shorter  pattern  decimal  notation  supplemented  left  example  pattern  match  pattern  input  contains  operation  sonya  ha  perform  next  provide  description  query  order  appear  input  file  row  start  character  type  corresponding  operation  equal  followed  space  given  without  leading  unless  equal  followed  space  sequence  onse  giving  pattern  length  guaranteed  least  query  type  guaranteed  time  removed  multiset  least  occurrence  query  third  type  print  matching  given  pattern  counted  many  time  appears  multiset  moment  time
1060/G __label__data  structures  strip  infinite  cell  cell  numbered  starting  initially  cell  contains  ball  pocket  located  cell  cell  contains  pocket  filtering  following  sequence  operation  pocket  cell  open  simultaneously  make  ball  currently  located  cell  disappear  ball  disappear  pocket  close  cell  cell  contains  ball  move  ball  free  cell  lowest  free  cell  ball  stay  cell  note  filtering  operation  cell  still  exactly  ball  example  let  cell  pocket  initial  configuration  ball  shown  underscore  display  cell  pocket  opening  closing  pocket  ball  disappear  moving  ball  left  configuration  look  like  another  filtering  repetition  result  following  answer  question  question  ball  located  cell  repetition  filtering  operation  contains  pocket  question  respectively  following  contains  cell  containing  pocket  following  describe  question  contains  print  answer  question  order  given  input
848/E __label__math  __label__dp  floral  clock  ha  standing  side  mirror  lake  year  though  unable  keep  time  reminds  people  passage  time  good  old  day  rim  floral  clock  flower  numbered  clockwise  ha  colour  possible  colour  exactly  flower  distance  either  le  equal  equal  additionally  flower  colour  flower  opposite  opposite  colour  well  symmetry  beautiful  formally  distance  flower  plus  flower  minor  arc  semicircle  possible  arrangement  cover  possibility  beauty  arrangement  defined  product  length  flower  segment  separated  opposite  flower  colour  word  order  compute  beauty  remove  circle  flower  colour  flower  opposite  beauty  product  length  remaining  segment  note  include  segment  length  product  flower  colour  flower  opposite  beauty  equal  instance  beauty  arrangement  equal  segment  keeping  constraint  satisfied  lot  different  arrangement  find  sum  beauty  possible  arrangement  modulo  arrangement  considered  different  pair  n  exists  flower  colour  input  contains  lonely  positive  colour  present  floral  clock  output  sum  beauty  possible  arrangement  flower  modulo
1031/A __label__math  __label__implementation  plate  want  add  gilding  plate  rectangle  split  wh  cell  gilded  ring  along  edge  plate  second  cell  away  edge  ring  ha  width  cell  formally  ring  consist  bordering  cell  inner  rectangle  size  picture  corresponds  third  example  task  compute  cell  gilded  contains  h  min  denotes  rounded  row  column  ring  respectively  print  single  positive  cell  gilded
1003/B __label__constructive  algorithms  given  task  construct  binary  string  length  exactly  exactly  exactly  index  guaranteed  answer  always  exists  example  string  index  string  index  recall  binary  string  non  empty  sequence  character  character  either  input  contains  b  print  string  binary  string  satisfying  condition  described  guaranteed  answer  always  exists
172/C __label__implementation  __label__sortings  bus  stop  near  university  lesson  student  come  stop  student  appear  bus  stop  time  distinct  shall  assume  stop  located  coordinate  axis  point  bus  go  along  ray  towards  positive  direction  coordinate  axis  back  student  need  get  point  coordinate  bus  move  following  algorithm  initially  point  student  consistently  come  stop  get  bus  ha  seating  capacity  equal  passenger  moment  student  get  bus  start  moving  positive  direction  coordinate  axis  start  moving  last  student  get  bus  bus  moving  speed  unit  distance  per  unit  time  cover  distance  time  every  time  bus  pass  point  least  student  need  get  stop  student  get  bus  student  need  unit  time  get  bus  student  leave  point  expression  denotes  rounded  soon  last  student  leaf  bus  bus  turn  around  go  back  point  make  stop  reach  point  given  point  bus  fill  student  everything  repeated  student  come  stop  bus  form  queue  get  bus  order  came  student  get  bus  negligible  time  assume  take  time  action  take  time  bus  ha  passenger  apart  student  write  program  determine  student  time  got  bus  moment  student  got  bus  moment  bus  stopped  student  destination  stop  despite  fact  group  student  need  time  get  contains  space  separated  student  passenger  bus  transport  correspondingly  next  description  student  per  contains  pair  given  order  strict  increasing  value  coincide  print  moment  time  student  got  bus  print  separate  single  space
1168/A __label__greedy  __label__binary  search  toad  zitz  ha  array  inclusive  operation  zitz  choose  index  change  modm  chosen  fixed  operation  index  xmody  denotes  remainder  division  zitz  want  make  array  non  decreasing  minimum  operation  find  minimum  operation  contains  array  parameter  next  contains  space  separated  given  array  output  minimum  described  operation  zitz  need  make  array  non  decreasing  operation  required  print
702/D __label__math  vasiliy  ha  car  want  get  home  post  office  distance  need  pas  equal  kilometer  vasiliy  car  new  break  driven  every  kilometer  vasiliy  need  second  repair  repairing  car  vasiliy  drive  kilometer  break  beginning  trip  car  repair  station  drive  kilometer  car  vasiliy  spends  second  walk  kilometer  foot  need  second  task  find  minimal  time  vasiliy  able  reach  post  office  consider  every  moment  time  vasiliy  left  car  start  foot  contains  positive  distance  home  post  office  distance  car  able  drive  breaking  time  vasiliy  spends  drive  kilometer  car  time  vasiliy  spends  walk  kilometer  foot  time  vasiliy  spends  repair  car  print  minimal  time  vasiliy  able  reach  post  office
721/B __label__math  __label__implementation  __label__sortings  __label__strings  vanya  managed  enter  favourite  site  codehorses  vanya  us  distinct  password  site  remember  exactly  specified  codehorses  registration  vanya  enter  password  order  non  decreasing  length  enter  password  length  arbitrary  order  vanya  entered  correct  password  immediately  authorized  site  vanya  enter  password  twice  entering  password  take  second  vanya  vanya  enter  wrong  password  time  able  make  next  try  second  vanya  make  try  immediately  moment  vanya  able  enter  password  determine  many  second  vanya  need  enter  codehorses  best  case  spends  minimum  possible  second  worst  case  spends  maximum  possible  amount  second  input  contains  vanya  password  failed  try  access  site  blocked  second  next  contains  password  per  pairwise  distinct  non  empty  string  consisting  latin  letter  digit  password  length  doe  exceed  character  last  input  contains  vanya  codehorses  password  guaranteed  vanya  codehorses  password  equal  password  print  time  second  vanya  need  authorized  codehorses  best  case  worst  case  respectively
1003/F __label__dp  __label__strings  given  text  consisting  space  separated  word  exactly  space  character  pair  adjacent  word  space  word  space  last  word  length  text  letter  space  word  text  word  consist  lowercase  latin  letter  let  denote  segment  word  sequence  word  segment  word  considered  equal  every  example  text  segment  equal  correspond  word  abbreviation  replacement  segment  word  uppercase  letter  order  perform  abbreviation  choose  least  non  intersecting  equal  segment  word  replace  chosen  segment  string  consisting  letter  word  segment  written  uppercase  example  text  replace  segment  word  abbreviation  aaa  obtain  text  aaa  aaa  replace  segment  word  abbreviation  aaab  obtain  text  aaab  aaab  minimum  length  text  abbreviation  input  contains  word  text  next  contains  space  separated  word  text  word  consists  lowercase  latin  letter  guaranteed  length  text  doe  exceed  print  minimum  length  text  abbreviation
805/A __label__math  __label__greedy  tavak  seyyed  good  friend  seyyed  funny  told  tavak  solve  following  problem  instead  longest  path  given  inclusive  wrote  divisor  except  find  wrote  maximum  time  solve  problem  show  problem  contains  print  single  appears  maximum  time  divisor
778/C __label__dfs  __label__trees  __label__brute  force  __label__strings  peterson  love  learn  new  language  favorite  hobby  making  new  language  set  word  word  sequence  lowercase  latin  letter  peterson  make  new  language  every  morning  difficult  task  store  whole  language  peterson  invented  new  data  structure  storing  language  called  broom  broom  rooted  tree  edge  marked  letter  initially  broom  represented  vertex  root  broom  peterson  want  add  new  word  language  stand  root  process  letter  new  word  consider  peterson  stand  vertex  edge  marked  current  letter  peterson  go  edge  otherwise  peterson  add  new  edge  new  vertex  mark  current  letter  go  new  edge  size  broom  vertex  evening  working  day  peterson  understand  language  made  morning  difficult  bored  peterson  try  make  simpler  simplification  language  process  erasing  letter  word  language  formally  peterson  take  positive  era  letter  word  language  length  least  letter  word  indexed  starting  peterson  considers  simplification  change  least  word  ha  least  word  length  least  peterson  try  make  language  simple  possible  want  choose  size  broom  simplified  language  small  possible  peterson  pretty  annoyed  task  asks  help  write  program  find  smallest  possible  size  broom  input  contains  size  broom  next  describe  broom  contains  letter  describing  edge  marked  letter  vertex  numbered  lowercase  latin  letter  vertex  root  broom  edge  describe  correct  broom  made  peterson  language  output  minimum  possible  size  broom  simplification  second  output  choose  several  suitable  value  print  smallest
386/C __label__dp  __label__strings  string  diversity  symbol  occur  string  least  diversity  denoted  example  aaa  abacaba  given  string  consisting  lowercase  latin  letter  consider  substring  obviously  substring  diversity  find  statistic  substring  diversity  find  many  substring  ha  diversity  exactly  input  consists  single  containing  contains  lowercase  latin  letter  length  print  value  print  sequence  following  substring  diversity  exactly
1032/E __label__math  __label__dp  set  weight  know  mass  gram  know  ha  mass  distinguish  weight  friend  doe  know  mass  weight  ask  friend  give  exactly  weight  total  mass  parameter  chosen  friend  point  valid  subset  weight  possible  allowed  make  query  find  maximum  possible  weight  reveal  query  contains  single  weight  second  contains  mass  weight  print  maximum  weight  learn  mass  making  single  query
533/C __label__math  __label__implementation  __label__greedy  polycarp  vasiliy  love  simple  logical  game  today  play  game  infinite  chessboard  pawn  player  polycarp  vasiliy  move  turn  polycarp  start  turn  polycarp  move  pawn  cell  vasiliy  move  pawn  cell  player  allowed  skip  move  additional  restriction  player  forbidden  move  pawn  cell  negative  coordinate  coordinate  cell  containing  opponent  pawn  winner  person  reach  cell  given  starting  coordinate  pawn  determine  win  play  optimally  well  contains  p  v  polycarp  vasiliy  starting  coordinate  guaranteed  beginning  pawn  different  cell  none  cell  output  name  winner  polycarp  vasiliy
909/B __label__math  __label__constructive  algorithms  given  consider  possible  segment  coordinate  axis  endpoint  point  coordinate  inclusive  want  draw  segment  several  layer  layer  segment  overlap  might  touch  endpoint  though  move  segment  different  location  coordinate  axis  find  minimal  layer  use  given  input  contains  single  output  single  minimal  layer  required  draw  segment  given
591/B __label__implementation  __label__strings  name  small  proud  corporation  consists  lowercase  english  letter  corporation  ha  decided  try  rebranding  active  marketing  strategy  includes  set  measure  change  either  brand  company  good  produce  component  name  logo  slogan  decided  start  name  purpose  corporation  ha  consecutively  hired  designer  company  hire  designer  immediately  contributes  creation  new  corporation  name  follows  take  newest  version  name  replaces  letter  letter  result  new  version  possible  letter  occur  string  happen  coincides  version  name  received  work  last  designer  becomes  new  name  corporation  manager  arkady  ha  recently  got  job  company  already  soaked  spirit  teamwork  worried  success  rebranding  naturally  wait  find  new  name  corporation  receive  satisfy  arkady  curiosity  tell  final  version  name  input  contains  length  initial  name  designer  hired  respectively  second  consists  lowercase  english  letter  represents  original  name  corporation  next  description  designer  action  contains  space  separated  lowercase  english  letter  print  new  name  corporation
1093/G __label__data  structures  given  array  point  dimensional  space  let  distance  point  known  manhattan  distance  process  query  following  type  set  element  point  find  maximum  distance  point  contains  element  dimension  space  respectively  follow  containing  coordinate  point  next  contains  query  follow  denoting  query  type  query  set  element  point  find  maximum  distance  point  least  query  second  type  print  answer  query  second  type
666/D __label__brute  force  __label__geometry  group  berland  scientist  close  business  relationship  make  research  area  peaceful  nuclear  energy  particular  found  group  nanobots  placed  surface  plate  run  powerful  chain  reaction  certain  condition  precise  researcher  introduced  rectangular  cartesian  coordinate  system  flat  plate  selected  distinct  point  coordinate  bot  placed  initially  next  bot  assigned  direction  left  right  parallel  coordinate  ax  bot  shifted  distance  different  different  bot  along  direction  chain  reaction  start  bot  corner  square  positive  area  side  parallel  coordinate  ax  corner  square  must  nanobot  reaction  stronger  bot  spend  le  time  move  assume  bot  move  unit  speed  word  lesser  maximum  length  traveled  bot  stronger  reaction  scientist  prepared  set  plate  selected  starting  position  bot  plate  ask  assign  direction  bot  move  landing  maximum  length  traveled  bot  small  possible  contains  plate  description  plate  follow  description  plate  consists  consists  pair  coordinate  next  bot  bot  different  location  note  though  problem  include  several  record  test  hack  people  submission  test  plate  parameter  hack  test  equal  print  answer  plate  separately  go  single  separate  scientist  made  unfortunate  mistake  nanobots  able  form  desired  square  print  otherwise  print  minimum  possible  length  longest  bot  path
991/D __label__dp  __label__greedy  bishwock  chess  figure  consists  square  resembling  bar  figure  rotated  degree  possible  state  bishwocks  attack  square  even  occupy  adjacent  square  long  occupy  square  vasya  ha  board  n  square  onto  want  put  bishwocks  dismay  several  square  board  already  occupied  pawn  vasya  put  bishwocks  pawn  attack  bishwocks  occupy  adjacent  square  peacefully  knowing  position  pawn  board  help  vasya  determine  maximum  amount  bishwocks  put  onto  board  occupy  square  occupy  square  pawn  input  contains  nonempty  string  describe  vasya  board  string  symbol  denote  empty  square  symbol  uppercase  english  letter  denote  square  occupied  pawn  string  nonempty  length  doe  exceed  output  single  maximum  amount  bishwocks  placed  onto  given  board
995/A __label__implementation  __label__constructive  algorithms  allen  dream  day  owning  enormous  fleet  electric  car  car  future  know  give  big  status  boost  allen  planning  different  type  car  arrange  realizes  ha  problem  allen  future  parking  lot  represented  rectangle  row  n  column  rectangular  space  car  time  imago  k  n  car  grid  car  initially  second  third  row  car  ha  different  designated  parking  space  fourth  row  allen  ha  put  car  corresponding  parking  place  illustration  example  since  allen  would  never  entrust  car  anyone  else  car  moved  time  drive  car  space  cardinal  direction  neighboring  empty  space  furthermore  allen  move  car  space  fourth  row  car  designated  parking  space  allen  know  busy  man  time  move  car  time  realizes  moving  car  worth  time  help  allen  determine  bother  parking  car  leave  someone  le  important  input  contains  space  separated  n  representing  column  car  respectively  next  inclusive  representing  initial  state  parking  lot  row  numbered  top  bottom  column  numbered  left  right  last  represents  parking  spot  assigned  car  move  car  place  represents  empty  space  move  car  place  second  third  represents  initial  position  car  represents  empty  space  move  car  place  appears  exactly  second  third  exactly  fourth  sequence  move  brings  car  parking  space  car  move  print  move  following  print  move  move  per  format  corresponds  allen  moving  car  neighboring  space  row  column
662/E __label__dp  __label__greedy  __label__brute  force  consider  regular  codeforces  round  consisting  problem  us  dynamic  scoring  given  almost  final  scoreboard  participant  including  time  accepted  submission  problem  given  solution  already  know  whether  able  hack  change  scoreboard  happen  end  round  challenge  best  place  take  end  formally  people  participating  including  problem  wa  solved  exactly  people  end  round  maximum  score  problem  defined  k  n  maximum  possible  score  k  n  maximum  possible  score  k  n  maximum  possible  score  k  n  maximum  possible  score  k  n  maximum  possible  score  k  maximum  possible  score  let  maximum  possible  score  problem  equal  contestant  manage  get  accepted  solution  wa  hacked  earns  point  problem  got  solution  accepted  minute  beginning  round  solution  hacked  earns  point  problem  overall  score  participant  equal  sum  point  earns  problem  plus  point  successful  hack  make  hack  resulting  place  get  equal  plus  participant  overall  score  strictly  greater  input  contains  single  participant  participant  following  contains  mean  participant  manage  accept  problem  participant  got  problem  accepted  minute  start  contest  hack  solution  finally  mean  participant  got  problem  accepted  minute  start  contest  hack  solution  similarly  provide  information  regarding  second  third  problem  format  guaranteed  non  negative  print  best  place  take  end  round
1029/E __label__dp  __label__greedy  __label__graphs  given  undirected  tree  consisting  vertex  undirected  tree  connected  undirected  graph  edge  task  add  minimum  edge  way  length  shortest  path  vertex  vertex  note  allowed  add  loop  multiple  edge  contains  vertex  tree  following  edge  edge  given  pair  vertex  guaranteed  given  edge  form  tree  guaranteed  loop  multiple  edge  given  edge  print  single  minimum  edge  add  order  make  shortest  distance  vertex  vertex  note  allowed  add  loop  multiple  edge
733/F __label__data  structures  __label__graphs  __label__trees  kingdom  city  way  road  road  connects  pair  city  road  know  level  driver  dissatisfaction  value  road  know  value  many  lamziks  spend  reduce  level  dissatisfaction  road  thus  reduce  dissatisfaction  road  spend  lamziks  allowed  dissatisfaction  become  even  negative  accordance  king  order  need  choose  road  make  main  road  important  condition  must  hold  possible  travel  city  main  road  road  ministry  ha  budget  lamziks  reform  ministry  going  spend  budget  repair  road  reduce  dissatisfaction  choose  main  road  help  spend  budget  way  choose  main  road  total  dissatisfaction  main  road  small  possible  dissatisfaction  road  become  negative  necessary  spend  whole  budget  guaranteed  possible  travel  city  using  existing  road  road  kingdom  way  road  contains  city  road  kingdom  respectively  second  contains  driver  dissatisfaction  road  third  contains  cost  lamziks  reducing  dissatisfaction  road  next  description  road  pair  aii  mean  road  connects  city  road  way  oriented  possible  move  road  vice  versa  allowed  pair  city  connected  road  last  contains  lamziks  spend  reform  print  minimum  possible  total  dissatisfaction  main  road
566/A __label__dfs  __label__trees  __label__strings  teacher  programming  summer  school  decided  make  surprise  student  giving  name  style  hobbit  movie  student  must  get  pseudonym  maximally  similar  name  pseudonym  must  name  character  popular  saga  teacher  busy  matching  pseudonym  student  name  student  summer  school  teacher  chose  exactly  pseudonym  student  must  get  exactly  pseudonym  corresponding  let  determine  relevance  pseudonym  student  name  length  largest  common  prefix  represent  value  determine  quality  matching  pseudonym  student  sum  relevance  pseudonym  corresponding  student  find  matching  student  pseudonym  maximum  quality  contains  student  summer  school  next  name  student  name  non  empty  word  consisting  lowercase  english  letter  name  repeating  last  given  pseudonym  pseudonym  non  empty  word  consisting  small  english  letter  pseudonym  repeating  total  length  name  pseudonym  exceed  character  print  maximum  possible  quality  matching  pseudonym  student
417/A __label__math  __label__dp  __label__implementation  finalist  russian  code  cup  competition  participant  win  elimination  round  elimination  round  divided  main  additional  main  elimination  round  consists  problem  winner  round  people  rating  list  additional  elimination  round  consists  problem  winner  additional  round  person  besides  winner  past  final  invited  final  without  elimination  result  elimination  round  least  people  final  need  organize  elimination  round  way  least  people  final  total  amount  used  problem  round  small  possible  contains  problem  main  additional  round  correspondingly  second  contains  finally  third  contains  pre  chosen  winner  print  single  minimum  problem  jury  need  prepare
979/A __label__math  katie  kuro  shiro  best  friend  known  since  kindergarten  often  share  everything  work  together  hard  problem  today  shiro  birthday  really  love  pizza  want  invite  friend  pizza  restaurant  near  house  celebrate  birthday  including  best  friend  katie  kuro  ha  ordered  big  round  pizza  order  serve  many  friend  exactly  shiro  friend  ha  divide  pizza  slice  shiro  need  eat  want  slice  exactly  size  shape  friend  get  mad  home  early  party  shiro  hungry  want  cut  pizza  minimum  straight  cut  cut  straight  segment  might  end  inside  outside  pizza  lazy  pick  calculator  usual  ask  katie  kuro  help  come  could  help  shiro  problem  single  contains  non  negative  shiro  friend  circular  pizza  ha  sliced  piece  single  straight  cut  shiro  need
372/B __label__dp  __label__brute  force  n  rectangular  grid  cell  grid  contains  single  let  call  cell  row  column  let  define  rectangle  rectangle  denotes  set  cell  grid  let  define  good  rectangle  rectangle  includes  cell  answer  following  query  calculate  good  rectangle  cell  given  rectangle  next  contains  character  grid  consider  grid  row  numbered  top  bottom  grid  column  numbered  left  right  column  row  numbered  starting  next  contains  query  describe  current  rectangle  query  output  answer  single  separate
370/B __label__implementation  lately  national  version  bingo  game  ha  become  popular  berland  player  playing  game  player  ha  card  card  distinct  distinct  card  equal  card  player  contains  game  host  take  numbered  ball  bag  read  aloud  high  clear  voice  put  ball  away  participant  cross  occurs  card  person  cross  card  win  multiple  people  cross  card  time  winner  game  beginning  game  bag  contains  ball  numbered  ball  distinct  given  card  player  write  program  determines  whether  player  win  game  favorable  scenario  input  contains  player  follow  describes  player  card  describes  card  start  show  many  player  card  ha  follows  sequence  player  card  separated  single  space  guaranteed  card  distinct  print  must  word  yes  without  quote  player  win  without  quote  otherwise
1063/D __label__math  __label__brute  force  child  festival  child  dancing  circle  music  stopped  playing  child  still  standing  circle  lena  remembered  parent  gave  candy  box  exactly  candy  wilky  lena  greedy  person  decided  present  candy  friend  circle  lena  know  friend  sweet  tooth  others  sweet  tooth  take  box  candy  box  ha  least  candy  otherwise  take  rest  lena  friend  always  take  exactly  candy  box  starting  give  candy  lena  step  circle  exactly  people  remaining  lena  numbered  friend  clockwise  order  positive  starting  way  index  wa  assigned  best  friend  rom  initially  lena  gave  box  friend  friend  starting  friend  took  candy  box  passed  box  next  friend  clockwise  order  process  ended  friend  taking  last  candy  know  empty  box  please  note  possible  lena  friend  took  candy  box  several  time  box  could  gone  several  full  circle  becoming  empty  lena  doe  know  friend  sweet  tooth  interested  maximum  possible  friend  sweet  tooth  situation  could  happen  lena  proved  wrong  observation  please  tell  contains  child  circle  friend  wa  given  box  candy  friend  ha  taken  last  candy  initial  candy  box  respectively  print  exactly  maximum  possible  sweet  tooth  friend  lena  quote  clarity  lena  wrong
988/A __label__implementation  __label__brute  force  student  school  class  rating  student  codehorses  form  team  consisting  student  rating  team  member  distinct  impossible  form  suitable  team  print  without  quote  otherwise  print  yes  print  distinct  index  student  team  form  multiple  answer  print  contains  student  size  team  form  second  contains  rating  student  impossible  form  suitable  team  print  without  quote  otherwise  print  yes  print  distinct  index  student  team  form  rating  student  team  distinct  print  index  order  multiple  answer  print
1045/B __label__number  theory  everybody  seems  think  martian  green  turn  metallic  pink  fat  ajs  ha  bag  distinct  nonnegative  bag  disjoint  union  set  bag  positive  ajs  draw  bag  second  bag  sum  modulo  residue  modulo  ajs  obtain  action  contains  positive  denoting  element  bag  modulus  respectively  second  contains  nonnegative  content  bag  output  cardinality  set  residue  modulo  ajs  obtain
1220/E __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__trees  alex  decided  touristic  trip  country  simplicity  let  assume  country  ha  city  bidirectional  road  connecting  alex  life  city  initially  located  compare  different  city  alex  assigned  city  score  high  interesting  city  seems  alex  alex  belief  trip  interesting  use  road  twice  row  alex  came  city  city  choose  next  city  trip  city  connected  road  except  city  task  help  alex  plan  city  way  maximizes  total  score  city  visited  note  city  score  counted  even  alex  several  time  trip  input  contains  city  road  country  second  contains  score  city  following  description  road  contains  city  connected  road  guaranteed  direct  road  city  city  connected  road  finally  possible  city  using  road  last  contains  single  initial  city  output  single  maximum  possible  sum  score  visited  city
1110/G __label__trees  __label__constructive  algorithms  tic  tac  toe  game  starting  tree  vertex  vertex  already  colored  white  remaining  uncolored  player  white  black  player  make  move  alternatively  white  player  start  game  turn  player  must  select  uncolored  vertex  paint  color  player  win  paint  path  vertex  color  case  vertex  colored  neither  player  game  end  draw  could  please  find  win  game  whether  end  draw  assuming  player  play  optimally  contains  single  test  case  description  test  case  follow  test  contains  single  vertex  tree  following  contains  denoting  edge  tree  connecting  vertex  last  test  case  contains  string  letter  white  colored  length  denoting  already  colored  vertex  vertex  already  colored  white  denoted  guaranteed  given  edge  form  tree  least  uncolored  vertex  path  white  vertex  guaranteed  sum  test  case  every  test  case  print  either  white  draw  black  depending  result  game
981/A __label__implementation  __label__brute  force  __label__strings  string  palindrome  read  left  right  right  left  example  string  kek  abacaba  papicipap  palindrome  string  abb  substring  string  string  anna  doe  like  palindrome  make  friend  call  ann  change  word  read  similar  way  namely  word  changed  longest  substring  palindrome  substring  palindrome  skip  word  time  ago  ann  read  word  word  changed  contains  non  empty  string  length  character  containing  lowercase  english  letter  substring  palindrome  print  maximum  length  substring  otherwise  print
750/H __label__dfs  __label__graphs  pay  attention  output  section  see  information  flushing  output  bearland  grid  row  column  row  numbered  top  bottom  column  numbered  left  right  every  cell  either  allowed  denoted  input  permanently  blocked  denoted  bearland  cold  land  heavy  snow  often  make  travelling  harder  every  day  allowed  cell  temporarily  blocked  snow  note  block  work  particular  day  next  day  cell  might  allowed  unless  another  temporarily  block  possible  move  directly  cell  share  side  none  permanently  temporarily  blocked  limak  little  polar  bear  life  bearland  house  top  left  cell  school  bottom  right  cell  every  day  limak  house  school  return  back  house  since  get  bored  easily  want  visit  cell  twice  day  except  cell  house  start  end  limak  reach  school  return  home  avoiding  revisiting  cell  call  day  interesting  day  must  process  another  day  check  interesting  print  yes  separate  order  able  read  description  next  day  print  answer  previous  flush  output  guaranteed  day  cell  temporarily  blocked  snow  would  interesting  guaranteed  cell  limak  house  school  never  blocked  neither  permanently  temporarily  input  contains  height  width  grid  day  respectively  next  describe  cell  allowed  permanently  blocked  contains  string  length  describing  row  every  character  either  denoting  allowed  cell  denoting  permanently  blocked  cell  guaranteed  day  cell  temporarily  blocked  snow  would  interesting  description  day  given  description  day  start  containing  single  cell  temporarily  blocked  snow  day  next  contains  representing  cell  intersection  row  column  given  cell  distinct  none  permanently  blocked  none  contains  limak  house  school  day  print  yes  day  interesting  otherwise  print  without  quote  printing  answer  print  end  character  flush  output  proceed  next  day  get  idleness  limit  exceeded  print  anything  forget  flush  output
354/A __label__math  __label__greedy  __label__brute  force  vasya  ha  item  lying  item  consecutively  numbered  way  leftmost  item  ha  rightmost  item  ha  item  ha  weight  item  weight  kilogram  vasya  need  collect  item  us  brand  new  robot  robot  ha  different  arm  left  right  robot  consecutively  perform  following  action  take  leftmost  item  left  hand  spend  wi  energy  unit  weight  leftmost  item  parameter  previous  action  wa  left  hand  robot  spends  extra  energy  unit  take  rightmost  item  right  hand  spend  wj  energy  unit  weight  rightmost  item  parameter  previous  action  wa  right  hand  robot  spends  extra  energy  unit  naturally  vasya  want  program  robot  way  robot  spends  little  energy  possible  asked  solve  problem  task  find  minimum  energy  unit  robot  spends  collect  item  contains  l  r  second  contains  single  print  single  answer  problem
1029/A __label__implementation  __label__strings  given  string  consisting  lowercase  latin  letter  let  define  substring  string  index  task  construct  string  minimum  possible  length  exactly  position  word  task  construct  string  minimum  possible  length  exactly  substring  equal  guaranteed  answer  always  unique  input  contains  k  length  string  substring  second  input  contains  string  consisting  exactly  lowercase  latin  letter  print  string  minimum  possible  length  exactly  substring  equal
650/A __label__math  __label__data  structures  __label__geometry  watchman  danger  doctor  manhattan  together  friend  daniel  dreiberg  warn  soon  possible  watchman  plane  watchman  located  point  need  arrange  plan  difficulty  way  know  doctor  manhattan  considers  distance  watchman  daniel  ordinary  person  calculates  distance  using  formula  success  operation  relies  pair  distance  watchman  watchman  calculated  doctor  manhattan  equal  distance  calculated  daniel  asked  compute  pair  input  contains  single  watchman  following  contains  position  coincide  print  pair  watchman  distance  calculated  doctor  manhattan  equal  distance  calculated  daniel
400/E __label__data  structures  __label__binary  search  inna  fed  joke  female  logic  started  using  binary  logic  instead  inna  ha  array  element  girl  like  train  binary  logic  doe  exercise  consisting  stage  stage  inna  writes  array  stage  girl  writes  element  array  consists  array  defined  follows  bit  wise  binary  logical  operation  dima  decided  check  inna  skill  asks  inna  change  array  perform  exercise  say  sum  element  wrote  current  exercise  help  inna  answer  question  contains  size  array  dima  question  next  contains  initial  array  element  next  contains  dima  question  description  question  consists  question  inna  make  equal  perform  exercise  please  note  change  saved  question  question  question  print  inna  answer  single
1003/A __label__implementation  polycarp  ha  coin  value  coin  polycarp  want  distribute  coin  pocket  put  coin  value  pocket  example  polycarp  ha  got  coin  represented  array  distribute  coin  pocket  follows  polycarp  want  distribute  coin  minimum  used  pocket  help  input  contains  coin  second  input  contains  value  coin  print  minimum  pocket  polycarp  need  distribute  coin  coin  value  put  pocket
848/A __label__constructive  algorithms  beginning  till  end  message  ha  waiting  conveyed  given  unordered  multiset  lowercase  english  letter  multi  mean  letter  appear  treat  letter  string  length  repeat  following  operation  time  remove  element  set  add  concatenation  set  cost  operation  defined  denotes  time  character  appears  string  given  non  negative  construct  valid  non  empty  set  letter  minimum  accumulative  cost  whole  process  exactly  shown  solution  always  exists  input  contains  non  negative  required  minimum  cost  output  non  empty  string  lowercase  english  letter  multiset  satisfying  requirement  concatenated  string
1070/C __label__greedy  __label__data  structures  buber  berland  technology  company  specializes  waste  investor  money  recently  buber  decided  transfer  infrastructure  cloud  company  decided  rent  cpu  core  cloud  consecutive  day  numbered  buber  requires  cpu  core  day  cloud  provider  offer  tariff  plan  tariff  plan  characterized  following  parameter  tariff  plan  available  day  inclusive  core  per  day  available  rent  tariff  plan  price  renting  core  per  day  tariff  plan  buber  arbitrarily  share  computing  core  need  tariff  plan  every  day  buber  rent  arbitrary  core  available  plan  rented  core  tariff  plan  vary  arbitrarily  day  day  find  minimum  amount  money  buber  pay  work  day  day  total  core  available  tariff  plan  strictly  le  day  buber  work  fewer  core  rent  available  core  otherwise  buber  rent  exactly  core  day  input  contains  day  analyze  desired  daily  core  tariff  plan  following  description  tariff  plan  description  per  contains  starting  finishing  day  tariff  plan  core  price  single  core  daily  rent  tariff  plan  print  single  minimal  amount  money  buber  pay
1028/H __label__math  call  array  good  exist  index  perfect  square  given  array  action  perform  following  multiply  element  prime  divide  element  prime  divisible  let  minimum  action  needed  make  array  good  given  array  query  form  query  output  contains  length  array  query  second  contains  element  array  next  contains  parameter  query  output  answer  query  order  given  input
516/D __label__dp  __label__dfs  __label__trees  drazil  varda  earthworm  couple  want  find  good  place  bring  child  found  good  ground  containing  nature  hole  hole  contains  many  room  pair  room  connected  small  tunnel  earthworm  move  let  consider  room  small  tunnel  vertex  edge  graph  graph  tree  word  pair  vertex  ha  unique  path  room  leaf  graph  connected  ground  vertical  tunnel  leaf  vertex  ha  outgoing  edge  graph  room  large  enough  fit  earthworm  living  earthworm  live  tunnel  drazil  varda  plan  educate  child  want  child  morning  exercise  immediately  getting  morning  coming  earthworm  child  get  time  chooses  farthest  path  ground  gathering  others  child  lazy  want  exercise  late  possible  drazil  varda  want  difference  time  earthworm  child  arrives  outside  time  last  earthworm  child  arrives  outside  larger  otherwise  child  spread  around  ground  hard  keep  exercising  together  room  occupied  child  form  connected  set  word  room  occupied  earthworm  child  room  lie  path  occupied  earthworm  child  many  child  drazil  varda  order  satisfy  condition  drazil  varda  want  know  answer  many  different  choice  drazil  varda  live  hole  child  contains  denoting  many  room  hole  following  contains  denoting  small  tunnel  room  room  take  time  pas  suppose  time  earthworm  get  ground  leaf  room  next  contains  denoting  different  value  need  process  last  contains  denoting  value  print  denoting  answer  corresponding  value
89/E __label__greedy  fire  lord  attacked  frost  kingdom  ha  already  got  ice  fortress  snow  queen  dwells  arranged  army  segment  length  far  city  wall  frost  magician  solomon  save  frost  kingdom  long  segment  located  distance  equal  exactly  castle  wall  imaginarily  divided  unit  segment  unit  segment  fire  demon  located  demon  per  position  demon  characterised  strength  positive  regard  fire  demon  idle  initially  solomon  positioned  fortress  wall  perform  following  action  several  time  row  solomon  shift  unit  left  movement  performed  castle  wall  solomon  shift  unit  left  movement  performed  ice  block  right  nothing  right  solomon  solomon  creates  ice  block  immediately  freeze  block  solomon  currently  standing  already  ice  block  solomon  destroys  ice  block  right  destroyed  remain  left  unsupported  ice  block  fall  solomon  spends  exactly  second  action  result  solomon  action  ice  block  segment  fall  ice  block  fall  fire  demon  block  evaporates  demon  strength  reduced  demon  strength  equal  fire  demon  vanishes  picture  show  happens  ice  block  fall  position  demon  break  lot  tiny  piece  vanishes  without  hurting  anybody  help  solomon  destroy  fire  lord  army  minimum  time  contains  next  contains  represents  strength  fire  demon  standing  position  demon  position  equal  guaranteed  input  data  least  fire  demon  print  string  minimum  length  containing  character  succession  action  leading  required  result
700/D __label__greedy  __label__data  structures  alice  want  send  important  message  bob  message  sequence  positive  character  compress  message  alice  want  use  binary  huffman  coding  recall  binary  huffman  code  binary  prefix  code  function  map  letter  appears  string  binary  string  string  consisting  character  pair  different  character  string  prefix  vice  versa  result  encoding  message  concatenation  encoding  character  string  huffman  code  useful  compressed  message  easily  uniquely  decompressed  function  given  code  usually  chosen  order  minimize  total  length  compressed  message  length  string  security  issue  alice  want  send  whole  message  instead  pick  substring  message  want  send  separately  given  substring  ali  ari  want  know  minimum  possible  length  huffman  coding  help  solve  problem  input  contains  single  length  initial  message  second  contains  character  message  next  contains  single  query  follow  query  description  contains  ii  position  left  right  end  substring  respectively  position  numbered  substring  overlap  way  substring  appear  input  print  single  minimum  possible  length  huffman  encoding  substring  ali  ari
1244/G __label__math  __label__greedy  __label__constructive  algorithms  demonstrative  competition  held  run  nn  berlatov  olympic  game  today  day  running  competition  berlatov  team  consists  runner  placed  running  track  runner  placed  track  runner  numbered  track  runner  run  entire  track  second  competition  held  follows  runner  track  start  running  time  slower  arrives  end  track  second  runner  track  start  running  everyone  wait  slower  finish  running  pair  run  track  organizer  want  run  long  possible  last  second  crowd  get  bored  coach  team  choose  order  runner  arranged  track  change  runner  track  swap  runner  different  track  choose  order  runner  track  duration  competition  long  possible  doe  exceed  second  formally  want  find  permutation  consisting  element  sum  max  maximum  possible  doe  exceed  pair  report  contains  runner  track  maximum  possible  duration  competition  respectively  impossible  reorder  runner  duration  competition  doe  exceed  second  print
1237/C2 __label__implementation  __label__greedy  __label__sortings  __label__constructive  algorithms  __label__binary  search  harder  version  problem  version  n  distinct  point  dimensional  space  numbered  point  ha  coordinate  point  even  like  remove  point  using  sequence  snap  snap  remove  point  removed  form  perfectly  balanced  pair  pair  point  perfectly  balanced  point  ha  removed  lie  axis  aligned  minimum  bounding  box  point  formally  point  lie  axis  aligned  minimum  bounding  box  point  min  ax  min  min  ax  min  min  ax  min  note  bounding  box  might  degenerate  find  way  remove  point  snap  contains  single  even  denoting  point  next  contains  denoting  coordinate  point  point  coincide  output  pair  denoting  index  point  removed  snap  every  inclusive  must  appear  output  exactly
999/D __label__implementation  __label__greedy  __label__data  structures  given  array  consisting  positive  guaranteed  divisor  single  move  choose  position  increase  let  calculate  element  remainder  divided  word  remainder  let  find  corresponding  element  remainder  task  change  array  way  find  minimum  move  satisfy  requirement  input  contains  guaranteed  divisor  second  input  contains  element  array  print  single  minimum  move  required  satisfy  following  condition  remainder  element  array  remainder  equal
518/C __label__implementation  __label__data  structures  __label__constructive  algorithms  anya  ha  bought  new  smartphone  us  berdroid  operating  system  smartphone  menu  ha  exactly  application  application  ha  icon  icon  located  different  screen  screen  contains  icon  icon  located  screen  second  screen  last  screen  partially  empty  initially  smartphone  menu  showing  screen  launch  application  icon  located  screen  anya  need  make  following  gesture  scroll  required  screen  making  gesture  icon  screen  make  another  gesture  press  icon  required  application  exactly  launch  application  launched  menu  return  screen  launch  next  application  need  scroll  menu  starting  screen  application  numbered  know  certain  order  icon  application  located  menu  beginning  change  long  use  operating  system  berdroid  intelligent  system  change  order  icon  moving  frequently  used  icon  beginning  list  formally  right  application  launched  berdroid  swap  application  icon  icon  preceding  application  icon  application  position  smaller  order  menu  preceding  icon  possibly  located  adjacent  screen  exception  icon  launched  application  already  occupies  place  case  icon  arrangement  change  anya  ha  planned  order  launch  application  many  gesture  anya  make  launch  application  planned  order  note  application  launched  multiple  time  input  contains  application  anya  ha  smartphone  application  launched  icon  located  screen  next  contains  permutation  initial  order  icon  left  right  menu  last  application  whose  icon  go  menu  occurs  exactly  third  contains  id  launched  application  planned  order  application  launched  multiple  time  print  single  gesture  anya  need  make  launch  application  desired  order
363/A __label__implementation  know  japan  country  almost  largest  electronic  device  per  person  ratio  might  quite  surprised  find  primary  school  japan  teach  count  using  soroban  abacus  developed  japan  phenomenon  ha  reason  course  going  speak  let  look  soroban  construction  soroban  consists  rod  rod  contains  bead  assume  rod  horizontal  bead  rod  leftmost  divided  others  bar  reckoning  bar  single  bead  called  dama  others  ichi  dama  rod  responsible  representing  single  digit  obtain  value  digit  following  simple  algorithm  set  value  digit  equal  dama  shifted  right  add  add  ichi  dama  shifted  left  thus  upper  rod  picture  show  digit  middle  show  digit  lower  show  consider  top  rod  represent  last  decimal  digit  picture  show  write  program  print  way  soroban  show  given  contains  single  print  description  decimal  digit  last  mentioned  picture  statement  per  print  bead  large  english  letter  rod  piece  character  reckoning  bar  print  many  rod  many  digit  decimal  representation  without  leading  assume  ha  leading
1239/D __label__dfs  __label__graphs  catowice  city  next  weekend  cat  contest  held  jury  member  contestant  selected  resident  cat  catowice  resident  ha  exactly  cat  living  house  resident  cat  numbered  cat  living  house  resident  catowice  resident  friendship  several  cat  including  living  house  order  conduct  contest  least  jury  member  needed  least  cat  contestant  needed  course  every  jury  member  know  none  contestant  contest  successful  needed  jury  member  plus  contestant  equal  please  help  catowice  resident  select  jury  contestant  upcoming  competition  determine  impossible  contains  test  case  description  test  case  follow  description  follows  contains  catowice  resident  friendship  pair  resident  cat  next  contains  denoting  resident  acquaintance  cat  guaranteed  pair  resident  cat  listed  guaranteed  every  exists  pair  resident  cat  different  test  case  separated  empty  guaranteed  sum  test  case  sum  test  case  every  test  case  print
923/C __label__greedy  __label__data  structures  __label__trees  __label__strings  alice  ha  important  message  consisting  non  negative  want  keep  secret  eve  alice  know  theoretically  secure  cipher  time  pad  alice  generates  random  key  length  equal  message  length  alice  computes  bitwise  xor  element  message  key  denotes  bitwise  xor  operation  store  encrypted  message  alice  smart  like  alice  example  alice  wanted  store  message  generated  key  encrypted  message  thus  alice  realised  store  key  encrypted  message  alice  sent  key  bob  deleted  copy  alice  smart  really  like  alice  bob  realised  encrypted  message  secure  long  key  secret  bob  thus  randomly  permuted  key  storing  bob  think  way  even  eve  get  encrypted  message  key  able  read  message  bob  smart  like  bob  example  bob  instance  selected  permutation  stored  permuted  key  year  ha  passed  alice  want  decrypt  message  bob  ha  realised  impossible  ha  permuted  key  randomly  message  lost  forever  mention  bob  smart  bob  want  salvage  least  information  message  since  smart  asks  help  know  encrypted  message  permuted  key  lexicographically  smallest  message  could  resulted  given  encrypted  text  precisely  given  find  lexicographically  smallest  message  exists  permutation  every  note  sequence  lexicographically  smaller  sequence  index  condition  hold  contains  single  length  message  second  contains  representing  encrypted  message  third  contains  representing  permuted  encryption  key  output  single  lexicographically  smallest  possible  message  note  element  non  negative
451/B __label__implementation  __label__sortings  programmer  like  array  lot  birthday  friend  given  array  consisting  distinct  unfortunately  size  small  want  bigger  array  friend  agree  give  bigger  array  able  answer  following  question  correctly  possible  sort  array  increasing  order  reversing  exactly  segment  see  definition  segment  reversing  note  input  contains  size  array  second  contains  distinct  space  separated  print  yes  without  quote  depending  answer
583/A __label__implementation  city  consists  vertical  horizontal  infinite  road  forming  n  intersection  road  vertical  horizontal  numbered  intersection  indicated  road  form  sand  road  long  recognized  date  decision  wa  made  asphalt  team  worker  wa  hired  schedule  work  wa  made  according  intersection  asphalted  road  repair  planned  day  day  team  arrives  intersection  list  none  road  form  intersection  already  asphalted  asphalt  road  otherwise  team  leaf  intersection  without  anything  road  according  schedule  road  work  tell  day  least  road  asphalted  contains  vertical  horizontal  road  city  next  order  intersection  schedule  contains  separated  space  meaning  intersection  go  timetable  intersection  horizontal  vertical  road  guaranteed  intersection  timetable  distinct  single  print  day  road  work  progress  ascending  order  day  numbered  starting
582/E __label__dp  problem  consider  boolean  function  variable  variable  logical  take  value  define  function  using  following  grammar  expression  variable  expression  operator  expression  variable  operator  large  letter  represent  variable  small  letter  represent  negation  example  character  corresponds  value  value  character  corresponds  value  character  corresponds  operation  logical  character  corresponds  operation  logical  given  expression  defining  function  operation  variable  missing  know  value  function  distinct  set  variable  value  count  way  restore  element  missing  expression  resulting  expression  corresponded  given  information  function  given  variable  set  value  result  rather  large  print  remainder  modulo  contains  expression  character  operator  variable  replaced  character  second  contains  set  know  value  function  next  description  set  contains  separated  space  meaning  guaranteed  tuples  distinct  single  print  answer  problem
1210/F2 __label__brute  force  harder  version  problem  version  marek  working  hard  creating  strong  test  case  new  algorithmic  problem  want  know  nah  telling  tell  generates  test  case  marek  chooses  generates  random  bipartite  graph  vertex  vertex  left  side  vertex  right  side  put  edge  vertex  probability  percent  turn  test  strong  perfect  matching  exists  generated  graph  probability  occur  shown  value  represented  coprime  mod  let  mod  print  value  modulo  input  contains  single  following  describe  probability  edge  appearing  graph  contains  denotes  probability  percent  edge  appearing  print  single  probability  perfect  matching  exists  bipartite  graph  written  mod  defined
1167/E __label__data  structures  __label__binary  search  given  array  consisting  guaranteed  every  let  denote  function  era  value  array  return  resulting  array  example  task  calculate  pair  sorted  non  descending  order  note  empty  array  considered  sorted  contains  length  array  upper  limit  element  respectively  second  contains  print  pair  sorted  non  descending  order
1012/B __label__dfs  __label__graphs  __label__constructive  algorithms  innopolis  university  scientist  continue  investigate  periodic  table  known  element  form  periodic  table  rectangle  row  column  element  described  coordinate  table  recently  scientist  discovered  every  different  element  table  form  rectangle  side  parallel  side  table  sample  element  produce  sample  fourth  element  using  nuclear  fusion  element  position  r  c  produce  element  sample  used  fusion  wasted  used  future  fusion  newly  crafted  element  used  future  fusion  innopolis  university  scientist  already  sample  element  want  obtain  sample  element  achieve  purchase  sample  laboratory  produce  remaining  element  using  arbitrary  nuclear  fusion  order  help  find  minimal  element  need  purchase  contains  chemical  table  dimension  element  scientist  already  following  describes  element  scientist  already  element  input  different  print  minimal  element  purchased
962/D __label__implementation  __label__data  structures  given  array  positive  least  equal  element  perform  following  operation  choose  smallest  value  occurs  array  time  take  occurrence  array  leftmost  occurrence  remove  left  occurrence  right  replaced  sum  value  determine  array  look  described  operation  performed  example  consider  given  array  look  like  changed  following  way  given  array  look  like  changed  following  way  contains  single  element  array  second  contains  sequence  element  element  array  print  element  array  performed  operation  second  print  element  array  performed  operation
741/B __label__dp  __label__dfs  remind  girl  arpa  land  really  nice  mehrdad  want  invite  hose  palace  dancing  party  ho  ha  weight  beauty  ho  friend  hose  divided  friendship  group  hose  friendship  group  sequence  hose  friend  arpa  allowed  use  amphitheater  palace  mehrdad  party  arpa  amphitheater  hold  weight  mehrdad  greedy  want  invite  hose  sum  weight  greater  sum  beauty  large  possible  along  friendship  group  either  invite  hose  otherwise  hose  hurt  find  mehrdad  maximum  possible  total  beauty  hose  invite  get  hurt  total  weight  exceed  contains  hose  pair  friend  maximum  total  weight  invited  second  contains  weight  hose  third  contains  beauty  hose  next  pair  friend  contains  xii  meaning  hose  friend  note  friendship  bidirectional  pair  distinct  print  maximum  possible  total  beauty  hose  mehrdad  invite  get  hurt  total  weight  exceed
1252/K __label__math  __label__data  structures  adding  several  time  time  consuming  task  want  build  robot  robot  string  character  memory  represents  addition  instruction  character  string  either  want  able  give  command  robot  command  either  following  type  robot  toggle  character  l  toggling  character  mean  changing  wa  previously  changing  wa  previously  robot  call  return  defined  following  pseudocode  function  else  return  want  implement  robot  expected  behavior  begin  containing  q  representing  character  robot  memory  command  respectively  next  contains  string  containing  character  either  representing  initial  string  robot  memory  next  contains  command  following  type  least  command  second  type  command  second  type  order  input  output  separated  single  space  value  returned  respectively  output  large  need  modulo  output
1154/C __label__math  __label__implementation  polycarp  ha  cat  cat  real  gourmet  dependent  day  week  eats  certain  type  food  monday  thursday  sunday  eats  fish  food  tuesday  saturday  eats  rabbit  stew  day  week  eats  chicken  stake  polycarp  plan  trip  already  packed  backpack  backpack  contains  daily  ration  fish  food  daily  ration  rabbit  stew  daily  ration  chicken  stake  polycarp  ha  choose  day  week  start  trip  cat  eat  without  additional  food  purchase  long  possible  print  maximum  day  cat  eat  trip  without  additional  food  purchase  polycarp  chooses  day  week  start  trip  optimally  input  contains  positive  daily  ration  fish  food  rabbit  stew  chicken  stake  polycarp  backpack  correspondingly  print  maximum  day  cat  eat  trip  without  additional  food  purchase  polycarp  chooses  day  week  start  trip  optimally
383/C __label__data  structures  __label__dfs  __label__trees  iahub  like  tree  much  recently  discovered  interesting  tree  named  propagating  tree  tree  consists  node  numbered  node  initial  value  root  tree  node  tree  ha  special  property  value  val  added  value  node  value  val  added  value  child  node  note  add  value  val  child  node  add  val  child  child  node  look  example  explanation  understand  better  work  tree  support  type  query  val  val  added  value  node  print  current  value  node  order  help  iahub  understand  tree  better  must  answer  query  preceding  type  contains  second  contains  next  contains  meaning  edge  node  next  contains  query  format  described  guaranteed  following  constraint  hold  query  al  query  type  print  value  node  must  print  answer  query  separate  query  must  answered  order  given  input
620/A __label__math  __label__implementation  professor  gukiz  make  new  robot  robot  point  coordinate  point  single  step  robot  change  coordinate  maybe  decrease  increase  robot  move  direction  find  minimal  step  robot  make  get  finish  position  contains  start  position  robot  second  contains  finish  position  robot  print  minimal  step  get  finish  position
454/B __label__implementation  day  twilight  sparkle  interested  sort  sequence  non  decreasing  order  young  unicorn  operation  perform  unit  shift  move  last  element  sequence  beginning  nn  help  twilight  sparkle  calculate  minimum  operation  need  sort  sequence  contains  second  contains  impossible  sort  sequence  output  otherwise  output  minimum  operation  twilight  sparkle  need  sort
582/A __label__greedy  __label__constructive  algorithms  __label__number  theory  gcd  table  size  n  array  positive  length  defined  formula  let  remind  greatest  common  divisor  gcd  positive  greatest  divisor  denoted  example  array  length  gcd  table  look  follows  given  gcd  table  restore  array  contains  length  array  second  contains  space  separated  element  gcd  table  array  table  positive  exceeding  note  element  given  arbitrary  order  guaranteed  set  input  data  corresponds  array  single  print  positive  element  array  multiple  possible  solution  allowed  print
786/E __label__data  structures  __label__graphs  __label__trees  alt  planet  galaxy  called  encore  human  rule  planet  reason  dog  planet  people  sad  depressed  rick  morty  universal  philanthropist  want  make  people  alt  happy  alt  ha  city  numbered  bidirectional  road  numbered  city  city  using  road  type  people  alt  guardian  guardian  life  house  alongside  road  guard  road  citizen  citizen  life  house  inside  city  work  office  another  city  every  person  alt  either  guardian  citizen  exactly  guardian  alongside  road  rick  morty  talked  people  alt  got  citizen  living  alt  citizen  life  city  work  city  every  day  citizen  road  along  shortest  path  home  work  citizen  happy  either  ha  puppy  guardian  along  path  work  ha  puppy  see  guardian  puppy  road  happy  guardian  always  happy  need  tell  rick  morty  minimum  puppy  need  order  make  people  alt  happy  provide  optimal  way  distribute  puppy  input  contains  city  citizen  respectively  next  road  contains  endpoint  edge  v  next  information  citizen  contains  xii  input  print  single  total  puppy  need
463/A __label__implementation  __label__brute  force  caisa  going  party  need  buy  ingredient  big  chocolate  cake  going  biggest  supermarket  town  unfortunately  ha  dollar  sugar  reason  sad  type  sugar  supermarket  maybe  able  buy  supermarket  ha  unusual  exchange  politics  instead  cent  seller  give  sweet  buyer  change  course  given  sweet  always  exceed  seller  maximizes  dollar  change  cent  replaced  dollar  caisa  want  buy  type  sugar  want  maximize  sweet  change  maximum  sweet  get  note  caisa  want  minimize  cost  sugar  want  get  maximum  sweet  change  contains  space  separated  next  contains  represents  dollar  cent  needed  order  buy  type  sugar  print  single  representing  maximum  sweet  buy  buy  type  sugar
372/C __label__math  __label__dp  __label__data  structures  festival  held  town  main  street  section  main  street  section  numbered  left  right  distance  adjacent  section  festival  firework  launched  launching  time  section  section  time  launching  gain  happiness  value  note  happiness  value  might  negative  value  move  length  unit  unit  time  interval  prohibited  main  street  arbitrary  section  initial  time  moment  time  equal  want  maximize  sum  happiness  gained  watching  firework  find  maximum  total  happiness  note  firework  launched  time  contains  next  contains  contains  description  launching  guaranteed  condition  tii  satisfied  print  single  maximum  sum  happiness  gain  watching  firework
715/A __label__math  __label__constructive  algorithms  coder  playing  game  displayed  screen  button  plus  square  root  initially  displayed  screen  level  game  coder  start  level  coder  level  press  button  increase  screen  exactly  screen  wa  becomes  press  button  let  screen  pressing  button  becomes  coder  level  current  level  becomes  button  pressed  perfect  square  positive  additionally  move  coder  level  screen  must  multiple  note  condition  checked  performing  press  example  coder  level  current  press  button  turn  note  moment  divisible  press  still  valid  coder  level  divisible  coder  need  help  beating  game  want  reach  level  word  need  press  button  time  help  determine  time  press  button  pressing  button  level  please  note  coder  want  find  sequence  press  allowing  reach  level  necessarily  sequence  minimizing  press  input  contains  single  denoting  coder  want  reach  level  print  non  negative  per  equal  time  coder  need  press  button  pressing  button  level
1249/B1 __label__math  difference  easy  hard  version  constraint  kid  reading  unique  book  end  day  kid  give  book  kid  case  kid  give  book  guaranteed  value  distinct  permutation  sequence  change  day  day  fixed  example  end  day  book  kid  belong  kid  kid  belong  kid  end  second  day  book  kid  belong  kid  kid  belong  kid  task  determine  day  book  child  returned  back  time  every  consider  following  example  book  kid  passed  following  kid  day  belong  kid  day  belong  kid  day  belong  kid  day  belong  kid  fourth  day  book  kid  return  owner  book  fourth  kid  return  time  exactly  day  answer  independent  query  input  contains  query  query  follow  query  contains  kid  query  second  query  contains  distinct  permutation  kid  get  book  kid  query  print  answer  day  book  child  returned  back  time  query
978/B __label__greedy  __label__strings  take  file  send  polycarp  trying  send  file  social  network  codehorses  encountered  unexpected  problem  name  file  contains  lowercase  latin  letter  row  system  considers  file  content  doe  correspond  social  network  topic  case  file  sent  error  message  displayed  determine  minimum  character  remove  file  name  name  doe  xxx  substring  print  file  name  doe  initially  forbidden  substring  xxx  delete  character  arbitrary  position  necessarily  consecutive  delete  character  length  string  reduced  example  delete  character  position  string  exxxii  resulting  string  exxii  contains  length  file  name  second  contains  string  length  consisting  lowercase  latin  letter  file  name  print  minimum  character  remove  file  name  name  doe  xxx  substring  initially  file  name  dost  forbidden  substring  xxx  print
644/C __label__implementation  __label__data  structures  __label__sortings  __label__strings  __label__binary  search  website  accessible  several  different  address  example  long  time  codeforces  wa  accessible  hostnames  codeforces  com  codeforces  given  list  page  address  queried  simplicity  consider  address  form  http  hostname  path  hostname  server  name  consists  word  maybe  dot  separating  path  optional  part  path  consists  word  separated  slash  consider  hostname  correspond  website  query  hostname  exactly  query  second  vice  versa  query  second  hostname  query  take  look  sample  clarification  goal  determine  group  server  name  correspond  website  ignore  group  consisting  server  name  please  note  according  definition  query  http  hostname  http  hostname  different  input  contains  single  page  query  follow  containing  exactly  address  address  form  http  hostname  path  hostname  consists  lowercase  english  letter  dot  consecutive  dot  hostname  start  finish  dot  length  hostname  positive  exceed  path  consists  lowercase  english  letter  dot  slash  consecutive  slash  path  start  slash  length  exceed  address  guaranteed  distinct  print  group  server  name  correspond  website  count  group  size  greater
446/C __label__math  __label__data  structures  __label__number  theory  mathematical  term  sequence  fibonacci  defined  recurrence  relation  dzy  love  fibonacci  much  today  dzy  give  array  consisting  moreover  query  query  ha  type  format  query  reply  query  need  add  element  l  format  query  reply  query  output  value  modulo  help  dzy  reply  query  input  contains  second  contains  initial  array  follow  single  describes  single  query  format  given  statement  guaranteed  query  inequality  hold  query  second  type  print  value  sum  single
796/D __label__dp  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  inzane  finally  found  zane  lot  money  spare  together  decided  establish  country  ruling  country  easy  job  thief  terrorist  always  ready  ruin  country  peace  fight  back  zane  inzane  enacted  effective  law  city  must  possible  reach  police  station  traveling  kilometer  along  road  city  country  numbered  connected  exactly  road  road  kilometer  long  initially  possible  travel  city  city  using  road  country  ha  police  station  located  city  particular  city  structure  satisfies  requirement  enforced  previously  mentioned  law  note  multiple  police  station  city  zane  feel  like  many  road  unnecessary  country  financial  issue  want  minimize  road  maintenance  cost  shutting  many  road  possible  help  zane  find  maximum  road  shut  without  breaking  law  help  determine  road  contains  city  police  station  distance  limitation  kilometer  respectively  second  contains  denoting  city  police  station  located  following  contains  uii  city  directly  connected  road  index  guaranteed  possible  travel  city  city  using  road  possible  city  reach  police  station  kilometer  print  denotes  maximum  road  shut
445/A __label__implementation  __label__dfs  dzy  love  chessboard  enjoys  playing  ha  chessboard  row  column  cell  chessboard  bad  others  good  every  good  cell  dzy  want  put  chessman  chessman  either  white  black  putting  chessman  dzy  want  chessman  color  adjacent  cell  cell  adjacent  share  common  edge  task  find  suitable  placement  chessman  given  chessboard  contains  space  separated  next  contains  string  character  character  string  either  mean  corresponding  cell  row  column  good  mean  bad  output  must  must  string  character  character  string  either  character  mean  chessman  cell  white  mean  black  mean  cell  bad  cell
515/C __label__math  __label__greedy  __label__sortings  drazil  playing  math  game  varda  let  define  positive  product  factorial  digit  example  choose  decimal  consisting  digit  contains  least  digit  larger  possibly  start  leading  find  maximum  positive  satisfying  following  condition  neither  digit  digit  help  friend  find  contains  digit  second  contains  digit  least  digit  larger  possibly  leading  output  maximum  possible  satisfying  condition  decimal  representation
934/B __label__implementation  __label__constructive  algorithms  apart  nian  daemon  named  sui  terrifies  child  cause  become  sick  parent  give  child  money  wrapped  red  packet  put  pillow  sui  try  approach  driven  away  fairy  inside  big  banban  hesitating  amount  money  give  considers  loop  lucky  since  symbolizes  unity  harmony  would  like  find  positive  greater  exactly  loop  decimal  representation  determine  doe  exist  loop  planar  area  enclosed  digit  decimal  representation  written  arabic  numeral  example  loop  digit  loop  loop  refer  figure  exact  form  contains  desired  loop  output  exists  output  otherwise  output  latter  case  output  positive  decimal  exceeding
414/B __label__dp  __label__number  theory  mashmokh  bos  bimokh  like  mashmokh  fired  mashmokh  decided  university  participate  acm  instead  finding  new  job  want  become  member  bamokh  team  order  join  wa  given  programming  task  week  solve  mashmokh  experienced  programmer  actually  programmer  able  solve  asked  help  task  task  following  sequence  l  called  good  divide  without  remainder  next  sequence  formally  given  find  good  sequence  length  answer  rather  large  print  modulo  input  contains  space  separated  output  single  good  sequence  length  modulo
937/A __label__implementation  __label__sortings  recent  berland  olympiad  informatics  featured  participant  scoring  certain  amount  point  head  programming  committee  determine  set  participant  awarded  diploma  respect  following  criterion  least  participant  get  diploma  none  score  equal  get  awarded  someone  awarded  participant  score  le  score  awarded  determine  way  choose  subset  participant  receive  diploma  contains  single  participant  next  contains  sequence  participant  score  guaranteed  least  participant  ha  non  score  print  single  desired  way
875/B __label__implementation  __label__sortings  recently  dima  met  sasha  philatelic  store  since  collecting  coin  together  favorite  occupation  sort  collection  coin  sasha  like  thing  order  want  coin  arranged  row  way  firstly  come  coin  circulation  come  coin  still  circulation  arranging  coin  dima  us  following  algorithm  step  algorithm  look  like  following  look  coin  left  right  see  coin  still  circulation  coin  already  circulation  exchange  coin  continues  watching  coin  dima  repeat  procedure  happens  coin  exchanged  procedure  dima  call  hardness  ordering  step  required  according  algorithm  sort  sequence  time  look  coin  beginning  example  ordered  sequence  hardness  ordering  equal  today  sasha  invited  dima  proposed  game  put  coin  row  circulation  sasha  chooses  coin  circulation  replaces  coin  circulation  time  process  sasha  constantly  asks  dima  hardness  ordering  sequence  task  complicated  dima  touch  coin  determine  hardness  ordering  mind  help  dima  task  contains  single  coin  sasha  put  behind  dima  second  contains  distinct  position  sasha  put  coin  circulation  sasha  replaces  coin  located  position  coin  located  position  coin  numbered  left  right  print  hardness  ordering  beginning  hardness  ordering  replacement
894/E __label__dp  __label__graphs  ralph  going  collect  mushroom  mushroom  forest  directed  path  connecting  tree  mushroom  forest  path  grow  mushroom  ralph  pass  path  collect  mushroom  path  mushroom  forest  ha  magical  fertile  ground  mushroom  grow  fantastic  speed  new  mushroom  regrow  soon  ralph  finish  mushroom  collection  path  specifically  ralph  pass  path  time  regrow  mushroom  le  wa  pas  initially  mushroom  path  ralph  collect  mushroom  time  mushroom  second  time  mushroom  third  time  mushroom  never  le  example  let  mushroom  path  initially  mushroom  collected  path  ralph  pass  fourth  time  fifth  time  later  ralph  collect  mushroom  path  still  pas  ralph  decided  start  tree  many  mushroom  collect  using  described  path  contains  representing  tree  directed  path  mushroom  forest  respectively  following  contains  denoting  path  lead  tree  tree  mushroom  initially  path  lead  tree  multiple  path  pair  tree  last  contains  single  starting  position  ralph  print  denoting  maximum  mushroom  ralph  collect  route
477/D __label__dp  __label__strings  dreamoon  saw  large  written  ground  want  print  binary  form  dreamoon  ha  accomplished  part  turning  binary  format  going  print  following  manner  ha  perform  following  operation  order  unlimited  time  print  binary  form  without  leading  print  append  right  previous  print  increase  let  define  ideal  sequence  sequence  operation  successfully  print  binary  representation  without  leading  end  print  operation  operation  dreamoon  want  know  many  different  ideal  sequence  length  operation  shortest  ideal  sequence  answer  might  large  please  print  modulo  let  define  string  representation  ideal  sequence  string  character  string  match  operation  performed  ideal  sequence  called  different  string  representation  different  single  input  contains  binary  representing  without  leading  output  representing  different  ideal  sequence  modulo
754/A __label__implementation  __label__greedy  __label__constructive  algorithms  spring  day  way  university  lesha  found  array  lesha  like  split  array  several  part  time  lesha  decided  split  array  several  possibly  new  array  sum  element  new  array  condition  place  new  array  another  form  old  array  lesha  tired  asked  split  array  help  lesha  contains  single  element  array  next  contains  element  array  possible  split  array  satisfy  constraint  print  single  containing  without  quote
815/C __label__dp  __label__trees  __label__brute  force  way  home  karen  decided  stop  supermarket  buy  grocery  need  buy  lot  good  since  student  budget  still  quite  limited  fact  spend  dollar  supermarket  sell  good  good  bought  dollar  course  good  bought  lately  supermarket  ha  trying  increase  business  karen  loyal  customer  wa  given  coupon  karen  purchase  good  use  coupon  decrease  price  course  coupon  used  without  buying  corresponding  good  constraint  coupon  order  use  coupon  karen  must  use  coupon  mean  using  even  coupon  satisfy  requirement  coupon  karen  want  know  following  maximum  good  buy  without  exceeding  budget  input  contains  good  store  amount  money  karen  ha  respectively  next  describe  item  specifically  start  price  good  discount  using  coupon  good  respectively  followed  another  denoting  coupon  must  used  coupon  used  output  single  different  good  karen  buy  without  exceeding  budget
958/E3 __label__geometry  heidi  know  assign  rebel  spaceship  base  recall  easy  subtask  asking  exactly  given  position  spaceship  base  plane  task  connect  spaceship  base  segment  segment  intersect  connection  form  perfect  matching  contains  contains  denoting  coordinate  spaceship  following  format  denoting  position  base  guaranteed  point  coincide  point  output  index  base  spaceship  connected  sequence  form  permutation
528/D __label__brute  force  leonid  work  small  promising  start  work  decoding  human  genome  duty  include  solving  complex  problem  finding  certain  pattern  long  string  consisting  letter  let  consider  following  scenario  fragment  human  dna  chain  recorded  string  analyze  fragment  need  find  occurrence  string  string  matter  complicated  fact  original  chain  fragment  could  minor  mutation  complicate  task  finding  fragment  leonid  proposed  following  approach  solve  problem  let  write  k  error  threshold  say  string  occurs  string  position  putting  string  along  position  character  string  corresponds  character  value  string  distance  formally  must  exist  example  corresponding  given  definition  string  acat  occurs  string  agcaattcat  position  note  given  definition  transforms  simple  definition  occurrence  string  string  help  leonid  calculating  many  position  given  string  occurs  given  string  given  error  threshold  contains  length  string  error  threshold  second  contains  string  third  contains  string  string  consist  uppercase  letter  print  single  occurrence  error  threshold  given  definition
407/A __label__math  __label__implementation  __label__brute  force  __label__geometry  right  triangle  leg  length  task  determine  whether  possible  locate  triangle  plane  way  none  side  parallel  coordinate  ax  vertex  must  coordinate  exists  location  output  appropriate  coordinate  vertex  contains  separated  single  space  print  either  yes  without  quote  depending  whether  required  location  exists  doe  print  next  pair  coordinate  triangle  vertex  pair  per  coordinate  must  exceeding  absolute  value
915/G __label__math  __label__number  theory  let  call  array  size  coprime  iff  gcd  gcd  greatest  common  divisor  argument  given  determine  coprime  array  size  every  j  since  answer  large  calculate  modulo  contains  size  desired  array  maximum  upper  bound  element  respectively  since  printing  take  lot  time  output  answer  way
837/F __label__math  __label__brute  force  __label__binary  search  consider  function  array  return  array  consisting  equal  sum  element  array  infinite  sequence  array  given  input  positive  find  minimum  possible  contains  larger  equal  contains  size  array  second  contains  n  element  least  element  positive  print  minimum  contains  larger  equal
385/D __label__dp  __label__geometry  day  bear  lived  oxy  axis  wa  afraid  dark  move  night  along  plane  point  lit  day  bear  wanted  night  walk  house  point  friend  house  point  along  segment  length  course  want  make  walk  need  point  segment  lit  bear  called  friend  yes  middle  night  asking  delicate  favor  oxy  axis  contains  floodlight  floodlight  point  light  angle  plane  large  degree  vertex  point  bear  asked  friend  turn  floodlight  bear  could  far  away  house  possible  walking  along  segment  kind  friend  agreed  fulfill  request  bear  wonder  furthest  away  house  hep  find  distance  consider  plane  ha  obstacle  light  source  besides  floodlight  bear  friend  turn  floodlight  bear  walk  assume  floodlight  turned  correct  direction  bear  go  walk  friend  go  bed  contains  space  separated  next  space  separated  floodlight  description  note  floodlight  point  plane  print  single  real  answer  problem  answer  considered  correct  relative  absolute  error  exceed
868/C __label__dp  __label__constructive  algorithms  __label__brute  force  snark  philip  preparing  problemset  upcoming  pre  qualification  round  semi  quarter  final  bank  problem  want  select  non  empty  subset  problemset  experienced  team  participating  contest  team  already  know  problem  make  contest  interesting  team  know  half  selected  problem  determine  snark  philip  make  interesting  problemset  contains  problem  experienced  team  next  contains  equal  team  know  problem  otherwise  print  yes  quote  clarity  possible  make  interesting  problemset  otherwise
524/F __label__greedy  __label__data  structures  __label__strings  polycarpus  ha  finite  sequence  opening  closing  bracket  order  fall  asleep  lecture  polycarpus  fun  sequence  able  perform  operation  adding  bracket  position  beginning  end  existing  bracket  cyclic  shift  moving  last  bracket  end  sequence  beginning  polycarpus  apply  operation  sequence  adding  cyclic  shift  order  result  want  get  correct  bracket  sequence  minimum  possible  length  several  sequence  polycarpus  interested  lexicographically  smallest  help  find  sequence  acorrect  bracket  sequence  sequence  opening  closing  bracket  get  correct  arithmetic  expression  adding  character  opening  bracket  must  correspond  closed  example  sequence  correct  sequence  lexicographically  smaller  sequence  thatak  consider  contains  polycarpus  sequence  consisting  character  length  print  correct  bracket  sequence  minimum  length  polycarpus  obtain  operation  multiple  sequence  print  lexicographically  minimum
1136/C __label__sortings  __label__constructive  algorithms  nastya  came  informatics  lesson  teacher  way  little  bit  famous  gave  following  task  matrix  given  ha  size  nm  nastya  perform  following  operation  matrix  unlimited  time  take  square  square  submatrix  transpose  element  submatrix  wa  row  column  submatrix  row  column  transposing  transposed  submatrix  keep  place  matrix  nastya  task  check  whether  possible  transform  matrix  matrix  example  operation  require  lot  operation  asked  answer  question  nastya  square  submatrix  matrix  matrix  consist  element  come  row  indeces  matrix  come  column  indeces  matrix  size  square  submatrix  word  square  submatrix  set  element  source  matrix  form  solid  square  without  hole  contains  separated  space  row  column  respectively  next  contains  denotes  element  row  matrix  next  contains  denotes  element  row  matrix  print  yes  without  quote  possible  transform  without  quote  otherwise
1137/B __label__greedy  __label__strings  new  camp  widely  known  country  spring  programming  camp  going  start  soon  hence  team  friendly  curator  teacher  started  composing  camp  schedule  continuous  discussion  came  schedule  represented  binary  string  symbol  student  write  contest  day  day  last  moment  gleb  said  camp  productive  run  schedule  described  format  schedule  since  day  current  different  day  schedule  gleb  required  camp  schedule  must  altered  occurrence  substring  maximum  possible  time  contest  day  day  change  order  change  could  rearrange  schedule  best  possible  way  contains  string  denoting  current  project  camp  schedule  second  contains  string  denoting  optimal  schedule  according  gleb  string  character  print  schedule  largest  substring  equal  printed  schedule  consist  character  equal  equal
1042/E __label__math  __label__dp  vasya  ha  got  magic  matrix  size  nm  row  matrix  numbered  top  bottom  column  numbered  left  right  let  element  intersection  row  column  vasya  ha  got  chip  initially  chip  intersection  row  column  element  vasya  performs  following  process  long  possible  element  matrix  value  le  value  element  chip  vasya  randomly  equiprobably  chooses  element  move  chip  element  moving  chip  add  score  square  euclidean  distance  element  element  chip  element  chip  wa  moved  process  end  element  value  le  value  element  chip  euclidean  distance  matrix  element  coordinate  equal  calculate  expected  value  vasya  final  score  shown  answer  represented  coprime  mod  print  value  modulo  input  contains  row  column  matrix  following  description  matrix  contains  following  contains  index  row  index  column  chip  print  expected  value  vasya  final  score  format  described  problem  statement
799/A __label__implementation  __label__brute  force  game  playrix  take  minute  oven  bake  carrot  cake  cake  ready  moment  minute  started  baking  arkady  need  least  cake  complete  task  currently  ha  infinitely  many  ingredient  oven  moreover  arkady  build  similar  oven  make  process  faster  would  take  minute  build  oven  new  oven  built  old  bake  cake  new  oven  built  oven  bake  simultaneously  arkady  build  oven  determine  reasonable  build  second  oven  decrease  minimum  time  needed  get  cake  time  needed  second  oven  oven  unreasonable  contains  cake  needed  time  needed  oven  bake  cake  cake  baked  time  time  needed  build  second  oven  reasonable  build  second  oven  print  yes  otherwise  print
487/E __label__data  structures  __label__dfs  __label__graphs  __label__trees  city  cyberland  numbered  connected  bidirectional  road  road  connects  city  tourist  souvenir  sold  every  city  cyberland  particular  city  sell  price  query  handle  type  query  price  city  changed  tourist  travel  city  choose  route  want  visit  city  twice  buy  souvenir  city  souvenir  cheapest  possibly  exactly  city  output  minimum  possible  price  buy  souvenir  travel  formally  define  route  follow  route  sequence  city  certain  positive  ij  road  connecting  minimum  price  route  min  wx  x  xk  required  answer  minimum  value  minimum  price  valid  route  input  contains  separated  single  space  next  next  pair  space  separated  j  j  jj  guaranteed  road  connecting  pair  city  always  least  valid  route  city  next  describe  query  format  query  type  output  corresponding  answer
1216/A __label__strings  nikolay  got  string  even  length  consists  lowercase  latin  letter  position  numbered  want  modify  string  every  prefix  even  length  ha  equal  amount  letter  achieve  nikolay  perform  following  operation  arbitrary  time  possibly  choose  position  string  replace  letter  position  letter  replace  replace  nikolay  use  letter  except  prefix  string  length  string  example  string  abba  prefix  even  length  second  abba  task  calculate  minimum  operation  nikolay  ha  perform  string  modify  every  prefix  even  length  ha  equal  amount  letter  input  contains  even  length  string  second  input  contains  string  length  consists  lowercase  latin  letter  print  minimum  operation  nikolay  ha  perform  string  modify  every  prefix  even  length  ha  equal  amount  letter
729/C __label__greedy  __label__sortings  __label__binary  search  vasya  currently  car  rental  service  want  reach  cinema  film  ha  bought  ticket  start  minute  straight  road  length  service  cinema  let  introduce  coordinate  system  car  rental  service  point  cinema  point  gas  station  along  road  fill  car  amount  fuel  free  consider  operation  take  time  carried  instantly  car  rental  service  characterized  price  car  rent  capacity  fuel  tank  liter  allowed  fuel  car  fuel  tank  capacity  car  completely  fueled  car  rental  service  car  driven  speed  mode  normal  accelerated  normal  mode  car  cover  kilometer  minute  consumes  liter  fuel  accelerated  mode  car  cover  kilometer  minute  consumes  liter  fuel  driving  mode  changed  moment  time  task  choose  car  minimum  price  vasya  reach  cinema  show  start  later  minute  assume  car  completely  fueled  initially  contains  positive  car  car  rental  service  gas  station  along  road  length  road  time  film  start  next  contains  positive  price  car  fuel  tank  capacity  next  contains  distinct  position  gas  station  road  arbitrary  order  print  minimum  rent  price  appropriate  car  car  vasya  able  reach  cinema  film  start  later  minute  appropriate  car  print
892/A __label__implementation  __label__greedy  jafar  ha  cola  described  remaining  volume  cola  capacity  jafar  ha  decided  pour  remaining  cola  determine  input  contains  cola  second  contains  space  separated  volume  remaining  cola  third  contains  space  separated  aii  capacity  print  yes  without  quote  possible  pour  remaining  cola  otherwise  print  without  quote
1252/E __label__greedy  andi  mathematician  computer  scientist  songwriter  spending  much  time  writing  song  finally  writes  catchy  melody  thought  best  creation  singer  sing  song  melody  ha  unique  vocal  range  thus  adjustment  needed  melody  defined  sequence  note  represented  let  original  melody  written  andi  andi  need  adjust  new  melody  every  difference  successive  note  larger  moreover  singer  requires  note  vocal  range  help  andi  determine  whether  exists  find  lexicographically  smallest  exists  melody  lexicographically  smaller  melody  exists  example  consider  melody  shown  following  figure  diagonal  arrow  figure  implies  straight  right  arrow  implies  diagonal  arrow  implies  supposed  want  make  new  melody  new  melody  shown  figure  satisfies  requirement  lexicographically  smallest  possible  begin  containing  representing  note  melody  vocal  range  maximum  difference  successive  note  new  melody  respectively  next  contains  representing  original  melody  output  separated  single  space  representing  lexicographically  smallest  melody  satisfying  requirement  output  melody  satisfying  requirement  note  might  possible  lexicographically  smallest  melody  satisfies  requirement  original  melody
1060/A __label__brute  force  let  call  string  phone  ha  length  fit  pattern  xxxxxxxxxx  replaced  digit  example  phone  card  digit  want  use  make  many  phone  possible  card  must  used  phone  use  card  phone  necessarily  distinct  contains  card  digit  second  contains  string  digit  character  string  character  leading  trailing  space  least  phone  made  card  output  maximum  phone  made  otherwise  output
1117/E __label__math  __label__constructive  algorithms  interactive  problem  remember  flush  output  communicating  testing  program  use  fflush  stdout  system  flush  java  stdout  flush  python  flush  output  pascal  flush  output  use  programming  language  consult  documentation  refer  guide  interactive  problem  http  codeforces  com  blog  entry  given  string  consisting  lowercase  latin  letter  string  wa  cyphered  follows  initially  jury  string  consisting  lowercase  latin  letter  applied  sequence  possibly  operation  operation  denoted  mean  swapping  element  string  index  operation  done  order  placed  sequence  example  xyz  following  operation  performed  operation  current  string  yxz  second  operation  current  string  yzx  yzx  asked  restore  original  string  unfortunately  information  operation  used  algorithm  even  know  operation  sequence  run  sequence  operation  string  want  provided  contains  lowercase  latin  letter  length  get  resulting  string  operation  guess  original  string  asking  testing  system  run  sequence  swap  time  string  sequence  swap  fixed  test  interactor  try  adapt  test  solution  initially  testing  system  sends  string  consisting  lowercase  latin  letter  give  answer  program  print  break  end  flush  output  terminate  gracefully
637/D __label__dp  __label__greedy  __label__data  structures  sportsman  start  point  xstart  run  point  coordinate  xfinish  straight  sportsman  jump  jump  take  run  length  le  meter  case  meter  path  obstacle  jump  length  meter  running  jumping  permitted  direction  left  right  start  andfinish  jump  point  coordinate  obstacle  overcome  obstacle  necessary  land  point  strictly  right  obstacle  way  athlete  obstacle  coordinate  obstacle  jump  task  determine  whether  athlete  able  get  finish  point  input  containsd  obstacle  runner  way  coordinate  finishing  point  length  running  jump  maximum  length  jump  correspondingly  second  contains  sequence  coordinate  obstacle  guaranteed  starting  finishing  point  obstacle  point  obstacle  coordinate  obstacle  given  arbitrary  order  runner  reach  finishing  point  print  output  impossible  without  quote
520/A __label__implementation  __label__strings  word  sentence  language  called  pangram  character  alphabet  language  appear  least  pangrams  often  used  demonstrate  font  printing  test  output  device  given  string  consisting  lowercase  uppercase  latin  letter  check  whether  string  pangram  say  string  contains  letter  latin  alphabet  letter  occurs  string  uppercase  lowercase  contains  single  character  string  second  contains  string  string  consists  uppercase  lowercase  latin  letter  output  yes  string  pangram  otherwise
1218/A __label__dp  __label__graphs  charge  bubblereactor  consists  bubblecores  connected  electrical  wiring  electrical  wiring  connects  distinct  bubblecores  bubblecores  connected  electrical  wiring  task  start  bubblereactor  starting  bubblecore  order  bubblecore  started  need  receiving  power  directly  connected  bubblecore  already  started  kick  start  bubblecore  manually  without  needing  power  guaranteed  bubblecores  started  bubblecore  boot  procedure  potential  calculated  bubblecores  power  inactive  bubblecores  connected  directly  inactive  bubblecores  included  start  bubblereactor  sum  bubblecores  potential  maximum  contains  bubblecores  following  denoting  exists  electrical  wiring  bubblecores  single  maximum  sum  bubblecores  potential
126/D __label__math  __label__dp  fibonacci  following  form  let  consider  non  empty  set  consisting  different  fibonacci  let  find  sum  value  set  element  let  call  set  decomposition  fibonacci  sum  easy  see  several  several  decomposition  fibonacci  sum  example  decomposition  decomposition  given  determine  possible  different  decomposition  fibonacci  sum  contains  test  following  contains  test  test  please  use  lld  specificator  read  write  bit  preferred  use  cin  cout  stream  specificator  input  data  test  print  single  single  answer  problem
988/C __label__implementation  __label__sortings  given  sequence  length  sequence  equal  choose  exactly  sequence  remove  exactly  element  way  sum  changed  sequence  length  equal  equal  sum  changed  sequence  length  equal  note  required  remove  exactly  element  chosen  sequence  assume  sum  empty  length  equal  sequence  contains  sequence  pair  follow  pair  containing  sequence  pair  contains  length  sequence  second  pair  contains  sequence  element  sequence  sum  length  given  sequence  exceed  impossible  choose  sequence  satisfy  given  condition  print  without  quote  otherwise  print  yes  without  quote  second  third  mean  sum  element  sequence  without  element  index  equal  sum  element  sequence  without  element  index
630/M __label__math  __label__geometry  vasya  started  working  machine  vision  company  city  vasya  team  creates  software  hardware  identification  people  face  project  know  camera  rotating  around  optical  axis  shooting  people  see  eye  catching  gadget  rotating  camera  come  see  better  look  camera  take  photo  time  could  better  high  quality  identification  everything  simple  picture  camera  appear  rotated  clockwise  camera  rotation  frame  content  becomes  rotated  counter  clockwise  identification  algorithm  work  face  slightly  deviated  vertical  vasya  wa  entrusted  correct  situation  rotate  captured  image  image  would  minimally  deviated  vertical  requirement  severe  firstly  picture  rotated  angle  divisible  degree  lose  bit  information  image  secondly  frame  camera  huge  fps  big  adequate  rotation  speed  provided  hardware  fpga  solution  solution  rotate  degree  clockwise  course  apply  degree  turn  several  time  sake  performance  turn  minimized  help  vasya  implement  program  given  rotation  angle  camera  determine  minimum  degree  clockwise  turn  necessary  get  picture  direction  deviation  vertical  minimum  next  figure  contains  frame  taken  unrotated  camera  rotated  degree  clockwise  rotated  degree  counter  clockwise  arrow  show  direction  true  next  figure  show  degree  clockwise  turn  fpga  hardware  input  contains  camera  angle  degree  positive  value  denotes  clockwise  camera  rotation  negative  counter  clockwise  output  minimum  required  degree  clockwise  turn
374/B __label__greedy  inna  love  digit  much  asked  dima  write  small  consisting  dima  must  misunderstood  wrote  large  consisting  digit  inna  want  slightly  alter  dima  wrote  end  contained  many  digit  possible  move  inna  choose  adjacent  digit  sum  equal  replace  single  digit  instance  inna  alter  like  use  method  transform  inna  transform  get  digit  dima  programmer  want  find  many  distinct  containing  many  digit  possible  inna  get  written  help  challenging  task  input  contains  single  print  single  answer  problem  guaranteed  answer  problem  exceed
584/C __label__greedy  __label__constructive  algorithms  __label__strings  marina  love  string  length  vasya  love  third  string  different  exactly  character  help  vasya  find  least  string  formally  given  string  length  let  denote  character  string  different  task  find  string  length  string  print  contains  second  contains  string  length  consisting  lowercase  english  letter  third  string  length  consisting  lowercase  english  letter  print  string  length  differing  string  exactly  character  string  consist  lowercase  english  letter  string  exist  print
864/E __label__dp  __label__sortings  polycarp  really  serious  trouble  house  fire  time  save  valuable  item  polycarp  estimated  would  take  second  save  item  addition  item  estimated  value  moment  item  completely  burned  longer  valuable  particular  tii  item  saved  given  value  item  find  set  item  polycarp  save  total  value  item  maximum  possible  polycarp  save  item  another  example  take  item  item  item  saved  second  item  second  fire  started  contains  single  item  polycarp  house  following  contains  time  needed  save  item  time  item  burn  completely  value  item  print  maximum  possible  total  value  set  saved  item  second  print  item  desired  set  third  print  distinct  saved  item  order  polycarp  save  item  indexed  order  appear  input  several  answer  print
454/A __label__implementation  twilight  sparkle  got  crystal  crystal  mine  crystal  size  odd  n  matrix  diamond  inscribed  given  odd  need  draw  crystal  size  diamond  cell  matrix  represented  character  cell  matrix  represented  character  look  example  understand  need  draw  contains  odd  output  crystal  size
1230/A __label__implementation  __label__brute  force  dawid  ha  bag  candy  contains  candy  dawid  ha  friend  want  give  bag  friend  possible  distribute  bag  way  friend  receives  amount  candy  total  note  keep  bag  throw  away  bag  given  friend  contains  candy  bag  output  yes  possible  give  bag  dawid  friend  friend  receive  amount  candy  otherwise  character  printed  case  either  uppercase  lowercase
1004/F __label__data  structures  sonya  ha  array  consisting  non  negative  ha  perform  query  type  replace  element  value  perform  operation  find  pair  l  bitwise  range  least  note  constant  query  help  sonya  perform  query  bitwise  binary  operation  pair  non  negative  calculate  bitwise  need  write  binary  notation  result  binary  contains  digit  binary  notation  least  example  contains  query  constant  query  second  contains  array  following  describe  query  ha  following  format  meaning  replace  meaning  find  subarrays  segment  bitwise  least  query  type  print  subarrays  bitwise  range  least
678/C __label__math  __label__implementation  __label__number  theory  little  joty  ha  got  task  ha  tile  indexed  ha  paint  strange  pattern  unpainted  tile  painted  red  index  divisible  unpainted  tile  painted  blue  index  divisible  tile  divisible  either  painted  red  blue  painting  done  get  chocolate  tile  painted  red  chocolate  tile  painted  blue  note  paint  tile  order  want  given  required  information  find  maximum  chocolate  joty  get  contains  print  maximum  chocolate  joty  get
747/E __label__implementation  __label__dfs  __label__strings  rare  article  internet  posted  without  possibility  comment  polycarp  website  article  ha  comment  feed  comment  polycarp  website  non  empty  string  consisting  uppercase  lowercase  letter  english  alphabet  comment  tree  like  structure  mean  comment  except  root  comment  comment  highest  level  ha  exactly  parent  comment  polycarp  want  save  comment  hard  drive  us  following  format  comment  writes  following  format  text  comment  written  comment  written  comment  parent  comment  reply  comment  comment  comment  parent  comment  written  writing  comment  us  algorithm  element  format  separated  single  comma  similarly  comment  level  separated  comma  example  comment  look  like  comment  written  hello  bye  second  written  test  third  comment  written  whole  comment  feed  written  hello  bye  test  given  comment  feed  format  specified  print  comment  different  format  print  maximum  depth  nesting  comment  print  corresponds  nesting  level  row  print  comment  nesting  level  order  appearance  policarp  comment  feed  separated  space  contains  non  empty  comment  feed  described  format  consists  uppercase  lowercase  letter  english  alphabet  digit  comma  guaranteed  comment  non  empty  string  consisting  uppercase  lowercase  english  character  comment  consisting  least  digit  either  equal  doe  leading  length  whole  string  doe  exceed  guaranteed  given  structure  comment  valid  print  comment  format  given  statement  level  nesting  comment  printed  order  given  input
1045/H __label__math  bored  exploring  moon  wall  decided  explore  something  made  binary  took  binary  decided  count  many  time  different  substring  length  appeared  stored  value  representing  many  time  substring  appear  respectively  example  wall  noticed  multiple  binary  satisfying  constraint  wanted  count  many  binary  satisfy  constraint  given  interval  unfortunately  processing  power  strong  enough  handle  large  interval  wa  curious  help  since  large  print  modulo  positive  binary  representing  start  end  interval  respectively  binary  leading  next  decimal  representing  count  digit  substring  respectively  output  representing  many  binary  interval  satisfy  constraint  mod
720/E __label__implementation  borya  ha  recently  found  big  electronic  display  computer  manages  display  store  ha  decimal  digit  display  show  encoded  version  digit  shown  using  lowercase  letter  english  alphabet  legend  near  display  describes  encoded  digit  position  digit  character  known  encodes  digit  position  different  digit  code  character  second  increased  second  moment  reach  value  represented  decimal  notation  loud  beep  sound  andrew  know  stored  computer  want  know  many  second  must  pas  borya  definitely  tell  wa  original  encoded  display  assume  borya  precisely  measure  time  encoded  increased  exactly  second  borya  started  watching  display  data  contains  multiple  test  case  input  contains  test  case  test  case  described  follows  description  contains  digit  second  contains  decimal  digit  without  space  possibly  leading  initially  stored  display  computer  following  character  character  code  character  digit  position  significant  digit  position  described  test  case  print  second  borya  definitely  know  wa  initial  stored  display  computer  print  leading
758/A __label__math  __label__implementation  berland  holiday  equality  honor  holiday  king  decided  equalize  welfare  citizen  berland  expense  state  treasury  totally  berland  citizen  welfare  estimated  burles  burle  currency  berland  royal  treasurer  need  count  minimum  charge  kingdom  king  present  king  give  money  power  take  away  contains  citizen  kingdom  second  contains  welfare  citizen  print  minimum  burles  spend
546/B __label__implementation  __label__greedy  __label__sortings  __label__brute  force  colonel  ha  badge  want  give  badge  every  soldier  badge  ha  coolness  factor  show  much  owner  reached  coolness  factor  increased  cost  coin  every  pair  soldier  get  badge  strictly  higher  factor  second  exact  value  factor  important  need  distinct  factor  colonel  know  soldier  supposed  get  badge  initially  problem  badge  factor  coolness  help  calculate  much  money  ha  paid  making  badge  different  factor  coolness  input  consists  next  consists  stand  coolness  factor  badge  output  single  minimum  amount  coin  colonel  ha  pay
451/C __label__math  __label__implementation  __label__brute  force  game  football  tournament  team  participating  currently  game  already  played  avid  football  fan  recently  missed  whole  game  fortunately  remember  guess  friend  game  friend  tell  exact  win  team  instead  thought  absolute  difference  win  second  team  second  third  team  want  team  win  tournament  team  win  game  want  know  doe  exist  valid  tournament  satisfying  friend  guess  team  win  tournament  note  outcome  match  draw  ha  either  win  loss  input  contains  single  corresponding  test  case  next  space  separated  data  current  test  case  test  case  output  single  containing  either  yes  possible  winner  tournament  otherwise  without  quote
712/E __label__math  __label__data  structures  casino  lined  row  memory  play  casino  ha  probability  win  move  casino  right  exit  row  probability  lose  move  casino  left  exit  row  say  memory  dominates  interval  completes  walk  start  casino  never  loos  casino  finish  walk  winning  casino  note  memory  still  walk  left  casino  right  casino  always  finish  process  memory  ha  request  following  form  set  print  probability  memory  dominate  interval  compute  probability  memory  leave  segment  winning  casino  start  casino  guaranteed  moment  time  non  decreasing  sequence  pii  please  help  memory  answering  request  input  contains  casino  request  respectively  next  probability  winning  casino  next  query  type  specified  guaranteed  least  query  type  output  non  empty  additionally  guaranteed  form  non  decreasing  sequence  time  print  real  every  request  type  probability  boy  dominate  interval  answer  considered  correct  absolute  error  doe  exceed
744/C __label__dp  __label__brute  force  day  hongcow  go  store  see  brand  new  deck  special  card  individual  card  either  red  blue  decides  want  buy  immediately  need  play  game  owner  store  game  take  turn  complete  turn  hongcow  thing  collect  token  hongcow  collect  red  token  blue  token  choosing  option  thus  token  total  per  operation  buy  card  hongcow  chooses  card  spends  token  purchase  specified  card  requires  red  resource  blue  resource  suppose  hongcow  currently  ha  red  card  blue  card  card  require  hongcow  spend  max  red  token  max  blue  token  note  token  disappear  card  stay  hongcow  forever  card  bought  given  description  card  cost  determine  minimum  turn  hongcow  need  purchase  card  input  single  next  input  token  denoting  color  card  red  blue  denoting  amount  red  resource  required  obtain  card  denoting  amount  blue  resource  required  obtain  card  output  single  denoting  minimum  turn  needed  acquire  card
508/E __label__dp  __label__greedy  notice  memory  limit  non  standard  recently  arthur  sasha  studied  correct  bracket  sequence  arthur  understood  topic  perfectly  become  amazed  correct  bracket  sequence  even  got  favorite  correct  bracket  sequence  length  unlike  arthur  sasha  understood  topic  badly  broke  arthur  favorite  correct  bracket  sequence  spite  arthur  remembers  favorite  sequence  opening  parenthesis  approximate  distance  corresponding  closing  opening  bracket  remembers  segment  containing  distance  corresponding  closing  bracket  formally  speaking  opening  bracket  order  left  right  know  difference  position  position  corresponding  closing  bracket  belongs  segment  help  arthur  restore  favorite  correct  bracket  sequence  contains  opening  bracket  arthur  favorite  correct  bracket  sequence  next  ii  representing  segment  lie  distance  opening  bracket  corresponding  closing  description  segment  given  order  opening  bracket  occur  arthur  favorite  sequence  list  left  right  possible  restore  correct  bracket  sequence  given  data  print  possible  choice
1208/E __label__implementation  __label__data  structures  given  array  different  size  table  column  row  array  placed  horizontally  row  slide  array  row  long  occupies  several  consecutive  cell  lie  completely  inside  table  need  find  maximum  sum  column  independently  optimal  placement  column  shown  picture  left  right  note  exclude  array  column  provided  remains  window  case  value  considered  contains  array  width  table  next  consists  length  array  followed  element  array  total  length  array  doe  exceed  print  maximum  sum  column
847/C __label__constructive  algorithms  recall  bracket  sequence  considered  regular  possible  insert  symbol  result  correct  arithmetic  expression  example  sequence  regular  get  correct  arithmetic  expression  insering  symbol  following  sequence  regular  following  sequence  regular  bracket  sequence  problem  given  task  construct  regular  bracket  sequence  consisting  round  bracket  length  total  sum  nesting  opening  bracket  equal  exactly  nesting  single  opening  bracket  equal  pair  bracket  current  opening  bracket  embedded  example  sequence  nesting  opening  bracket  equal  nesting  second  opening  bracket  equal  nesting  third  opening  bracket  equal  total  sum  nestings  equal  contains  opening  bracket  needed  total  nesting  print  required  regular  bracket  sequence  consisting  round  bracket
567/C __label__dp  __label__data  structures  __label__binary  search  polycarp  love  geometric  progression  much  since  wa  year  old  love  progression  length  ha  favorite  sequence  consisting  want  know  many  subsequence  length  selected  form  geometric  progression  common  ratio  subsequence  length  combination  index  subsequence  length  group  element  necessarily  consecutive  sequence  index  strictly  increasing  geometric  progression  common  ratio  sequence  form  polycarp  year  old  calculate  help  input  contains  showing  many  polycarp  sequence  ha  favorite  second  contains  element  sequence  output  single  way  choose  subsequence  length  form  geometric  progression  common  ratio
960/H __label__data  structures  __label__trees  santa  ha  infinite  candy  flavour  given  rooted  tree  vertex  root  tree  vertex  vertex  contains  exactly  candy  vertex  ha  candy  flavour  sometimes  santa  fear  candy  flavour  melted  chooses  vertex  randomly  sends  subtree  baker  replacement  replacement  candy  flavour  replaced  new  candy  flavour  candy  flavour  left  unchanged  replacement  tree  restored  actual  cost  replacing  candy  flavour  given  baker  keep  price  fixed  order  make  calculation  simple  every  time  subtree  come  replacement  baker  charge  matter  subtree  flavour  suppose  given  flavour  probability  santa  chooses  vertex  replacement  vertex  need  find  expected  value  error  calculating  cost  replacement  flavour  error  calculating  cost  defined  follows  error  actualcost  price  charged  baker  error  actualcost  price  charged  baker  note  actual  cost  cost  replacement  candy  flavour  multiplied  candy  subtree  sometimes  santa  wish  replace  candy  vertex  candy  flavour  pocket  need  handle  type  operation  change  flavour  candy  vertex  calculate  expected  value  error  calculating  cost  replacement  given  flavour  input  contains  node  total  different  flavour  candy  query  price  charged  baker  replacement  respectively  second  contains  initial  flavour  candy  node  third  contains  parent  node  next  contains  cost  replacing  candy  flavour  next  describe  query  start  type  query  describes  query  type  follow  mean  santa  replaces  candy  vertex  flavour  otherwise  describes  query  second  type  follows  mean  print  expected  value  error  calculating  cost  replacement  given  flavour  vertex  indexed  vertex  root  output  answer  query  second  type  separate
1234/B2 __label__implementation  __label__data  structures  difference  easy  hard  version  constraint  messaging  popular  social  network  via  smartphone  smartphone  show  recent  conversation  friend  initially  screen  empty  displayed  conversation  equal  conversation  friend  conversation  friend  conversation  uniquely  defined  friend  suddenly  ability  see  future  know  day  receive  message  message  received  friend  receive  message  conversation  currently  displayed  smartphone  nothing  happens  conversation  screen  change  change  order  read  message  continue  waiting  new  message  otherwise  conversation  screen  firstly  conversation  displayed  screen  last  conversation  ha  position  removed  screen  conversation  screen  guaranteed  le  conversation  friend  displayed  screen  conversation  friend  appears  topmost  position  screen  displayed  conversation  shifted  position  task  find  list  conversation  order  displayed  screen  processing  message  input  contains  message  conversation  smartphone  show  second  input  contains  friend  sends  message  output  print  conversation  shown  receiving  message
712/D __label__math  __label__dp  memory  friend  lexa  competing  get  higher  score  popular  computer  game  memory  start  score  lexa  start  score  single  turn  memory  lexa  get  range  add  current  score  game  ha  exactly  turn  memory  lexa  good  game  always  get  random  turn  memory  wonder  many  possible  game  exist  end  strictly  higher  score  lexa  game  considered  different  least  turn  least  player  get  different  score  game  total  since  answer  large  print  modulo  please  solve  problem  memory  input  contains  amount  memory  lexa  start  turn  respectively  print  possible  game  satisfying  condition  modulo
811/E __label__data  structures  __label__graphs  spare  time  vladik  estimate  beauty  flag  every  flag  could  represented  matrix  n  consists  positive  let  define  beauty  flag  component  matrix  call  component  set  cell  pair  cell  set  exists  path  adjacent  cell  component  example  partitioning  flag  matrix  component  time  decided  change  something  process  want  estimate  entire  flag  segment  segment  flag  described  submatrix  flag  matrix  opposite  corner  condition  satisfied  help  vladik  calculate  beauty  segment  given  flag  contains  space  separated  dimension  flag  matrix  segment  respectively  next  contains  space  separated  description  flag  matrix  element  flag  matrix  positive  exceeding  next  contains  space  separated  border  segment  beauty  vladik  want  know  segment  print  result  corresponding
995/E __label__graphs  __label__number  theory  allen  playing  clicker  phone  start  screen  every  second  press  button  turn  modp  turn  modp  turn  modp  allen  want  press  button  end  screen  help  input  contains  positive  v  guaranteed  prime  print  single  button  press  second  print  button  press
638/B __label__dfs  __label__strings  berland  scientist  face  important  task  given  part  short  dna  fragment  restore  dinosaur  dna  genome  berland  dinosaur  ha  noting  common  genome  used  distinct  nucleotide  type  nucleotide  type  occur  assign  distinct  english  letter  nucleotide  genome  berland  dinosaur  represent  non  empty  string  consisting  small  english  letter  letter  occurs  scientist  genome  fragment  represented  substring  non  empty  sequence  consecutive  nucleotide  sought  genome  face  following  problem  help  scientist  restore  dinosaur  genome  guaranteed  input  contradictory  least  suitable  always  exists  scientist  found  strong  programmer  asked  addition  choose  minimum  length  multiple  string  choose  string  input  contains  positive  genome  fragment  next  contains  description  fragment  fragment  non  empty  string  consisting  distinct  small  letter  english  alphabet  guaranteed  given  fragment  distinct  fragment  could  arbitrarily  overlap  fragment  could  substring  another  guaranteed  string  distinct  letter  contains  given  fragment  substring  single  output  print  genome  minimum  length  contains  given  part  nucleotide  genome  must  distinct  multiple  suitable  string  print  string  minimum  length  multiple  suitable  string  print
664/A __label__math  __label__number  theory  greatest  common  divisor  gcd  positive  equal  biggest  divisible  many  efficient  algorithm  find  greatest  common  divisor  gcd  example  euclid  algorithm  formally  find  biggest  divisible  make  problem  even  complicated  allow  googol  fit  even  bit  type  input  contains  output  greatest  common  divisor  inclusive
986/A __label__greedy  __label__graphs  __label__number  theory  company  going  hold  fair  byteland  town  byteland  way  road  town  course  reach  town  town  using  road  type  good  produced  byteland  every  town  produce  type  hold  fair  bring  least  different  type  good  cost  coin  bring  good  town  town  length  shortest  path  length  path  road  path  organizer  cover  travel  expense  choose  town  bring  good  want  calculate  minimum  expense  hold  fair  town  input  town  road  different  type  good  different  type  good  necessary  hold  fair  next  type  good  produced  town  guaranteed  occur  least  next  road  described  road  described  town  connected  road  guaranteed  road  every  town  guaranteed  town  town  via  road  print  minimum  coin  need  spend  travel  expense  hold  fair  town  separate  space
94/B __label__math  __label__implementation  __label__graphs  day  igor  stopped  programming  took  math  late  autumn  evening  wa  sitting  table  reading  book  thinking  something  following  statement  caught  attention  people  either  pairwise  acquainted  people  pairwise  unacquainted  people  igor  get  required  minimum  people  well  people  kept  repeating  mind  let  take  say  max  ilya  vova  know  let  add  dima  oleg  vova  none  acquainted  math  rubbish  igor  took  friend  wrote  friend  want  check  whether  true  people  either  pairwise  acquainted  pairwise  acquainted  people  contains  relation  acquaintance  friend  igor  following  contains  aii  pair  acquainted  people  guaranteed  pair  acquaintance  described  exactly  acquaintance  relation  symmetrical  acquainted  acquainted  print  fail  people  either  pairwise  acquainted  pairwise  unacquainted  people  otherwise  print  win
463/B __label__math  __label__implementation  __label__brute  force  caisa  solved  problem  sugar  way  back  home  caisa  playing  mobile  game  path  pylon  numbered  game  pylon  ha  height  pylon  ha  height  goal  game  reach  pylon  move  player  jump  current  pylon  let  denote  next  player  made  move  energy  increase  value  negative  player  loses  energy  player  must  non  negative  amount  energy  moment  time  initially  caisa  stand  pylon  ha  energy  game  provides  special  opportunity  pay  single  dollar  increase  height  anyone  pylon  caisa  use  opportunity  several  time  want  spend  much  money  minimal  amount  money  must  paid  reach  goal  game  contains  next  contains  representing  height  pylon  print  single  representing  minimum  dollar  paid  caisa
1197/C __label__greedy  __label__sortings  given  sorted  array  index  condition  hold  asked  divide  array  non  empty  consecutive  subarrays  every  element  array  included  exactly  subarray  let  max  equal  maximum  subarray  min  equal  minimum  subarray  cost  division  equal  max  example  divide  subarrays  following  way  cost  division  equal  calculate  minimum  cost  obtain  dividing  array  non  empty  consecutive  subarrays  contains  second  contains  print  minimum  cost  obtain  dividing  array  nonempty  consecutive  subarrays
535/B __label__implementation  __label__brute  force  tavas  started  eating  coffee  mix  without  water  keione  told  smell  awful  stop  keione  told  smart  friend  saddas  punish  saddas  took  tavas  headphone  told  solve  following  problem  return  problem  given  lucky  lucky  positive  whose  decimal  representation  lucky  digit  example  lucky  sort  lucky  increasing  order  based  index  tavas  smart  saddas  asked  favor  solve  problem  headphone  back  input  contains  lucky  print  index  lucky
748/E __label__greedy  __label__data  structures  __label__binary  search  santa  claus  ha  tangerine  consists  exactly  slice  santa  claus  came  school  ha  pupil  santa  decided  treat  tangerine  tangerine  present  least  tangerine  pupil  santa  decided  divide  tangerine  part  offended  order  divide  tangerine  existing  part  smaller  equal  part  slice  part  want  split  odd  resulting  part  slice  forbidden  divide  part  consisting  slice  santa  claus  want  present  everyone  either  whole  tangerine  exactly  part  mean  everyone  must  get  positive  slice  several  tangerine  part  stay  santa  let  slice  pupil  ha  end  let  santa  joy  minimum  task  find  maximum  possible  joy  santa  treat  everyone  tangerine  part  contains  positive  denoting  tangerine  pupil  respectively  second  consists  positive  stand  slice  tangerine  consists  way  present  tangerine  part  tangerine  everyone  print  otherwise  print  maximum  possible  joy  santa
920/B __label__implementation  recently  student  city  moved  city  attend  programming  camp  moved  train  evening  student  train  decided  want  drink  tea  course  people  use  teapot  simultaneously  student  form  queue  get  tea  student  come  end  queue  beginning  second  multiple  student  coming  queue  moment  student  greater  index  come  student  lesser  index  student  queue  behave  follows  nobody  queue  student  us  teapot  exactly  second  leaf  queue  tea  otherwise  student  wait  people  get  tea  beginning  second  student  still  get  tea  someone  queue  leaf  queue  without  getting  tea  student  determine  second  use  teapot  get  tea  actually  get  contains  test  case  solve  test  case  follow  test  case  contains  student  follow  contains  ii  second  student  come  end  queue  second  leaf  queue  still  get  tea  guaranteed  every  condition  hold  sum  test  case  exceed  note  hack  set  test  case  print  must  equal  second  student  get  tea  leaf  without  tea
840/E __label__trees  lech  got  tree  consisting  vertex  root  vertex  vertex  written  get  answer  query  form  answer  query  maximal  value  vertex  path  including  dist  edge  path  guaranteed  vertex  ancestor  vertex  leha  taste  singular  belief  vertex  ancestor  help  leha  get  expression  mean  bitwise  exclusive  note  vertex  ancestor  vertex  vertex  lie  path  root  vertex  input  data  contains  vertex  tree  query  respectively  next  contains  vertex  next  contains  description  edge  tree  guaranteed  given  graph  tree  next  contains  description  query  guaranteed  vertex  ancestor  vertex  output  answer  query
546/A __label__math  __label__implementation  __label__brute  force  soldier  want  buy  banana  shop  ha  pay  dollar  banana  dollar  second  word  ha  pay  dollar  banana  ha  dollar  many  dollar  doe  borrow  friend  soldier  buy  banana  contains  positive  cost  banana  initial  dollar  soldier  ha  banana  want  output  amount  dollar  soldier  must  borrow  friend  borrow  money  output
792/F __label__data  structures  __label__geometry  vova  play  computer  game  known  mages  monster  vova  character  mage  though  ha  started  character  know  spell  vova  character  learn  new  spell  game  every  spell  characterized  value  damage  per  second  mana  cost  per  second  respectively  vova  use  spell  amount  second  formally  us  spell  damage  mana  cost  second  deal  damage  spend  mana  rounding  mana  left  mana  amount  set  start  game  remains  beginning  every  fight  character  able  use  spell  prohibited  use  multiple  spell  simultaneously  vova  fight  monster  every  monster  characterized  value  monster  kill  vova  character  second  ha  health  point  mana  refill  every  fight  vova  character  revives  full  mana  reserve  previous  fight  influence  vova  character  kill  monster  deal  damage  second  using  spell  allowed  use  spell  fight  spending  mana  beginning  fight  monster  health  becomes  exactly  second  mean  monster  vova  character  kill  time  vova  win  fight  write  program  answer  type  query  vova  character  learns  new  spell  deal  damage  per  second  cost  mana  per  second  vova  fight  monster  kill  character  second  ha  health  point  note  query  given  different  form  remember  vova  character  know  spell  beginning  game  every  query  second  type  determine  vova  able  win  fight  corresponding  monster  contains  query  amount  mana  beginning  every  fight  next  contains  using  restore  query  way  let  index  last  query  second  type  positive  answer  none  character  learns  spell  mod  mod  determine  vova  able  win  fight  monster  mod  mod  every  query  second  type  print  yes  vova  able  win  fight  corresponding  monster  otherwise
501/E __label__implementation  __label__binary  search  misha  ha  array  indexed  let  define  palindrome  degree  array  index  pair  element  inclusive  rearranged  way  whole  array  palindrome  word  pair  meet  condition  rearranging  position  inclusive  allowed  rearrange  following  condition  hold  task  find  palindrome  degree  misha  array  contains  second  contains  positive  separated  space  element  misha  array  single  print  answer  problem
52/C __label__data  structures  given  circular  array  type  operation  inc  operation  increase  element  segment  inclusively  rmq  operation  return  minimal  value  segment  inclusively  assume  segment  circular  mean  index  sequence  write  program  process  given  sequence  operation  contains  next  contains  initial  state  array  third  contains  operartons  next  operation  contains  f  g  mean  rmq  operation  contains  f  g  inc  operation  rmq  operation  write  result  please  use  lld  specificator  read  write  bit  preffered  use  cout  use
1223/C __label__greedy  __label__binary  search  environmental  activist  heart  reality  harsh  cashier  cinema  still  something  ticket  sell  price  ticket  teller  possibility  select  order  ticket  sold  permutation  ticket  know  cinema  participates  ecological  restoration  program  applying  order  chose  price  sold  ticket  order  chose  aimed  research  spreading  renewable  energy  source  price  sold  ticket  order  chose  aimed  pollution  abatement  ticket  program  used  environmental  activity  known  price  multiple  need  rounding  example  like  sell  ticket  price  cinema  pay  sold  ticket  sold  ticket  arranging  order  lead  contribution  equal  arranging  order  lead  nature  wait  decided  change  order  ticket  way  total  contribution  program  reach  least  minimum  sold  ticket  say  impossible  word  find  minimum  ticket  needed  sold  order  earn  least  contains  single  independent  query  query  consists  query  contains  single  ticket  second  contains  mod  corresponding  price  ticket  third  contains  parameter  program  fourth  contains  parameter  second  program  fifth  contains  single  required  total  contribution  guaranteed  total  ticket  per  test  exceed  print  per  query
390/A __label__implementation  inna  love  sleeping  much  need  alarm  clock  total  wake  let  suppose  inna  room  square  lower  left  corner  point  upper  right  corner  point  alarm  clock  point  coordinate  square  morning  ha  come  alarm  clock  inna  room  ringing  inna  want  turn  inna  ha  come  amusing  game  inna  chooses  type  segment  use  throughout  game  segment  either  vertical  horizontal  inna  make  multiple  move  single  move  inna  paint  segment  length  plane  chooses  type  beginning  game  either  vertical  horizontal  alarm  clock  segment  switch  game  end  alarm  clock  switched  inna  sleepy  want  get  alarm  clock  soon  possible  help  find  minimum  move  game  need  turn  alarm  clock  input  contains  alarm  clock  next  describe  clock  contains  coordinate  alarm  clock  note  single  point  room  alarm  clock  alarm  clock  lie  side  square  represents  room  single  print  single  minimum  segment  inna  draw  act  optimally
1146/B __label__implementation  __label__strings  bob  ha  string  consisting  lowercase  english  letter  defines  string  removing  character  keeping  character  order  generates  new  string  concatenating  word  look  note  example  given  string  task  find  bob  could  used  generate  shown  answer  exists  unique  input  contains  string  consisting  lowercase  english  letter  print  string  could  generated  shown  answer  exists  unique  string  exists  print  without  double  quote  space  character
582/D __label__math  __label__dp  __label__number  theory  given  prime  calculate  pair  divisible  answer  rather  large  print  remainder  answer  moduly  let  remind  way  object  chosen  set  object  contains  prime  second  contains  decimal  record  without  leading  single  print  answer  problem
720/B __label__dfs  tree  connected  undirected  graph  ha  cycle  edge  cactus  connected  undirected  graph  without  loop  parallel  edge  edge  belongs  cycle  vasya  ha  edge  cactus  edge  graph  ha  color  vasya  would  like  remove  minimal  edge  way  cactus  turned  tree  vasya  want  make  way  edge  many  different  color  resulting  tree  possible  help  find  many  different  color  resulting  tree  contains  vertex  edge  vasya  graph  respectively  following  u  vertex  connected  corresponding  edge  color  guaranteed  described  graph  indeed  edge  cactus  output  maximal  different  color  resulting  tree
788/B __label__dfs  __label__graphs  __label__constructive  algorithms  little  boy  igor  want  become  traveller  decided  visit  city  motherland  uzhlyandia  widely  known  uzhlyandia  ha  city  connected  bidirectional  road  road  country  connect  pair  city  road  starting  ending  city  exist  igor  want  plan  journey  beforehand  boy  think  path  good  path  go  road  twice  exactly  good  path  start  finish  city  uzhlyandia  want  know  many  different  good  path  uzhlyandia  path  considered  different  set  road  path  go  exactly  differ  help  igor  calculate  good  path  contains  city  road  uzhlyandia  respectively  next  contains  mean  road  city  guaranteed  road  given  input  twice  mean  every  city  road  connects  city  print  good  path  uzhlyandia
1195/A __label__math  __label__greedy  old  timer  summer  informatics  school  remember  previous  camp  student  wa  given  drink  choice  vechorka  late  evening  meal  story  wa  complicated  student  living  building  favorite  drink  known  know  type  favorite  drink  student  drink  type  numbered  infinite  drink  set  set  consists  exactly  portion  drink  word  type  drink  set  type  contains  portion  drink  available  set  type  infinite  know  student  receive  minimum  possible  set  give  student  exactly  drink  obviously  set  exactly  rounded  student  receive  set  distribute  portion  choice  student  get  exactly  portion  note  odd  portion  remain  unused  student  teacher  drink  maximum  student  get  favorite  drink  set  chosen  optimally  student  distribute  portion  optimally  input  contains  k  student  building  different  drink  next  student  favorite  drink  contains  single  type  favorite  drink  student  print  exactly  maximum  student  get  favorite  drink
1063/E __label__math  __label__constructive  algorithms  oleg  came  see  maze  mirror  maze  room  cell  either  empty  contains  mirror  connecting  opposite  corner  cell  mirror  maze  reflect  light  perfect  way  cause  interesting  visual  effect  contributes  loss  orientation  maze  oleg  person  curious  nature  decided  install  laser  facing  internal  maze  south  wall  maze  north  wall  maze  oleg  installed  receiver  facing  internal  maze  let  laser  receiver  west  east  distinct  laser  sends  beam  specific  kind  receiver  receive  beam  sent  laser  since  laser  beam  come  receiver  form  permutation  receiver  occurs  exactly  came  maze  together  oleg  help  place  mirror  initially  empty  maze  maximum  laser  beam  come  receiver  mirror  outside  maze  laser  beam  leaf  maze  able  back  contains  single  size  maze  second  contains  permutation  defines  receiver  beam  laser  come  print  maximum  possible  laser  beam  come  receiver
294/B __label__dp  __label__greedy  shaass  ha  book  want  make  bookshelf  book  want  bookshelf  dimension  small  possible  thickness  book  page  width  equal  thickness  book  either  book  page  height  shaass  put  book  bookshelf  following  way  selects  book  put  vertically  put  rest  book  horizontally  vertical  book  sum  width  horizontal  book  must  total  thickness  vertical  book  sample  arrangement  book  depicted  figure  help  shaass  find  minimum  total  thickness  vertical  book  achieve  input  contains  next  contains  denoting  thickness  width  book  correspondingly  output  print  minimum  total  thickness  vertical  book  achieve
1093/E __label__data  structures  given  permutation  consisting  element  permutation  element  sequence  value  appears  exactly  asked  perform  type  query  calculate  value  appear  segment  position  permutation  segment  position  permutation  swap  value  position  permutation  print  answer  query  type  guaranteed  least  query  type  input  contains  element  permutation  query  second  contains  permutation  guaranteed  value  appears  exactly  third  contains  permutation  guaranteed  value  appears  exactly  next  contains  description  certain  query  either  print  answer  query  type  answer  new  value  appear  segment  position  permutation  segment  position  permutation
935/A __label__implementation  __label__brute  force  fafa  owns  company  work  huge  project  employee  fafa  company  whenever  company  ha  new  project  start  working  fafa  ha  divide  task  project  employee  fafa  find  every  time  tiring  decided  choose  best  employee  company  team  leader  whenever  new  project  fafa  divide  task  team  leader  team  leader  responsible  positive  employee  give  task  make  process  fair  team  leader  responsible  employee  moreover  every  employee  team  leader  ha  responsibility  exactly  team  leader  team  leader  responsible  another  team  leader  given  employee  find  many  way  fafa  could  choose  team  leader  way  possible  divide  employee  evenly  input  consists  single  containing  positive  employee  fafa  company  print  single  representing  answer  problem
765/C __label__math  misha  vanya  played  several  table  tennis  set  set  consists  several  serf  serve  player  receives  point  loser  receives  nothing  player  score  exactly  point  score  reset  new  set  begin  set  misha  scored  point  total  vanya  scored  point  given  information  determine  maximum  set  could  played  situation  impossible  note  game  consisted  several  complete  set  contains  space  separated  situation  impossible  print  single  otherwise  print  maximum  possible  set
747/F __label__math  __label__dp  __label__brute  force  igor  like  hexadecimal  notation  considers  positive  hexadecimal  notation  interesting  digit  letter  appears  time  example  aaa  abcdef  interesting  aaaa  abababab  interesting  task  find  smallest  interesting  igor  hexadecimal  notation  leading  contains  required  maximum  time  letter  appear  interesting  shown  answer  always  exists  constraint  print  hexadecimal  notation  smallest  interesting  igor
1064/B __label__math  colossal  exclaimed  hawk  nose  programmer  exactly  looking  arkadi  boris  strugatsky  monday  start  saturday  reading  book  equation  mathematical  magic  roman  oira  oira  cristobal  junta  found  interesting  equation  given  stand  bitwise  exclusive  xor  operation  denoted  xor  many  modern  programming  language  oira  oira  quickly  found  solution  equation  cristobal  junta  decided  oira  oira  result  interesting  enough  asked  colleague  many  non  negative  solution  equation  exist  task  turned  difficult  oira  oira  asks  help  test  contains  several  possible  value  task  find  equation  solution  contains  value  following  value  parameter  value  inclusive  value  print  exactly  non  negative  solution  equation  given  value  parameter  print  answer  order  value  appear  input
482/E __label__data  structures  __label__trees  root  tree  containing  vertex  let  tree  vertex  tree  root  vertex  vertex  except  fot  tree  root  ha  direct  ancestor  vertex  ha  value  task  perform  following  query  u  subtree  must  perform  assignment  otherwise  must  perform  assignment  note  query  graph  continues  tree  consisting  vertex  perform  assignment  task  following  starting  performing  query  query  calculate  expected  value  written  lowest  common  ancestor  equiprobably  selected  vertex  lowest  common  ancestor  deepest  vertex  lie  path  root  vertex  path  root  vertex  please  note  vertex  case  lowest  common  ancestor  coincides  input  contains  tree  vertex  second  contains  description  tree  edge  guaranteed  form  tree  third  contains  value  written  vertex  tree  next  contains  query  following  contains  description  query  format  described  statement  guaranteed  query  argument  lie  guaranteed  argument  query  type  meet  limit  print  corresponding  expected  value  answer  considered  correct  absolute  relative  error  exceed
887/B __label__implementation  __label__brute  force  absent  minded  masha  got  set  cube  birthday  face  cube  exactly  digit  masha  became  interested  largest  natural  make  using  new  cube  make  masha  rotate  cube  put  row  look  upper  face  cube  left  right  read  leading  required  use  cube  build  pay  attention  masha  make  digit  digit  vice  versa  using  cube  rotation  given  cube  masha  got  birthday  next  contains  aij  ij  face  cube  print  single  maximum  masha  make  using  cube  masha  make  even
337/E __label__trees  __label__brute  force  __label__number  theory  divisor  tree  rooted  tree  meet  following  condition  vertex  tree  contains  positive  written  leaf  tree  prime  inner  vertex  equal  product  written  child  manao  ha  distinct  try  build  divisor  tree  contains  least  vertex  tree  contains  manao  love  compact  style  tree  large  help  manao  determine  minimum  possible  vertex  divisor  tree  sought  contains  single  second  contains  distinct  space  separated  print  single  minimum  vertex  divisor  tree  contains
1030/G __label__number  theory  given  tuple  generator  mod  xmody  denotes  remainder  divided  prime  see  fixed  sequence  tuples  starting  index  repeat  tuples  smaller  index  calculate  maximum  different  tuples  produced  generator  range  chosen  arbitrary  answer  large  print  remainder  give  divided  contains  element  tuple  second  contains  space  separated  prime  module  print  maximum  different  tuples  modulo
375/E __label__math  __label__dp  __label__implementation  weighted  tree  consisting  vertex  vertex  either  painted  black  painted  red  red  black  tree  called  beautiful  vertex  find  black  vertex  distance  distance  node  shortest  path  red  black  tree  task  make  beautiful  minimum  color  swap  operation  color  swap  operation  choose  vertex  different  color  paint  color  word  choose  red  vertex  black  vertex  operation  allowed  paint  black  paint  red  print  minimum  required  action  contains  next  contains  either  equal  vertex  tree  black  otherwise  vertex  red  next  tree  edge  contains  j  j  ujj  j  mean  tree  ha  edge  weight  vertex  assume  tree  vertex  numbered  print  single  minimum  required  swap  operation
291/D __label__greedy  polycarpus  ha  computer  processor  computer  ha  memory  cell  consider  processor  numbered  memory  cell  consecutively  numbered  polycarpus  need  come  parallel  program  model  memory  cell  program  must  record  value  cell  word  cell  got  find  distance  cell  let  denote  value  written  cell  initially  consider  processor  write  value  memory  cell  processor  read  information  cell  several  processor  read  information  cell  simultaneously  parallel  program  executed  several  step  step  execute  parallel  version  increment  operation  executing  parallel  version  increment  operation  go  follows  processor  independently  chooses  memory  cell  let  say  processor  ha  chosen  cell  processor  simultaneously  execute  operation  ci  help  polycarpus  come  parallel  program  model  executed  exactly  step  calculate  operation  need  executed  note  step  value  must  equal  contains  space  separated  guaranteed  given  required  sequence  operation  exists  print  exactly  print  increment  operation  second  print  second  increment  operation  print  increment  operation
545/D __label__implementation  __label__greedy  __label__sortings  little  girl  susie  went  shopping  mom  wondered  improve  service  quality  people  queue  person  know  time  needed  serve  person  disappointed  time  wait  time  needed  serve  time  person  wait  total  time  people  stand  queue  front  served  susie  thought  swap  people  queue  decrease  people  disappointed  help  susie  find  maximum  disappointed  people  achieved  swapping  people  queue  contains  next  contains  separated  space  print  single  maximum  disappointed  people  queue
1091/D __label__math  __label__dp  let  consider  permutation  lexicographic  order  concatenate  big  sequence  example  length  sequence  let  pair  index  call  sequence  subarray  length  defined  element  sum  sum  element  given  find  subarrays  length  sum  since  large  output  modulo  prime  contains  described  problem  statement  output  single  subarrays  length  sum  modulo
1174/C __label__constructive  algorithms  __label__number  theory  given  every  assign  positive  following  condition  hold  pair  coprime  maximal  value  minimized  small  possible  pair  called  coprime  greatest  common  divisor  contains  print
985/F __label__strings  given  string  length  consisting  lowercase  english  letter  given  string  say  set  distinct  character  set  distinct  character  string  isomorphic  length  equal  mapping  bijection  formally  index  character  exactly  character  character  exactly  character  example  string  aababc  bbcbcz  isomorphic  string  aaaww  wwwaa  isomorphic  following  pair  string  isomorphic  aab  bbb  test  best  handle  query  characterized  en  en  query  check  substring  en  en  isomorphic  contains  space  separated  length  string  query  second  contains  string  consisting  lowercase  english  letter  following  single  query  leni  eni  ax  description  pair  substring  check  query  separate  print  yes  substring  eni  eni  isomorphic  otherwise
380/C __label__data  structures  sereja  ha  bracket  sequence  word  string  length  consisting  character  sereja  need  answer  query  described  ii  answer  query  length  maximum  correct  bracket  subsequence  sequence  sli  li  ri  help  sereja  answer  query  find  definition  subsequence  correct  bracket  sequence  note  contains  sequence  character  without  space  character  either  second  contains  query  next  contains  pair  contains  ii  description  query  print  answer  question  single  print  answer  order  input
1059/E __label__dp  __label__greedy  __label__data  structures  __label__trees  __label__binary  search  given  rooted  tree  vertex  root  vertex  vertex  contains  split  minimum  possible  vertical  path  way  path  contains  vertex  sum  path  doe  exceed  vertex  belong  exactly  path  vertical  path  sequence  vertex  parent  contains  vertex  maximum  vertex  path  maximum  sum  path  second  contains  vertex  tree  third  contains  parent  vertex  tree  output  minimum  vertical  path  impossible  split  tree  output
1093/A __label__math  mishka  got  faced  dice  ha  written  face  face  different  almost  usual  dice  mishka  want  get  exactly  point  rolling  dice  point  sum  written  topmost  face  dice  roll  mishka  make  mishka  really  care  roll  want  know  roll  make  able  get  exactly  point  mishka  lucky  probability  get  point  chosen  roll  non  able  roll  dice  way  task  print  guaranteed  least  answer  exists  mishka  curious  different  point  score  answer  independent  query  input  contains  query  next  contains  contains  point  mishka  want  get  print  print  answer  query  roll  mishka  make  able  get  exactly  point  guaranteed  least  answer  exists
501/A __label__implementation  misha  vasya  participated  codeforces  contest  unfortunately  solved  problem  though  successfully  submitted  attempt  misha  solved  problem  cost  point  vasya  solved  problem  cost  point  besides  misha  submitted  problem  minute  contest  started  vasya  submitted  problem  minute  contest  started  know  codeforces  cost  problem  reduces  round  continues  submit  problem  cost  point  minute  contest  started  get  point  misha  vasya  argument  trying  find  got  point  help  find  truth  contains  guaranteed  divisible  like  real  codeforces  round  output  single
816/B __label__implementation  __label__data  structures  __label__binary  search  stay  woke  attentive  class  karen  need  coffee  karen  coffee  aficionado  want  know  optimal  temperature  brewing  perfect  cup  coffee  indeed  ha  spent  time  reading  several  recipe  book  including  universally  acclaimed  art  covfefe  know  coffee  recipe  recipe  suggests  coffee  brewed  degree  inclusive  achieve  optimal  taste  karen  think  temperature  admissible  least  recipe  recommend  karen  ha  rather  fickle  mind  asks  question  question  given  want  prepare  coffee  temperature  inclusive  tell  many  admissible  temperature  fall  range  input  contains  recipe  minimum  recipe  certain  temperature  must  recommended  admissible  question  karen  ha  respectively  next  describe  recipe  specifically  contains  ii  describing  recipe  suggests  coffee  brewed  degree  inclusive  next  describe  question  contains  describing  want  know  admissible  temperature  degree  inclusive  question  output  single  admissible  temperature  degree  inclusive
1197/F __label__dp  alice  bob  want  play  game  colored  paper  strip  strip  divided  cell  numbered  cell  color  beginning  game  alice  bob  put  chip  chip  put  cell  strip  take  turn  alice  player  turn  ha  choose  chip  move  cell  backwards  current  cell  chip  moved  cell  restriction  chip  leave  border  strip  example  current  cell  move  chip  cell  backwards  move  prohibited  color  current  cell  matrix  size  given  possible  move  chip  cell  backwards  cell  ha  color  move  prohibited  player  make  move  loses  game  initially  cell  uncolored  bob  color  uncolored  cell  want  leave  cell  uncolored  let  call  coloring  good  bob  win  game  matter  alice  act  cell  colored  according  coloring  coloring  different  least  cell  colored  different  color  coloring  bob  want  calculate  good  coloring  since  answer  really  large  print  modulo  contains  paper  strip  second  contains  cell  strip  third  contains  cell  already  colored  follow  describing  already  colored  cell  contains  denoting  cell  strip  ha  color  guaranteed  either  follow  containing  possible  move  chip  cell  backwards  cell  color  move  impossible  print  good  coloring  taken  modulo
546/D __label__math  __label__dp  __label__constructive  algorithms  __label__number  theory  soldier  playing  game  beginning  chooses  positive  give  second  soldier  second  try  make  maximum  possible  round  round  consists  choosing  positive  divisible  replacing  becomes  equal  possible  valid  move  game  score  second  soldier  equal  round  performed  make  game  interesting  soldier  chooses  form  positive  denote  factorial  defined  product  positive  large  maximum  possible  score  second  soldier  input  consists  single  denoting  game  soldier  play  follow  contains  pair  defining  value  game  game  output  maximum  score  second  soldier  get
1166/D __label__math  __label__greedy  __label__brute  force  __label__binary  search  given  positive  say  sequence  positive  cute  every  index  hold  positive  satisfying  given  query  consisting  positive  query  must  determine  whether  exists  cute  sequence  whose  term  whose  last  term  sequence  exists  must  additionally  find  example  contains  query  following  contains  describing  single  query  query  cute  sequence  whose  term  whose  last  term  exists  print
1182/F __label__data  structures  __label__binary  search  __label__number  theory  given  let  ab  sin  find  minimum  possible  maximizes  test  contains  multiple  test  case  contains  test  case  test  case  test  case  contains  print  minimum  possible  test  case  separated  newline
111/C __label__dp  little  petya  love  training  spider  petya  ha  board  n  size  cell  board  initially  ha  spider  sitting  second  petya  chooses  certain  action  spider  humbly  perform  command  possible  command  stay  idle  move  current  cell  side  neighboring  cell  command  possible  direction  petya  give  command  spider  leaf  field  allowed  spider  pas  crawl  towards  opposite  direction  spider  crawl  simultaneously  several  spider  end  cell  petya  want  know  maximum  possible  spider  free  cell  second  contains  space  separated  board  size  print  maximum  cell  without  spider
471/B __label__implementation  __label__sortings  time  polar  bear  menshykov  uslada  zoo  petersburg  elephant  horace  zoo  kiev  got  business  total  task  day  animal  task  task  evaluated  difficulty  animal  decided  task  order  difficulty  unfortunately  task  difficulty  order  perform  task  vary  menshykov  uslada  horace  ask  deal  nuisance  come  individual  plan  plan  sequence  describing  order  animal  task  besides  want  unique  plan  therefore  plan  must  form  different  sequence  find  required  plan  otherwise  deliver  sad  news  stating  impossible  come  distinct  plan  given  task  contains  task  second  contains  difficulty  task  larger  difficult  task  print  yes  without  quote  possible  come  distinct  plan  task  otherwise  print  without  quote  desired  plan  exist  print  second  distinct  represent  task  order  done  according  plan  third  fourth  print  remaining  plan  form
886/F __label__geometry  given  set  point  plane  containing  origin  called  good  projection  given  set  form  symmetric  multiset  point  find  total  good  multiset  set  equal  element  allowed  multiset  called  symmetric  point  plane  multiset  centrally  symmetric  respect  point  contains  single  point  set  next  contains  coordinate  point  guaranteed  point  coincide  infinitely  many  good  print
167/A __label__implementation  country  live  wizard  love  ride  trolleybus  city  country  ha  trolleybus  depot  trolleybus  every  day  trolleybus  leave  depot  final  station  final  station  distance  meter  depot  know  trolleybus  leaf  moment  time  second  speed  greater  meter  per  second  accelerate  acceleration  greater  meter  per  second  squared  trolleybus  decelerate  quickly  want  magic  change  acceleration  fast  want  well  note  maximum  acceleration  trolley  despite  magic  trolley  still  powered  electric  circuit  overtake  wire  blame  course  trolleybus  catch  another  together  right  arrive  final  station  driver  driving  arrive  final  station  quickly  possible  head  trolleybus  fan  club  determine  trolley  minimum  time  reach  final  station  time  arrival  destination  station  trolleybus  doe  necessarily  speed  trolley  leaving  depot  speed  considered  equal  point  view  physic  trolleybus  considered  material  point  ignore  impact  speed  trolley  bus  everything  except  acceleration  deceleration  provided  engine  input  contains  space  separated  trolleybus  maximum  acceleration  distance  depot  final  station  correspondingly  next  pair  n  time  trolleybus  leaf  depot  maximum  speed  correspondingly  separated  space  trolleybus  print  single  time  arrives  final  station  print  time  trolleybus  order  trolleybus  given  input  answer  accepted  absolute  relative  error  exceed
551/D __label__math  __label__implementation  __label__number  theory  know  gukiz  often  play  array  thinking  problem  many  array  length  non  negative  element  strictly  le  meet  following  condition  operation  mean  bitwise  pascal  equivalent  java  python  equivalent  operation  mean  bitwise  pascal  equivalent  java  python  equivalent  answer  quite  large  calculate  modulo  time  gukiz  come  solution  need  help  input  contains  single  print  array  satisfying  condition  modulo
212/E __label__dp  __label__dfs  __label__trees  ity  ha  huge  problem  road  food  infrastructure  total  city  ha  junction  pair  connected  bidirectional  road  road  network  consists  road  get  junction  road  yes  right  road  network  form  undirected  tree  recently  mayor  came  way  eliminates  problem  food  infrastructure  time  decided  put  city  junction  restaurant  well  known  cafe  network  professional  imac  naldz  burger  bing  since  network  owner  friend  strictly  prohibited  place  restaurant  different  network  neighboring  junction  requirement  full  list  junction  must  restaurant  restaurant  belongs  either  imac  naldz  burger  bing  network  build  least  restaurant  pair  junction  connected  road  contains  restaurant  different  network  mayor  going  take  large  tax  restaurant  interested  making  total  restaurant  large  possible  help  mayor  analyze  situation  find  pair  restaurant  belong  imac  naldz  restaurant  belong  burger  bing  sum  large  possible  input  contains  junction  city  next  list  road  per  road  given  pair  index  connected  junction  consider  junction  indexed  guaranteed  given  road  network  represented  undirected  tree  vertex  print  sought  pair  print  sought  pair  order  increasing  component
778/B __label__implementation  __label__dfs  __label__brute  force  bob  recently  read  bitwise  operation  used  computer  xor  studied  property  invented  new  game  initially  bob  chooses  bit  depth  game  mean  game  consist  bit  asks  peter  choose  bit  bob  computes  value  variable  variable  assigned  either  constant  bit  result  bitwise  operation  operand  operation  either  variable  defined  chosen  peter  peter  score  equal  sum  variable  value  bob  want  know  peter  need  choose  get  minimum  possible  score  need  choose  get  maximum  possible  score  case  several  way  get  score  find  minimum  choose  contains  variable  bit  depth  respectively  following  description  variable  describes  exactly  variable  description  ha  following  format  name  new  variable  space  sign  space  followed  binary  exactly  bit  operand  space  bitwise  operation  xor  space  second  operand  operand  either  name  variable  defined  symbol  indicating  chosen  peter  variable  name  string  consisting  lowercase  latin  letter  length  variable  name  different  output  minimum  chosen  peter  make  sum  variable  value  minimum  possible  second  output  minimum  chosen  peter  make  sum  variable  value  maximum  possible  printed  bit  binary
754/C __label__dp  __label__implementation  __label__constructive  algorithms  __label__brute  force  __label__strings  recently  vladik  discovered  new  entertainment  coding  bot  social  network  would  like  use  machine  learning  bot  want  prepare  learning  data  need  download  chat  vladik  coded  script  downloaded  chat  something  went  wrong  particular  message  information  sender  known  person  sends  several  message  row  merged  single  message  mean  could  message  row  sender  moreover  sender  never  mention  message  vladik  want  recover  sender  message  neighboring  message  different  sender  sender  mention  message  ha  idea  asks  help  help  vladik  recover  sender  chat  contains  single  chat  chat  follow  chat  given  following  format  chat  description  contains  single  user  chat  next  contains  space  separated  distinct  usernames  username  consists  lowercase  uppercase  english  letter  digit  usernames  start  digit  usernames  different  even  differ  letter  case  length  username  positive  exceed  character  next  contains  single  message  chat  next  message  following  format  per  username  text  format  message  known  sender  username  appear  list  usernames  chat  text  format  message  unknown  sender  text  message  consist  lowercase  uppercase  english  letter  digit  character  dot  comma  exclamation  mark  question  mark  space  text  trailing  space  length  text  positive  exceed  character  say  text  mention  user  username  appears  text  word  word  username  appears  position  character  appearance  either  exist  english  letter  digit  example  text  vasya  masha  kate  mention  user  vasya  masha  kate  masha  guaranteed  chat  known  sender  mention  message  neighboring  message  known  sender  print  information  chat  following  format
687/A __label__dfs  __label__graphs  recently  pari  arya  research  hard  problem  found  minimum  vertex  cover  problem  interesting  suppose  graph  given  subset  vertex  called  vertex  cover  graph  edge  least  endpoint  set  pari  arya  great  undirected  graph  award  team  contest  split  part  want  part  graph  vertex  cover  agreed  give  graph  need  find  disjoint  subset  vertex  vertex  cover  claim  impossible  vertex  given  friend  even  keep  input  contains  vertex  edge  prize  graph  respectively  next  contains  pair  denoting  undirected  edge  guaranteed  graph  self  loop  multiple  edge  impossible  split  graph  pari  arya  expect  print  without  quote
991/A __label__implementation  student  eagerly  awaits  day  would  pas  exam  successfully  thus  vasya  wa  ready  celebrate  ala  pas  many  vasya  fellow  student  group  successful  celebrated  exam  celebrated  bugdonalds  restaurant  beaverking  restaurant  successful  fast  enough  celebrate  restaurant  student  pas  exam  celebrate  restaurant  elected  stay  home  prepare  reexamination  quickly  bored  vasya  started  checking  celebration  photo  kilogramm  found  total  bugdonalds  wa  visited  student  beaverking  student  student  visited  restaurant  vasya  know  student  group  based  info  vasya  want  determine  either  data  contradicts  many  student  group  pas  exam  help  waste  valuable  preparation  time  contains  n  distribution  student  exists  student  visited  bugdonalds  beaverking  restaurant  least  student  left  home  known  vasya  pas  exam  stayed  home  output  amount  student  including  vasya  pas  exam
776/F __label__implementation  __label__data  structures  __label__graphs  __label__trees  __label__constructive  algorithms  __label__geometry  sherlock  met  moriarty  final  battle  wit  gave  regular  sided  convex  polygon  addition  gave  certain  diagonal  form  region  polygon  wa  guaranteed  diagonal  intersect  interior  point  took  region  calculated  importance  value  importance  value  region  formed  vertex  polygon  given  ax  sorted  region  basis  importance  value  ascending  order  assigned  region  index  region  index  region  position  sorted  array  calculated  want  moriarty  color  region  using  color  region  color  simple  path  region  least  region  color  value  le  color  value  assigned  region  simple  path  region  sequence  region  region  share  edge  moriarty  answer  asks  sherlock  solve  help  sherlock  contains  vertex  polygon  diagonal  added  next  contains  describing  diagonal  vertex  guaranteed  diagonal  correct  coincide  neighboring  guaranteed  diagonal  intersect  let  region
586/A __label__implementation  alena  ha  successfully  passed  entrance  exam  university  looking  forward  start  studying  hour  lesson  russian  university  traditionally  called  pair  last  academic  hour  academic  hour  equal  minute  university  work  way  every  day  hold  exactly  lesson  depending  schedule  particular  group  student  given  day  pair  actually  class  empty  pair  called  break  official  website  university  ha  already  published  schedule  tomorrow  alena  group  thus  pair  know  class  time  alena  house  far  university  break  always  home  alena  ha  time  home  break  consists  least  free  pair  row  otherwise  wait  next  pair  university  course  alena  doe  want  sleepy  pair  sleep  long  possible  come  pair  presented  schedule  similarly  pair  alena  immediately  go  home  alena  appreciates  time  spent  home  always  go  home  possible  return  university  beginning  next  pair  help  alena  determine  many  pair  stay  university  note  pair  alena  university  waiting  upcoming  pair  input  contains  positive  lesson  university  second  contains  equal  alena  pair  otherwise  equal  separated  space  print  single  pair  alena  stay  university
1142/A __label__math  __label__brute  force  recently  golden  circle  beetlovers  wa  found  byteland  circle  route  going  city  city  numerated  distance  neighboring  city  exactly  sergey  doe  like  beetle  love  burger  fortunately  fast  food  restaurant  circle  located  city  distance  neighboring  city  fast  food  restaurant  sergey  began  journey  city  traveled  along  circle  making  stop  city  stopped  sergey  forgot  remembers  distance  city  nearest  fast  food  restaurant  wa  distance  city  stopped  traveling  nearest  fast  food  restaurant  wa  sergey  always  traveled  direction  along  circle  calculated  distance  restaurant  considered  direction  sergey  interested  minimum  stop  excluding  sergey  could  done  returning  second  maximum  stop  excluding  sergey  could  done  returning  contains  k  fast  food  restaurant  circle  distance  neighboring  restaurant  respectively  second  contains  distance  nearest  fast  food  restaurant  initial  city  city  sergey  made  stop  respectively  print
478/E __label__sortings  __label__dfs  __label__brute  force  wavy  positive  digit  decimal  representation  except  last  following  condition  hold  digit  either  strictly  larger  adjacent  digit  strictly  le  adjacent  digit  example  wavy  task  find  smallest  wavy  divisible  given  value  write  program  find  value  exceed  input  contains  separated  single  space  task  output  answer  given  problem  doe  exist  larger  print  minus  without  quote  instead
367/B __label__data  structures  __label__binary  search  sereja  ha  sequence  sequence  consists  similarly  sequence  consists  usual  sereja  study  sequence  ha  today  want  find  position  p  q  sequence  obtained  sequence  rearranging  element  sereja  need  rush  gym  asked  find  described  position  contains  next  contains  next  contains  print  valid  second  print  valid  value  increasing  order
722/F __label__implementation  __label__data  structures  __label__number  theory  given  sequence  sequence  consists  positive  exceeding  sequence  distinct  appear  multiple  sequence  length  sequence  second  sequence  shifted  left  position  position  becomes  last  second  take  sequence  write  new  array  value  compute  longest  segment  array  consisting  element  operation  performed  second  find  longest  segment  found  time  input  contains  sequence  maximum  appear  sequence  follow  providing  sequence  start  sequence  proceeded  positive  element  sequence  guaranteed  sequence  pairwise  distinct  exceed  total  length  sequence  exceed  print  equal  length  longest  segment  array  value  equal  second
520/E __label__math  __label__dp  __label__number  theory  vasya  sitting  extremely  boring  math  class  fun  took  piece  paper  wrote  single  vasya  began  write  different  way  put  plus  certain  digit  result  wa  correct  arithmetic  expression  formally  plus  partition  stand  together  adjacent  plus  must  least  digit  plus  stand  beginning  end  example  string  way  add  plus  correct  way  incorrect  lesson  wa  long  vasya  ha  written  correct  way  place  exactly  plus  string  digit  point  got  caught  fun  teacher  wa  given  task  calculate  sum  resulting  arithmetic  expression  end  lesson  calculating  value  expression  leading  ignored  answer  large  vasya  allowed  get  remainder  modulo  help  contains  second  contains  string  consisting  digit  print  answer  problem  modulo
1106/F __label__math  __label__number  theory  lunar  new  year  approaching  bob  received  gift  friend  recently  recursive  sequence  love  sequence  much  want  play  let  infinite  sequence  positive  bob  know  obtained  following  recursive  equation  modp  fi  b  b  ibk  modp  short  modp  kfibj  modp  widely  used  prime  known  constant  xmody  denotes  remainder  divided  bob  lost  value  extremely  troublesome  basis  sequence  luckily  bob  remembers  element  sequence  element  please  find  possible  value  solution  exists  tell  bob  impossible  recover  favorite  sequence  regardless  bob  sadness  contains  positive  denoting  length  sequence  second  contains  positive  third  contains  positive  implies  output  possible  value  positive  satisfying  multiple  answer  print  make  output  instead
581/F __label__dp  __label__trees  election  time  berland  favorite  course  party  zublicanes  mumocrates  election  campaign  party  include  numerous  demonstration  main  square  capital  berland  square  certainly  demonstration  party  otherwise  could  lead  riot  hand  party  applied  host  huge  demonstration  square  demonstration  must  held  capital  management  distribute  area  party  pair  square  connected  bidirectional  road  pair  square  unique  way  get  square  another  square  outskirt  capital  meaning  connected  road  square  square  called  dead  end  square  mayor  capital  instructed  distribute  square  party  dead  end  square  demonstration  second  party  guaranteed  dead  end  square  city  even  prevent  possible  conflict  zublicanes  mumocrates  wa  decided  minimize  road  connecting  square  distinct  party  developer  department  distributing  square  determine  smallest  input  contains  single  square  capital  berland  next  pair  square  connected  road  square  numbered  guaranteed  dead  end  square  city  even  print  single  minimum  road  connecting  square  demonstration  different  party
918/A __label__implementation  __label__brute  force  eleven  want  choose  new  name  bunch  geek  friend  suggested  algorithm  choose  name  eleven  want  name  exactly  character  friend  suggested  name  consist  uppercase  lowercase  letter  precisely  suggested  letter  name  uppercase  member  fibonacci  sequence  lowercase  otherwise  letter  name  numbered  fibonacci  sequence  sequence  friend  young  know  fibonacci  sequence  asked  help  eleven  determine  new  name  input  contains  print  eleven  new  name  output
317/B __label__implementation  __label__brute  force  ha  noted  ant  put  junction  graphene  lattice  act  following  fashion  every  minute  junction  containing  least  ant  group  ant  formed  ant  scatter  neighbouring  junction  ant  direction  ant  movement  happen  ant  never  interfere  scientist  put  colony  ant  junction  wish  know  many  ant  given  junction  movement  ant  stop  input  contains  ant  colony  query  next  contains  coordinate  query  junction  query  coincide  guaranteed  certain  moment  time  possible  movement  happen  word  process  eventually  end  print  per  ant  corresponding  junction  movement  ant  stop
461/D __label__math  toastman  came  complicated  task  give  appleman  appleman  know  solve  help  given  n  checkerboard  cell  board  ha  either  character  character  nothing  many  way  fill  empty  cell  cell  must  character  end  cell  adjacent  cell  even  find  way  modulo  cell  board  adjacent  share  side  contains  size  board  cell  ha  character  initially  follows  contains  character  either  mean  character  cell  located  intersection  row  column  given  cell  distinct  consider  row  numbered  top  bottom  analogically  column  numbered  left  right  print  single  answer  problem
368/B __label__dp  __label__data  structures  sereja  ha  array  consisting  boy  sit  nothing  decided  study  array  sereja  took  piece  paper  wrote  want  know  many  distinct  staying  position  formally  want  find  distinct  ali  li  sereja  wrote  necessary  array  element  array  wa  large  boy  wa  pressed  time  help  find  answer  described  question  contains  second  contains  array  element  next  contains  print  print  answer
812/A __label__implementation  sagheer  walking  street  come  intersection  road  road  represented  part  part  ha  lane  getting  intersection  direction  lane  getting  intersection  part  total  part  ha  light  lane  getting  intersection  left  straight  right  light  pedestrian  crossing  accident  possible  car  hit  pedestrian  happen  light  pedestrian  crossing  part  light  lane  get  part  green  time  sagheer  monitoring  configuration  traffic  light  task  help  detect  whether  accident  possible  input  consists  describing  road  part  given  counter  clockwise  order  contains  left  straight  right  pedestrian  light  respectively  possible  value  red  light  green  light  single  print  yes  accident  possible  otherwise
670/D1 __label__implementation  __label__brute  force  __label__binary  search  problem  given  version  differ  constraint  solve  problem  large  constraint  write  single  solution  version  find  problem  difficult  large  constraint  write  solution  simplified  version  waking  morning  apollinaria  decided  bake  cooky  bake  cookie  need  ingredient  ingredient  know  value  many  gram  ingredient  need  bake  cookie  prepare  cookie  apollinaria  need  use  ingredient  apollinaria  ha  gram  ingredient  ha  gram  magic  powder  gram  magic  powder  turned  exactly  gram  ingredient  used  baking  cooky  task  determine  maximum  cooky  apollinaria  able  bake  using  ingredient  ha  magic  powder  input  contains  positive  ingredient  gram  magic  powder  second  contains  sequence  equal  gram  ingredient  needed  bake  cookie  third  contains  sequence  equal  gram  ingredient  apollinaria  ha  print  maximum  cooky  apollinaria  able  bake  using  ingredient  ha  magic  powder
723/A __label__math  __label__implementation  __label__sortings  friend  living  straight  lineland  friend  life  point  second  friend  life  point  third  friend  life  point  plan  celebrate  new  year  together  need  meet  point  minimum  total  distance  travel  order  meet  point  celebrate  new  year  guaranteed  optimal  answer  always  input  contains  distinct  coordinate  house  second  third  friend  respectively  print  minimum  total  distance  friend  need  travel  order  meet  together
613/B __label__dp  __label__greedy  __label__sortings  __label__brute  force  __label__binary  search  lesha  play  recently  published  new  version  legendary  game  hacknet  version  character  skill  mechanism  wa  introduced  player  character  ha  exactly  skill  skill  represented  non  negative  current  skill  level  skill  maximum  level  along  skill  global  ranking  player  wa  added  player  ranked  according  called  force  force  player  sum  following  value  skill  character  ha  perfected  multiplied  coefficient  minimum  skill  level  skill  min  multiplied  coefficient  lesha  ha  hacknetian  currency  unit  willing  spend  currency  unit  increase  current  level  skill  equal  help  spend  money  order  achieve  maximum  possible  value  force  input  contains  space  separated  f  second  contains  exactly  separated  space  current  level  skill  print  maximum  value  force  character  achieve  using  currency  unit
389/B __label__implementation  __label__greedy  fox  ciel  ha  board  row  column  board  consists  n  cell  cell  contains  either  symbol  symbol  cross  board  connected  set  exactly  cell  board  look  like  cross  picture  show  look  ciel  want  draw  several  cross  board  cross  must  cover  exactly  cell  symbol  cell  symbol  must  belong  cross  cross  share  cell  please  tell  ciel  draw  cross  described  way  contains  size  board  next  describes  row  board  describes  row  board  consists  character  character  either  symbol  symbol  output  single  yes  ciel  draw  cross  described  way  otherwise  output  single
425/A __label__sortings  __label__brute  force  usual  sereja  ha  array  element  let  introduce  notation  swap  operation  following  sequence  action  choose  index  perform  assignment  tmp  mp  maximum  value  function  sereja  get  allowed  perform  swap  operation  contains  next  contains  single  print  maximum  value  sereja  get  allowed  perform  swap  operation
837/C __label__implementation  __label__brute  force  important  person  ha  piece  paper  form  rectangle  ha  seal  seal  leaf  impression  paper  form  rectangle  size  xii  impression  must  parallel  side  piece  paper  seal  rotated  degree  important  person  want  choose  different  seal  put  impression  selected  seal  put  exactly  impression  impression  overlap  touch  side  total  area  occupied  largest  possible  largest  area  occupied  seal  contains  next  print  largest  total  area  occupied  seal  select  seal  print
711/D __label__math  __label__dfs  __label__graphs  coder  chris  baboon  ha  explored  udayland  quite  time  realize  consists  town  numbered  directed  road  udayland  go  town  town  ai  coder  flip  direction  road  udayland  go  town  town  flip  town  town  coder  considers  road  udayland  confusing  sequence  distinct  town  every  road  town  town  another  road  town  town  word  road  confusing  form  directed  cycle  town  coder  wonder  many  set  road  variant  initial  configuration  choose  flip  flipping  road  set  exactly  resulting  network  confusing  note  allowed  flipping  directed  road  town  possibly  town  road  leading  multiple  road  pair  city  input  contains  single  town  udayland  next  contains  denotes  road  going  town  town  print  single  way  flip  set  road  resulting  whole  set  road  confusing  since  large  print  answer  modulo
578/F __label__trees  given  box  full  mirror  box  consists  grid  size  n  cell  grid  contains  mirror  put  shape  degree  horizontal  vertical  mirror  cell  destroyed  want  put  new  mirror  grid  following  condition  satisfied  put  light  ray  horizontally  vertically  middle  unit  segment  side  border  cell  light  neighboring  unit  segment  segment  put  ray  unit  segment  grid  mirror  box  penetrated  least  light  ray  horizontally  vertically  put  box  according  rule  previous  paragraph  tried  putting  mirror  find  many  way  many  possible  way  answer  might  large  please  find  result  modulo  prime  mod  contains  mod  od  mod  prime  indicates  dimension  box  mod  module  answer  following  contains  string  length  string  contains  denotes  mirror  grid  ha  destroyed  guaranteed  output  answer  modulo  mod
342/A __label__implementation  __label__greedy  xenia  mathematician  ha  sequence  consisting  divisible  positive  want  split  sequence  group  group  following  condition  held  divide  divide  naturally  xenia  want  element  sequence  belong  exactly  group  thus  required  partition  exists  ha  group  help  xenia  find  required  partition  else  say  exist  contains  element  sequence  next  contains  positive  guaranteed  divisible  required  partition  exists  print  group  print  group  value  element  contains  print  value  increasing  order  separate  group  group  whitespaces  multiple  solution  print
842/A __label__brute  force  kirill  play  new  computer  game  came  potion  store  buy  potion  potion  characterized  amount  experience  cost  efficiency  potion  ratio  amount  experience  cost  efficiency  non  l  x  potion  experience  cost  store  potion  kirill  want  buy  potion  ha  efficiency  able  string  contains  print  yes  without  quote  potion  efficiency  exactly  bought  store  without  quote  otherwise
1202/B __label__dp  __label__brute  force  suppose  special  counter  counter  store  value  decimal  counter  ha  value  counter  performs  following  algorithm  print  lowest  digit  add  either  value  sequence  counter  generates  starting  example  counter  act  follows  print  add  value  current  value  output  print  add  value  current  value  output  print  add  value  current  value  output  print  add  value  current  value  output  print  add  value  current  value  output  possible  output  example  counter  could  generate  output  chose  add  step  wrote  printed  sequence  counter  sequence  wa  corrupted  several  element  sequence  could  erased  like  recover  data  lost  even  know  type  counter  used  decimal  string  remaining  data  sequence  calculate  minimum  digit  insert  string  make  possible  output  counter  note  change  order  digit  string  erase  insertion  allowed  contains  single  string  remaining  data  guaranteed  print  matrix  indexed  indexed  equal  minimum  digit  insert  string  make  possible  output  counter  way
981/H __label__math  __label__dp  __label__data  structures  given  tree  vertex  select  necessarily  distinct  simple  path  way  possible  split  edge  tree  set  edge  contained  path  edge  part  exactly  path  edge  part  selected  path  latter  set  non  empty  compute  way  select  path  modulo  path  enumerated  word  way  considered  distinct  edge  path  contains  edge  way  doe  contains  vertex  tree  desired  path  next  describe  edge  tree  contains  endpoint  edge  guaranteed  given  edge  form  tree  print  way  select  enumerated  necessarily  distinct  simple  path  way  edge  either  contained  path  contained  exactly  path  contained  path  intersection  path  non  empty
435/D __label__dp  __label__greedy  __label__brute  force  given  n  grid  node  black  others  white  moreover  ordinary  grid  unit  square  grid  ha  painted  diagonal  figure  example  grid  size  node  grid  black  node  white  task  count  triangle  given  grid  corner  match  white  node  area  positive  side  along  grid  horizontal  vertical  diagonal  side  contains  black  node  contains  following  character  description  grid  character  equal  node  horizontal  vertical  painted  white  otherwise  node  painted  black  horizontal  numbered  starting  top  bottom  vertical  numbered  starting  left  right  print  single  required  triangle
868/E __label__dp  __label__graphs  __label__trees  given  tree  connected  non  oriented  graph  without  cycle  vertex  numbered  length  edge  vertex  policeman  vertex  xj  criminal  located  policeman  walk  along  edge  speed  criminal  move  arbitrary  large  speed  criminal  moment  point  policeman  instantly  get  caught  policeman  determine  time  needed  policeman  catch  criminal  assuming  everybody  behaves  optimally  criminal  maximize  time  policeman  minimizes  time  everybody  know  position  everybody  else  moment  time  contains  single  vertex  tree  next  denoting  edge  length  guaranteed  given  graph  tree  next  contains  single  vertex  policeman  start  next  contains  single  criminal  next  contains  j  xj  vertex  criminal  located  necessarily  distinct  policeman  catch  criminal  print  single  terrorist  win  without  quote
730/E __label__greedy  berland  programming  contest  come  end  total  team  participated  like  acm  icpc  current  result  stopped  refreshing  hour  contest  end  award  ceremony  result  partially  known  team  value  given  point  team  ha  earned  last  hour  contest  besides  jury  ha  evaluated  submission  sent  last  hour  know  value  point  earned  team  last  hour  value  negative  mean  team  lose  point  contest  team  got  unique  according  contest  rule  team  point  take  higher  place  team  equal  point  team  lower  take  higher  place  team  share  place  award  ceremony  proceeds  following  way  beginning  ceremony  large  screen  show  result  time  moment  hour  end  mean  team  ha  point  jury  unfreezes  result  team  order  result  team  unfrozen  score  change  time  table  result  modified  place  team  change  unfreezing  team  followed  applause  audience  duration  second  place  team  unfreezing  place  right  unfreezing  example  team  doe  change  place  applause  audience  see  award  ceremony  team  unfrozen  exactly  task  find  order  unfreeze  team  total  duration  applause  maximum  possible  input  file  contains  single  team  next  contains  point  team  ha  earned  last  hour  contest  point  earned  team  last  hour  possible  unfreezing  team  negative  score  print  maximal  total  applause  duration  second  jury  choose  order  team  unfreeze
705/B __label__math  peter  parker  want  play  game  octopus  game  cycle  cycle  sequence  vertex  connected  second  second  connected  third  last  connected  cycle  consist  single  isolated  vertex  initially  cycle  consisting  exactly  vertex  player  play  alternatively  peter  go  turn  player  must  choose  cycle  least  vertex  example  vertex  available  cycle  replace  cycle  vertex  chosen  player  player  make  move  loses  game  life  peter  want  test  configuration  initial  cycle  set  actually  play  octopus  initially  ha  empty  set  test  add  cycle  vertex  set  actually  multiset  identical  cycle  test  peter  want  know  player  begin  game  current  set  cycle  win  peter  pretty  good  math  asks  help  input  contains  single  test  peter  make  second  contains  space  separated  stand  vertex  cycle  added  test  print  result  test  order  performed  print  player  move  win  otherwise
1032/D __label__implementation  __label__geometry  problem  consider  simplified  model  barcelona  city  barcelona  represented  plane  street  kind  every  rectangular  grid  detail  make  barcelona  different  manhattan  avenue  called  avinguda  diagonal  represented  set  point  walk  along  street  including  avenue  given  point  somewhere  barcelona  find  minimal  possible  distance  need  travel  get  contains  least  representing  diagonal  avenue  next  contains  denoting  point  find  minimum  possible  travel  distance  answer  considered  correct  absolute  relative  error  doe  exceed
1213/C __label__math  polycarp  reading  book  consisting  page  numbered  every  time  finish  page  divisible  writes  last  digit  page  example  page  divisible  last  digit  correspondingly  sum  task  calculate  sum  digit  polycarp  ha  written  answer  independent  query  input  contains  query  following  query  per  query  given  page  book  required  divisor  respectively  query  print  answer  sum  digit  written  polycarp
154/D __label__math  king  flatland  organize  knight  tournament  winner  get  half  kingdom  favor  princess  legendary  beauty  wisdom  final  test  applicant  courage  strength  fencing  tournament  tournament  held  following  rule  participant  fight  winner  rather  survivor  transfer  next  round  battle  participant  stand  specified  point  axis  coordinate  make  move  turn  participant  move  naturally  move  participant  transfer  point  point  interval  second  participant  transfer  move  point  interval  option  player  move  symmetric  note  required  positive  staying  place  correct  move  time  participant  located  arbitrarily  relative  allowed  jump  enemy  direction  participant  win  us  move  transfer  point  opponent  course  princess  ha  already  chosen  husband  want  make  sweetheart  win  tournament  ha  already  reached  tournament  final  facing  last  battle  princess  asks  tournament  manager  arrange  tournament  finalist  way  sweetheart  win  tournament  considering  player  play  optimally  initial  location  participant  ha  already  announced  pull  string  determine  participant  second  know  participant  secure  victory  ala  princess  learned  military  affair  therefore  asks  determine  battle  end  considering  opponent  play  optimally  player  win  task  determine  winning  move  contains  space  separated  x  coordinate  point  second  participant  start  determine  player  move  correspondingly  print  outcome  battle  without  quote  player  play  optimally  player  win  print  second  without  quote  second  player  win  print  draw  without  quote  nobody  able  secure  victory
585/E __label__math  __label__number  theory  vitalik  philatelist  ha  birthday  today  regular  customer  stamp  store  called  robin  bobin  store  management  decided  make  gift  vitalik  want  buy  stamp  store  give  non  empty  set  remaining  stamp  greatest  common  divisor  gcd  price  stamp  give  gcd  price  purchased  stamp  price  present  stamp  set  equal  vitalik  leave  store  completely  happy  store  management  asks  count  different  situation  vitalik  leave  store  completely  happy  since  required  situation  large  need  find  remainder  modulo  situation  different  stamp  purchased  vitalik  different  present  set  contains  stamp  present  doe  input  contains  distinct  stamp  available  sale  robin  bobin  store  second  contains  sequence  price  stamp  print  single  remainder  sought  situation  modulo
794/E __label__math  oleg  bank  client  igor  analyst  arguing  time  want  pick  gift  present  friend  coder  long  thought  decided  friend  love  eat  carrot  thus  want  pick  best  carrot  present  carrot  arranged  carrot  left  ha  juiciness  oleg  think  love  juicy  carrot  whereas  igor  think  hate  juicy  carrot  thus  oleg  would  like  maximize  juiciness  carrot  choose  igor  would  like  minimize  juiciness  carrot  choose  settle  issue  decided  play  game  oleg  igor  take  turn  play  game  turn  player  choose  carrot  either  end  eat  game  end  carrot  remains  oleg  move  last  remaining  carrot  carrot  give  friend  oleg  sneaky  bank  client  igor  go  restroom  performs  move  start  game  move  eat  carrot  either  end  igor  return  start  game  oleg  still  going  oleg  wonder  juiciness  carrot  give  make  extra  move  beforehand  player  play  optimally  input  contains  single  total  carrot  next  contains  space  separated  denotes  juiciness  carrot  left  output  space  separated  denotes  juiciness  carrot  friend  present
1019/B __label__binary  search  interactive  problem  imur  ishakov  decided  organize  club  people  love  play  famous  game  hat  club  wa  visited  student  even  imur  arranged  circle  held  draw  break  student  pair  something  went  wrong  participant  numbered  participant  participant  adjacent  well  participant  participant  student  wa  given  piece  paper  way  every  adjacent  student  differ  exactly  plan  wa  form  student  pair  turned  appeared  exactly  twice  know  convenient  explain  word  partner  sitting  exactly  student  sit  imur  wondering  people  sitting  given  help  find  pair  people  exists  ask  question  form  wa  received  student  goal  determine  whether  desired  pair  exists  question  beginning  even  given  total  student  allowed  ask  question  ask  question  student  print  standard  output  read  received  student
1195/D2 __label__math  __label__number  theory  problem  differs  previous  absence  constraint  equal  length  team  si  student  going  make  trip  submarine  target  ancient  treasure  sunken  ship  lying  bottom  great  rybinsk  sea  unfortunately  student  know  coordinate  ship  asked  meshanya  hereditary  mage  help  agreed  help  solve  problem  let  denote  function  alternate  digit  digit  written  decimal  notation  without  leading  word  function  alternately  shuffle  digit  writing  lowest  digit  older  starting  result  function  built  right  left  lower  digit  older  digit  argument  ended  remaining  digit  argument  written  familiarize  example  formal  definition  function  example  formally  mishanya  give  array  consisting  task  help  student  calculate  modulo  input  contains  single  element  array  second  input  contains  element  array  print  answer  modulo
84/C __label__implementation  __label__binary  search  perhaps  many  heard  world  biathlon  championship  ha  finished  although  hero  valera  wa  present  spectacular  event  watched  excited  much  decided  enroll  biathlon  section  course  biathlon  sport  proved  difficult  practice  take  much  time  effort  workout  workout  workout  awaited  valera  way  great  achievement  biathlon  workout  probably  know  every  professional  biathlete  ski  fast  shoot  precisely  shooting  range  case  hope  successful  running  shooting  main  component  biathlon  valera  ha  diligent  ski  training  run  really  fast  shooting  accuracy  nothing  write  home  biathlon  base  valera  preparing  competition  huge  rifle  range  target  target  shape  circle  center  circle  located  axis  last  training  session  valera  made  total  shot  make  monitoring  result  easier  rather  well  known  programmer  course  wa  commissioned  write  program  would  reveal  many  target  valera  hit  specifically  target  program  must  print  successful  shot  target  wa  hit  target  considered  hit  shot  inside  circle  boundary  valera  counting  perhaps  thanks  day  win  international  competition  input  file  contains  target  next  description  target  target  circle  whose  center  located  axis  circle  given  coordinate  center  radius  guaranteed  target  coincide  intersect  nested  touch  next  contains  shot  next  description  shot  point  plane  given  coordinate  input  target  shot  numbered  starting  order  input  print  single  target  hit  valera  print  second  target  hit  without  quote  doe  exist  separate  space
474/E __label__dp  __label__data  structures  __label__sortings  __label__trees  __label__binary  search  marmot  found  row  pillar  pillar  ha  height  meter  starting  pillar  marmot  want  jump  pillar  k  pillar  marmot  jump  pillar  absolute  value  marmot  asking  find  jump  sequence  maximal  length  print  contains  second  contains  maximal  length  jump  sequence
1041/F __label__math  __label__dp  __label__data  structures  given  tube  reflective  inside  represented  non  coinciding  parallel  ha  special  point  position  sensor  side  tube  going  emit  laser  ray  tube  choose  point  second  respectively  coordinate  negative  point  responsible  position  laser  point  direction  laser  ray  laser  ray  ray  starting  directed  reflect  side  tube  matter  sensor  reflection  point  sensor  register  ray  ray  hit  exactly  position  sensor  example  laser  ray  note  image  contains  example  sensor  denoted  black  bold  point  tube  side  register  blue  ray  register  red  calculate  maximum  sensor  register  ray  choose  point  second  respectively  contains  sensor  coordinate  second  contains  coordinate  sensor  ascending  order  third  contains  sensor  second  coordinate  fourth  contains  coordinate  sensor  second  ascending  order  print  maximum  sensor  register  ray
617/E __label__data  structures  bob  ha  favorite  length  asks  answer  query  query  given  pair  asks  count  pair  l  xor  equal  input  contains  length  array  query  bob  favorite  respectively  second  contains  bob  array  follow  contains  ii  parameter  query  print  answer  query  order  appear  input
1184/C2 __label__data  structures  cybermen  solved  test  much  quicker  daleks  luckily  daleks  angry  shocking  destroyed  cybermen  fighting  stopped  heidi  gave  another  task  waste  time  point  plane  given  radius  find  maximum  point  covered  ball  radius  ball  radius  center  plane  defined  set  point  manhattan  distance  manhattan  distance  defined  contains  point  radius  ball  respectively  next  contains  describing  coordinate  point  guaranteed  point  distinct  print  maximum  point  ball  radius  cover
115/E __label__dp  __label__data  structures  car  race  organizer  would  like  arrange  race  linear  kingdom  linear  kingdom  ha  consecutive  road  spanning  left  right  road  numbered  left  right  thus  road  follow  order  increasing  several  race  held  road  race  use  consecutive  subset  road  race  pay  amount  money  race  held  race  overlap  time  road  used  several  race  unfortunately  road  bad  condition  need  repair  road  ha  repair  cost  associated  required  pay  cost  repair  road  race  take  place  road  used  race  renovated  task  repair  road  possibly  none  maximize  profit  profit  defined  total  money  get  race  held  minus  total  money  spent  repair  road  note  decide  repair  road  gain  profit  print  maximum  profit  gain  contains  single  space  separated  denoting  road  race  respectively  follow  single  non  negative  exceeding  denoting  cost  repair  road  cost  given  order  road  road  finally  follow  single  space  separated  triplet  triplet  given  bb  mean  race  describe  use  road  inclusive  held  get  print  single  denoting  maximum  possible  profit  gain
474/F __label__math  __label__data  structures  __label__number  theory  mole  hungry  found  ant  colony  consisting  ant  ordered  row  ant  ha  strength  order  make  dinner  interesting  mole  organizes  version  hunger  game  ant  chooses  pair  ant  index  inclusively  fight  ant  fight  ant  get  battle  point  divide  ant  get  battle  point  divide  fight  finished  mole  make  ranking  ant  battle  point  obtained  going  freed  word  took  point  every  fight  participated  mole  eats  rest  ant  note  many  ant  freed  even  none  order  choose  best  sequence  mole  give  segment  asks  many  ant  going  eat  ant  fight  contains  size  ant  colony  second  contains  strength  ant  third  contains  test  case  next  contains  ii  describing  query  print  standard  output  contains  ant  mole  eats  segment
901/A __label__trees  __label__constructive  algorithms  sasha  taking  part  programming  competition  problem  check  rooted  tree  isomorphic  ha  never  seen  problem  experienced  participant  guessed  match  tree  sequence  compare  sequence  instead  tree  sasha  want  match  tree  sequence  height  tree  equal  vertex  distance  edge  root  unfortunately  time  sasha  intuition  wa  wrong  could  several  tree  matching  sequence  show  need  write  program  given  sequence  build  non  isomorphic  rooted  tree  match  sequence  determines  tree  rooted  tree  isomorphic  reenumerate  vertex  way  index  root  becomes  equal  index  root  second  tree  tree  become  equal  height  rooted  tree  maximum  edge  path  root  vertex  contains  single  height  tree  second  contains  sequence  sum  doe  exceed  guaranteed  least  tree  matching  sequence  tree  matching  sequence  print  perfect
919/E __label__math  __label__number  theory  given  task  find  many  positive  satisfy  modp  nn  modp  known  constant  contains  guaranteed  prime  print  single  possible  answer
1102/A __label__math  given  sequence  divide  set  way  element  belongs  exactly  set  sum  um  minimum  possible  value  absolute  value  sum  sum  element  set  input  contains  print  minimum  possible  value  sum  um  divide  initial  sequence  set
413/C __label__math  __label__greedy  jeopardy  intellectual  game  player  answer  question  earn  point  company  conduct  simplified  jeopardy  tournament  best  company  lucky  coincidence  old  rival  made  final  company  company  final  question  auction  question  regular  question  question  ha  price  price  question  point  game  player  chose  question  question  auction  player  chose  change  price  current  point  strictly  larger  price  question  new  price  question  le  original  price  greater  current  point  player  chose  question  correct  answer  brings  player  point  equal  price  question  wrong  answer  question  reduces  player  point  value  question  price  game  follows  company  selects  question  question  chosen  answered  previous  question  correctly  answered  question  person  chose  last  chooses  employee  support  team  want  calculate  maximum  possible  point  team  get  luck  side  whole  game  always  correctly  answer  question  perhaps  going  surprised  problem  wa  entrusted  solve  contains  space  separated  min  total  question  auction  question  correspondingly  second  contains  space  separated  price  question  third  contains  distinct  auction  question  assume  question  numbered  single  print  answer  problem  maximum  point  company  get  play  optimally  well  guaranteed  answer  fit  bit  signed  type
1041/D __label__data  structures  __label__binary  search  plane  flying  constant  height  meter  ground  surface  let  consider  flying  point  point  parallel  axis  glider  inside  plane  ready  start  flight  moment  sake  simplicity  let  consider  start  plane  coordinate  jumping  plane  fly  direction  plane  parallel  axis  covering  unit  distance  every  second  naturally  descend  thus  second  coordinate  decrease  unit  every  second  ascending  air  flow  certain  segment  segment  characterized  representing  endpoint  segment  share  common  point  glider  inside  segment  descend  second  coordinate  stay  second  glider  still  fly  along  axis  covering  unit  distance  every  second  glider  jump  stop  otherwise  jump  stop  determine  maximum  distance  along  axis  point  glider  flight  start  point  flight  end  glider  choose  coordinate  jump  plane  start  flight  touching  ground  glider  stop  altogether  glide  ascending  airflow  segment  second  coordinate  contains  ascending  air  flow  segment  altitude  plane  flying  respectively  next  contains  endpoint  ascending  air  flow  segment  segment  intersect  given  ascending  order  print  maximum  distance  along  axis  glider  fly  point  jump  plane  point  land  start  flight  coordinate
498/D __label__dp  __label__data  structures  __label__number  theory  country  consists  city  located  along  straight  highway  let  city  consecutive  order  occur  along  highway  thus  city  connected  segment  highway  segment  connects  city  every  segment  highway  associated  positive  period  traffic  jam  appearance  order  get  city  city  driver  use  following  tactic  initially  driver  city  current  time  equal  driver  arrives  city  perfors  following  action  current  time  multiple  segment  highway  traffic  problem  driver  stay  current  city  unit  time  formally  speaking  assign  current  time  multiple  segment  highway  clear  driver  us  unit  time  move  city  formally  assign  developing  new  traffic  control  system  want  consecutively  process  query  type  determine  final  value  time  ride  city  city  assuming  apply  tactic  described  note  query  reset  replace  period  traffic  jam  appearing  segment  value  formally  assign  write  code  effectively  process  query  given  contains  single  highway  segment  connect  city  second  contains  period  traffic  jam  appearance  segment  highway  next  contains  single  query  process  next  description  query  format  query  type  character  task  process  query  type  case  following  constraint  satisfied  character  need  process  query  second  type  case  following  constraint  satisfied  query  type  output  single  final  value  time  driving  city  city  process  query  order  given  input
1152/E __label__dfs  __label__graphs  __label__constructive  algorithms  permutation  length  sequence  containing  exactly  example  sequence  permutation  length  neko  wa  thought  array  positive  permutation  length  performed  following  constructed  array  length  min  constructed  array  length  max  constructed  array  length  constructed  array  length  example  array  wa  permutation  wa  neko  would  constructed  following  array  wrote  array  piece  paper  forgot  year  later  wa  cleaning  room  discovered  old  piece  paper  array  written  remember  array  permutation  used  case  neko  made  mistake  array  permutation  resulting  print  otherwise  help  recover  possible  array  contains  element  array  second  contains  third  contains  neko  made  mistake  array  permutation  leading  print  otherwise  print  positive  denoting  element  array
392/B __label__dp  tower  hanoi  well  known  mathematical  puzzle  consists  rod  disk  different  size  slide  onto  rod  puzzle  start  disk  neat  stack  ascending  order  size  rod  smallest  top  thus  making  conical  shape  objective  puzzle  move  entire  stack  another  rod  obeying  following  simple  rule  disk  moved  time  move  consists  taking  upper  disk  stack  placing  top  another  stack  disk  moved  uppermost  disk  stack  disk  placed  top  smaller  disk  disk  puzzle  solved  move  minimum  move  required  solve  tower  hanoi  puzzle  disk  wikipedia  smally  puzzle  similar  famous  tower  hanoi  tower  hanoi  puzzle  need  solve  puzzle  minimum  move  smally  puzzle  move  cost  money  need  solve  puzzle  minimal  cost  beginning  smally  puzzle  disk  rod  moving  disk  rod  rod  cost  tij  unit  money  goal  puzzle  move  disk  third  rod  problem  given  matrix  need  count  minimal  cost  solving  smally  puzzle  consisting  disk  contains  matrix  tij  ij  following  contains  single  disk  guaranteed  tii  print  single  minimum  cost  solving  smally  puzzle
457/B __label__greedy  piegirl  wa  asked  implement  table  join  operation  distributed  database  system  minimizing  network  traffic  suppose  want  join  table  ha  certain  row  distributed  different  partition  table  distributed  cluster  consisting  partition  partition  index  ha  row  similarly  second  cluster  containing  table  ha  partition  row  network  operation  copy  row  partition  partition  end  row  row  partition  ha  row  determine  minimal  network  operation  achieve  contains  second  contains  description  cluster  space  separated  similarly  third  describes  second  cluster  space  separated  print  minimal  copy  operation
414/A __label__constructive  algorithms  __label__number  theory  holiday  mashmokh  bos  bimokh  playing  game  invented  mashmokh  game  mashmokh  writes  sequence  distinct  board  bimokh  make  several  possibly  move  move  remove  second  board  second  move  remove  second  remaining  sequence  board  bimokh  stop  board  contains  le  bimokh  remove  board  get  gcd  point  beginning  game  bimokh  ha  point  mashmokh  want  win  game  reason  want  bos  get  exactly  point  total  guy  know  choose  initial  sequence  right  way  please  help  find  distinct  bos  score  exactly  point  mashmokh  memorize  huge  therefore  must  input  contains  space  separated  sequence  exist  output  otherwise  output  distinct  space  separated
710/B __label__sortings  __label__brute  force  given  point  coordinate  find  point  sum  distance  given  point  minimal  contains  point  second  contains  coordinate  given  point  print  position  optimal  point  several  optimal  point  print  position  leftmost  guaranteed  answer  always
408/B __label__implementation  little  vasya  read  article  magazine  make  beautiful  handmade  garland  colored  paper  vasya  immediately  went  store  bought  colored  sheet  paper  area  sheet  square  meter  garland  must  consist  exactly  piece  colored  paper  arbitrary  area  piece  certain  color  make  garland  vasya  arbitrarily  cut  existing  colored  sheet  piece  vasya  obliged  use  sheet  make  garland  vasya  want  garland  attractive  possible  want  maximize  total  area  piece  paper  garland  calculate  maximum  total  area  piece  paper  garland  vasya  get  contains  non  empty  sequence  small  english  letter  letter  mean  vasya  ha  sheet  paper  corresponding  color  second  contains  non  empty  sequence  small  english  letter  correspond  color  piece  paper  garland  vasya  want  make  print  maximum  possible  total  area  piece  paper  garland  vasya  want  get  impossible  make  garland  sheet  got  guaranteed  answer  always
469/B __label__implementation  little  little  good  friend  always  chat  online  schedule  little  ha  fixed  schedule  always  online  moment  time  border  inclusive  schedule  little  quite  strange  depends  time  get  get  time  online  moment  time  border  inclusive  get  time  segment  shifted  become  moment  time  little  little  online  simultaneosly  chat  online  happily  know  little  get  moment  time  border  inclusive  know  little  want  get  moment  time  suitable  chatting  little  must  least  common  moment  time  schedule  many  moment  time  segment  suit  contains  space  separated  next  contains  space  separated  next  contains  space  separated  j  j  guaranteed  valid  output  single  moment  time  segment  suit  online  conversation
1249/C2 __label__math  __label__greedy  __label__binary  search  difference  easy  hard  version  maximum  value  given  positive  really  love  good  want  find  smallest  good  greater  equal  positive  called  good  represented  sum  distinct  power  duplicate  power  allowed  example  good  good  good  good  represent  sum  distinct  power  good  represent  sum  distinct  power  example  representation  invalid  good  represent  sum  distinct  power  example  representation  invalid  note  exist  representation  sum  power  none  consists  distinct  power  given  positive  find  smallest  good  answer  independent  query  input  contains  query  query  follow  query  contains  query  print  smallest  good
1172/E __label__data  structures  nauuo  girl  love  traveling  day  went  tree  old  driver  tree  literally  tree  old  driver  tree  connected  graph  consisting  node  edge  node  ha  color  nauuo  visit  odt  simple  path  tree  old  driver  car  nauuo  want  visit  see  different  color  journey  know  simple  path  traveling  want  calculate  sum  different  color  different  path  help  odt  redecorated  modification  modification  change  single  node  color  nauuo  want  know  answer  modification  note  problem  consider  simple  path  simple  path  different  simple  path  contains  node  modification  second  contains  initial  color  node  next  contains  denoting  edge  guaranteed  given  edge  form  tree  next  contains  mean  modification  change  color  node  output  contains  answer  beginning  rest  answer  every  modification  given  order
1045/D __label__math  __label__trees  intergalactic  empire  bubbledom  planet  pair  directly  connected  way  wormhole  wormhole  wormhole  extreme  religious  importance  bubbledom  set  planet  bubbledom  consider  intergalactic  kingdom  planet  set  reach  traversing  wormhole  given  bubbledom  kingdom  word  network  planet  wormhole  tree  bubbledom  facing  powerful  enemy  possessing  teleportation  technology  enemy  attack  every  night  government  bubbledom  retake  planet  day  single  attack  enemy  attack  every  planet  bubbledom  planet  resilient  others  planet  planet  fall  probability  every  night  including  government  reinforces  weakens  defense  single  planet  government  bubbledom  interested  following  question  expected  intergalactic  kingdom  bubbledom  split  single  enemy  attack  get  chance  rebuild  word  need  print  expected  connected  component  every  attack  contains  denoting  planet  bubbledom  numbered  next  contains  different  real  interval  specified  digit  decimal  point  denoting  probability  corresponding  planet  fall  next  wormhole  bubbledom  wormhole  specified  planet  connects  next  contains  positive  denoting  enemy  attack  next  non  negative  real  interval  denoting  planet  government  bubbledom  decided  reinforce  weaken  along  new  probability  planet  fall  output  contains  represents  expected  kingdom  left  enemy  attack  answer  considered  correct  absolute  relative  error  doe  exceed
1061/B __label__implementation  __label__greedy  __label__sortings  came  exhibition  exhibit  ha  drawn  attention  consists  stack  block  stack  consists  block  resting  surface  height  exhibit  equal  consequently  block  stack  le  equal  camera  ceiling  see  top  view  block  camera  right  wall  see  side  view  block  find  maximum  block  remove  view  camera  would  change  note  originally  block  stacked  floor  required  stay  connected  floor  block  removed  gravity  whole  exhibition  block  would  fall  even  block  underneath  removed  allowed  move  block  hand  either  contains  stack  height  exhibit  second  contains  block  stack  left  right  print  exactly  maximum  block  removed
260/A __label__math  __label__implementation  vasya  ha  got  vasya  find  short  decided  repeat  operation  lengthening  time  operation  lengthening  mean  adding  exactly  digit  decimal  notation  right  provided  resulting  divisible  vasya  impossible  obtain  divisible  lengthening  operation  performed  task  help  vasya  print  get  applying  lengthening  operation  time  contains  single  print  without  leading  vasya  get  applies  lengthening  operation  time  exists  print  multiple  possible  answer  print
392/D __label__data  structures  array  consists  smally  want  find  following  condition  hold  appears  union  appears  either  element  element  element  course  smally  want  huge  want  sum  small  possible  please  help  find  minimal  possible  sum  contains  single  second  contains  space  separated  array  third  contains  description  array  format  fourth  contains  description  array  format  following  constraint  hold  print  single  minimum  possible  sum
1013/B __label__greedy  array  element  operation  select  replace  element  denotes  bitwise  operation  want  array  least  equal  element  applying  operation  possibly  none  word  least  distinct  index  determine  whether  possible  achieve  possible  minimal  operation  apply  contains  element  array  second  contains  element  array  print  single  denoting  minimal  operation  impossible
955/A __label__math  __label__greedy  waking  andrew  realised  forgotten  feed  cat  another  time  guess  cat  cat  current  hunger  level  point  moreover  minute  without  food  increase  hunger  point  time  andrew  visit  store  tasty  bun  sold  assume  take  time  get  store  back  bun  cost  rouble  decrease  hunger  point  since  demand  bakery  drop  heavily  evening  special  discount  bun  starting  note  cost  might  become  rational  course  bun  sold  part  determine  minimum  amount  money  andrew  ha  spend  order  feed  cat  cat  considered  fed  hunger  level  le  equal  contains  h  time  andrew  awakening  second  contains  output  minimum  amount  money  decimal  digit  answer  considered  correct  absolute  relative  error  doe  exceed
1120/A __label__implementation  __label__greedy  holiday  spring  town  shortriver  traditionally  conduct  flower  festival  townsfolk  wear  traditional  wreath  festival  wreath  contains  exactly  flower  work  material  wreath  citizen  shortriver  cut  longest  flowered  liana  grew  town  year  liana  sequence  denotes  type  flower  position  year  liana  long  mean  every  citizen  get  wreath  soon  liana  inserted  special  cutting  machine  order  make  work  material  wreath  machine  work  simple  manner  cut  flower  beginning  liana  another  flower  piece  flower  called  workpiece  machine  work  le  flower  liana  diana  ha  found  weaving  schematic  beautiful  wreath  imaginable  order  weave  flower  must  flower  type  type  type  appears  sequence  several  time  least  many  flower  type  occurrence  flower  sequence  order  flower  workpiece  doe  matter  diana  ha  chance  remove  flower  liana  inserted  cutting  machine  remove  flower  part  liana  without  breaking  liana  piece  diana  remove  many  flower  happen  citizen  get  wreath  could  flower  removed  liana  least  workpiece  would  conform  schematic  machine  would  still  able  create  least  workpiece  contains  k  flower  liana  flower  wreath  amount  citizen  length  diana  flower  sequence  respectively  second  contains  type  flower  liana  third  contains  sequence  diana  schematic  impossible  remove  flower  would  least  workpiece  least  fullfills  diana  schematic  requirement  output
845/G __label__math  __label__dfs  __label__graphs  given  undirected  graph  weighted  edge  length  path  vertex  bitwise  xor  weight  edge  belonging  path  edge  traversed  included  bitwise  xor  time  find  minimum  length  path  vertex  vertex  note  graph  multiple  edge  loop  guaranteed  graph  connected  contains  vertex  edge  respectively  follow  containing  denote  edge  connects  vertex  ha  weight  print  minimum  length  path  vertex
460/E __label__math  __label__sortings  __label__brute  force  __label__geometry  roland  love  growing  flower  ha  recently  grown  beautiful  rose  point  cartesian  coordinate  system  rose  beautiful  roland  afraid  evil  force  try  steal  protect  rose  roland  want  build  watch  tower  let  assume  tower  point  plane  distance  rose  besides  roland  assumes  tower  built  point  coordinate  sum  square  distance  pair  tower  must  large  possible  note  roland  build  several  tower  point  build  point  help  roland  build  tower  point  sum  square  distance  tower  maximum  possible  note  distance  problem  defined  euclidian  distance  point  contains  print  maximum  possible  sum  squared  distance  following  print  coordinate  tower  tower  must  inside  border  circle  radius  note  several  tower  located  point  plane  tower  located  point
587/E __label__data  structures  duff  queen  country  andarz  competitive  programming  fan  saw  minister  malek  free  gave  sequence  consisting  non  negative  asked  perform  query  sequence  type  query  given  malek  perform  l  bitwise  exclusive  given  malek  tell  score  sequence  score  sequence  different  kheshtaks  non  negative  kheshtak  sequence  exists  subsequence  let  denote  bi  ix  possibly  empty  x  subsequence  empty  unlike  duff  malek  programmer  asked  help  please  help  perform  query  input  contains  second  input  contains  separated  space  next  query  start  type  corresponding  query  otherwise  print  answer  query  second  type
445/B __label__greedy  __label__dfs  dzy  love  chemistry  enjoys  mixing  chemical  dzy  ha  chemical  pair  react  want  pour  chemical  test  tube  need  pour  order  let  consider  danger  test  tube  danger  empty  test  tube  every  time  dzy  pours  chemical  already  chemical  test  tube  react  danger  test  tube  multiplied  otherwise  danger  remains  find  maximum  possible  danger  pouring  chemical  optimal  order  contains  space  separated  next  contains  space  separated  mean  chemical  react  chemical  pair  chemical  appear  input  consider  chemical  numbered  order  print  single  maximum  possible  danger
490/C __label__math  __label__brute  force  __label__strings  __label__number  theory  polycarpus  participates  competition  hacking  new  secure  messenger  almost  carefully  studied  interaction  protocol  polycarpus  came  conclusion  secret  key  obtained  properly  cut  public  key  application  part  public  key  long  consist  even  million  digit  polycarpus  need  find  way  cut  public  key  nonempty  part  left  part  divisible  separate  second  right  part  divisible  separate  part  positive  leading  polycarpus  know  value  help  polycarpus  find  suitable  method  cut  public  key  input  contains  public  key  messenger  without  leading  length  range  digit  second  contains  pair  space  separated  positive  print  yes  without  quote  method  satisfying  condition  exists  case  next  print  left  right  part  cut  part  concatenated  must  exactly  identical  public  key  left  part  must  divisible  right  part  must  divisible  part  must  positive  leading  several  answer  print
957/A __label__implementation  overlooking  captivating  blend  myriad  vernal  hue  arkady  painter  lay  long  long  canvas  arkady  ha  sufficiently  large  amount  paint  colour  cyan  magenta  yellow  dimensional  canvas  split  consecutive  segment  segment  need  painted  colour  arkady  ha  already  painted  possibly  none  segment  pass  paintbrush  determine  whether  least  way  colouring  unpainted  segment  adjacent  segment  colour  way  considered  different  segment  painted  different  colour  contains  single  positive  length  canvas  second  contains  string  character  either  denoting  segment  painted  cyan  denoting  painted  magenta  painted  yellow  unpainted  least  different  way  painting  output  yes  otherwise  output  without  quote
455/E __label__data  structures  serega  fedor  play  function  day  came  interesting  function  look  like  array  length  serega  fedya  want  know  value  function  take  point  want  calculate  value  manually  ask  help  contains  length  array  next  contains  next  contains  query  next  contains  ii  mean  fedor  serega  want  know  value  print  answer  guy  query
1157/A __label__implementation  let  denote  function  way  add  least  trailing  resulting  remove  example  say  reachable  apply  function  possibly  time  get  result  example  reachable  reachable  given  task  count  many  different  reachable  contains  print  different  reachable
1249/D1 __label__greedy  difference  easy  hard  version  constraint  given  segment  coordinate  axis  segment  intersect  lie  inside  even  coincide  segment  cover  point  point  called  bad  covered  strictly  segment  task  remove  minimum  segment  bad  point  input  contains  segment  maximum  segment  point  covered  next  segment  contains  endpoint  segment  print  minimum  segment  need  remove  bad  point
472/G __label__data  structures  simple  way  create  hard  task  take  simple  problem  query  try  find  algorithm  solve  faster  bruteforce  kind  task  usually  appears  contest  usually  involves  data  structure  let  try  create  task  example  take  hamming  distance  problem  binary  string  length  hamming  distance  position  corresponding  symbol  different  example  hamming  distance  different  symbol  marked  bold  use  hamming  distance  problem  query  following  way  given  string  several  query  query  hamming  distance  string  ap  ap  ap  en  bp  bp  bp  en  note  problem  string  based  contains  string  second  contains  string  character  string  either  third  contains  query  following  contains  len  en  en  denote  parameter  current  query  output  answer  query
1091/A __label__math  __label__implementation  __label__brute  force  alice  bob  decorating  christmas  tree  alice  want  type  ornament  used  christmas  tree  yellow  blue  red  yellow  ornament  blue  ornament  red  ornament  bob  opinion  christmas  tree  beautiful  blue  ornament  used  greater  exactly  yellow  ornament  red  ornament  used  greater  exactly  blue  ornament  yellow  ornament  blue  ornament  red  ornament  choose  yellow  blue  red  ornament  alice  want  choose  many  ornament  possible  want  christmas  tree  beautiful  according  bob  opinion  example  paragraph  would  choose  yellow  blue  red  ornament  use  ornament  maximum  since  alice  bob  busy  preparing  food  new  year  eve  asking  find  maximum  ornament  used  beautiful  christmas  tree  guaranteed  possible  choose  least  ornament  contains  yellow  blue  red  ornament  guaranteed  possible  choose  least  ornament  print  maximum  ornament  used
1029/D __label__math  __label__implementation  given  array  consisting  positive  let  call  concatenation  obtained  writing  right  another  without  changing  order  example  concatenation  count  ordered  pair  position  array  concatenation  divisible  contains  second  contains  print  single  ordered  pair  position  array  concatenation  divisible
593/A __label__implementation  __label__brute  force  andrew  often  read  article  favorite  magazine  char  main  feature  article  us  distinct  letter  andrew  decided  send  article  magazine  written  article  decided  take  random  magazine  char  sending  magazine  char  need  adapt  text  format  journal  remove  word  chosen  article  way  remaining  text  written  using  distinct  letter  since  payment  depends  non  space  character  article  andrew  want  keep  word  maximum  total  length  input  contains  word  article  chosen  andrew  following  contains  word  word  consist  small  english  letter  total  length  exceed  word  guaranteed  distinct  case  allowed  use  word  article  many  time  appears  input  print  single  maximum  possible  total  length  word  andrew  article
1208/D __label__implementation  __label__greedy  __label__data  structures  __label__binary  search  array  called  permutation  contains  exactly  example  following  array  permutation  following  array  permutation  hidden  permutation  length  index  given  equal  sum  word  sum  element  element  smaller  element  task  restore  permutation  contains  single  size  permutation  second  contains  guaranteed  array  corresponds  valid  permutation  length  print  element  restored  permutation  show  answer  always  unique
713/E __label__dp  __label__binary  search  owl  sonya  decided  become  partymaker  train  role  gather  owl  friend  country  house  chair  located  circle  consequently  numbered  thus  chair  neighbouring  chair  neighbouring  chair  occupied  friend  friend  total  friend  occupy  chair  rule  following  participant  remove  game  chair  currently  sitting  participant  choose  direction  follow  clockwise  index  increase  go  counter  clockwise  index  decrease  go  direction  coincide  different  pair  owl  turn  guest  move  step  chosen  direction  guest  move  position  chair  remove  chair  game  game  end  chair  left  game  owl  busy  want  get  rid  game  soon  possible  cooperate  pick  direction  goal  find  minimum  move  required  finish  game  input  contains  single  length  circle  second  contains  single  friend  last  contains  increasing  sequence  initial  position  owl  print  minimum  move  required  finish  game  note  answer
1250/I __label__greedy  __label__brute  force  __label__binary  search  director  famous  dance  show  plan  tour  already  decided  tour  consist  concert  dancer  troupe  dancer  characterized  awkwardness  awkwardness  dancer  equal  director  like  diversity  reason  concert  performed  different  set  dancer  dancer  perform  multiple  concert  example  possible  set  dancer  performs  concert  subset  set  dancer  performs  another  concert  constraint  set  dancer  perform  twice  director  prefers  set  larger  dancer  set  smaller  dancer  set  consist  dancer  director  prefers  ha  smaller  sum  awkwardness  dancer  set  dancer  equal  size  total  awkwardness  director  doe  preference  better  marketing  study  show  viewer  ready  come  concert  total  awkwardness  dancer  performing  concert  greater  director  want  find  best  plan  concert  think  write  possible  set  dancer  get  rid  set  total  awkwardness  greater  remaining  set  dancer  sorted  according  preference  preferred  set  dancer  give  concert  second  preferred  set  second  concert  concert  turn  total  valid  set  le  total  concert  equal  valid  set  turn  director  delegated  finding  plan  please  notice  might  several  acceptable  plan  due  fact  director  doe  preference  set  dancer  size  total  awkwardness  case  plan  good  enough  concert  find  dancer  total  awkwardness  set  performing  last  concert  find  set  dancer  contains  test  case  input  test  case  follow  test  case  begin  containing  total  dancer  maximum  acceptable  awkwardness  set  dancer  maximum  concert  respectively  following  contains  awkwardness  dancer  sum  value  test  case  input  doe  exceed  similarly  sum  value  test  case  input  doe  exceed  print  answer  test  case  input
510/B __label__dfs  fox  ciel  playing  mobile  puzzle  game  called  dot  basic  level  played  board  size  n  cell  like  cell  contains  dot  ha  color  use  different  uppercase  latin  character  express  different  color  key  game  find  cycle  dot  color  consider  blue  dot  picture  forming  circle  example  formally  call  sequence  dot  cycle  meet  following  condition  dot  different  different  least  dot  belong  color  adjacent  adjacent  cell  called  adjacent  share  edge  determine  exists  cycle  field  contains  row  column  board  follow  contains  string  consisting  character  expressing  color  dot  character  uppercase  latin  letter  output  yes  exists  cycle  otherwise
689/D __label__data  structures  __label__binary  search  mike  mike  old  childhood  rival  opposite  everything  except  programming  today  problem  solve  together  know  every  ha  sequence  length  given  query  form  pair  mike  instantly  tell  value  mike  instantly  tell  value  suppose  robot  asks  possible  different  query  pair  make  exactly  query  count  many  time  answer  coincide  thus  many  pair  satisfied  many  occasion  robot  count  contains  second  contains  sequence  third  contains  sequence  print  occasion  robot  count  thus  many  pair  satisfied
908/B __label__implementation  __label__brute  force  bob  programmed  robot  navigate  maze  maze  ha  obstacle  empty  cell  denoted  character  obstacle  denoted  single  robot  maze  start  position  denoted  character  position  ha  obstacle  single  exit  maze  position  denoted  character  position  ha  obstacle  robot  move  left  right  bob  programmed  robot  wrote  string  digit  consisting  digit  inclusive  intended  digit  correspond  distinct  direction  robot  would  follow  direction  order  reach  exit  unfortunately  forgot  actually  assign  direction  digit  robot  choose  random  mapping  digit  distinct  direction  robot  map  distinct  digit  distinct  direction  robot  follow  instruction  according  given  string  order  chosen  mapping  instruction  would  lead  robot  edge  maze  hit  obstacle  robot  crash  break  robot  reach  exit  point  robot  stop  following  instruction  bob  trouble  debugging  robot  would  like  determine  mapping  digit  direction  would  lead  robot  exit  input  denoting  dimension  maze  next  exactly  character  denoting  maze  character  maze  exactly  exactly  maze  last  single  string  instruction  given  robot  character  digit  print  single  mapping  digit  direction  lead  robot  exit
527/D __label__dp  __label__implementation  __label__greedy  __label__data  structures  __label__sortings  clique  problem  well  known  complete  problem  simplification  formulated  follows  consider  undirected  graph  required  find  subset  vertex  maximum  size  connected  edge  graph  sound  simple  nobody  know  algorithm  find  solution  problem  polynomial  time  size  graph  many  complete  problem  clique  problem  easier  consider  specific  type  graph  consider  distinct  point  let  point  coordinate  weight  let  form  graph  whose  vertex  point  edge  connect  exactly  pair  point  distance  le  sum  weight  formallyi  find  size  maximum  clique  graph  contains  point  next  contains  coordinate  weight  point  different  print  single  vertex  maximum  clique  given  graph
834/B __label__implementation  __label__data  structures  end  july  time  festive  evening  held  jelly  castle  guest  kingdom  gather  discus  new  trend  world  confectionery  thing  discussed  supposed  disclosed  general  public  information  cause  discord  kingdom  sweetland  case  turn  reach  wrong  hand  necessity  let  uninvited  guest  entrance  jelly  castle  enumerated  uppercase  english  letter  security  measure  guest  known  assigned  entrance  enter  castle  door  entrance  opened  right  guest  arrival  closed  right  arrival  last  guest  enter  castle  entrance  guest  enter  castle  simultaneously  entrance  protected  possible  intrusion  candy  guard  assigned  guard  castle  opened  door  going  left  unguarded  notice  guard  leave  post  door  assigned  closed  slastyona  suspicion  could  uninvited  guest  evening  know  order  invited  guest  entered  castle  want  help  check  whether  wa  moment  door  opened  given  string  guest  guard  second  string  uppercase  english  letter  given  entrance  used  guest  output  yes  least  door  wa  unguarded  time  otherwise
549/G __label__greedy  __label__sortings  __label__constructive  algorithms  like  summer  resident  berland  especially  love  eating  ice  cream  hot  summer  summer  day  large  queue  berland  resident  lined  front  ice  cream  stall  know  ha  certain  amount  berland  dollar  resident  berland  nice  people  person  agrees  swap  place  person  right  behind  dollar  formally  person  stand  behind  person  person  pay  person  dollar  get  swapped  course  person  ha  dollar  swap  place  person  resident  berland  strange  people  particular  get  upset  someone  strictly  smaller  sum  money  front  help  resident  berland  form  order  happy  happy  resident  stand  front  another  resident  stand  le  dollar  note  people  berland  people  honor  agree  swap  place  manner  described  contains  resident  stand  second  contains  space  separated  berland  dollar  man  standing  position  position  numbered  starting  end  impossible  make  resident  happy  print  without  quote  otherwise  print  single  space  separated  must  equal  money  person  position  new  multiple  answer  print
358/C __label__implementation  __label__greedy  __label__constructive  algorithms  dima  ha  birthday  soon  big  day  saryozha  present  dima  seryozha  room  disturb  dima  inna  celebrate  birthday  inna  present  dima  stack  queue  deck  inna  want  present  show  dima  great  programmer  going  give  dima  command  type  command  add  given  container  queue  stack  add  element  end  deck  add  element  beginning  end  extract  distinct  container  tell  extracted  inna  empty  container  queue  container  extract  beginning  stack  container  extract  end  deck  extract  beginning  end  extract  empty  container  every  time  dima  make  command  second  type  inna  kiss  dima  possibly  time  dima  know  inna  perfectly  well  sure  equal  sum  extract  container  operation  said  dima  know  inna  perfectly  well  know  command  inna  give  dima  order  command  help  dima  find  strategy  let  give  kiss  possible  birthday  contains  inna  command  follow  describing  inna  command  consists  mean  inna  give  dima  command  add  container  show  inna  asks  dima  make  extraction  different  container  command  input  must  correspond  output  dima  action
1107/A __label__greedy  __label__strings  given  sequence  consisting  digit  divide  least  segment  segment  consecutive  sequence  element  word  place  separator  digit  sequence  way  element  belongs  exactly  segment  resulting  division  represented  sequence  next  element  sequence  strictly  greater  previous  formally  resulting  division  sequence  element  division  condition  using  numerical  comparing  mean  representation  string  compared  satisfied  example  divide  part  suitable  division  divide  part  bad  division  divide  part  part  task  find  suitable  division  independent  query  input  contains  query  query  contains  digit  query  second  query  contains  string  length  consisting  digit  sequence  digit  query  divided  least  part  way  described  problem  statement  print  single  query
845/E __label__data  structures  __label__binary  search  capital  berland  look  like  rectangle  size  n  square  block  size  fire  known  block  got  caught  fire  block  center  ignition  moreover  position  center  known  stay  unknown  position  distinct  fire  go  following  way  minute  fire  center  ignition  burning  every  next  minute  fire  go  neighbouring  block  burning  consider  block  burn  long  time  exceeds  time  taken  problem  neighbouring  block  touch  current  block  side  corner  berland  fire  deparment  want  estimate  minimal  time  take  fire  lighten  whole  city  remember  position  block  center  ignition  known  positioned  block  help  berland  fire  department  estimate  minimal  time  take  fire  lighten  whole  city  contains  next  coordinate  center  ignition  guaranteed  location  center  ignition  distinct  print  minimal  time  take  fire  lighten  whole  city  minute
461/E __label__strings  __label__binary  search  appleman  toastman  like  game  today  play  game  string  following  rule  firstly  toastman  tell  appleman  string  consisting  letter  appleman  must  build  string  quickly  possible  initially  ha  empty  string  second  append  end  current  string  contiguous  substring  toastman  appleman  beginning  play  game  toastman  ha  already  told  string  appleman  come  string  toastman  think  choose  string  consisting  character  course  want  find  worst  string  appleman  string  appleman  spend  much  time  possible  game  tell  toastman  much  time  appleman  spend  game  toastman  find  worst  string  assume  appleman  play  optimally  therefore  build  string  minimal  possible  time  contains  second  contains  string  string  consists  letter  letter  appears  least  string  print  single  largest  possible  time  appleman  need
822/B __label__implementation  __label__brute  force  __label__strings  erelong  leha  wa  bored  calculating  greatest  common  divisor  factorial  therefore  decided  solve  crossword  well  known  interesting  occupation  though  difficult  time  time  course  solving  crossword  leha  solve  simple  task  able  leha  ha  string  hacker  want  change  string  way  found  substring  change  following  leha  chooses  position  string  replaces  symbol  position  question  mark  hacker  sure  question  mark  comparison  play  role  arbitrary  symbol  example  get  string  result  appear  aabrbb  substring  guaranteed  length  string  exceed  length  string  help  hacker  replace  symbol  possible  result  replacement  found  substring  symbol  considered  equal  symbol  contains  length  string  length  string  correspondingly  second  contains  lowercase  english  letter  string  third  contains  lowercase  english  letter  string  print  single  minimal  symbol  need  replaced
665/E __label__data  structures  day  coder  wrote  array  aith  element  n  subarray  array  sequence  l  r  coder  think  subarray  beautiful  bitwise  xor  element  subarray  least  help  coder  find  beautiful  subarrays  contains  element  array  value  parameter  second  contains  element  array  print  beautiful  subarrays  array
1000/C __label__implementation  __label__data  structures  __label__sortings  given  segment  coordinate  endpoint  every  segment  ha  coordinate  segment  degenerate  point  segment  intersect  nested  even  coincide  task  following  every  calculate  point  coordinate  segment  cover  point  equal  segment  endpoint  cover  point  input  contains  segment  next  segment  contains  pair  endpoint  segment  print  space  separated  equal  point  segment  cover  point  equal
727/D __label__greedy  __label__constructive  algorithms  organizer  programming  contest  decided  present  shirt  participant  different  shirt  size  problem  xxl  xxxl  size  listed  increasing  order  shirt  already  prepared  size  xxxl  given  shirt  size  registration  organizer  asked  participant  shirt  size  want  participant  hesitated  size  could  specify  neighboring  size  mean  size  suit  write  program  determine  whether  possible  present  shirt  participant  competition  course  participant  get  shirt  proper  size  size  wanted  specified  size  neibouring  size  specified  size  possible  program  find  valid  distribution  shirt  input  contains  non  negative  shirt  size  given  size  xxl  xxxl  respectively  total  shirt  exceed  second  contains  positive  participant  following  size  specified  participant  per  participant  contains  information  provided  participant  single  size  size  separated  comma  without  space  size  size  written  increasing  order  guaranteed  size  separated  comma  neighboring  possible  present  shirt  participant  print  without  quote
1250/C __label__data  structures  planning  trip  saint  petersburg  calculation  estimated  spend  ruble  day  stay  saint  petersburg  rent  flat  eat  local  cafe  cetera  day  arrival  day  departure  spend  ruble  saint  petersburg  want  spend  lot  money  trip  decided  work  saint  petersburg  trip  available  project  numbered  last  day  day  inclusive  choose  participate  project  stay  work  saint  petersburg  entire  time  project  last  get  paid  ruble  completing  want  come  optimal  trip  plan  choose  day  arrival  day  departure  set  project  participate  following  condition  met  trip  last  least  day  formally  stay  saint  petersburg  duration  every  project  chosen  formally  total  profit  strictly  positive  maximum  possible  formally  maximize  value  value  positive  assume  matter  many  project  choose  still  time  ability  participate  even  overlap  contains  project  amount  money  spend  day  saint  petersburg  respectively  follow  containing  starting  day  project  ending  day  project  amount  money  get  paid  choose  participate  respectively  impossible  plan  trip  strictly  positive  profit  print
884/C __label__math  __label__greedy  __label__dfs  construction  subway  bertown  almost  finished  president  berland  visit  city  soon  look  new  subway  station  subway  wa  built  according  bertown  transport  law  station  exists  exactly  train  go  station  destination  station  possibly  station  exists  exactly  station  president  consider  convenience  subway  visiting  convenience  ordered  pair  person  start  station  taking  subway  train  possibly  arrive  station  mayor  bertown  think  subway  convenient  enough  president  might  consider  installing  new  mayor  course  current  mayor  want  happen  president  visit  city  mayor  ha  enough  time  rebuild  path  subway  thus  changing  value  subway  station  course  breaking  bertown  transport  law  really  bad  subway  must  built  according  law  even  change  mayor  want  change  way  convenience  subway  maximized  help  calculate  maximum  possible  convenience  get  contains  station  second  contains  current  structure  subway  distinct  print  maximum  possible  value  convenience
673/A __label__implementation  bear  limak  like  watching  sport  going  watch  game  today  game  last  minute  break  minute  either  interesting  boring  consecutive  minute  boring  limak  immediately  turn  know  interesting  minute  task  calculate  many  minute  limak  watch  game  input  contains  interesting  minute  second  contains  tn  given  increasing  order  print  minute  limak  watch  game
621/A __label__implementation  today  wet  shark  given  using  wet  shark  want  get  maximum  possible  even  divisible  sum  please  calculate  value  wet  shark  note  wet  shark  us  sum  even  input  contains  next  contains  space  separated  given  wet  shark  range  inclusive  print  maximum  possible  even  sum  obtained  use  given
1085/B __label__math  vasya  like  solve  equation  today  want  solve  div  xmodk  div  mod  stand  division  modulo  operation  refer  note  exact  definition  equation  positive  parameter  positive  unknown  several  solution  vasya  want  find  smallest  possible  help  contains  print  single  smallest  positive  solution  div  xmodk  guaranteed  equation  ha  least  positive  solution
808/F __label__graphs  __label__binary  search  digital  collectible  card  game  become  popular  recently  vova  decided  try  vova  ha  card  collection  card  characterised  power  magic  level  vova  want  build  deck  total  power  le  magic  allow  vova  place  card  deck  sum  magic  written  card  prime  vova  use  card  level  greater  level  vova  character  moment  vova  character  level  help  vova  determine  minimum  level  need  reach  order  build  deck  required  total  power  contains  follow  contains  represent  corresponding  card  vova  able  build  deck  required  power  print  otherwise  print  minimum  level  vova  ha  reach  order  build  deck
1093/B __label__greedy  __label__sortings  __label__constructive  algorithms  __label__strings  given  string  consisting  lowercase  latin  letter  rearrange  letter  string  wish  task  obtain  good  string  rearranging  letter  given  string  report  impossible  let  call  string  good  palindrome  palindrome  string  read  left  right  right  left  example  string  abacaba  palindrome  string  bba  answer  independent  query  input  contains  query  next  contains  string  contains  string  consisting  lowercase  latin  letter  guaranteed  length  inclusive  print  print  answer  query  impossible  obtain  good  string  rearranging  letter  good  string  obtained  given  rearranging  letter  otherwise
1028/D __label__greedy  __label__data  structures  let  consider  simplified  version  order  book  stock  order  book  list  order  offer  people  want  buy  sell  unit  stock  order  described  direction  buy  sell  price  every  moment  time  every  sell  offer  ha  higher  price  every  buy  offer  problem  ever  existed  order  price  lowest  price  sell  order  highest  price  buy  order  called  best  offer  marked  black  frame  picture  presented  order  book  say  someone  want  sell  product  price  best  sell  offer  higher  price  best  buy  offer  ha  price  possible  action  orderbook  somebody  add  new  order  direction  price  somebody  accepts  best  possible  sell  buy  offer  make  deal  impossible  accept  best  sell  buy  offer  make  deal  worse  price  someone  accepts  offer  removed  orderbook  forever  allowed  add  new  buy  order  price  le  best  sell  offer  want  buy  stock  higher  price  instead  adding  order  accept  best  sell  offer  similarly  add  new  sell  order  price  le  equal  best  buy  offer  example  add  new  offer  sell  already  offer  buy  buy  case  accept  best  buy  offer  damaged  order  book  log  beginning  order  book  every  action  ha  type  add  denotes  adding  new  order  price  unknown  direction  order  must  contradict  order  still  removed  order  book  accept  denotes  accepting  existing  best  offer  price  unknown  direction  direction  action  lost  information  log  always  enough  determine  direction  count  way  correctly  restore  add  action  direction  described  condition  satisfied  moment  since  answer  could  large  output  modulo  impossible  correctly  restore  direction  output  contains  action  log  next  contains  string  accept  add  describing  action  type  price  add  action  different  price  accept  action  guaranteed  order  price  ha  already  added  ha  accepted  output  way  restore  direction  add  action  modulo
1062/D __label__math  __label__implementation  __label__dfs  __label__graphs  given  positive  greater  equal  every  pair  transform  exists  denotes  absolute  value  transformation  score  increase  point  allowed  transform  anymore  initially  score  start  transform  many  time  like  maximum  score  achieve  single  contains  single  given  described  print  maximum  score  achieved  transformation  possible  perform  even  single  transformation  possible  starting  print
1088/C __label__math  __label__greedy  __label__constructive  algorithms  given  array  length  perform  following  operation  choose  index  replace  mean  add  element  prefix  ending  choose  index  replace  mean  replace  every  element  prefix  ending  remainder  dividing  make  array  strictly  increasing  operation  contains  element  array  second  contains  space  separated  element  array  print  operation  wish  perform  next  print  operation
513/D1 __label__dfs  need  find  binary  tree  size  satisfies  given  set  constraint  suppose  node  unknown  binary  tree  labeled  using  pre  order  traversal  starting  constraint  given  label  direction  left  right  case  left  direction  element  subtree  rooted  left  child  similarly  case  right  direction  element  subtree  rooted  right  child  input  contains  next  either  left  right  denoting  whether  subtree  rooted  left  child  subtree  rooted  right  child  problem  consists  multiple  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  single
933/C __label__graphs  __label__geometry  firecracker  scare  nian  monster  wayyyyy  noisy  maybe  firework  make  nice  complement  little  tommy  watching  firework  show  circular  shape  spread  sky  splendid  view  unfolds  night  lunar  new  year  eve  wonder  strike  tommy  many  region  formed  circle  sky  consider  sky  flat  plane  region  connected  part  plane  positive  area  whose  bound  consists  part  bound  circle  curve  several  curve  without  self  intersection  doe  curve  boundary  note  exactly  region  extends  infinitely  input  contains  denoting  circle  following  contains  space  separated  describing  circle  whose  center  radius  circle  time  print  single  region  plane
433/A __label__implementation  __label__brute  force  kitahara  haruki  ha  bought  apple  touma  kazusa  ogiso  setsuna  want  divide  apple  friend  apple  weight  gram  gram  course  kitahara  haruki  want  offend  friend  therefore  total  weight  apple  given  touma  kazusa  must  equal  total  weight  apple  given  ogiso  setsuna  unfortunately  kitahara  haruki  knife  right  split  apple  part  please  tell  possible  divide  apple  fair  way  friend  contains  apple  second  contains  weight  apple  single  print  yes  without  quote  possible  divide  apple  friend  otherwise  print  without  quote
922/B __label__brute  force  imp  magic  forest  xorangles  grow  wut  xorangle  order  non  degenerate  triangle  length  side  exceeding  xor  sum  length  equal  imp  ha  count  distinct  xorangles  order  get  forest  formally  given  find  triple  denotes  bitwise  xor  form  non  degenerate  strictly  positive  area  triangle  contains  single  print  xorangles  order
1080/D __label__math  __label__implementation  __label__constructive  algorithms  recently  olya  received  magical  square  size  seems  sister  square  boring  therefore  asked  olya  perform  exactly  splitting  operation  splitting  operation  operation  olya  take  square  side  cut  equal  square  side  side  square  equal  impossible  apply  splitting  operation  see  example  better  understanding  olya  happy  fulfill  sister  request  want  condition  olya  happiness  satisfied  operation  condition  olya  happiness  satisfied  following  statement  fulfilled  let  length  side  lower  left  square  equal  length  side  right  upper  square  equal  path  consists  square  side  length  consecutive  square  path  common  side  obviously  long  square  condition  met  olya  ready  fulfill  sister  request  condition  satisfied  tell  possible  perform  exactly  splitting  operation  certain  order  condition  olya  happiness  satisfied  possible  tell  size  side  square  path  lower  left  square  upper  right  consist  contains  test  following  contains  description  test  mean  initially  olya  square  ha  size  olya  sister  asks  exactly  splitting  operation  print  output  yes  possible  perform  splitting  operation  test  way  condition  olya  happiness  satisfied  print  otherwise  printed  yes  print  length  side  square  space  along  build  path  lower  left  square  upper  right
623/D __label__math  __label__greedy  mipt  student  named  misha  ha  birthday  today  decided  celebrate  country  house  suburban  moscow  friend  came  typical  party  decided  play  blind  man  buff  birthday  boy  get  blindfolded  player  scatter  around  house  game  played  several  round  round  misha  catch  exactly  friend  ha  guess  probability  catching  friend  doe  change  round  equal  percent  know  directly  proportional  amount  alcohol  consumed  friend  hold  misha  ha  information  caught  misha  make  attempt  guess  caught  person  round  end  even  misha  told  whether  guessed  correctly  new  round  begin  game  end  misha  guess  every  friend  least  exists  set  round  round  misha  caught  friend  guessed  misha  want  minimize  expectation  round  game  despite  fact  point  game  misha  ha  information  ha  already  guessed  friend  honest  see  condition  end  game  fulfilled  game  end  immediately  find  expectation  round  game  misha  play  optimally  input  contains  single  misha  friend  second  contains  giving  probability  catch  friend  particular  round  percent  print  single  real  value  expectation  round  provided  misha  play  optimally  answer  considered  correct  absolute  relative  error  doe  exceed
448/A __label__implementation  bizon  champion  called  champion  reason  bizon  champion  ha  recently  got  present  new  glass  cupboard  shelf  decided  put  present  present  divided  type  medal  cup  bizon  champion  ha  prize  cup  second  prize  cup  third  prize  cup  besides  ha  prize  medal  second  prize  medal  third  prize  medal  naturally  reward  cupboard  must  look  good  bizon  champion  decided  follow  rule  shelf  cup  medal  time  shelf  cup  shelf  medal  help  bizon  champion  find  put  reward  condition  fulfilled  contains  second  contains  third  contains  separated  single  space  print  yes  without  quote  reward  put  shelf  described  manner  otherwise  print  without  quote
864/D __label__math  __label__implementation  __label__greedy  ivan  ha  array  consisting  element  element  recently  ivan  learned  permutation  lexicographical  order  want  change  replace  minimum  element  array  way  array  becomes  permutation  wa  encountered  array  exactly  multiple  way  want  find  lexicographically  minimal  permutation  thus  minimizing  change  ha  priority  lexicographical  minimizing  ha  second  priority  order  determine  permutation  lexicographically  smaller  compare  element  equal  compare  second  permutation  lexicographically  smaller  index  permutation  differ  determine  array  ivan  obtain  performing  change  contains  single  element  ivan  array  second  contains  sequence  description  ivan  array  print  minimum  element  need  changed  ivan  array  order  make  array  permutation  second  print  lexicographically  minimal  permutation  obtained  array  change
630/G __label__math  budget  cut  company  established  new  non  financial  reward  system  instead  bonus  kind  action  rewarded  fixing  critical  bug  suggesting  new  interesting  feature  man  fixed  critical  bug  get  fixed  critical  bug  pennant  table  man  suggested  new  interesting  feature  get  suggested  new  feature  pennant  table  limited  budget  new  reward  system  fixed  critical  bug  pennant  suggested  new  feature  pennant  bought  order  use  pennant  long  time  made  challenge  man  fix  new  critical  bug  earlier  awarded  fixed  critical  bug  pennant  passed  table  man  suggests  new  interesting  feature  earlier  awarded  suggested  new  feature  pennant  passed  table  man  several  pennant  type  course  pennant  type  table  table  company  find  way  place  pennant  table  given  pennant  situated  table  table  big  enough  pennant  input  contains  table  company  output  amount  way  place  pennant  table
