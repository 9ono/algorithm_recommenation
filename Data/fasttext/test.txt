898/E __label__greedy  __label__constructive  algorithms  ann  borya  pile  candy  even  candy  pile  ann  like  square  borya  like  square  move  guy  select  pile  candy  add  candy  candy  new  belong  pile  remove  candy  least  candy  pile  find  minimal  move  required  make  exactly  pile  candy  square  exactly  pile  candy  square  contains  even  pile  candy  second  contains  sequence  amount  candy  pile  output  minimal  step  required  make  exactly  pile  candy  square  exactly  pile  candy  square  condition  already  satisfied  output
1015/C __label__sortings  ivan  ha  song  phone  size  song  byte  ivan  ha  flash  drive  hold  byte  total  initially  flash  drive  empty  ivan  want  copy  song  flash  drive  compress  song  compress  song  size  song  reduces  byte  ivan  compress  subset  song  possibly  empty  copy  song  flash  drive  sum  size  compress  subset  song  necessarily  contiguous  ivan  want  find  minimum  song  need  compress  way  song  fit  drive  sum  size  le  equal  impossible  copy  song  even  ivan  compress  song  print  otherwise  print  minimum  song  ivan  need  compress  input  contains  song  ivan  phone  capacity  ivan  flash  drive  next  contains  initial  size  song  size  song  compression  impossible  compress  subset  song  way  song  fit  flash  drive  print  otherwise  print  minimum  song  compress
440/C __label__dfs  __label__brute  force  prof  vasechkin  want  represent  positive  sum  addend  addend  containing  example  represent  help  find  least  digit  sum  input  contains  print  expected  minimal  digit
443/A __label__implementation  __label__constructive  algorithms  recently  anton  ha  found  set  set  consists  small  english  letter  anton  carefully  wrote  letter  set  separated  comma  added  opening  curved  bracket  beginning  closing  curved  bracket  end  unfortunately  time  time  anton  would  forget  writing  letter  write  asks  count  total  distinct  letter  set  single  contains  set  letter  length  exceed  guaranteed  start  opening  curved  bracket  end  closing  curved  bracket  small  english  letter  listed  separated  comma  comma  followed  space  print  single  distinct  letter  anton  set
604/B __label__greedy  __label__binary  search  kevin  sun  want  move  precious  collection  cowbell  naperthrill  exeter  actually  grass  instead  corn  moving  must  pack  cowbell  box  fixed  size  order  keep  collection  safe  transportation  place  cowbell  single  box  since  kevin  wish  minimize  expense  curious  smallest  size  box  use  pack  entire  collection  kevin  meticulous  cowbell  collector  know  size  cowbell  fact  keep  cowbell  sorted  size  expert  packer  kevin  fit  cowbell  box  size  sum  size  doe  exceed  given  information  help  kevin  determine  smallest  possible  put  cowbell  box  size  input  contains  space  separated  k  denoting  cowbell  box  respectively  next  contains  space  separated  n  size  kevin  cowbell  guaranteed  size  given  non  decreasing  order  print  single  smallest  possible  kevin  put  cowbell  box  size
772/C __label__math  __label__dp  __label__graphs  __label__constructive  algorithms  __label__number  theory  given  list  distinct  would  like  construct  sequence  satisfying  property  element  inclusive  prefix  product  sequence  modulo  distinct  prefix  product  modulo  appears  element  input  list  length  sequence  maximized  construct  sequence  satisfying  property  input  contains  forbidden  prefix  product  modulus  non  next  input  contains  distinct  forbidden  prefix  product  exist  print  denoting  length  sequence
678/E __label__dp  rule  sith  tournament  well  known  everyone  sith  take  part  tournament  tournament  start  random  choice  sith  fight  battle  loses  place  taken  next  randomly  chosen  sith  fight  doe  need  said  battle  sith  tournament  end  death  opponent  tournament  end  sith  remains  alive  jedi  ivan  accidentally  appeared  list  participant  sith  tournament  skill  light  side  force  strong  influence  choice  participant  either  start  tournament  take  loser  place  battle  course  miss  chance  take  advantage  help  calculate  probability  victory  contains  single  participant  sith  tournament  next  contains  real  form  matrix  pij  ij  element  pij  probability  participant  defeat  duel  element  main  diagonal  pii  equal  different  equality  pij  ji  hold  probability  given  decimal  place  jedi  ivan  list  participant  output  real  probability  jedi  ivan  stay  alive  tournament  absolute  relative  error  answer  must  exceed
1037/D __label__dfs  __label__graphs  __label__trees  bfs  algorithm  defined  follows  consider  undirected  graph  vertex  numbered  initialize  new  queue  containing  vertex  mark  vertex  used  extract  vertex  head  queue  print  index  vertex  iterate  arbitrary  order  vertex  neighbor  marked  used  mark  vertex  used  insert  tail  queue  queue  empty  continue  step  otherwise  finish  since  order  choosing  neighbor  vertex  vary  turn  multiple  sequence  bfs  print  problem  need  check  whether  given  sequence  corresponds  valid  bfs  traversal  given  tree  starting  vertex  tree  undirected  graph  exactly  simple  path  vertex  contains  single  denotes  node  tree  following  describe  edge  tree  contains  endpoint  corresponding  edge  tree  guaranteed  given  graph  tree  last  contains  distinct  sequence  check  print  yes  quote  clarity  sequence  corresponds  valid  bfs  traversal  given  tree  quote  clarity  otherwise
1225/C __label__math  __label__brute  force  vasya  fancy  long  power  petya  hand  conservative  like  single  positive  negative  combine  taste  invented  binary  form  non  negative  example  binary  minus  binary  minus  boy  use  binary  represent  everything  face  problem  given  positive  smallest  binary  necessarily  distinct  need  represent  sum  possible  representation  impossible  altogether  help  solve  problem  example  represent  represent  note  negative  binary  allowed  sum  see  note  section  example  contains  impossible  represent  sum  binary  print  single  otherwise  print  smallest  possible  summands
487/C __label__math  __label__constructive  algorithms  __label__number  theory  consider  sequence  define  prefix  product  sequence  given  find  permutation  prefix  product  sequence  permutation  input  contains  output  print  yes  sequence  exists  print  sequence  exists
437/A __label__implementation  upon  time  child  got  test  consisting  multiple  choice  question  homework  multiple  choice  question  consists  choice  choice  ha  description  child  find  correct  fortunately  child  know  solve  complicated  test  child  follow  algorithm  choice  whose  description  least  twice  shorter  description  least  twice  longer  description  child  think  choice  great  exactly  great  choice  child  chooses  otherwise  child  chooses  child  think  luckiest  choice  given  multiple  choice  question  predict  child  choose  start  without  quote  followed  description  choice  next  contains  description  choice  format  given  order  please  note  description  go  prefix  prefix  counted  description  length  description  non  empty  consists  character  character  either  uppercase  english  letter  lowercase  english  letter  print  single  child  choice  without  quote
1213/F __label__implementation  __label__greedy  __label__data  structures  __label__dfs  __label__graphs  __label__strings  author  come  string  consisting  lowercase  latin  letter  given  permutation  index  necessary  equal  length  recall  permutation  array  length  contains  exactly  following  property  hold  mean  write  character  order  permutation  index  resulting  string  sorted  non  decreasing  order  task  restore  string  length  consisting  least  distinct  lowercase  latin  letter  suit  given  permutation  multiple  answer  print  input  contains  length  string  distinct  character  required  second  input  contains  distinct  permutation  third  input  contains  distinct  permutation  impossible  find  suitable  string  print
427/C __label__dfs  __label__graphs  city  ha  junction  way  road  junction  mayor  city  ensure  security  junction  ensure  security  build  police  checkposts  checkposts  built  junction  checkpost  junction  protect  junction  either  police  patrol  car  come  back  building  checkposts  cost  money  area  city  expensive  others  building  checkpost  junction  might  cost  money  junction  determine  minimum  possible  money  needed  ensure  security  junction  find  way  ensure  security  minimum  price  addition  minimum  checkposts  way  different  junction  contains  checkpost  given  junction  next  space  separated  given  ith  cost  building  checkpost  ith  junction  cost  non  negative  exceed  next  next  contains  u  pair  mean  way  road  go  road  node  direction  print  separated  space  minimum  possible  money  needed  ensure  security  junction  second  way  ensure  security  modulo
916/E __label__data  structures  __label__trees  surprise  jamie  final  bos  ehehehe  jamie  ha  given  tree  vertex  numbered  initially  root  tree  vertex  vertex  ha  value  jamie  give  type  query  tree  change  tree  root  vertex  vertex  subtree  smallest  size  contains  add  value  find  sum  value  vertex  subtree  vertex  subtree  vertex  set  vertex  lie  shortest  path  vertex  root  tree  pay  attention  subtree  vertex  change  changing  tree  root  show  strength  programming  jamie  performing  query  accurately  input  contains  space  separated  vertex  tree  query  process  respectively  second  contains  space  separated  initial  value  vertex  next  contains  space  separated  describing  edge  vertex  tree  following  describe  query  query  ha  following  format  depending  type  query  type  query  second  type  query  third  type  query  description  query  must  carried  given  order  guaranteed  tree  valid  query  third  type  output  required  answer  guaranteed  least  query  third  type  given  jamie
8/C __label__dp  girl  lena  like  everything  order  look  order  everywhere  wa  getting  ready  university  noticed  room  wa  mess  object  handbag  thrown  room  course  wanted  put  back  handbag  problem  girl  carry  object  time  move  handbag  ha  taken  object  put  anywhere  except  handbag  inherent  sense  order  doe  let  given  coordinate  handbag  coordinate  object  artesian  coordinate  system  known  girl  cover  distance  object  time  equal  squared  length  segment  point  object  known  initially  coordinate  girl  handbag  asked  find  order  action  girl  put  object  back  handbag  minimum  time  period  input  file  contains  handbag  coordinate  second  contains  amount  object  girl  ha  following  object  coordinate  coordinate  exceed  absolute  value  given  position  different  output  minimum  time  girl  need  put  object  handbag
1163/A __label__math  __label__greedy  friend  kuro  shiro  katie  met  time  party  cat  unite  right  party  since  wanted  much  fun  possible  invited  friend  cat  party  sitting  circle  eating  soup  rule  simple  anyone  finished  soup  leaf  circle  katie  suddenly  notice  whenever  cat  leaf  place  wa  sitting  becomes  empty  space  mean  circle  divided  smaller  continuous  group  cat  sitting  next  moment  katie  observes  cat  left  circle  raise  question  katie  maximum  possible  group  circle  divided  moment  could  help  curiosity  see  example  description  picture  note  section  contains  initial  cat  party  cat  left  circle  moment  katie  observes  respectively  print  single  maximum  group  cat  moment  katie  observes
877/C __label__constructive  algorithms  slava  play  favorite  game  peace  lightning  flying  bomber  specific  map  formally  map  checkered  field  size  cell  numbered  cell  several  tank  slava  know  tank  position  fly  high  drop  bomb  cell  tank  cell  damaged  tank  take  damage  time  instantly  move  neighboring  cell  tank  cell  move  cell  tank  cell  move  cell  tank  take  damage  second  time  counted  destroyed  never  move  tank  move  damaged  time  move  help  slava  destroy  tank  using  bomb  possible  contains  single  size  map  print  minimum  bomb  slava  need  destroy  tank
580/C __label__dfs  __label__graphs  __label__trees  kefa  decided  celebrate  big  salary  going  restaurant  life  unusual  park  park  rooted  tree  consisting  vertex  root  vertex  vertex  contains  kefa  house  unfortunaely  hero  park  contains  cat  kefa  ha  already  found  vertex  cat  leaf  vertex  park  restaurant  kefa  want  choose  restaurant  unfortunately  afraid  cat  way  restaurant  path  restaurant  house  contains  consecutive  vertex  cat  task  help  kefa  count  restaurant  contains  vertex  tree  maximum  consecutive  vertex  cat  still  kefa  second  contains  either  equal  vertex  ha  cat  equal  vertex  ha  cat  next  contains  edge  tree  format  without  quote  xii  vertex  tree  connected  edge  guaranteed  given  set  edge  specifies  tree  single  distinct  leaf  tree  path  kefa  home  contains  consecutive  vertex  cat
977/D __label__math  __label__sortings  __label__dfs  polycarp  like  play  take  writes  board  performs  operation  kind  divide  must  divisible  multiply  operation  polycarp  writes  result  board  replaces  result  board  given  sequence  length  polycarp  wrote  sequence  given  arbitrary  order  order  sequence  mismatch  order  written  board  problem  rearrange  reorder  element  sequence  way  match  possible  polycarp  game  order  written  board  next  exactly  time  previous  exactly  third  previous  guaranteed  answer  exists  input  contatins  element  sequence  second  input  contains  rearranged  reordered  sequence  polycarp  wrote  board  print  rearranged  reordered  input  sequence  sequence  polycarp  could  write  board
1131/B __label__implementation  __label__greedy  still  partial  information  score  historic  football  match  given  set  pair  indicating  point  match  score  wa  known  current  score  goal  change  largest  time  draw  could  appear  scoreboard  pair  given  chronological  order  time  increase  given  score  moment  time  last  pair  corresponds  end  match  contains  single  known  moment  match  next  contains  denoting  score  match  moment  goal  team  goal  second  team  moment  given  chronological  order  sequence  non  decreasing  last  score  denotes  final  result  match  print  maximum  moment  time  score  wa  draw  starting  moment  match  score  counted
670/C __label__implementation  __label__sortings  moscow  hosting  major  international  conference  attended  scientist  different  country  scientist  know  exactly  language  convenience  enumerate  language  world  evening  conference  scientist  decided  cinema  movie  cinema  came  movie  characterized  distinct  index  audio  language  index  subtitle  language  scientist  came  movie  pleased  know  audio  language  movie  almost  satisfied  know  language  subtitle  satisfied  doe  know  neither  note  audio  language  subtitle  language  movie  always  different  scientist  decided  together  movie  help  choose  movie  pleased  scientist  maximum  possible  several  movie  select  maximize  almost  satisfied  scientist  input  contains  positive  scientist  second  contains  positive  index  language  scientist  know  third  contains  positive  movie  cinema  fourth  contains  positive  j  index  audio  language  movie  fifth  contains  positive  j  index  subtitle  language  movie  guaranteed  audio  language  subtitle  language  different  movie  bjj  print  single  index  movie  scientist  viewing  movie  pleased  scientist  maximum  possible  cinema  several  movie  need  choose  viewing  maximum  possible  almost  satisfied  scientist
863/B __label__greedy  __label__sortings  __label__brute  force  vadim  really  keen  travelling  recently  heard  kayaking  activity  near  town  became  excited  joined  party  kayakers  party  ready  start  journey  firstly  choose  kayak  people  group  including  vadim  exactly  tandem  kayak  obviously  carry  people  single  kayak  person  weight  weight  important  matter  kayaking  difference  weight  people  sit  tandem  kayak  large  crash  course  people  want  distribute  seat  kayak  order  minimize  chance  kayak  crash  formally  instability  single  kayak  always  instability  tandem  kayak  absolute  difference  weight  people  kayak  instability  whole  journey  total  instability  kayak  help  party  determine  minimum  possible  total  instability  contains  second  contains  w  n  weight  person  print  minimum  possible  total  instability
704/A __label__implementation  __label__data  structures  __label__brute  force  thor  getting  used  earth  gift  loki  gave  smartphone  application  phone  thor  fascinated  phone  ha  minor  issue  count  unread  notification  generated  application  maybe  loki  put  curse  event  happen  chronological  order  type  application  generates  notification  new  notification  unread  thor  read  notification  generated  far  application  read  notification  thor  read  notification  generated  phone  application  notification  generated  event  type  guaranteed  least  event  type  event  please  note  read  unread  notification  read  notification  generated  phone  read  operation  please  help  thor  tell  unread  notification  event  assume  initially  notification  phone  input  contains  application  event  happen  next  event  start  typei  type  event  typei  typei  followed  otherwise  followed  ypei  print  unread  notification  event
762/F __label__graphs  __label__trees  given  tree  connected  undirected  acyclic  graph  count  subtrees  connected  subgraphs  isomorphic  tree  since  get  quite  large  output  modulo  subtrees  tree  considered  different  exists  vertex  belongs  exactly  tree  called  isomorphic  tree  exists  bijection  set  vertex  set  vertex  ha  following  property  edge  vertex  tree  must  edge  vertex  tree  vice  versa  edge  vertex  tree  must  edge  tree  contains  single  vertex  tree  next  describe  edge  tree  next  contains  single  vertex  tree  next  describe  edge  tree  output  single  answer  given  task  modulo
1242/A __label__math  __label__constructive  algorithms  __label__number  theory  ujan  ha  lazy  lately  ha  decided  bring  yard  good  shape  decided  paint  path  house  gate  path  consists  consecutive  tile  numbered  ujan  paint  tile  color  consider  path  aesthetic  different  tile  divisor  greater  color  formally  color  tile  nmod  xmody  remainder  dividing  ujan  want  brighten  space  maximum  different  color  ujan  use  path  aesthetic  input  contains  single  length  path  output  single  maximum  possible  color  path  painted
172/E __label__dfs  problem  imaginary  language  bhtml  bcss  slightly  resemble  html  cs  read  problem  statement  carefully  resemblance  rather  slight  problem  us  simplified  analog  given  bhtml  document  resembles  html  much  simpler  recorded  sequence  opening  closing  tag  tag  look  like  tagname  called  opening  tag  tag  look  like  tagname  called  closing  tag  besides  self  closing  tag  written  tagname  problem  fully  equivalent  tagname  tagname  tagnames  problem  string  consisting  lowercase  latin  letter  length  character  tagnames  different  tag  coincide  document  tag  form  correct  bracket  sequence  obtain  empty  sequence  given  using  following  operation  remove  self  closing  tag  tagname  remove  pair  opening  closing  tag  consecutively  order  name  word  remove  substring  tagname  tagname  example  given  document  header  header  footer  footer  given  document  obviously  opening  tag  matching  closing  pair  called  element  self  closing  tag  element  let  consider  element  nested  inside  another  tag  element  tag  second  element  nested  instance  example  element  nested  header  nested  footer  nested  element  header  ha  element  nested  footer  ha  need  bcss  rule  apply  style  displaying  element  bhtml  document  rule  recorded  subsequence  word  rule  ha  effect  element  satisfy  condition  list  sequence  nested  element  tagnames  second  element  nested  third  element  nested  second  sequence  end  element  tagname  element  equal  example  element  meet  condition  rule  element  exists  element  nested  element  meet  condition  rule  element  exist  chain  following  element  nested  previous  given  bhtml  document  set  bcss  rule  write  program  determines  element  meet  condition  rule  input  contains  bhtml  document  document  ha  length  character  document  ha  correct  structure  space  unnecessary  character  tagnames  consist  lowercase  latin  letter  length  character  second  contains  query  query  per  query  sequence  element  query  element  query  element  separated  single  space  query  begin  end  space  query  element  sequence  lowercase  latin  letter  length  print  element  document  correspond  bcss  rule  element  print
78/E __label__graphs  screwed  something  nuclear  reactor  research  station  uncontrolled  reaction  progress  explosion  destroy  whole  station  happen  soon  station  represented  square  n  divided  block  block  either  reactor  laboratory  several  reactor  exactly  explode  soon  reactor  considered  impassable  block  move  laboratory  laboratory  adjacent  block  corridor  block  considered  adjacent  common  edge  laboratory  scientist  rescue  capsule  scientist  climb  capsule  considered  saved  capsule  ha  room  scientist  reactor  explode  damaged  toxic  coolant  trickle  neighboring  block  block  contains  reactor  considered  infected  every  minute  coolant  spread  laboratory  corridor  moment  block  infected  next  minute  neighboring  laboratory  become  infected  lab  infected  scientist  rescue  capsule  die  coolant  doe  spread  reactor  block  exactly  minute  explosion  scientist  minute  move  corridor  next  lab  infected  corridor  unlimited  scientist  simultaneously  move  direction  believed  scientist  inside  lab  move  without  consuming  time  moreover  scientist  could  get  rescue  capsule  instantly  believed  scientist  given  moment  always  ha  time  perform  action  move  given  laboratory  next  climb  rescue  capsule  laboratory  infected  find  maximum  scientist  able  escape  contains  next  contains  character  describe  scientist  location  exactly  empty  follows  next  contains  character  describe  rescue  capsule  location  description  scientist  rescue  capsule  location  character  stand  properly  functioning  reactor  stand  malfunctioning  reactor  reactor  position  description  coincide  exactly  malfunctioning  reactor  station  digit  stand  laboratory  description  scientist  location  stand  scientist  corresponding  laboratory  rescue  capsule  description  stand  capsule  laboratory  print  single  maximum  scientist  manage  save
134/B __label__math  __label__dfs  __label__brute  force  __label__number  theory  let  assume  pair  get  new  pair  given  pair  single  step  let  initial  pair  task  find  least  step  needed  transform  pair  least  equal  input  contains  print
217/B __label__math  __label__brute  force  fibonacci  sequence  every  next  sum  previous  bajtek  ha  developed  nice  way  compute  fibonacci  blackboard  writes  writes  performs  following  operation  operation  replace  top  sum  operation  replace  bottom  sum  performs  operation  starting  choosing  operation  alternately  sequence  operation  look  like  tbtbtbtb  last  written  equal  unfortunately  bajtek  sometimes  make  mistake  repeat  operation  time  row  example  bajtek  wanted  compute  would  want  operation  tbtbtb  instead  performs  sequence  operation  tttbbt  made  mistake  incorrectly  compute  seventh  fibonacci  mistake  sequence  operation  neighbouring  equal  operation  tt  bb  given  operation  bajtek  ha  made  attempt  compute  result  computation  last  written  find  minimum  possible  mistake  bajtek  must  made  possible  sequence  operation  resulting  mistake  assume  bajtek  always  correctly  start  operation  contains  output  minimum  possible  mistake  made  bajtek  second  character  starting  describing  possible  sequence  operation  mistake  character  must  either
671/E __label__greedy  __label__data  structures  kekoland  country  beautiful  city  numbered  left  right  connected  road  road  connects  city  length  road  kilometer  drive  kekoland  time  arrive  city  car  immediately  receive  liter  gas  way  get  gas  kekoland  hired  kekoland  president  keko  organize  beautiful  race  kekoland  ha  ever  seen  let  race  city  l  race  consist  stage  stage  car  city  city  completing  stage  next  day  second  stage  held  racer  car  course  race  racer  drive  directly  start  city  finish  city  mean  stage  right  second  stage  left  beauty  race  equal  since  racer  see  beautiful  city  kekoland  car  infinite  tank  racer  take  gas  given  beginning  stage  racer  start  race  empty  tank  liter  gasoline  immediately  take  gasoline  start  city  stage  second  stage  right  race  start  possible  organize  race  car  run  gas  reach  finish  present  time  give  present  city  value  increase  distribute  present  city  way  give  many  present  city  time  increasing  beautiful  race  organize  car  consumes  liter  gas  per  kilometer  input  contains  city  kekoland  present  respectively  next  contains  length  road  city  next  contains  amount  gas  receive  every  time  enter  city  print  single  beauty  beautiful  race  organize
819/B __label__math  __label__implementation  __label__data  structures  time  ago  mister  detected  strange  signal  space  started  study  transformation  signal  turned  permutation  length  cyclic  shift  investigation  mister  need  basis  decided  choose  cyclic  shift  permutation  ha  minimum  possible  deviation  let  define  deviation  permutation  find  cyclic  shift  permutation  minimum  possible  deviation  multiple  solution  print  let  denote  cyclic  shift  permutation  right  shift  needed  reach  shift  example  shift  shift  shift  contains  single  length  permutation  second  contains  space  separated  element  permutation  guaranteed  element  distinct  print  minimum  deviation  cyclic  shift  permutation  shift  multiple  solution  print
708/A __label__implementation  __label__greedy  __label__constructive  algorithms  __label__strings  given  non  empty  string  consisting  lowercase  english  letter  pick  exactly  non  empty  substring  shift  letter  word  character  replaced  previous  character  english  alphabet  replaced  lexicographically  minimum  string  obtained  performing  shift  exactly  input  contains  string  consisting  lowercase  english  letter  print  lexicographically  minimum  string  obtained  shifting  letter  exactly  non  empty  substring
279/D __label__dp  got  positive  sequence  sequence  distinct  let  fix  set  variable  initially  variable  contains  value  consider  following  sequence  consisting  operation  operation  assigning  value  variable  following  operation  assigning  variable  value  equal  sum  value  stored  variable  value  assigned  operation  must  equal  operation  chosen  anew  task  find  minimum  variable  variable  help  perform  described  sequence  operation  contains  second  contains  space  separated  k  guaranteed  sequence  distinct  single  print  single  minimum  variable  variable  help  perform  described  sequence  operation
910/A __label__dp  __label__implementation  __label__greedy  __label__dfs  frog  life  axis  need  reach  home  point  start  point  frog  jump  right  distance  jumped  point  reach  point  point  known  lily  flower  frog  jump  point  lily  guaranteed  lily  point  determine  minimal  jump  frog  need  reach  home  point  point  consider  initially  frog  point  frog  reach  home  print  contains  point  frog  want  reach  maximal  length  frog  jump  second  contains  string  length  consisting  character  string  equal  corresponding  point  lily  flower  case  corresponding  point  lily  flower  guaranteed  last  character  string  equal  frog  reach  home  print
853/E __label__data  structures  __label__geometry  long  term  research  lot  experiment  leading  megapolian  automobile  manufacturer  autovoz  released  brand  new  car  model  named  lada  malina  impressive  feature  lada  malina  highly  efficient  environment  friendly  engine  consider  car  point  oxy  plane  car  equipped  engine  numbered  engine  defined  velocity  vector  whose  coordinate  vxi  yi  measured  distance  unit  per  day  engine  turned  level  real  inclusive  result  term  wi  vxi  vyi  final  car  velocity  namely  final  car  velocity  equal  w  vx  vx  k  vxk  w  vy  vy  k  vyk  formally  car  move  constant  value  whole  day  coordinate  change  component  expression  coordinate  change  second  component  expression  example  equal  car  move  equal  except  car  move  velocity  engine  factory  megapolia  located  fxi  yi  factory  car  lada  malina  ready  operation  attempt  increase  sale  new  car  autovoz  going  hold  international  exposition  car  option  exposition  location  time  exposition  happen  point  coordinate  pxi  yi  day  course  autovoz  going  bring  much  new  car  factory  possible  place  exposition  car  going  moved  enabling  engine  certain  level  beginning  exposition  car  get  exactly  exposition  location  option  impossible  bring  car  factory  exposition  location  moment  exposition  task  determine  option  exposition  location  time  many  car  able  get  beginning  exposition  input  contains  engine  lada  malina  factory  producing  lada  malina  option  exposition  time  location  respectively  following  description  lada  malina  engine  contains  vxi  vyi  xi  yi  defining  velocity  vector  engine  velocity  vector  least  vxi  vyi  equal  guaranteed  velosity  vector  collinear  parallel  next  description  factory  contains  fxi  fyi  xi  yi  defining  coordinate  factory  location  car  located  following  description  car  exposition  contains  pxi  pyi  xi  yi  defining  coordinate  exposition  location  day  till  exposition  start  option  possible  option  exposition  output  car  able  get  exposition  location  moment  beginning
594/D __label__data  structures  __label__number  theory  today  math  lesson  teacher  told  vovochka  euler  function  positive  arithmetic  function  count  positive  le  equal  relatively  prime  coprime  positive  teacher  gave  vovochka  array  positive  task  process  query  calculate  print  modulo  hard  second  grade  school  student  decided  help  vovochka  input  contains  length  array  given  vovochka  second  contains  third  contains  query  next  query  per  query  defined  boundary  segment  ii  print  value  euler  function  query  calculated  modulo
702/B __label__math  __label__implementation  __label__data  structures  __label__brute  force  given  find  pair  index  power  exists  contains  single  positive  second  contains  positive  print  pair  index  power
1017/C __label__greedy  __label__constructive  algorithms  mr  smith  trying  contact  husband  john  smith  forgot  secret  phone  thing  mr  smith  remembered  wa  permutation  secret  phone  permutation  minimize  secret  value  might  phone  husband  sequence  called  permutation  contains  exactly  secret  value  phone  defined  sum  length  longest  increasing  subsequence  li  length  longest  decreasing  subsequence  lds  subsequence  called  increasing  subsequence  called  decreasing  increasing  decreasing  subsequence  called  longest  ha  maximum  length  increasing  decreasing  subsequence  example  permutation  li  permutation  length  li  equal  lds  length  lds  note  length  li  lds  different  please  help  mr  smith  find  permutation  give  minimum  sum  length  li  lds  contains  length  permutation  need  build  print  permutation  give  minimum  sum  length  li  lds
464/E __label__data  structures  __label__graphs  given  weighted  undirected  graph  vertex  edge  find  shortest  path  vertex  vertex  else  state  path  exist  input  contains  space  separated  next  description  graph  edge  contains  space  separated  mean  vertex  connected  edge  length  xi  power  last  contains  space  separated  vertex  vertex  numbered  graph  contains  multiple  edge  self  loop  print  remainder  dividing  length  shortest  path  path  exists  path  exist
831/B __label__implementation  __label__strings  popular  keyboard  layout  berland  differ  letter  position  key  berland  use  alphabet  letter  coincides  english  alphabet  given  string  consisting  distinct  letter  key  second  layout  order  given  text  consisting  small  capital  english  letter  digit  known  wa  typed  layout  writer  intended  type  second  layout  print  text  key  pressed  second  layout  since  key  letter  layout  capitalization  letter  remain  well  character  contains  string  length  consisting  distinct  lowercase  english  letter  layout  second  contains  string  length  consisting  distinct  lowercase  english  letter  second  layout  third  contains  non  empty  string  consisting  lowercase  uppercase  english  letter  digit  text  typed  layout  length  doe  exceed  print  text  key  pressed  second  layout
755/F __label__dp  __label__greedy  christmas  time  polandball  friend  giving  gift  ball  overall  ball  ha  someone  bring  present  according  permutation  pi  unfortunately  ball  quite  clumsy  know  earlier  exactly  forget  bring  gift  ball  get  present  following  constraint  hold  ball  bring  present  give  ball  bring  present  minimum  maximum  possible  kid  get  present  exactly  ball  forget  input  contains  representing  ball  ball  forget  bring  present  second  contains  permutation  index  ball  get  gift  ball  pi  hold  output  value  minimum  maximum  possible  ball  get  present  order
1061/A __label__math  __label__implementation  __label__greedy  unlimited  coin  value  want  select  set  coin  total  value  allowed  multiple  coin  value  set  minimum  coin  required  get  sum  input  contains  print  exactly  minimum  coin  required  obtain  sum
922/E __label__dp  apart  plush  toy  imp  huge  fan  little  yellow  bird  summon  bird  imp  need  strong  magic  tree  row  alley  park  nest  tree  nest  bird  summon  bird  nest  imp  need  stay  tree  cost  costi  point  mana  bird  summoned  imp  increase  mana  capacity  point  imp  summons  bird  summon  bird  nest  initially  imp  stand  tree  ha  point  mana  mana  capacity  equal  well  forward  time  move  tree  next  restores  point  mana  exceed  current  mana  capacity  moving  forward  maximum  bird  imp  summon  contains  tree  initial  point  mana  point  mana  capacity  increase  bird  summoned  point  restored  imp  move  tree  next  second  contains  bird  living  nest  guaranteed  third  contains  cost  ost  ostn  osti  costi  mana  cost  summon  bird  nest  print  single  maximum  bird  imp  summon
585/C __label__number  theory  alice  bob  decided  eat  fruit  kitchen  found  large  bag  orange  apple  alice  immediately  took  orange  bob  took  apple  make  process  sharing  remaining  fruit  fun  friend  decided  play  game  put  multiple  card  wrote  letter  either  letter  began  remove  card  left  right  every  time  removed  card  letter  alice  gave  bob  fruit  moment  took  bag  many  apple  many  orange  thus  orange  apple  alice  change  card  written  letter  bob  gave  alice  fruit  took  bag  set  fruit  last  card  way  removed  fruit  bag  know  many  orange  apple  wa  bag  task  find  sequence  card  alice  bob  could  played  input  contains  orange  apple  initially  bag  print  sequence  card  would  meet  problem  condition  compressed  string  character  mean  need  replace  segment  identical  consecutive  character  repetition  character  actual  character  example  string  aaabaabbb  replaced  string  b  b  replaced  b  b  ab  b  see  sample  clarification  output  format  string  print  consist  character  guaranteed  answer  exists  compressed  representation  exists  consisting  character  several  possible  answer  allowed  print
1148/H __label__data  structures  given  array  initially  empty  need  perform  operation  given  format  append  end  array  count  pair  l  mex  mex  element  array  numerated  order  added  array  make  problem  tricky  say  real  parameter  query  instead  given  get  operation  need  perform  following  lan  mod  lan  modi  lan  modi  swap  lan  mod  lan  answer  previous  operation  initially  lan  equal  operation  operation  numbered  mex  mex  multiset  non  negative  smallest  non  negative  doe  appear  set  example  mex  mex  mex  mex  contains  single  length  array  next  description  query  contains  non  negative  describing  operation  query  print  single  answer  query
1150/B __label__implementation  __label__greedy  day  alice  wa  cleaning  basement  noticed  something  curious  infinite  set  wooden  piece  piece  wa  made  square  tile  tile  adjacent  fifth  center  tile  piece  lay  large  square  wooden  board  board  divided  cell  arranged  row  column  cell  already  occupied  single  tile  stuck  remaining  cell  free  alice  started  wondering  whether  could  fill  board  completely  using  piece  found  course  piece  ha  cover  exactly  distinct  cell  board  piece  overlap  every  piece  fit  board  entirely  without  part  laying  outside  board  border  board  wa  large  alice  tiling  hand  help  determine  possible  fully  tile  board  input  contains  single  size  board  following  describe  board  contains  single  string  length  character  equal  cell  row  column  free  equal  occupied  assume  board  contains  least  free  cell  output  yes  board  tiled  alice  piece  otherwise  print  letter  case  upper  lower
600/C __label__greedy  __label__constructive  algorithms  __label__strings  string  called  palindrome  read  left  right  right  left  example  kazak  mikhailrubinchikkihcniburliahkim  palindroms  string  abb  given  string  consisting  lowercase  latin  letter  choose  position  string  change  letter  position  lowercase  letter  changing  length  string  change  change  letter  permute  order  letter  want  permutation  count  change  obtain  palindrome  minimal  change  several  way  get  lexicographically  alphabetically  smallest  palindrome  firstly  minimize  change  minimize  palindrome  lexicographically  contains  string  consisting  lowercase  latin  letter  print  lexicographically  smallest  palindrome  obtained  minimal  change
1186/F __label__implementation  __label__greedy  __label__dfs  __label__graphs  vus  cossack  ha  simple  graph  vertex  edge  let  degree  vertex  recall  degree  vertex  conected  edge  vertex  need  remain  edge  let  degree  vertex  removing  need  delete  way  word  degree  vertex  reduced  twice  help  vus  remain  needed  edge  contains  vertex  edge  respectively  next  contains  vertex  edge  guaranteed  graph  doe  loop  multiple  edge  possible  show  answer  always  exists  print  edge  need  remain
387/A __label__implementation  george  woke  saw  current  time  digital  clock  besides  george  know  ha  slept  time  help  george  write  program  given  time  determine  time  george  went  bed  note  george  could  gone  bed  yesterday  relatively  current  time  see  second  test  sample  contains  current  time  string  format  second  contains  time  format  duration  george  sleep  guaranteed  input  contains  correct  time  hour  format  h  single  print  time  time  george  went  bed  format  similar  format  time  input
500/A __label__implementation  __label__dfs  __label__graphs  new  year  coming  world  world  cell  numbered  board  people  live  cell  wa  hard  move  distinct  cell  difficulty  escaping  cell  people  wanted  meet  people  live  cell  user  tncks  ha  made  transportation  system  move  cell  celebrate  new  year  thought  positive  every  condition  hold  next  made  portal  numbered  portal  connects  cell  cell  travel  cell  cell  using  portal  unfortunately  use  portal  backwards  mean  move  cell  cell  using  portal  easy  see  condition  leave  world  using  portal  currently  standing  cell  want  cell  know  whether  possible  please  determine  whether  cell  using  construted  transportation  system  contains  space  separated  cell  index  cell  want  second  contains  space  separated  guaranteed  using  given  transportation  system  leave  world  cell  using  transportation  system  print  yes  otherwise  print
913/B __label__implementation  __label__trees  consider  rooted  tree  rooted  tree  ha  special  vertex  called  root  edge  directed  root  vertex  called  child  vertex  vertex  called  parent  vertex  exists  directed  edge  vertex  called  leaf  child  ha  parent  let  call  rooted  tree  spruce  every  non  leaf  vertex  ha  least  leaf  child  given  rooted  tree  check  whether  spruce  definition  rooted  tree  found  contains  vertex  tree  next  contains  index  parent  vertex  vertex  root  guaranteed  root  ha  least  child  print  yes  tree  spruce  otherwise
724/E __label__dp  __label__greedy  city  located  along  way  road  city  numbered  direction  road  city  produced  unit  good  unit  good  sold  city  pair  city  transport  unit  good  city  city  note  good  transported  city  lesser  index  city  larger  index  transport  good  city  order  determine  maximum  produced  good  sold  total  city  sequence  transportation  input  contains  city  maximum  amount  good  single  transportation  second  contains  unit  good  produced  city  third  input  contains  unit  good  sold  city  print  maximum  total  produced  good  sold  city  sequence  transportation
987/C __label__dp  __label__implementation  __label__brute  force  middle  maria  stepanovna  life  outside  krasnokamensk  town  zabaikalsky  region  want  rent  display  highlight  important  problem  display  placed  along  road  display  text  font  size  maria  stepanovna  want  rent  display  index  font  size  increase  move  along  road  particular  direction  namely  condition  held  rent  cost  display  please  determine  smallest  cost  maria  stepanovna  pay  contains  single  display  second  contains  font  size  display  order  stand  along  road  third  contains  rent  cost  display  display  satisfy  criterion  print  otherwise  print  single  minimum  total  rent  cost  display  index
670/A __label__math  __label__greedy  __label__constructive  algorithms  __label__brute  force  planet  mar  year  last  exactly  day  leap  year  mar  martian  week  earthling  work  day  day  task  determine  minimum  possible  maximum  possible  day  per  year  mar  input  contains  positive  day  year  mar  print  minimum  possible  maximum  possible  day  per  year  mar
626/A __label__implementation  __label__brute  force  calvin  robot  lie  infinite  rectangular  grid  calvin  source  code  contains  list  command  either  instruction  move  single  square  right  left  respectively  many  way  calvin  execute  non  empty  contiguous  substring  command  return  square  start  substring  considered  different  different  starting  ending  index  input  contains  single  positive  command  next  contains  character  either  calvin  source  code  print  single  contiguous  substring  calvin  execute  return  starting  square
1045/C __label__dfs  __label__graphs  __label__trees  unspecified  solar  system  planet  space  government  company  ha  recently  hired  space  contractor  build  bidirectional  hyperspace  highway  connecting  different  planet  primary  objective  wa  make  sure  every  planet  reached  planet  taking  hyperspace  highway  ha  completely  fulfilled  unfortunately  lot  space  contractor  friend  cousin  space  board  director  company  company  decided  much  connecting  planet  order  make  spending  enormous  amount  space  money  hyperspace  highway  look  neccessary  decided  enforce  strict  rule  hyperspace  highway  network  whenever  way  travel  planet  return  starting  point  without  travelling  planet  twice  every  pair  planet  itinerary  directly  connected  hyperspace  highway  word  set  planet  every  simple  cycle  induces  complete  subgraph  designing  hyperspace  navigational  app  key  technical  problem  facing  finding  minimal  hyperspace  highway  need  use  travel  planet  planet  problem  easy  bubble  cup  harder  task  program  need  pair  planet  contains  positive  denoting  planet  hyperspace  highway  query  respectively  following  contains  highway  highway  given  meaning  planet  connected  hyperspace  highway  guaranteed  network  planet  hyperspace  highway  form  simple  connected  graph  following  contains  query  query  given  meaning  interested  minimal  hyperspace  highway  need  take  travel  planet  planet  output  output  minimal  hyperspace  highway  need  take  travel  planet  planet
981/E __label__dp  __label__data  structures  grisha  come  contest  faced  following  problem  given  array  size  initially  consisting  element  array  enumerated  perform  operation  array  operation  described  mean  add  element  index  operation  find  maximum  array  grisha  clever  solved  problem  quickly  something  went  wrong  inside  head  think  following  question  consider  applied  subset  operation  array  possible  value  maximum  array  help  grisha  find  apply  subset  possibly  empty  operation  maximum  array  becomes  equal  contains  length  array  query  initial  problem  following  query  per  contains  denoting  query  adding  segment  element  array  inclusive  print  denoting  inclusive  equal  maximum  array  applying  subset  possibly  empty  given  operation
855/A __label__implementation  __label__brute  force  __label__strings  harry  potter  mission  destroy  know  horcruxes  horcrux  encountered  chamber  secret  tom  riddle  diary  diary  wa  ginny  forced  open  chamber  secret  harry  want  know  different  people  ever  possessed  diary  make  sure  influence  ha  name  people  possessed  diary  order  need  tell  person  possessed  diary  point  formally  name  output  yes  without  quote  exists  index  otherwise  output  without  quote  input  contains  name  list  next  string  consisting  lowercase  english  letter  length  string  output  containing  either  yes  without  quote  depending  whether  string  wa  already  present  stream
704/E __label__data  structures  __label__trees  __label__geometry  tony  stark  playing  game  suit  auto  pilot  life  malibu  malibu  ha  junction  numbered  connected  road  get  junction  junction  using  road  graph  malibu  form  tree  tony  ha  suit  special  plan  suit  suit  appear  moment  time  junction  move  junction  using  shortest  path  speed  road  per  second  passing  junction  take  time  vanishing  immediately  arriving  reach  time  available  moment  moment  suit  move  continuously  example  vii  time  middle  road  please  note  mean  suit  junction  moment  vanishes  explosion  happens  moment  time  suit  share  exact  location  junction  somewhere  road  appearing  vanishing  moving  task  tell  tony  moment  explosion  input  contains  junction  suit  respectively  next  road  description  contains  endpoint  road  aii  next  suit  description  contains  meaning  suit  appear  moment  time  junction  move  junction  speed  road  per  second  would  explosion  print  output
432/B __label__implementation  __label__greedy  __label__brute  force  consider  football  tournament  team  participate  team  ha  football  kit  home  game  away  game  kit  home  game  team  ha  color  kit  away  game  team  ha  color  xii  tournament  team  play  exactly  home  game  exactly  away  game  team  game  total  team  play  home  game  traditionally  play  home  kit  team  play  away  game  play  away  kit  team  ha  kit  color  distinguished  case  away  team  play  home  kit  calculate  many  game  described  tournament  team  play  home  kit  many  game  play  away  kit  contains  single  team  next  description  team  contains  space  separated  xii  color  home  away  kit  team  team  print  single  space  separated  game  team  going  play  home  away  kit  correspondingly  print  answer  team  order  appeared  input
71/E __label__dp  following  puzzle  popular  nuclear  physicist  reactor  contains  set  atom  chemical  element  shall  understand  phrase  atomic  atom  element  periodic  table  chemical  element  allowed  take  different  atom  fuse  new  result  new  atom  whose  equal  sum  original  atom  fusion  operation  performed  several  time  aim  getting  new  pregiven  set  atom  puzzle  difficulty  allowed  fuse  atom  allowed  split  atom  several  atom  suggested  try  solve  puzzle  contains  second  contains  space  separated  symbol  element  atom  available  start  third  contains  space  separated  symbol  element  atom  need  result  fusion  symbol  element  coincide  symbol  periodic  table  chemical  element  atomic  exceed  element  possessing  larger  highly  unstable  atom  identical  several  atom  element  sum  initial  atom  equal  sum  atom  need  synthesized  impossible  synthesize  required  atom  print  without  quote  otherwise  print  yes  next  print  way  synthesizing  atom  equation  equation  ha  following  form  symbol  element  atom  original  set  symbol  element  atom  resulting  set  atom  input  data  occur  output  data  exactly  time  order  summands  equation  well  output  order  doe  matter  several  solution  print  better  understanding  output  format  see  sample
1131/F __label__constructive  algorithms  asya  love  animal  much  recently  purchased  kitten  enumerated  put  cage  cage  consists  row  cell  enumerated  left  right  adjacent  cell  partially  transparent  partition  wall  hence  partition  originally  initially  cell  contained  exactly  kitten  observing  kitten  asya  noticed  friendly  often  pair  kitten  neighboring  cell  want  play  together  asya  started  remove  partition  neighboring  cell  particular  day  asya  noticed  kitten  located  neighboring  cell  want  play  together  removed  partition  cell  efficiently  creating  single  cell  kitten  original  cell  since  asya  ha  never  putted  partition  back  day  cage  contained  single  cell  kitten  every  day  asya  remembers  kitten  wanted  play  together  remember  placed  kitten  cage  beginning  please  help  find  possible  initial  arrangement  kitten  cell  contains  single  kitten  following  contains  index  kitten  got  together  due  border  removal  corresponding  day  guaranteed  kitten  different  cell  day  every  cell  print  single  index  kitten  wa  originally
919/D __label__dp  __label__dfs  __label__graphs  given  graph  node  directed  edge  lowercase  letter  assigned  node  define  path  value  frequently  occurring  letter  example  letter  path  abaca  value  path  task  find  path  whose  value  largest  contains  positive  denoting  graph  ha  node  directed  edge  second  contains  string  lowercase  english  letter  character  letter  assigned  node  follow  contains  describing  directed  edge  note  equal  multiple  edge  graph  connected  output  single  single  denoting  largest  value  value  arbitrarily  large  output  instead
1120/C __label__dp  __label__strings  suppose  given  string  length  consisting  lowercase  english  letter  need  compress  using  smallest  possible  coin  compress  string  represent  concatenation  several  non  empty  string  string  encoded  way  meaning  current  string  consists  single  character  encode  paying  coin  substring  encode  paying  coin  string  substring  string  obtained  deletion  several  possibly  character  beginning  several  possibly  character  end  task  calculate  minimum  possible  coin  need  spend  order  compress  given  string  contains  positive  separated  space  b  length  string  cost  compress  character  string  cost  compress  string  appeared  second  contains  single  string  consisting  lowercase  english  letter  output  single  smallest  possible  coin  need  spend  compress
354/E __label__dp  __label__dfs  __label__constructive  algorithms  know  lucky  digit  digit  vasya  got  another  favorite  digit  assumes  lucky  lucky  non  negative  whose  decimal  record  contains  lucky  digit  example  lucky  vasya  ha  important  positive  need  remember  vasya  quite  superstitious  want  remember  lucky  asking  important  represent  sum  exactly  lucky  vasya  remember  vasya  remember  calculate  important  moment  important  represent  sum  lucky  state  impossible  contains  single  next  single  positive  list  important  please  use  lld  read  write  bit  preferred  read  cin  cout  stream  specifier  print  must  answer  important  solution  exists  must  exactly  lucky  sum  equal  solution  exist  string  must  single
360/A __label__implementation  __label__greedy  levko  love  array  consisting  much  levko  playing  array  performing  sort  operation  operation  levko  performs  type  increase  element  word  perform  assignment  meet  inequation  lii  find  maximum  element  calculate  value  sadly  levko  ha  recently  lost  array  fortunately  levko  ha  record  operation  ha  performed  array  help  levko  given  operation  record  find  least  suitable  array  result  operation  given  array  must  coincide  record  result  levko  clearly  remembers  array  exceed  absolute  value  asks  find  array  contains  size  array  operation  levko  record  correspondingly  next  describe  operation  describes  operation  describes  operation  type  followed  ii  description  operation  type  followed  ii  description  operation  second  type  operation  given  order  levko  performed  array  print  yes  without  quote  solution  exists  without  quote  otherwise
828/B __label__implementation  polycarp  ha  checkered  sheet  paper  size  n  polycarp  painted  cell  black  others  remained  white  inspired  malevich  black  square  polycarp  want  paint  minimum  possible  white  cell  black  black  cell  form  square  determine  minimum  possible  cell  needed  painted  black  black  cell  form  black  square  side  parallel  painting  side  cell  belong  square  white  square  side  positive  length  contains  size  sheet  next  letter  description  initial  cell  color  letter  corresponding  cell  painted  black  otherwise  painted  white  print  minimum  cell  needed  painted  black  black  cell  form  black  square  side  parallel  painting  side  cell  belong  square  white  impossible  print
520/D __label__implementation  __label__greedy  vasya  petya  assembled  figure  cube  associated  inclusive  appeared  exactly  let  consider  coordinate  system  ground  directed  upwards  cube  associated  coordinate  lower  left  corner  coordinate  cube  figure  turned  stable  mean  cube  ground  least  cube  cube  touch  side  corner  formally  mean  cube  coordinate  either  cube  coordinate  boy  want  disassemble  figure  put  cube  row  step  cube  removed  figure  put  right  block  already  laid  guy  remove  cube  order  figure  remains  stable  make  process  interesting  guy  decided  play  following  game  guy  take  cube  figure  turn  easy  see  figure  disassembled  written  cube  form  written  ary  positional  numerical  system  possibly  leading  vasya  want  resulting  maximum  possible  petya  contrary  try  make  small  possible  vasya  start  game  task  determine  formed  figure  disassembled  boy  play  optimally  determine  remainder  answer  modulo  contains  following  coordinate  cube  ascending  order  written  guaranteed  original  figure  stable  cube  occupy  place  print  answer  problem
1036/F __label__math  __label__number  theory  consider  positive  prime  factorization  form  let  call  elegant  greatest  common  divisor  sequence  equal  example  elegant  gcd  gcd  count  elegant  testcase  contains  several  value  required  solve  problem  separately  contains  single  value  testcase  next  contains  single  print  elegant
1016/B __label__implementation  __label__brute  force  given  string  consisting  lowercase  latin  letter  substring  string  obtained  taking  character  without  changing  order  occurrence  string  string  position  length  string  asked  query  query  required  calculate  occurrence  string  substring  contains  length  string  length  string  query  respectively  second  string  consisting  lowercase  latin  letter  third  string  consisting  lowercase  latin  letter  next  contains  argument  query  print  answer  query  occurrence  string  substring
1244/E __label__greedy  __label__sortings  __label__constructive  algorithms  __label__binary  search  given  sequence  consisting  perform  following  operation  sequence  choose  element  either  increase  decrease  calculate  minimum  possible  difference  maximum  element  minimum  element  sequence  perform  aforementioned  operation  time  contains  element  sequence  maximum  time  perform  operation  respectively  second  contains  sequence  print  minimum  possible  difference  maximum  element  minimum  element  sequence  perform  aforementioned  operation  time
1154/A __label__math  polycarp  ha  guessed  positive  keep  secret  writes  board  arbitrary  order  pairwise  sum  sum  board  random  order  guess  using  given  print  guessed  order  pay  attention  given  equal  possible  input  contains  positive  written  board  random  order  guaranteed  answer  exists  given  print  positive  written  board  value  written  order  print  order  several  answer  print  guaranteed  answer  exists
746/B __label__implementation  __label__strings  polycarp  mad  coding  writes  sveta  encoded  message  call  median  letter  word  letter  middle  word  word  length  even  median  letter  left  middle  letter  following  example  median  letter  highlighted  contest  info  word  consists  single  letter  according  definition  letter  median  letter  polycarp  encodes  word  following  way  writes  median  letter  word  deletes  repeat  process  letter  left  example  encodes  word  volga  logva  given  encoding  word  task  decode  contains  positive  length  encoded  word  second  contains  string  length  consisting  lowercase  english  letter  encoding  print  word  polycarp  encoded
778/A __label__greedy  __label__strings  __label__binary  search  little  nastya  ha  hobby  like  remove  letter  word  obtain  another  word  turn  pretty  hard  young  therefore  brother  sergey  always  help  sergey  give  nastya  word  want  get  word  nastya  remove  letter  certain  order  another  order  strictly  specified  permutation  letter  index  word  denote  length  word  note  removing  letter  index  letter  change  example  nastya  removal  make  following  sequence  word  nastya  nastya  nastya  nastya  nastya  nastya  nastya  sergey  know  permutation  goal  stop  sister  point  continue  removing  get  word  since  nastya  like  activity  sergey  want  stop  late  possible  task  determine  many  letter  nastya  remove  stopped  sergey  guaranteed  word  obtained  removing  letter  word  second  input  word  respectively  word  composed  lowercase  letter  latin  alphabet  guaranteed  word  obtained  removing  letter  word  next  contains  permutation  letter  index  specifies  order  nastya  remove  letter  distinct  print  single  maximum  letter  nastya  remove
1108/F __label__greedy  __label__graphs  __label__binary  search  given  undirected  weighted  connected  graph  vertex  edge  without  loop  multiple  edge  edge  distance  vertex  along  edge  graph  connected  pair  vertex  least  path  consisting  edge  given  graph  minimum  spanning  tree  mst  case  positive  weight  subset  edge  connected  weighted  undirected  graph  connects  vertex  together  ha  minimum  total  cost  subset  total  cost  sum  cost  chosen  edge  modify  given  graph  operation  perform  following  increase  weight  edge  increase  weight  edge  multiple  possibly  time  suppose  initial  mst  cost  problem  increase  weight  edge  minimum  possible  operation  way  cost  mst  obtained  graph  remains  mst  unique  mean  way  choose  mst  obtained  graph  problem  calculate  minimum  operation  required  input  contains  n  vertex  edge  initial  graph  next  contains  description  edge  denoted  vertex  connected  edge  weight  edge  guaranteed  given  graph  loop  multiple  edge  unordered  pair  vertex  edge  connecting  pair  vertex  guaranteed  given  graph  connected  print  minimum  operation  unify  mst  initial  graph  without  changing  cost  mst
1114/A __label__implementation  __label__greedy  __label__brute  force  duck  song  simplicity  assume  type  grape  green  grape  purple  grape  black  grape  andrew  dmitry  michal  grape  lover  preference  grape  different  make  happy  following  happen  andrew  dmitry  michal  eat  least  grape  respectively  andrew  ha  extreme  affinity  green  grape  thus  eat  green  grape  green  grape  hand  dmitry  fan  black  grape  type  grape  except  black  would  word  dmitry  eat  green  purple  grape  michal  ha  common  taste  enjoys  grape  general  pleased  type  grape  long  quantity  sufficient  knowing  friend  fond  grape  aki  decided  host  grape  party  ha  prepared  box  green  grape  purple  grape  black  grape  aki  sure  box  prepared  contains  enough  grape  make  everyone  happy  please  find  whether  possible  distribute  grape  everyone  happy  aki  ha  buy  grape  required  distribute  grape  possible  remain  unused  contains  grape  andrew  dmitry  michal  want  eat  second  contains  green  purple  black  grape  box  grape  distribution  allows  everyone  happy  print  yes  otherwise  print
456/B __label__math  __label__number  theory  fedya  study  gymnasium  fedya  math  hometask  calculate  following  expression  mod  given  value  fedya  managed  complete  task  note  given  extremely  large  exceed  type  programming  language  single  contains  single  leading  print  value  expression  without  leading
936/C __label__implementation  __label__constructive  algorithms  __label__strings  welcome  another  task  breaking  code  lock  explorer  whitfield  martin  came  unusual  safe  inside  according  rumor  untold  rich  find  solution  problem  discrete  logarithm  course  code  lock  installed  safe  lock  ha  screen  display  string  lowercase  latin  letter  initially  screen  display  string  whitfield  martin  found  safe  open  string  displayed  screen  string  screen  changed  using  operation  shift  order  apply  operation  explorer  choose  inclusive  current  string  change  r  length  length  word  suffix  length  string  reversed  moved  beginning  string  example  operation  shift  string  abcacb  changed  string  bcacab  since  acb  r  cac  explorer  afraid  apply  many  operation  shift  lock  locked  forever  ask  find  way  get  string  screen  using  operation  contains  length  string  string  consisting  lowercase  latin  letter  impossible  get  string  string  using  operation  shift  print  single
1028/E __label__constructive  algorithms  discussing  proper  problem  codeforces  round  kostya  created  cyclic  array  positive  since  talk  wa  long  promising  kostya  created  new  cyclic  array  mod  take  mod  modulo  operation  talk  became  interesting  kostya  completely  forgot  array  looked  like  suddenly  thought  restoring  array  array  would  interesting  problem  unfortunately  contains  single  length  array  second  contains  possible  restore  array  length  mod  imodn  hold  print  yes  second  satisfy  show  answer  exists  answer  constraint  exists  well
750/F __label__implementation  __label__trees  __label__constructive  algorithms  interactive  problem  interaction  section  find  information  flushing  output  new  year  tree  height  perfect  binary  tree  vertex  numbered  order  problem  assume  least  drawing  show  example  new  year  tree  height  polar  bear  love  decorating  new  year  tree  limak  exception  decorate  tree  must  find  root  vertex  exactly  neighbour  assuming  h  easy  limak  little  bear  even  see  whole  tree  help  testcases  testcase  read  input  ask  question  format  without  quote  inclusive  reply  get  list  neighbour  vertex  detail  interaction  section  example  tree  drawing  asking  would  get  response  neighbour  goal  find  index  root  print  format  able  read  next  testcase  printing  answer  previous  testcase  flushing  output  tree  fixed  beginning  change  question  input  contains  single  testcases  beginning  testcase  read  input  single  height  tree  read  value  next  testcase  answer  previous  testcase  ask  question  neighbour  vertex  print  without  quote  separate  note  must  print  end  character  last  character  flush  output  get  response
1144/D __label__greedy  __label__constructive  algorithms  given  array  consisting  perform  following  operation  arbitrary  time  possibly  choose  pair  index  index  adjacent  set  choose  pair  index  index  adjacent  set  value  mean  absolute  value  example  task  find  minimum  operation  required  obtain  array  equal  element  print  order  operation  guaranteed  always  obtain  array  equal  element  using  operation  note  operation  element  current  array  exceed  absolute  value  input  contains  element  second  input  contains  element  print  minimum  operation  required  obtain  array  equal  element
534/D __label__greedy  __label__data  structures  __label__constructive  algorithms  __label__binary  search  february  th  student  came  center  training  olympiad  programmer  ctop  berland  state  university  came  another  went  sitting  desk  greeted  present  room  shaking  hand  student  came  stayed  ctop  end  day  never  left  time  student  could  join  together  start  participating  team  contest  lasted  end  day  team  distract  contest  minute  another  student  came  greeted  present  shake  hand  member  contest  writing  team  team  consisted  exactly  student  student  could  become  member  team  different  team  could  start  writing  contest  different  time  given  many  present  people  shook  hand  student  get  possible  order  student  could  come  ctop  order  doe  exist  print  impossible  please  note  student  could  work  independently  end  day  without  participating  team  contest  contains  student  came  ctop  next  contains  student  student  shook  hand  sought  order  student  exists  print  possible  second  print  permutation  student  defining  order  student  entered  center  stand  left  permutation  mean  student  came  earlier  student  multiple  answer  print
965/A __label__math  make  paper  airplane  ha  use  rectangular  piece  paper  sheet  standard  size  make  airplane  group  people  decided  make  airplane  going  buy  several  pack  paper  containing  sheet  distribute  sheet  people  person  enough  sheet  make  airplane  many  pack  buy  contains  people  airplane  make  airplane  made  using  sheet  sheet  pack  respectively  print  single  minimum  pack  buy
1012/F __label__dp  __label__implementation  gleb  famous  competitive  programming  teacher  innopolis  planning  trip  programming  camp  nearest  future  camp  held  different  country  gleb  need  apply  visa  trip  gleb  know  day  trip  length  trip  day  leni  day  country  consulate  take  process  visa  application  stick  visa  passport  gleb  ha  valid  passport  able  decide  visa  want  put  passport  trip  gleb  flight  country  early  morning  day  return  back  late  evening  day  eni  apply  visa  day  gleb  need  innopolis  middle  day  apply  visa  trip  including  last  day  trip  start  next  day  end  gleb  apply  visa  well  earliest  gleb  apply  visa  day  applying  visa  country  day  gleb  get  passport  back  middle  day  consulate  use  delivery  service  gleb  get  passport  back  even  innopolis  day  gleb  apply  another  visa  day  received  passport  back  innopolis  day  gleb  able  start  trip  day  ha  passport  visa  corresponding  country  morning  day  particular  passport  another  country  consulate  visa  processing  help  gleb  decide  visa  need  receive  passport  apply  visa  input  trip  passport  gleb  ha  respectively  next  describe  gleb  trip  contains  positive  leni  eni  day  trip  length  trip  day  consulate  country  need  process  visa  application  guaranteed  trip  intersect  impossible  get  visa  time  print  quote  clarity  otherwise  print  yes  describing  trip  trip  print  passport  gleb  put  country  visa  print  day  apply  print  trip  order  appear  input  day  numbered  starting  tomorrowhe  day  apply  visa  passport  numbered
525/C __label__math  __label__greedy  __label__sortings  evening  contest  ilya  wa  bored  really  felt  like  maximizing  remembered  set  stick  instrument  stick  characterized  length  ilya  decided  make  rectangle  stick  due  whim  decided  make  rectangle  way  maximizes  total  area  stick  used  making  rectangle  possible  stick  remain  unused  bending  stick  allowed  stick  length  make  rectangle  following  property  observed  rectangle  made  stick  length  example  rectangle  made  example  stick  ilya  ha  instrument  reduce  length  stick  stick  made  special  material  length  stick  reduced  example  stick  length  either  stay  length  transformed  stick  length  answer  question  maximum  total  area  rectangle  ilya  get  file  make  rectangle  available  stick  input  contains  positive  available  stick  second  input  contains  positive  length  stick  output  must  single  non  negative  maximum  total  area  rectangle  ilya  make  available  stick
446/D __label__math  today  dzy  begin  play  old  game  game  big  maze  room  connected  corridor  corridor  allows  move  direction  assume  room  connected  corridor  directly  indirectly  dzy  ha  got  lost  maze  currently  room  ha  life  act  like  follows  firstly  randomly  pick  corridor  going  current  room  outgoing  corridor  ha  probability  picked  corridor  process  repeat  room  trap  room  definitely  ha  trap  room  definitely  ha  trap  time  dzy  enters  room  lost  life  dzy  know  enters  room  exactly  life  firstly  lost  live  open  bonus  round  want  know  probability  open  bonus  round  please  help  contains  second  contains  either  room  ha  trap  otherwise  ha  trap  please  note  room  trap  guaranteed  room  ha  trap  room  ha  trap  follows  contains  uii  meaning  current  corridor  connects  room  guaranteed  corridor  system  connected  print  real  probability  dzy  open  bonus  round  answer  considered  correct  relative  absolute  error  exceed
776/G __label__dp  sherlock  found  piece  encrypted  data  think  useful  catch  moriarty  encrypted  data  consists  noticed  hexadecimal  form  take  performs  following  operation  list  distinct  digit  present  given  example  list  digit  sum  respective  power  digit  listed  step  like  example  sum  change  initial  applying  bitwise  xor  initial  sum  example  note  xor  done  binary  notation  example  sum  sum  letter  denote  hexadecimal  digit  respertively  sherlock  want  count  range  inclusive  decrease  application  step  want  answer  query  different  contains  next  hexadecimal  hexadecimal  written  using  digit  lowercase  english  letter  hexadecimal  extra  leading  output  contains  answer  query  decimal  notation
1166/F __label__data  structures  __label__graphs  magical  land  city  conveniently  numbered  pair  city  connected  magical  colored  road  magic  unstable  time  new  road  appear  city  vicky  witch  ha  tasked  performing  delivery  pair  city  vicky  beginner  complete  delivery  move  starting  city  destination  city  double  rainbow  double  rainbow  sequence  city  satisfying  following  property  city  connected  road  road  connecting  color  example  road  must  color  road  road  must  color  road  vicky  ha  list  event  chronological  order  event  either  delivery  must  perform  appearance  new  road  help  determine  delivery  able  complete  contains  denoting  respectively  city  road  initially  present  different  color  road  take  event  following  contains  describing  initially  exists  bidirectional  road  color  city  follow  describing  event  event  following  type  meaning  road  color  appears  city  meaning  determine  whether  vicky  make  delivery  starting  city  ending  city  guaranteed  guaranteed  moment  road  connecting  pair  city  road  connects  city  guaranteed  input  contains  least  event  second  type  event  second  type  print  single  containing  yes  without  quote  delivery  made  single  containing  without  quote  otherwise
762/A __label__math  __label__number  theory  given  find  smallest  divisor  report  exist  divisor  natural  divided  without  remainder  contains  ha  le  divisor  output
680/A __label__implementation  __label__constructive  algorithms  little  bear  limak  play  game  ha  card  written  card  positive  limak  discard  throw  card  goal  minimize  sum  written  remaining  discarded  card  allowed  discard  card  course  discard  card  impossible  choose  card  given  written  card  cay  find  minimum  sum  remaining  card  input  contains  written  card  print  minimum  possible  sum  written  remaining  card
1006/A __label__implementation  mishka  got  array  length  birthday  present  surprise  mishka  like  present  want  change  somehow  ha  invented  algorithm  called  mishka  adjacent  replacement  algorithm  algorithm  represented  sequence  step  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  replace  occurrence  array  note  dot  middle  algorithm  mean  mishka  applies  replacement  pair  adjacent  described  example  array  following  sequence  array  represents  algorithm  replace  occurrence  replace  occurrence  replace  occurrence  replace  occurrence  replace  occurrence  replace  occurrence  replace  occurrence  later  step  algorithm  change  array  mishka  lazy  want  apply  change  interested  result  help  find  input  contains  element  mishka  birthday  present  surprisingly  array  second  input  contains  element  array  print  final  value  element  array  applying  mishka  adjacent  replacement  algorithm  array  note  change  order  element  array
845/D __label__dp  __label__greedy  __label__data  structures  polycarp  ha  attempted  pas  driving  test  ran  straight  road  sign  type  speed  limit  sign  come  positive  maximal  speed  car  sign  cancel  action  previous  sign  type  overtake  allowed  sign  mean  car  meet  overtake  car  speed  limit  sign  cancel  speed  limit  car  move  arbitrary  speed  sign  overtake  allowed  car  overtake  car  sign  polycarp  go  past  sign  consequentially  new  sign  cancel  action  previous  sign  kind  speed  limit  overtake  possible  overtake  allowed  sign  another  overtake  allowed  sign  work  speed  limit  overtake  allowed  sign  well  beginning  ride  overtake  allowed  speed  limit  given  sequence  event  chronological  order  event  happened  polycarp  ride  event  following  type  polycarp  change  speed  car  specified  event  come  positive  polycarp  car  overtakes  car  polycarp  car  go  past  speed  limit  sign  sign  come  positive  polycarp  car  go  past  overtake  allowed  sign  polycarp  car  go  past  speed  limit  polycarp  car  go  past  overtake  allowed  guaranteed  event  chronological  order  event  type  polycarp  changed  speed  car  specified  exam  polycarp  justify  rule  violation  telling  driving  instructor  notice  sign  minimal  sign  polycarp  say  notice  would  make  rule  violation  point  view  contains  event  next  start  type  event  follows  query  third  type  query  type  new  speed  polycarp  car  query  third  type  new  speed  limit  guaranteed  event  chronological  order  event  type  polycarp  changed  speed  car  specified  print  minimal  road  sign  polycarp  say  notice  would  make  rule  violation  point  view
900/E __label__dp  __label__data  structures  __label__strings  vasya  wrote  string  length  length  consisting  small  english  letter  know  string  ha  form  abab  namely  letter  odd  position  letter  even  position  suddenly  morning  vasya  found  somebody  spoiled  string  letter  string  replaced  character  let  call  sequence  position  occurrence  string  boy  defines  beauty  string  maximum  disjoint  occurrence  string  vasya  replace  letter  letter  different  position  replaced  different  letter  vasya  want  make  replacement  way  beauty  string  maximum  possible  option  want  choose  minimum  replacement  find  replacement  make  contains  single  length  second  contains  string  length  contains  small  english  letter  character  third  contains  single  length  string  contains  letter  odd  position  even  position  print  minimum  replacement  vasya  ha  perform  make  beauty  string  maximum  possible
484/E __label__data  structures  __label__constructive  algorithms  __label__binary  search  bizon  champion  ha  recently  finished  painting  wood  fence  fence  consists  sequence  panel  meter  width  arbitrary  height  panel  height  meter  adjacent  plank  follow  without  gap  bizon  painted  fence  decided  put  sale  sign  sign  drawn  rectangular  piece  paper  placed  fence  side  sign  parallel  fence  panel  aligned  edge  panel  bizon  champion  introduced  following  constraint  sign  position  width  sign  exactly  meter  sign  must  fit  segment  fence  panel  inclusive  exceed  fence  bound  vertical  direction  sign  really  pretty  bizon  champion  want  sign  height  large  possible  given  description  fence  several  query  placing  sign  query  print  maximum  possible  height  sign  placed  corresponding  segment  fence  given  fixed  width  sign  input  contains  panel  fence  second  contains  space  separated  height  panel  third  contains  query  next  description  query  query  represented  segment  fence  width  sign  respectively  query  print  answer  separate  maximum  height  sign  put  corresponding  segment  fence  condition  satisfied
638/D __label__dfs  __label__graphs  __label__brute  force  super  computer  ha  built  turtle  academy  science  computer  consists  cpu  architecture  wa  paralellepiped  size  n  split  cell  cell  contains  exactly  cpu  thus  cpu  simultaneously  identified  group  layer  column  process  super  computer  work  cpu  send  message  famous  turtle  scheme  cpu  send  message  cpu  course  exist  feedback  cpu  send  message  cpu  time  cpu  broke  stopped  working  cpu  send  message  receive  message  serve  intermediate  transmitting  message  say  cpu  control  cpu  chain  cpu  length  chain  cpu  chain  send  message  cpu  turtle  quite  concerned  denial  proofness  system  communication  remaining  cpu  want  know  critical  cpu  cpu  critical  turning  disrupt  control  distinctive  cpu  control  turned  stopped  controlling  turning  contains  dimension  super  computer  block  follow  describing  current  state  process  block  correspond  layer  super  computer  order  block  consists  character  description  layer  format  table  thus  state  cpu  corresponded  character  block  character  corresponds  working  cpu  character  corresponds  malfunctioning  block  separated  exactly  empty  print  single  critical  cpu  turning  cpu  disrupt  control
1006/B __label__implementation  __label__greedy  __label__sortings  polycarp  practicing  problem  solving  skill  ha  list  problem  difficulty  respectively  plan  practice  exactly  day  day  ha  solve  least  problem  list  polycarp  solves  problem  order  given  list  skip  problem  list  ha  solve  problem  exactly  day  thus  day  polycarp  solves  contiguous  sequence  consecutive  problem  start  list  skip  problem  solve  multiple  time  result  day  solve  problem  profit  day  polycarp  practice  maximum  difficulty  problem  polycarp  solves  day  solves  problem  index  day  profit  day  max  l  max  total  profit  practice  sum  profit  day  practice  want  help  polycarp  get  maximum  possible  total  profit  valid  way  solve  problem  task  distribute  problem  day  satisfying  condition  way  total  profit  maximum  example  possible  distribution  maximum  total  profit  total  profit  equal  input  contains  problem  day  respectively  second  input  contains  difficulty  problem  polycarp  list  order  placed  list  order  polycarp  solve  output  print  maximum  possible  total  profit
1005/E1 __label__sortings  given  permutation  permutation  length  sequence  occurs  exactly  sequence  find  pair  index  value  median  exactly  given  median  sequence  value  element  middle  sequence  sorting  non  decreasing  order  length  sequence  even  left  middle  element  used  example  median  since  sorting  sequence  look  like  left  middle  element  equal  median  equal  since  sorting  value  middle  sequence  write  program  find  pair  index  value  median  exactly  given  contains  length  given  sequence  required  value  median  second  contains  permutation  occurs  exactly  print  required
1028/A __label__implementation  consider  table  size  nm  initially  fully  white  row  numbered  top  bottom  column  left  right  square  inside  table  odd  side  length  wa  painted  black  find  center  square  contains  row  column  table  next  contains  string  character  white  cell  black  cell  describing  row  table  output  separated  space  row  column  center  black  square
65/E __label__implementation  __label__dfs  harry  potter  lost  invisibility  cloak  running  school  caretaker  filch  finding  invisible  object  easy  task  fortunately  harry  ha  friend  willing  help  hermione  granger  read  invisibility  cloak  everything  well  volume  encyclopedia  quick  search  shortest  path  graph  network  flow  maximal  increasing  subsequence  magical  object  ha  already  developed  search  algorithm  invisibility  cloak  complex  dynamic  system  hogwarts  hogwarts  consists  floor  numbered  pair  floor  connected  staircase  staircase  change  position  moving  exactly  end  formally  situation  like  staircase  connects  floor  move  modify  position  connect  floor  floor  different  circumstance  staircase  connect  floor  time  multiple  stair  pair  floor  initially  harry  floor  doe  remember  floor  ha  lost  cloak  want  look  floor  therefore  goal  visit  floor  least  harry  visit  floor  order  finish  searching  floor  nowadays  staircase  move  quite  rarely  ron  hermione  willing  put  spell  help  harry  find  cloak  cause  le  suspicion  friend  plan  move  staircase  staircase  shifting  staircase  harry  able  move  floor  reachable  moment  staircase  look  invisibility  cloak  assumed  time  staircase  move  spontaneously  help  friend  compose  searching  plan  several  variant  solve  problem  valid  option  necessarily  optimal  accepted  contains  floor  staircase  hogwarts  respectively  following  pair  floor  connected  staircase  initial  moment  time  print  yes  without  quote  harry  able  search  floor  otherwise  answer  positive  print  second  staircase  ron  hermione  shift  output  look  like
392/A __label__math  imagine  infinite  plane  cartesian  coordinate  system  integral  point  blocked  others  integral  point  plane  connected  euclidean  distance  unit  neither  blocked  integral  point  connected  connected  let  assume  plane  blocked  point  consider  integral  point  plane  whose  euclidean  distance  origin  name  point  special  chubby  yang  want  get  following  property  special  point  connected  non  special  point  get  property  pick  integral  point  plane  make  blocked  minimum  point  need  pick  contains  print  single  minimum  point  blocked
821/C __label__greedy  __label__data  structures  __label__trees  okabe  super  hacker  daru  stacking  removing  box  box  numbered  initially  box  stack  okabe  control  freak  give  daru  command  add  box  top  stack  remove  box  top  stack  throw  trash  okabe  want  daru  throw  away  box  order  course  mean  might  impossible  daru  perform  okabe  remove  command  required  box  top  stack  daru  decide  wait  okabe  look  away  reorder  box  stack  way  want  point  time  okabe  command  add  remove  box  doe  tell  daru  minimum  time  need  reorder  box  successfully  complete  okabe  command  guaranteed  every  box  added  required  removed  input  contains  box  next  input  start  string  add  remove  start  add  follows  indicating  daru  add  box  top  stack  guaranteed  exactly  add  operation  box  added  distinct  remove  operation  guaranteed  box  always  added  required  removed  print  minimum  time  daru  need  reorder  box  successfully  complete  okabe  command
990/F __label__dp  __label__greedy  __label__dfs  __label__trees  handle  complex  water  distribution  system  system  consists  junction  pipe  pipe  connects  junction  thing  adjusting  pipe  choose  use  pipe  setting  pipe  distribute  unit  water  per  second  junction  junction  negative  pipe  distribute  unit  water  per  second  junction  junction  allowed  set  order  system  work  properly  constraint  every  junction  ha  associated  meaning  difference  incoming  outcoming  flow  junction  must  exactly  negative  junction  must  receive  unit  water  per  second  negative  junction  must  transfer  unit  water  per  second  junction  choose  way  requirement  incoming  outcoming  flow  satisfied  contains  junction  second  contains  constraint  junction  third  contains  pipe  next  contains  description  pipe  guaranteed  unordered  pair  appear  input  mean  pair  occurrence  guaranteed  pair  junction  exists  path  along  pipe  connecting  choose  way  requirement  incoming  outcoming  flow  satisfied  output  possible  output  chosen  setting  pipe  pipe  numbered  order  appear  input
847/A __label__implementation  doubly  linked  list  fundamental  data  structure  doubly  linked  list  sequence  element  containing  information  previous  next  element  list  problem  list  linear  structure  element  except  ha  exactly  previous  element  element  except  last  ha  exactly  next  element  list  closed  cycle  problem  given  memory  cell  forming  doubly  linked  list  cell  contains  information  element  list  memory  cell  numbered  cell  given  value  cell  containing  previous  element  element  cell  cell  containing  next  element  element  cell  cell  contains  information  element  ha  previous  element  similarly  cell  contains  information  element  ha  next  element  list  shown  picture  example  picture  value  following  task  unite  given  list  single  list  joining  order  particular  input  data  already  contains  single  list  need  perform  action  print  resulting  list  form  value  action  joining  beginning  list  end  another  performed  contains  single  memory  cell  doubly  linked  list  located  following  contains  cell  previous  next  element  list  cell  value  element  cell  ha  previous  element  list  value  element  cell  ha  next  element  list  guaranteed  input  contains  correct  description  single  doubly  linked  list  list  linear  structure  element  list  except  ha  exactly  previous  element  element  list  except  last  ha  exactly  next  element  memory  cell  contains  information  element  list  element  list  written  given  cell  print  must  cell  previous  next  element  list  cell  list  input  united  single  list  many  solution  print
433/D __label__implementation  nanami  expert  playing  game  day  nanami  good  friend  hajime  invited  watch  game  baseball  unwilling  wa  followed  stadium  nanami  interest  game  looked  around  see  wa  something  might  interest  saw  digital  board  end  stadium  digital  board  pixel  height  pixel  width  every  pixel  either  light  dark  pixel  described  coordinate  pixel  pixel  board  display  message  switching  combination  pixel  light  rest  dark  nanami  notice  state  pixel  board  change  time  time  certain  time  certain  pixel  board  switch  light  dark  dark  light  nanami  wonder  area  biggest  light  block  specific  pixel  side  light  block  sub  rectangle  board  pixel  light  pixel  belongs  side  sub  rectangle  upper  left  lower  right  vertex  satisfies  logical  condition  x  nanami  ha  history  changing  pixel  ha  question  described  type  answer  contains  space  separated  height  width  digital  board  operation  follow  containing  space  separated  initial  state  pixel  pixel  initially  dark  pixel  initially  light  follow  containing  space  separated  p  describing  operation  pixel  change  state  light  dark  dark  light  nanami  query  biggest  light  block  pixel  side  query  print  single  containing  answer  nanami  query
382/E __label__dp  ksenia  ha  winter  exam  today  learning  combinatorics  problem  need  learn  solve  many  distinct  tree  consisting  vertex  following  property  tree  marked  vertex  tree  numbered  vertex  tree  connected  vertex  moment  vertex  connected  vertex  size  tree  maximum  matching  equal  tree  considered  distinct  vertex  tree  connected  edge  tree  help  ksenia  solve  problem  given  answer  problem  huge  output  modulo  contains  print  single  answer  problem  modulo
1003/C __label__math  __label__implementation  __label__brute  force  heat  last  day  ha  really  intense  scientist  berland  study  temperature  weather  change  claim  summer  abnormally  hot  scientific  claim  sound  lot  reasonable  involved  decided  actually  calculate  value  would  represent  high  temperature  mathematician  berland  state  university  came  special  heat  intensity  value  value  calculated  follows  suppose  want  analyze  segment  consecutive  day  measured  temperature  day  temperature  day  equal  denote  average  temperature  segment  consecutive  day  arithmetic  mean  temperature  measure  segment  day  want  analyze  average  temperature  day  day  calculate  note  division  performed  without  rounding  heat  intensity  value  maximum  average  temperature  segment  le  consecutive  day  example  analyzing  measure  interested  segment  want  find  maximum  value  average  temperature  segment  hired  berland  state  university  write  program  would  compute  heat  intensity  value  given  period  day  task  contains  day  given  period  minimum  day  segment  consider  calculating  heat  intensity  value  respectively  second  contains  temperature  measure  given  day  print  real  heat  intensity  value  maximum  average  temperature  segment  le  consecutive  day
663/A __label__math  __label__greedy  __label__constructive  algorithms  given  rebus  form  consisting  question  mark  separated  arithmetic  operation  equality  positive  goal  replace  question  mark  positive  equality  hold  input  contains  rebus  guaranteed  contains  question  mark  positive  exceed  letter  separated  space  arithmetic  operation  located  question  mark  output  possible  without  quote  rebus  ha  solution  impossible  without  quote  otherwise
902/A __label__implementation  __label__greedy  pig  visiting  friend  pig  house  located  point  friend  house  located  point  axis  pig  use  teleports  move  along  axis  use  teleport  pig  come  certain  point  teleport  located  choose  move  teleport  rightmost  point  move  pig  point  known  limit  teleport  formally  teleport  located  point  limit  move  pig  point  point  segment  including  bound  determine  pig  visit  friend  using  teleports  use  car  contains  teleports  location  friend  house  next  information  teleports  contains  ii  location  teleport  limit  guaranteed  aii  every  print  yes  path  pig  house  friend  house  us  teleports  otherwise
134/A __label__implementation  __label__brute  force  given  sequence  positive  find  index  element  equal  arithmetic  mean  element  element  except  contains  second  contains  element  sequence  element  positive  print  sought  index  print  second  sought  index  increasing  order  index
768/C __label__dp  __label__implementation  __label__sortings  __label__brute  force  jon  snow  ha  fight  white  walker  ha  ranger  ha  strength  jon  snow  ha  favourite  ranger  fight  white  walker  strength  white  walker  equal  strength  think  ranger  weak  need  improve  jon  think  take  bitwise  xor  strength  ranger  favourite  might  get  soldier  high  strength  decided  following  operation  time  arrange  ranger  straight  order  increasing  strength  take  bitwise  xor  written  strength  alternate  ranger  update  strength  suppose  jon  ha  ranger  strength  performs  operation  time  arranges  order  strength  doe  following  strength  ranger  updated  strength  second  ranger  remains  strength  third  ranger  updated  strength  fourth  ranger  remains  strength  fifth  ranger  updated  new  strength  ranger  jon  want  know  maximum  minimum  strength  ranger  performing  operation  time  want  help  task  help  consists  ranger  jon  ha  time  jon  carry  operation  jon  favourite  respectively  second  consists  representing  strength  ranger  output  maximum  minimum  strength  ranger  performing  operation  time
897/B __label__brute  force  thanks  lot  today  experienced  many  great  thing  gave  memory  like  dream  leave  last  request  help  solve  codeforces  problem  chtholly  ha  thinking  problem  day  palindrome  length  decimal  representation  without  leading  even  call  zcy  palindrome  mean  written  decimal  representation  contains  leading  read  forward  backwards  example  palindrome  moreover  zcy  given  calculate  sum  smallest  zcy  output  sum  modulo  unfortunately  willem  good  solving  kind  problem  asks  help  contains  output  single  answer  problem
960/D __label__implementation  __label__trees  __label__brute  force  full  binary  tree  infinite  level  node  ha  initial  value  node  ha  value  left  child  ha  value  right  child  ha  value  value  root  need  answer  query  type  query  cyclically  shift  value  node  level  node  value  unit  value  node  level  affected  cyclically  shift  node  level  node  value  unit  subtrees  node  move  along  print  value  every  node  encountered  simple  path  node  value  root  positive  implies  right  cyclic  shift  negative  implies  left  cyclic  shift  guaranteed  atleast  type  query  present  contains  single  query  follow  per  query  type  following  format  type  query  query  type  following  format  query  type  print  value  node  encountered  descending  order
915/A __label__implementation  luba  think  watering  garden  garden  represented  segment  length  luba  ha  got  bucket  bucket  allows  water  continuous  subsegment  garden  length  exactly  hour  luba  water  part  garden  already  watered  water  ground  outside  garden  luba  ha  choose  bucket  order  water  garden  fast  possible  mentioned  hour  water  continuous  subsegment  length  chooses  bucket  help  determine  minimum  hour  ha  spend  watering  garden  guaranteed  luba  always  choose  bucket  possible  water  garden  see  example  better  understanding  input  contains  bucket  length  garden  respectively  second  input  contains  length  segment  watered  bucket  hour  guaranteed  least  bucket  possible  water  garden  hour  using  bucket  print  minimum  hour  required  water  garden
1223/G __label__math  __label__binary  search  __label__number  theory  suppose  stuck  desert  island  way  save  craft  wooden  raft  sea  fortunately  hand  made  saw  forest  nearby  moreover  already  cut  several  tree  prepared  point  log  log  ha  length  wooden  raft  like  build  ha  following  structure  log  length  log  length  raft  would  area  equal  must  since  way  measure  length  desert  island  must  least  since  raft  log  wide  unstable  cut  log  piece  merge  log  maximum  area  raft  craft  contains  log  second  contains  corresponding  length  log  guaranteed  always  craft  least  raft  print  maximum  area  raft  craft
932/E __label__math  __label__dp  team  people  particular  task  pick  non  empty  subset  people  cost  people  task  output  sum  cost  non  empty  subset  people  input  contains  representing  total  people  output  sum  cost  non  empty  subset  modulo
451/A __label__implementation  winning  gold  silver  ioi  akshat  malvika  want  fun  playing  game  grid  made  horizontal  vertical  stick  intersection  point  point  grid  formed  intersection  horizontal  stick  vertical  stick  grid  shown  stick  total  horizontal  stick  shown  red  vertical  stick  shown  green  intersection  point  numbered  rule  game  simple  player  move  turn  akshat  gold  make  move  move  player  must  choose  remaining  intersection  point  remove  grid  stick  pas  point  player  lose  game  make  move  intersection  point  remaining  grid  move  assume  player  play  optimally  win  game  input  contains  space  separated  print  single  containing  akshat  malvika  without  quote  depending  winner  game
404/D __label__dp  __label__implementation  game  minesweeper  played  square  height  square  width  square  square  bomb  square  bomb  contains  total  bomb  adjacent  square  example  correct  field  play  look  like  cell  marked  bomb  note  correct  field  represent  bomb  adjacent  cell  example  field  correct  cell  value  must  adjacent  cell  bomb  valera  want  make  correct  field  play  minesweeper  ha  already  painted  squared  field  width  cell  put  several  bomb  field  wrote  cell  wonder  many  way  fill  remaining  cell  bomb  get  correct  field  end  contains  sequence  character  without  space  containing  character  digit  character  equal  cell  field  contains  bomb  character  equal  valera  decided  put  cell  character  equal  digit  represents  digit  written  square  print  single  way  valera  fill  empty  cell  get  correct  field
899/B __label__implementation  everybody  russia  us  gregorian  calendar  calendar  day  january  day  february  depending  whether  year  leap  day  march  day  april  day  june  july  august  september  october  november  december  year  leap  case  either  divisible  divisible  divisible  example  following  year  leap  year  leap  problem  given  check  could  duration  day  consecutive  month  according  gregorian  calendar  note  month  could  belong  several  consecutive  year  word  check  month  year  duration  day  duration  next  month  day  contains  single  second  contains  check  several  consecutive  month  fit  sequence  print  yes  without  quote  otherwise  print  without  quote
6/E __label__data  structures  __label__trees  __label__binary  search  several  day  left  fiftieth  birthday  famous  berland  writer  berlbury  connection  local  library  decided  make  exposition  work  famous  science  fiction  writer  wa  decided  well  necessary  include  exposition  book  published  particular  time  period  obvious  book  differ  much  size  visitor  like  wa  organizer  came  opinion  difference  highest  lowest  book  exposition  millimeter  library  ha  volume  book  berlbury  arranged  chronological  order  appearance  height  book  millimeter  know  berlbury  highly  respected  city  organizer  want  include  exposition  many  book  possible  find  period  creative  work  manage  cover  asked  help  organizer  cope  hard  task  input  data  contains  separated  space  amount  book  berlbury  library  maximum  allowed  height  difference  lowest  highest  book  second  contains  separated  space  height  book  millimeter  output  data  print  separate  space  maximum  amount  book  organizer  include  exposition  amount  time  period  berlbury  published  book  height  difference  lowest  highest  book  milllimeters
1156/B __label__implementation  __label__greedy  __label__sortings  __label__dfs  __label__strings  given  string  consisting  lowercase  latin  letter  pair  neighbouring  letter  string  considered  ugly  letter  neighbouring  alphabet  example  string  abaca  contains  ugly  pair  position  letter  considered  neighbouring  alphabet  rearrange  letter  given  string  ugly  pair  choose  order  letter  given  string  add  new  letter  remove  existing  leave  order  multiple  answer  print  answer  separate  query  contains  single  query  next  contains  string  string  next  query  guaranteed  contains  lowercase  latin  letter  note  hack  set  print  answer  query
843/A __label__math  __label__implementation  __label__sortings  __label__dfs  given  sequence  consisting  different  required  split  sequence  maximum  subsequence  sorting  increasing  order  total  sequence  sorted  increasing  order  sorting  subsequence  process  included  subsequence  ordered  increasing  order  included  subsequence  change  place  every  element  sequence  must  appear  exactly  subsequence  input  data  contains  length  sequence  second  input  data  contains  different  element  sequence  guaranteed  element  sequence  distinct  print  maximum  subsequence  original  sequence  split  fulfilling  requirement
1065/C __label__greedy  toy  building  consisting  tower  tower  consists  several  cube  standing  tower  consists  cube  ha  height  let  define  operation  slice  height  following  tower  height  greater  remove  top  cube  make  tower  height  equal  cost  slice  equal  total  removed  cube  tower  let  name  slice  good  cost  lower  equal  calculate  minimum  good  slice  make  tower  height  course  always  possible  make  contains  tower  restriction  slice  respectively  second  contains  space  separated  initial  height  tower  print  minimum  good  slice  make  tower  heigth
1221/A __label__math  __label__greedy  __label__brute  force  playing  variation  game  initially  multiset  every  multiset  power  perform  possibly  operation  multiset  operation  choose  equal  remove  insert  equal  sum  example  choose  multiset  becomes  win  belongs  multiset  example  win  follows  choose  multiset  turn  choose  multiset  turn  win  determine  win  game  answer  independent  query  contains  query  query  contains  element  multiset  second  query  contains  description  multiset  guaranteed  element  multiset  power  query  print  yes  possible  obtain  multiset  otherwise
749/E __label__data  structures  given  permutation  exactly  apply  following  operation  permutation  pick  random  segment  shuffle  element  formally  pick  random  segment  continuous  subsequence  segment  equiprobable  let  length  chosen  segment  pick  random  permutation  permutation  equiprobable  permutation  applied  element  chosen  segment  permutation  transformed  inversion  pair  element  necessary  neighbouring  wrong  relative  order  word  inversion  equal  pair  find  expected  inversion  apply  exactly  operation  mentioned  contains  single  length  permutation  second  contains  distinct  element  permutation  print  real  value  expected  inversion  answer  considered  correct  absolute  relative  error  doe  exceed
1036/E __label__number  theory  __label__geometry  given  segment  cartesian  plane  segment  endpoint  coordinate  segment  intersect  segment  lie  count  distinct  point  coordinate  covered  least  segment  contains  single  segment  next  contains  coordinate  endpoint  segment  guaranteed  segment  lie  print  single  distinct  point  coordinate  covered  least  segment
391/D1 __label__brute  force  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  chief  architect  involved  planning  new  supercollider  ha  identify  plot  land  largest  possible  supercollider  built  supercollider  building  requires  way  orthogonal  collision  particle  traveling  speed  consist  accelerating  chamber  shaped  like  plus  sign  accelerating  chamber  must  length  must  aligned  earth  magnetic  field  parallel  orthogonal  minimize  interference  accelerating  chamber  need  laid  long  flat  stretch  land  keep  cost  control  thus  manao  ha  already  commissioned  topographical  study  ha  identified  possible  maximal  length  tract  land  available  building  accelerating  chamber  either  parallel  orthogonal  earth  magnetic  field  build  largest  possible  supercollider  manao  must  identify  largest  symmetric  plus  shape  candidate  tract  must  find  tract  land  form  axis  aligned  plus  shape  largest  distance  center  plus  tip  shortest  arm  plus  note  collider  need  use  entire  length  tract  identified  see  example  note  input  single  space  separated  north  south  tract  west  east  tract  following  describes  north  south  tract  tract  described  single  space  separated  representing  vertical  segment  similarly  describing  north  south  tract  follow  similar  describing  west  east  tract  tract  described  single  space  separated  representing  horizontal  segment  inclusive  inclusive  pair  horizontal  segment  touch  intersect  pair  vertical  segment  touch  intersect  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  inclusive  subproblem  point  inclusive  print  containing  single  size  largest  supercollider  built  north  south  tract  west  east  tract  size  supercollider  defined  length  accelerating  chamber  word  size  resulting  supercollider  defined  distance  intersection  segment  closest  endpoint  either  segment  pair  north  south  west  east  tract  intersects  possible  build  supercollider  program  report  maximum  size
193/B __label__brute  force  john  doe  ha  array  array  consists  element  array  indexed  starting  array  permutation  john  invented  game  friend  initially  player  given  array  player  must  consecutively  execute  exactly  operation  permitted  execute  following  operation  operation  change  expression  mean  applying  operation  bitwise  xor  given  operation  exists  modern  programming  language  example  language  java  marked  pascal  xor  operation  change  api  operation  executed  change  made  time  operation  applied  point  player  get  determined  formula  john  want  find  maximum  point  player  win  game  help  contains  space  separated  element  array  operation  describes  operation  next  contains  space  separated  array  ha  array  second  ha  array  third  ha  array  fourth  ha  array  guaranteed  element  array  positive  exceed  element  array  exceed  absolute  value  permutation  single  print  maximum  point  player  win  john  game
1200/E __label__implementation  __label__brute  force  __label__strings  amugae  ha  sentence  consisting  word  want  compress  sentence  word  amugae  like  repetition  merges  word  word  remove  longest  prefix  second  word  coincides  suffix  word  example  merges  sample  please  samplease  amugae  merge  sentence  left  right  merge  word  merge  result  third  word  write  program  print  compressed  word  merging  process  end  contains  word  amugae  sentence  second  contains  word  separated  single  space  word  non  empty  consists  uppercase  lowercase  english  letter  digit  total  length  word  doe  exceed  output  compressed  word  merging  process  end  described  problem
859/A __label__implementation  __label__greedy  year  previous  year  memsql  inviting  top  competitor  start  qualification  round  compete  onsite  final  round  everyone  eligible  compete  onsite  afford  travel  office  though  initially  top  contestant  invited  come  onsite  eligible  contestant  must  either  accept  decline  invitation  whenever  contestant  decline  highest  ranked  contestant  invited  invited  take  place  declined  continues  contestant  accepted  invitation  qualifying  round  completes  know  onsite  finalist  well  qualifying  rank  start  tie  determine  minimum  possible  contestant  declined  invitation  compete  onsite  final  round  input  contains  onsite  finalist  know  second  input  contains  qualifying  rank  finalist  know  rank  distinct  print  minimum  possible  contestant  declined  invitation  compete  onsite
665/A __label__implementation  bus  run  city  last  departs  later  bus  city  departs  every  minute  arrives  city  minute  bus  city  departs  every  minute  arrives  city  minute  driver  simion  want  make  job  diverse  count  bus  going  towards  simion  count  bus  meet  start  finish  know  time  simion  departed  city  city  calculate  bus  simion  meet  sure  counting  contains  frequency  bus  city  city  travel  time  value  given  minute  second  contains  b  frequency  bus  city  city  travel  time  value  given  minute  last  contains  departure  time  simion  city  format  guaranteed  bus  city  time  note  hour  minute  given  exactly  digit  print  bus  simion  meet  way  note  count  encounter  city
516/E __label__math  __label__number  theory  drazil  ha  many  friend  happy  unhappy  drazil  want  make  friend  become  happy  invented  following  plan  boy  girl  friend  let  separately  day  drazil  invite  boy  girl  dinner  together  drazil  programmer  start  people  happy  become  happy  otherwise  people  remain  state  person  becomes  happy  happy  originally  stay  happy  forever  drazil  want  know  day  friend  become  happy  determine  become  happy  contains  second  contains  denoting  happy  boy  friend  drazil  follow  distinct  denoting  list  index  happy  boy  third  conatins  denoting  happy  girl  friend  drazil  follow  distinct  j  denoting  list  index  happy  girl  guaranteed  least  person  unhappy  friend  print  day  friend  drazil  become  happy  day  come  print
1144/B __label__implementation  __label__greedy  __label__sortings  polycarp  ha  array  consisting  want  play  game  array  game  consists  several  move  move  chooses  element  deletes  move  array  contains  element  next  move  chooses  element  restriction  parity  differ  parity  element  deleted  previous  move  word  alternate  parity  even  odd  even  odd  odd  even  odd  even  removed  element  polycarp  stop  make  move  formally  move  chooses  element  deletes  second  next  move  last  deleted  element  wa  odd  polycarp  chooses  even  element  deletes  last  deleted  element  wa  even  polycarp  chooses  odd  element  deletes  move  polycarp  make  move  game  end  polycarp  goal  minimize  sum  non  deleted  element  array  end  game  polycarp  delete  whole  array  sum  non  deleted  element  help  polycarp  find  value  input  contains  element  second  input  contains  element  print  minimum  possible  sum  non  deleted  element  array  end  game
1120/B __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  player  came  casino  found  slot  machine  everything  depends  play  rule  follow  positive  initially  screen  player  put  coin  machine  add  subtract  adjacent  digit  digit  must  remain  operation  leading  digit  must  equal  word  forbidden  add  subtract  subtract  leading  screen  becomes  equal  player  win  jackpot  digit  help  player  determine  minimal  coin  need  spend  order  win  jackpot  tell  play  contains  single  standing  length  next  separate  impossible  win  jackpot  print  single
1131/C __label__greedy  __label__sortings  __label__binary  search  cowboy  vlad  ha  birthday  today  child  came  celebration  order  greet  vlad  child  decided  form  circle  around  child  came  tall  low  stand  circle  arbitrarily  turn  tall  low  child  standing  next  difficult  hold  hand  therefore  child  want  stand  circle  maximum  difference  growth  neighboring  child  would  minimal  possible  formally  let  child  circle  order  every  child  stand  next  child  child  stand  next  child  call  discomfort  circle  maximum  absolute  difference  height  child  stand  next  please  help  child  find  reorder  resulting  discomfort  smallest  possible  contains  single  child  came  cowboy  vlad  birthday  second  contains  denoting  height  every  child  print  exactly  height  child  order  stand  circle  start  printing  circle  child
1151/B __label__dp  __label__constructive  algorithms  __label__brute  force  student  dima  kremland  ha  matrix  size  nm  filled  non  negative  want  select  exactly  row  matrix  bitwise  exclusive  selected  strictly  greater  help  formally  want  choose  sequence  inequality  hold  matrix  element  row  column  denotes  bitwise  xor  operation  contains  row  column  matrix  next  contains  element  row  matrix  way  choose  row  bitwise  exclusive  strictly  greater  print  nie
1193/B __label__dp  __label__data  structures  __label__trees  magic  tree  rooted  tree  vertex  vertex  numbered  vertex  root  magic  tree  give  magic  fruit  fruit  grows  vertex  tree  root  vertex  contains  piece  fruit  day  fruit  ripe  fruit  ripe  single  day  fruit  given  vertex  grows  day  ripe  amount  magic  juice  extract  harvest  ripe  fruit  harvested  cutting  branch  tree  day  cut  many  branch  tree  like  part  tree  cut  fall  ground  collect  ripe  fruit  fruit  fall  ground  ripe  discarded  magic  juice  collected  formally  day  erase  edge  tree  whenever  tree  split  multiple  connected  component  erase  component  root  harvest  ripe  fruit  component  contained  given  description  tree  together  location  ripening  day  juiciness  fruit  calculate  maximum  total  amount  magic  juice  harvest  tree  contains  space  separated  vertex  fruit  maximum  day  fruit  become  ripe  following  per  inclusive  vertex  parent  vertex  last  describes  fruit  ha  form  guaranteed  vertex  contains  fruit  value  distinct  output  single  single  maximum  amount  magic  juice  harvest  tree
163/B __label__binary  search  know  lemming  like  jumping  next  spectacular  group  jump  lemming  gathered  near  high  rock  comfortable  ledge  ledge  situated  height  meter  second  height  meter  ledge  height  meter  lemming  going  jump  sunset  much  time  left  lemming  characterized  climbing  speed  meter  per  minute  weight  mean  lemming  climb  ledge  minute  make  jump  beautiful  heavier  lemming  jump  higher  ledge  lemming  weight  jump  ledge  lemming  weight  jump  ledge  inequation  mij  fulfilled  since  lemming  ledge  k  lemming  take  part  jump  need  chosen  chosen  lemming  distributed  ledge  lemming  per  ledge  lemming  arranged  order  non  decreasing  weight  increasing  height  ledge  addition  lemming  enough  time  get  ledge  time  climb  exceed  minute  lemming  climb  ledge  time  interfere  find  way  arrange  lemming  jump  time  minimized  contains  space  separated  total  lemming  ledge  distance  adjacent  ledge  second  contains  space  separated  weight  lemming  third  contains  space  separated  speed  lemming  print  different  lemming  ledge  height  correspondingly  jump  organized  optimal  way  multiple  way  select  lemming  pick
169/A __label__sortings  petya  vasya  brother  today  special  day  parent  left  home  alone  commissioned  chore  chore  characterized  single  parameter  complexity  complexity  chore  equal  petya  older  want  take  chore  complexity  larger  value  leave  vasya  chore  complexity  le  equal  hi  brother  already  decided  petya  exactly  chore  vasya  exactly  chore  many  way  choose  petya  got  exactly  chore  vasya  got  exactly  chore  input  contains  total  chore  petya  chore  vasya  chore  next  contains  sequence  complexity  chore  given  sequence  necessarily  different  separated  single  space  print  required  way  choose  value  way  print
999/A __label__implementation  __label__brute  force  mishka  started  participating  programming  contest  problem  contest  mishka  problem  solving  skill  equal  mishka  arranges  problem  contest  list  weird  principle  mishka  solves  problem  end  list  every  time  chooses  end  left  right  solve  next  problem  thus  problem  mishka  solves  either  leftmost  rightmost  problem  list  mishka  solve  problem  difficulty  greater  mishka  solves  problem  disappears  list  length  list  decrease  mishka  stop  unable  solve  problem  end  list  many  problem  mishka  solve  input  contains  k  problem  contest  mishka  problem  solving  skill  second  input  contains  difficulty  problem  problem  given  order  leftmost  rightmost  list  print  maximum  problem  mishka  solve
735/A __label__implementation  __label__strings  way  rio  janeiro  ostap  kill  time  playing  grasshopper  took  special  box  ostap  build  length  cell  empty  obstacle  place  grasshopper  empty  cell  small  insect  another  empty  cell  grasshopper  want  eat  insect  ostap  know  grasshopper  able  jump  empty  cell  exactly  cell  away  current  left  right  note  matter  whether  intermediate  cell  empty  grasshopper  make  jump  example  grasshopper  jump  neighboring  cell  grasshopper  jump  single  cell  goal  determine  whether  sequence  jump  grasshopper  get  initial  position  cell  insect  input  contains  cell  length  grasshopper  jump  second  contains  string  length  consisting  character  character  mean  corresponding  cell  empty  character  mean  corresponding  cell  contains  obstacle  grasshopper  jump  character  mean  grasshopper  start  position  finally  mean  target  insect  located  cell  guaranteed  character  appear  exactly  exists  sequence  jump  jump  length  grasshopper  get  initial  position  cell  insect  print  yes  without  quote  input  otherwise  print  without  quote
1209/E2 __label__dp  __label__greedy  __label__sortings  harder  version  problem  difference  constraint  given  rectangular  nm  matrix  move  choose  column  cyclically  shift  element  column  perform  operation  many  time  want  possibly  perform  operation  column  multiple  time  done  cyclical  shift  compute  every  row  maximal  value  suppose  row  equal  maximal  possible  value  contains  test  case  input  test  case  contains  row  column  given  matrix  following  contains  element  print  answer  test  case  order  given  input
699/A __label__implementation  launch  new  powerful  unusual  collider  soon  located  along  straight  particle  launched  inside  located  straight  particle  located  point  coordinate  particle  coincide  distance  meter  center  collider  coordinate  particle  position  collider  time  coordinate  particle  position  even  know  direction  particle  movement  move  right  left  collider  launch  start  particle  begin  move  simultaneously  time  collider  launch  start  particle  move  straight  left  straight  right  constant  speed  meter  per  microsecond  collider  big  enough  particle  leave  foreseeable  time  write  program  find  moment  collision  particle  collider  word  find  microsecond  moment  particle  point  contains  positive  particle  second  contains  symbol  symbol  equal  particle  move  left  otherwise  symbol  equal  particle  move  right  third  contains  sequence  pairwise  distinct  even  coordinate  particle  order  left  right  guaranteed  coordinate  particle  given  increasing  order  print  moment  microsecond  particle  point  explosion
998/A __label__implementation  __label__constructive  algorithms  quite  lot  way  fun  inflatable  balloon  example  fill  water  see  happens  grigory  andrew  opinion  upon  time  went  shop  bought  packet  inflatable  balloon  ha  exactly  balloon  inside  want  divide  balloon  addition  several  condition  hold  rip  packet  grigory  andrew  get  unbroken  packet  distribute  packet  every  packet  given  someone  give  grigory  andrew  least  packet  provide  fun  total  balloon  grigory  packet  equal  total  balloon  andrew  packet  help  divide  balloon  determine  impossible  condition  input  contains  single  packet  balloon  second  contains  balloon  inside  corresponding  packet  impossible  divide  balloon  satisfying  condition  print
1066/B __label__greedy  vova  house  array  consisting  element  yeah  problem  think  someone  life  array  heater  position  array  element  array  heater  position  otherwise  element  array  heater  ha  value  heater  value  mean  heater  position  po  warm  element  range  po  po  vova  like  walk  house  think  hate  cold  position  house  vova  want  switch  heater  way  element  house  warmed  least  heater  vova  target  warm  whole  house  element  array  heater  position  vova  warm  whole  house  switch  heater  house  element  warmed  heater  last  element  warmed  second  heater  initially  heater  hand  vova  like  pay  much  electricity  want  switch  minimum  heater  way  element  house  warmed  least  heater  task  find  heater  say  impossible  warm  whole  house  input  contains  r  element  array  value  heater  second  contains  vova  house  description  print  minimum  heater  needed  warm  whole  house  impossible
466/A __label__implementation  ann  ha  recently  started  commuting  subway  know  ride  subway  ticket  cost  ruble  besides  ann  found  buy  special  ticket  ride  buy  several  time  cost  ruble  ann  math  need  use  subway  time  help  ann  tell  minimum  sum  money  spend  make  ride  single  contains  space  separated  ride  ann  ha  planned  ride  covered  ride  ticket  price  ride  ticket  price  ride  ticket  print  single  minimum  sum  ruble  ann  need  spend
1208/G __label__math  __label__greedy  __label__number  theory  given  need  construct  regular  polygon  circumcircle  distinct  side  illustration  example  rotate  minimize  total  distinct  point  circle  find  minimum  point  input  contains  maximum  side  polygon  polygon  construct  respectively  print  single  minimum  point  required  polygon
852/F __label__math  __label__number  theory  consider  array  element  define  product  transformation  simultaneous  update  multiplying  element  element  right  last  remaining  example  start  array  product  transformation  product  transformation  simple  task  calculate  array  product  transformation  since  get  quite  big  output  modulo  input  contains  prime  multiplicative  order  modulo  see  note  definition  output  array  left  right
1076/A __label__greedy  __label__strings  given  string  consisting  lowercase  latin  letter  remove  character  string  way  string  obtain  lexicographically  smallest  string  obtained  using  operation  string  lexicographically  smaller  string  exists  pin  example  aaa  smaller  aaaa  abb  smaller  abc  pqr  smaller  input  contains  length  second  input  contains  exactly  lowercase  latin  letter  string  print  string  smallest  possible  lexicographically  string  obtained  removing  character  string
773/A __label__math  __label__binary  search  experienced  codeforces  user  today  found  activity  codeforces  made  submission  successful  thus  current  success  rate  codeforces  equal  favorite  rational  range  wonder  smallest  submission  make  want  success  rate  contains  single  test  case  next  contains  guaranteed  irreducible  fraction  hack  hack  additional  constraint  must  met  test  case  output  single  equal  smallest  submission  make  want  success  rate  equal  favorite  rational  impossible  achieve
572/A __label__sortings  given  array  consisting  sorted  non  decreasing  order  check  whether  possible  choose  array  choose  array  chosen  array  strictly  le  chosen  second  array  contains  b  separated  space  size  array  correspondingly  second  contains  b  separated  space  third  contains  ana  na  separated  space  element  array  fourth  contains  bnb  nb  separated  space  element  array  print  yes  without  quote  choose  array  array  chosen  array  wa  strictly  le  chosen  array  otherwise  print  without  quote
1034/C __label__dp  __label__trees  __label__number  theory  city  kingdom  autumn  numbered  people  travel  city  using  directional  road  year  government  decides  separate  kingdom  region  different  level  whole  kingdom  region  level  region  level  separated  several  least  region  level  unless  level  last  level  city  belong  exactly  region  level  city  region  possible  travel  passing  city  region  according  research  city  value  describes  importance  city  region  level  equal  sum  city  importance  task  find  many  plan  determine  separation  region  condition  satisfied  plan  considered  different  level  different  exist  city  region  level  plan  different  region  level  plan  since  answer  large  output  modulo  contains  city  second  contains  value  city  third  contains  describes  road  city  print  different  plan  modulo
802/H __label__constructive  algorithms  __label__strings  thanks  help  heidi  confident  fool  ha  decided  post  fake  news  hc  facebook  page  want  able  communicate  hc  committee  post  fake  using  secret  phrase  hidden  post  subsequence  make  method  foolproof  want  phrase  appear  time  post  asking  design  post  string  hidden  phrase  appears  subsequence  exactly  time  input  contains  single  output  nonempty  string  separated  single  space  string  composed  letter  lowercase  uppercase  allowed  length  occurrence  subsequence  exactly  many  possible  solution  output  guaranteed  least  solution  exists
854/B __label__math  __label__constructive  algorithms  maxim  want  buy  apartment  new  house  avenue  metropolis  house  ha  apartment  numbered  arranged  row  apartment  adjacent  index  differ  apartment  already  inhabited  others  available  sale  maxim  often  visit  neighbor  apartment  good  available  sale  least  already  inhabited  apartment  adjacent  maxim  know  exactly  already  inhabited  apartment  know  index  find  could  minimum  possible  maximum  possible  apartment  good  maxim  input  contains  print  minimum  possible  maximum  possible  apartment  good  maxim
391/F1 __label__dp  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  ha  developed  model  predict  stock  price  company  next  day  want  design  profit  maximizing  trading  algorithm  make  use  prediction  unfortunately  manao  trading  account  ha  following  restriction  allows  owning  either  share  stock  time  allows  buying  selling  share  stock  per  day  allows  maximum  buy  order  next  day  purpose  problem  define  trade  act  buying  share  stock  day  holding  stock  day  point  share  sold  restate  constraint  manao  permitted  make  non  overlapping  trade  course  day  trading  period  manao  model  ha  prediction  stock  price  even  though  restriction  limit  amount  profit  manao  make  compared  would  achievable  unlimited  trade  ability  hold  share  time  manao  still  ha  potential  make  lot  money  manao  model  perfectly  predicts  daily  price  stock  example  using  model  manao  could  wait  price  low  buy  share  hold  price  reach  high  value  sell  profit  repeat  process  time  day  passed  nevertheless  manao  satisfied  merely  good  trading  algorithm  want  develop  optimal  strategy  trading  subject  constraint  help  manao  achieve  goal  writing  program  determine  buy  sell  stock  achieve  greatest  possible  profit  day  trading  period  subject  constraint  contains  separated  single  space  following  contains  single  represents  price  someone  either  buy  sell  share  stock  day  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  inclusive  subproblem  point  inclusive  subproblem  point  inclusive  problem  program  report  amount  optimal  profit  rather  list  trade  achieve  profit
1130/C __label__dfs  __label__brute  force  alice  life  flat  planet  modeled  square  grid  size  nn  row  column  enumerated  represent  cell  intersection  row  column  ordered  pair  cell  grid  either  land  water  example  planet  appears  sample  test  alice  resides  land  cell  wish  travel  land  cell  moment  move  cell  adjacent  direction  left  right  unfortunately  alice  swim  viable  transportation  mean  foot  walk  land  result  alice  trip  impossible  help  alice  plan  create  tunnel  land  cell  tunnel  allow  alice  freely  travel  endpoint  indeed  creating  tunnel  lot  effort  cost  creating  tunnel  cell  task  find  minimum  possible  cost  creating  tunnel  alice  could  travel  tunnel  need  created  cost  contains  width  square  grid  second  contains  space  separated  denoting  cell  alice  resides  third  contains  space  separated  denoting  cell  alice  wish  travel  following  contains  string  character  character  land  water  guaranteed  land  print  minimum  possible  cost  creating  tunnel  alice  could  travel
1234/C __label__dp  __label__implementation  given  system  pipe  consists  row  row  consists  pipe  top  left  pipe  ha  coordinate  bottom  right  type  pipe  type  straight  pipe  type  curved  pipe  example  type  type  pipe  turn  given  pipe  degree  clockwise  counterclockwise  arbitrary  possibly  time  type  become  type  become  want  turn  pipe  way  water  flow  start  left  top  left  pipe  move  pipe  flow  somehow  connected  pipe  pipe  flow  right  pipe  connected  adjacent  system  end  connected  example  connected  pipe  example  connected  pipe  let  describe  problem  using  example  example  input  solution  example  answer  see  water  flow  poorly  drawn  blue  obtain  answer  need  turn  pipe  degree  clockwise  pipe  degree  pipe  degree  pipe  degree  pipe  degree  flow  water  reach  answer  independent  query  input  contains  query  query  follow  query  consists  exactly  query  contains  pipe  row  next  description  second  row  correspondingly  row  description  consists  digit  without  whitespaces  digit  corresponds  type  pipe  corresponding  cell  see  problem  statement  understand  digit  correspond  type  pipe  guaranteed  sum  query  doe  exceed  query  print  answer  yes  without  quote  possible  turn  pipe  way  water  flow  reach  otherwise
580/A __label__dp  __label__implementation  __label__brute  force  kefa  decided  make  money  business  internet  exactly  day  know  day  make  money  kefa  love  progress  want  know  length  maximum  non  decreasing  subsegment  sequence  let  remind  subsegment  sequence  continuous  fragment  subsegment  called  non  decreasing  follow  non  decreasing  order  help  kefa  cope  task  contains  second  contains  n  print  single  length  maximum  non  decreasing  subsegment  sequence
780/C __label__greedy  __label__dfs  __label__graphs  __label__trees  andryusha  go  park  day  square  path  look  boring  andryusha  decided  decorate  park  consists  square  connected  bidirectional  path  way  square  reachable  using  path  andryusha  decided  hang  colored  balloon  square  baloons  color  described  positive  starting  order  make  park  varicolored  andryusha  want  choose  color  special  way  precisely  want  use  color  distinct  square  direct  path  direct  path  balloon  color  square  distinct  andryusha  want  use  little  different  color  possible  help  choose  color  contains  single  square  park  next  contains  index  square  directly  connected  path  guaranteed  square  reachable  using  path  print  single  minimum  color  andryusha  ha  use
858/C __label__dp  __label__implementation  __label__greedy  beroffice  text  editor  ha  wide  range  feature  help  working  text  feature  automatic  search  typo  suggestion  fix  beroffice  work  small  english  letter  letter  beroffice  think  word  typed  typo  consonant  row  word  exception  block  consonant  ha  letter  block  even  length  greater  considered  typo  formally  word  typed  typo  block  le  consonant  row  least  different  letter  block  example  following  word  typo  hellno  hackcerrs  backtothefutttture  following  word  typo  helllllooooo  tobeornottobe  oooooo  beroffice  editor  find  word  typo  insert  little  possible  space  word  dividing  several  word  way  resulting  word  typed  without  typo  implement  feature  beroffice  editor  consider  following  letter  vowel  letter  consonant  problem  contains  non  empty  word  consisting  small  english  letter  length  word  letter  print  given  word  without  change  typo
780/B __label__binary  search  main  road  bytecity  straight  south  north  conveniently  coordinate  measured  meter  southernmost  building  north  direction  point  road  friend  standing  point  meter  move  speed  greater  meter  per  second  direction  along  road  south  north  compute  minimum  time  needed  gather  friend  point  road  note  point  meet  need  coordinate  contains  single  friend  second  contains  current  coordinate  friend  meter  third  contains  maximum  speed  friend  meter  per  second  print  minimum  time  second  needed  friend  meet  point  road
1107/B __label__math  __label__number  theory  today  lesson  mathematics  petya  learns  digital  root  digital  root  non  negative  single  digit  value  obtained  iterative  process  summing  digit  iteration  using  result  previous  iteration  compute  digit  sum  process  continues  single  digit  reached  let  denote  digital  root  homework  petya  got  task  form  find  positive  whose  digital  root  petya  ha  already  solved  problem  know  right  task  solve  task  petya  homework  contains  single  task  petya  homework  next  petya  task  need  find  positive  digital  root  output  single  answer  problem
1178/A __label__greedy  alice  leader  state  refactoring  party  become  prime  minister  election  taken  place  party  numbered  party  ha  received  seat  parliament  alice  party  ha  order  become  prime  minister  need  build  coalition  consisting  party  possibly  party  condition  need  fulfil  total  seat  party  coalition  must  strict  majority  seat  must  strictly  half  seat  example  parliament  ha  seat  majority  seat  alice  party  must  least  time  seat  party  coalition  example  invite  party  seat  alice  party  must  least  seat  example  note  alice  party  ha  seat  following  set  create  coalition  since  condition  satisfied  following  set  create  coalition  since  alice  party  since  coalition  strict  majority  since  alice  party  least  time  seat  party  coalition  alice  doe  minimise  party  coalition  want  invite  many  party  want  long  condition  satisfied  alice  party  ha  enough  people  create  coalition  invite  party  note  alice  either  invite  party  whole  possible  invite  deputy  seat  another  party  word  alice  invite  party  invite  deputy  find  print  suitable  coalition  contains  single  party  second  contains  space  separated  seat  party  ha  coalition  satisfying  condition  possible  output  single
269/D __label__dp  __label__data  structures  __label__sortings  __label__graphs  emuskald  wa  hired  design  artificial  waterfall  according  latest  trend  landscape  architecture  modern  artificial  waterfall  consists  multiple  horizontal  panel  affixed  wide  flat  wall  water  flow  top  wall  panel  panel  reach  bottom  wall  wall  ha  height  ha  panel  wall  panel  horizontal  segment  height  begin  end  panel  connects  point  plane  top  wall  considered  panel  connecting  point  similarly  bottom  wall  considered  panel  connecting  point  panel  share  common  point  emuskald  know  waterfall  aesthetically  pleasing  flow  panel  panel  following  condition  hold  max  horizontal  projection  panel  overlap  panel  panel  panel  condition  hold  pair  flow  equal  min  ax  length  horizontal  projection  overlap  emuskald  ha  decided  waterfall  water  flow  single  path  top  bottom  water  flow  panel  except  bottom  wall  water  fall  exactly  lower  panel  total  amount  water  flow  waterfall  defined  minimum  horizontal  projection  overlap  consecutive  panel  path  waterfall  formally  waterfall  consists  single  path  panel  flow  waterfall  minimum  flow  path  make  truly  great  waterfall  emuskald  must  maximize  water  flow  many  panel  hard  time  planning  creation  example  waterfall  emuskald  want  help  emuskald  maintain  reputation  find  value  maximum  possible  water  flow  input  contains  space  separated  panel  excluding  top  bottom  panel  height  wall  following  space  separated  height  left  right  end  panel  segment  guaranteed  segment  share  common  point  output  single  maximum  possible  amount  water  flow  desired  waterfall
1139/D __label__math  __label__dp  __label__number  theory  vivek  initially  ha  empty  array  constant  performs  following  algorithm  select  random  uniformly  range  append  end  compute  greatest  common  divisor  case  equal  break  otherwise  return  step  find  expected  length  shown  represented  coprime  mod  print  value  mod  contains  single  print  single  expected  length  array  written  mod
1215/A __label__math  __label__implementation  __label__greedy  final  match  berland  football  cup  ha  held  recently  referee  ha  shown  yellow  card  throughout  match  beginning  match  player  team  player  second  team  rule  sending  player  game  bit  different  berland  football  player  team  receives  yellow  card  throughout  match  longer  participate  match  sent  player  second  team  receives  yellow  card  sent  player  leaf  match  longer  receive  yellow  card  yellow  card  wa  shown  exactly  player  even  player  team  even  team  leave  match  game  still  continues  referee  ha  lost  record  ha  received  yellow  card  help  determine  minimum  maximum  player  could  thrown  game  contains  player  team  second  contains  player  second  team  third  contains  maximum  yellow  card  player  team  receive  receiving  many  yellow  card  leaf  game  fourth  contains  maximum  yellow  card  player  second  team  receive  receiving  many  yellow  card  leaf  game  fifth  contains  yellow  card  shown  match  print  minimum  maximum  player  could  thrown  game
711/A __label__implementation  __label__brute  force  coder  chris  baboon  travelling  udayland  get  get  special  ioi  bus  ioi  bus  ha  row  seat  seat  row  seat  separated  pair  walkway  chris  came  place  bus  wa  already  occupied  chris  good  friend  insist  get  pair  neighbouring  empty  seat  seat  considered  neighbouring  row  pair  given  configuration  bus  help  chris  determine  sit  input  contains  single  row  seat  bus  follow  contains  exactly  character  denote  pair  seat  row  third  character  denotes  walkway  always  equal  last  denote  second  pair  seat  row  character  except  walkway  equal  denotes  empty  seat  denotes  occupied  seat  see  sample  case  detail  possible  chris  sit  neighbouring  empty  seat  print  yes  without  quote  next  print  bus  configuration  character  pair  seat  chris  changed  character  thus  configuration  differ  input  exactly  charaters  equal  input  output
891/C __label__data  structures  __label__graphs  connected  undirected  weighted  graph  mst  minimum  spanning  tree  subgraph  contains  vertex  tree  sum  edge  minimum  possible  given  graph  run  mst  algorithm  graph  would  give  mst  cause  edge  become  jealous  given  query  query  contains  set  edge  graph  determine  whether  mst  containing  edge  contains  vertex  edge  graph  query  next  contains  uii  endpoint  weight  edge  edge  vertex  guaranteed  given  graph  connected  next  contains  single  query  follow  contains  query  start  size  edge  subset  continues  distinct  space  separated  index  edge  guaranteed  sum  doe  exceed  query  print  yes  without  quote  mst  containing  edge  course  without  quote  otherwise
89/A __label__greedy  nighttime  joe  elusive  got  country  main  bank  safe  safe  ha  cell  positioned  row  contains  amount  diamond  let  make  problem  comfortable  work  mark  cell  positive  left  right  unfortunately  joe  switch  last  security  system  plus  side  know  way  work  every  minute  security  system  calculates  total  amount  diamond  adjacent  cell  cell  whose  difference  equal  result  check  get  sum  least  sum  differs  corresponding  sum  received  previous  check  security  system  triggered  joe  move  diamond  cell  another  security  system  check  manages  move  time  check  following  operation  regarded  moving  diamond  moving  diamond  cell  moving  diamond  cell  joe  pocket  moving  diamond  joe  pocket  cell  initially  joe  pocket  empty  carry  unlimited  amount  diamond  considered  joe  action  system  performs  least  check  morning  bank  employee  come  joe  ha  leave  bank  moment  joe  ha  minute  left  morning  minute  perform  operation  remains  joe  pocket  considered  loot  calculate  largest  amount  diamond  joe  carry  forget  security  system  triggered  even  joe  leaf  bank  joe  leave  morning  contains  next  contains  equal  amount  diamond  cell  print  single  maximum  diamond  joe  steal
766/D __label__dp  __label__data  structures  __label__dfs  __label__graphs  mahmoud  want  write  new  dictionary  contains  word  relation  type  relation  synonymy  word  mean  antonymy  word  mean  opposite  time  time  discovers  new  relation  word  know  word  relation  ha  relation  word  ha  relation  example  like  mean  love  love  opposite  hate  like  opposite  hate  example  love  opposite  hate  hate  opposite  like  love  mean  like  sometimes  mahmoud  discovers  wrong  relation  wrong  relation  relation  make  word  equal  opposite  time  example  know  love  mean  like  like  opposite  hate  figure  hate  mean  like  last  relation  absolutely  wrong  make  hate  like  opposite  meaning  time  mahmoud  figured  many  relation  wa  worried  wrong  make  relation  wrong  decided  tell  every  relation  figured  coder  friend  ehab  every  relation  wanted  know  correct  wrong  basing  previously  discovered  relation  wrong  ignores  check  following  relation  adding  relation  mahmoud  asked  ehab  relation  word  based  information  given  ehab  busy  making  codeforces  round  asked  help  input  contains  word  dictionary  relation  mahmoud  figured  question  mahmoud  asked  telling  relation  second  contains  distinct  word  consisting  small  english  letter  length  exceeding  word  dictionary  follow  contains  followed  different  word  ha  appeared  dictionary  word  mean  ha  synonymy  relation  otherwise  ha  antonymy  relation  follow  contains  different  word  ha  appeared  dictionary  pair  word  mahmoud  want  know  relation  basing  relation  discovered  word  input  lowercase  english  letter  length  exceed  character  relation  question  word  different  print  per  relation  relation  wrong  make  word  opposite  meaning  time  print  without  quote  ignore  otherwise  print  yes  without  quote
1110/H __label__dp  __label__strings  given  let  call  modest  l  find  string  length  consisting  digit  ha  largest  possible  substring  make  modest  substring  leading  counted  many  answer  find  lexicographically  smallest  occurs  multiple  time  substring  counting  modest  substring  counted  multiple  time  well  contains  second  contains  third  contains  print  maximum  possible  modest  substring
1185/D __label__math  __label__implementation  sequence  called  arithmetic  progression  element  satisfy  condition  fixed  example  sequence  arithmetic  progression  sequence  arithmetic  progression  given  sequence  find  index  delete  sequence  reorder  remaining  element  get  arithmetic  progression  index  output  input  contains  length  sequence  second  contains  element  sequence  print  index  delete  element  sequence  reorder  remaining  element  get  arithmetic  progression  multiple  solution  allowed  print  index  print
1119/C __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  ramesses  came  university  algorithm  practice  professor  fairly  known  programmer  gave  following  task  given  matrix  size  nm  consists  apply  following  operation  matrix  arbitrary  time  take  submatrix  matrix  ha  least  row  column  invert  value  corner  corner  submatrix  replaced  corner  submatrix  replaced  answer  whether  obtain  matrix  matrix  example  operation  chosen  submatrix  shown  blue  yellow  corner  shown  yellow  ramesses  want  perform  operation  asks  answer  question  submatrix  matrix  matrix  consist  element  come  row  index  matrix  column  index  matrix  edge  row  column  submatrix  word  submatrix  set  element  source  matrix  form  solid  rectangle  without  hole  side  parallel  side  original  matrix  corner  submatrix  cell  cell  denotes  cell  intersection  row  column  contains  row  column  matrix  next  element  row  matrix  next  element  row  matrix  print  yes  without  quote  possible  transform  matrix  matrix  using  operation  described  without  quote  possible  print  letter  case  upper  lower
1225/B1 __label__implementation  difference  easy  hard  version  constraint  bertv  channel  every  day  broadcast  episode  show  know  schedule  next  day  sequence  show  episode  shown  day  subscription  show  bought  entire  show  episode  show  subscription  bought  separately  many  minimum  subscription  need  buy  order  opportunity  watch  episode  purchased  show  day  row  word  want  buy  minimum  show  segment  consecutive  day  episode  belong  purchased  show  contains  test  case  input  test  case  description  follow  test  case  contains  second  contains  show  broadcasted  day  guaranteed  sum  value  test  case  input  doe  exceed  print  answer  test  case  input  order  follow  answer  test  case  minimum  show  need  purchase  subscription  watch  episode  purchased  show  bertv  consecutive  day  please  note  permissible  able  watch  day  row
1055/D __label__implementation  __label__greedy  __label__strings  alice  ha  written  program  try  improve  readability  way  improve  readability  give  sensible  name  variable  alice  want  rename  variable  program  ide  command  called  massive  refactoring  replace  name  many  variable  run  use  alice  need  select  string  variable  following  algorithm  performed  variable  name  contains  substring  occurrence  replaced  name  variable  name  stay  list  variable  known  variable  initial  name  name  alice  want  variable  change  known  moreover  variable  length  initial  name  target  name  equal  otherwise  alignment  code  could  become  broken  need  perform  renaming  variable  exactly  run  massive  refactoring  command  determine  impossible  contains  variable  alice  program  following  initial  name  variable  per  contains  target  name  variable  guaranteed  guaranteed  least  variable  target  name  different  initial  name  initial  target  name  consist  lowercase  english  letter  variable  length  initial  name  equal  length  target  name  impossible  rename  variable  call  massive  refactoring  print  quote  clarity
895/B __label__math  __label__sortings  __label__binary  search  vasya  finished  eating  piece  pizza  lesson  ha  already  started  late  lesson  teacher  suggested  vasya  solve  interesting  problem  vasya  ha  array  find  different  ordered  pair  index  aij  exactly  aij  divisible  problem  meant  pair  equal  equal  example  pair  contains  size  array  statement  second  contains  element  array  print  answer  problem
1009/F __label__data  structures  __label__trees  given  rooted  undirected  tree  consisting  vertex  vertex  root  let  denote  depth  array  vertex  infinite  sequence  vertex  condition  hold  ancestor  simple  path  traverse  exactly  edge  dominant  index  depth  array  vertex  shortly  dominant  index  vertex  index  every  every  every  vertex  tree  calculate  dominant  index  contains  vertex  tree  follow  containing  denotes  edge  tree  guaranteed  edge  form  tree  output  equal  dominant  index  vertex
1120/F __label__dp  __label__greedy  __label__data  structures  little  little  decided  send  letter  regarding  important  event  day  event  day  time  moment  something  happens  person  either  denoting  little  little  respectively  need  immediately  send  letter  person  send  letter  using  way  ask  friendly  deliver  letter  directly  friendly  take  acorn  letter  leave  letter  wise  den  wise  value  free  space  take  acorn  storing  letter  time  segment  length  recipient  take  letter  wise  either  leaf  letter  wise  den  time  moment  everybody  come  wise  tea  possible  take  letter  wise  den  time  moment  friend  store  many  letter  wise  den  want  paying  separately  help  friend  determine  minimum  possible  total  cost  sending  letter  contains  letter  cost  storing  letter  time  unit  wise  den  cost  delivering  letter  via  friendly  next  describe  event  contains  character  either  time  event  happens  person  event  happens  last  contains  single  time  everybody  come  wise  tea  take  remaining  letter  guaranteed  print  single  minimum  possible  cost  delivery  letter
1178/F1 __label__dp  __label__dfs  subtask  problem  difference  second  subtask  constraint  value  time  limit  need  solve  subtasks  order  hack  distinct  colour  universe  numbered  strip  paper  centimetre  long  initially  painted  colour  alice  took  brush  painted  strip  using  following  process  order  pick  segment  currently  painted  single  colour  repaints  colour  alice  chose  segment  way  centimetre  painted  colour  formally  segment  painted  colour  every  colour  visible  strip  count  different  pair  sequence  result  configuration  since  large  output  modulo  contains  colour  excluding  colour  length  paper  respectively  second  contains  space  separated  colour  visible  segment  process  end  guaranteed  index  note  since  subtask  mean  permutation  output  single  way  alice  perform  painting  modulo
911/G __label__data  structures  given  array  consisting  process  query  array  query  given  denoting  every  l  set  equal  print  array  query  processed  contains  size  array  second  contains  element  array  third  contains  query  process  follow  contains  denoting  query  print  element  array  change  made
980/A __label__math  __label__implementation  necklace  described  string  link  pearl  last  link  pearl  connected  remove  link  pearl  insert  existing  link  pearl  link  pearl  necklace  process  repeated  many  time  like  throw  away  part  make  link  every  adjacent  pearl  equal  pearl  considered  adjacent  pearl  note  final  necklace  remain  circular  part  length  initial  necklace  input  contains  string  representing  necklace  dash  represents  link  lowercase  english  letter  represents  pearl  print  yes  link  pearl  rejoined  link  adjacent  pearl  equal  otherwise  print
843/C __label__math  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  given  tree  vertex  allowed  perform  transformation  transformation  defined  vertex  consists  deleting  edge  adding  edge  transformation  could  performed  following  condition  satisfied  edge  current  tree  transformation  graph  remains  tree  deletion  edge  tree  would  consist  connected  component  let  denote  set  node  component  containing  vertex  set  node  component  containing  vertex  condition  satisfied  size  component  strictly  larger  size  component  minimize  sum  squared  distance  pair  vertex  tree  could  get  transformation  output  sequence  transformation  leading  initial  tree  state  note  need  minimize  operation  necessary  minimize  sum  squared  distance  input  contains  vertex  tree  next  input  contains  description  edge  guaranteed  given  edge  form  tree  output  n  transformation  example  minimizing  sum  squared  distance  pair  vertex
624/B __label__greedy  __label__sortings  given  alphabet  consisting  letter  task  make  string  maximum  possible  length  following  condition  satisfied  letter  occurs  string  time  occurrence  letter  string  must  distinct  letter  occurred  string  least  input  contains  single  letter  alphabet  next  contains  give  limitation  occurrence  character  string  print  single  maximum  length  string  meet  requirement
914/A __label__math  __label__implementation  __label__brute  force  given  array  find  largest  array  perfect  square  said  perfect  square  exists  contains  single  element  array  second  contains  element  array  guaranteed  least  element  array  perfect  square  print  largest  array  perfect  square  guaranteed  answer  always  exists
896/A __label__dfs  __label__binary  search  end  world  busy  save  nephren  playing  game  little  leprechaun  give  infinite  array  string  end  world  busy  save  want  let  people  know  defines  sending  busy  send  example  sending  end  world  busy  save  busy  send  end  world  busy  save  note  quote  beginning  end  clarity  part  seen  character  letter  question  mark  possibly  quotation  mark  space  nephren  ask  little  leprechaun  time  time  let  find  character  character  indexed  starting  consists  le  character  output  without  quote  answer  query  contains  nephren  question  next  describes  nephren  question  contains  containing  character  character  answer  query
371/E __label__math  __label__greedy  berland  going  tough  time  dirt  price  ha  dropped  blow  country  economy  everybody  know  berland  top  world  dirt  exporter  president  berland  wa  forced  leave  currently  existing  subway  station  subway  station  located  straight  another  train  consecutively  visit  station  move  assume  station  axis  station  point  coordinate  case  distance  station  calculated  simple  formula  currently  ministry  transport  choosing  station  close  leave  obviously  resident  capital  enthusiastic  innovation  wa  decided  show  best  side  people  ministry  transport  want  choose  station  minimize  average  commute  time  subway  assuming  train  speed  constant  fixed  value  average  commute  time  subway  calculated  sum  pairwise  distance  station  divided  pair  divided  speed  train  help  minister  transport  solve  difficult  problem  write  program  given  location  station  selects  station  average  commute  time  subway  minimized  input  contains  station  innovation  second  contains  coordinate  station  third  contains  station  innovation  station  coordinate  distinct  necessarily  sorted  print  sequence  distinct  j  station  left  innovation  arbitrary  order  assume  station  numbered  order  given  input  station  print  must  minimum  possible  average  commute  time  possible  way  choose  station  multiple  way  allowed  print
802/O __label__data  structures  __label__binary  search  plan  hc  rather  far  fetched  day  away  hc  example  accordingly  planning  couple  hundred  thousand  problem  edition  hope  programming  contest  become  wildly  popular  marmot  need  get  work  could  use  good  plan  medium  version  limit  changed  medium  version
492/B __label__math  __label__implementation  __label__sortings  __label__binary  search  vanya  walk  late  night  along  straight  street  length  lit  lantern  consider  coordinate  system  beginning  street  corresponding  point  end  corresponding  point  lantern  point  lantern  light  point  street  distance  positive  common  lantern  vanya  wonder  minimum  light  radius  lantern  light  whole  street  contains  lantern  length  street  respectively  next  contains  multiple  lantern  located  point  lantern  located  end  street  print  minimum  light  radius  needed  light  whole  street  answer  considered  correct  absolute  relative  error  exceed
383/D __label__dp  iahub  accidentally  discovered  secret  lab  found  device  ordered  numbered  left  right  device  create  either  unit  matter  unit  antimatter  iahub  want  choose  contiguous  subarray  device  lab  specify  production  mode  produce  matter  antimatter  finally  take  photo  successful  amount  matter  antimatter  produced  selected  subarray  otherwise  would  overflowing  matter  antimatter  photo  requested  compute  different  way  iahub  successful  take  photo  photo  different  another  represents  another  subarray  least  device  subarray  set  produce  matter  photo  antimatter  contains  second  contains  sum  le  equal  output  single  way  iahub  take  photo  modulo
916/A __label__math  __label__implementation  __label__brute  force  jamie  love  sleeping  day  decides  need  wake  exactly  hate  waking  want  make  waking  le  painful  setting  alarm  lucky  time  press  snooze  button  every  minute  reached  wake  want  know  smallest  time  need  press  snooze  button  time  considered  lucky  contains  digit  example  lucky  lucky  note  necessary  time  set  alarm  wake  time  day  guaranteed  lucky  time  jamie  set  wake  formally  find  smallest  possible  non  negative  time  representation  time  minute  contains  digit  jamie  us  hour  clock  come  contains  single  second  contains  digit  h  print  minimum  time  need  press  button
976/B __label__math  __label__implementation  might  heard  next  game  lara  croft  series  coming  year  might  watched  trailer  though  definitely  missed  main  idea  plot  let  lift  veil  secrecy  lara  going  explore  another  dangerous  dungeon  game  designer  decided  use  good  old  environment  dungeon  represented  rectangle  matrix  row  column  cell  cell  row  column  lara  move  neighbouring  side  cell  direction  moreover  ha  even  chosen  path  avoid  trap  enters  dungeon  cell  top  left  corner  matrix  go  way  cell  bottom  left  corner  start  moving  snake  fashion  way  right  cell  left  cell  column  cell  move  run  non  visited  cell  given  always  end  cell  lara  ha  already  moved  neighbouring  cell  time  determine  current  position  contains  always  even  note  fit  bit  type  print  cell  row  column  cell  situated  lara  end  move  time
935/B __label__implementation  neighboring  kingdom  decided  build  wall  gate  enable  citizen  kingdom  another  time  citizen  pass  gate  ha  pay  silver  coin  world  represented  quadrant  plane  wall  built  along  identity  equation  point  wall  belongs  kingdom  point  wall  belongs  second  kingdom  gate  point  point  wall  gate  belong  kingdom  fafa  gate  position  want  walk  around  kingdom  know  sequence  move  sequence  string  character  represents  move  possible  move  fafa  move  step  move  step  right  fafa  want  know  silver  coin  need  pay  walk  around  kingdom  following  sequence  note  fafa  visit  gate  without  moving  kingdom  another  pay  silver  coin  assume  pay  gate  point  initially  side  need  input  contains  single  move  walking  sequence  second  contains  string  length  consisting  character  describing  required  move  fafa  follow  sequence  order  left  right  single  print  representing  silver  coin  fafa  need  pay  gate  follow  sequence
491/B __label__math  __label__greedy  think  new  york  rectangular  grid  consisting  vertical  avenue  numerated  horizontal  street  numerated  friend  staying  hotel  located  street  avenue  crossing  going  celebrate  birthday  restaurant  located  street  avenue  crossing  want  maximum  distance  covered  traveling  restaurant  minimum  possible  help  friend  choose  optimal  restaurant  celebration  suppose  distance  neighboring  crossing  equal  kilometer  contains  size  city  next  single  hotel  friend  stayed  following  description  hotel  consisting  coordinate  next  contains  restaurant  following  description  restaurant  format  several  restaurant  hotel  located  near  crossing  output  optimal  distance  next  output  index  restaurant  produce  optimal  distance  several  possibility  allowed  output
802/K __label__dp  __label__trees  thank  helping  heidi  second  april  ha  summoned  jenny  prank  seem  end  meantime  heidi  ha  decided  doe  trust  friend  anymore  much  anyway  relative  lack  trust  manifested  follows  whereas  previously  would  made  visit  person  twice  sure  made  visit  person  time  case  jenny  includes  visit  beginning  situation  easy  version  corresponds  setting  bad  look  since  single  ticket  route  friend  allows  heidi  travel  pair  friend  whole  day  direction  word  pay  travel  pair  friend  travel  pair  free  much  money  heidi  waste  worst  case  scenario  contains  space  separated  friend  parameter  next  space  separated  meaning  friend  cost  traveling  guaranteed  social  network  input  form  tree  output  single  maximum  sum  cost  ticket
742/B __label__math  __label__brute  force  __label__number  theory  beautiful  girl  arpa  land  mentioned  arpa  came  obvious  problem  given  array  count  pair  index  bitwise  xor  operation  see  note  explanation  immediately  mehrdad  discovered  terrible  solution  nobody  trusted  arpa  need  help  implement  solution  problem  contains  element  array  second  contains  element  array  print  single  answer  problem
380/E __label__data  structures  let  assume  sequence  double  double  variable  allowed  perform  following  staged  operation  choose  index  sequence  element  consecutively  perform  assignment  let  use  function  represent  largest  value  obtained  variable  using  described  operation  time  sequence  sereja  ha  sequence  help  sereja  calculate  sum  record  represents  sequence  containing  element  bracket  given  order  avoid  problem  precision  please  print  required  sum  divided  contains  length  sequence  second  contains  single  print  real  required  sum  divided  answer  considered  correct  absolute  relative  error  exceed
485/A __label__math  __label__implementation  industrial  factory  reforming  working  plan  director  suggested  set  mythical  detail  production  norm  beginning  day  detail  factory  storage  end  day  factory  ha  produce  remainder  dividing  detail  unfortunately  customer  ha  ever  bought  mythical  detail  detail  produced  stay  factory  board  director  worried  production  given  plan  eventually  stop  mean  moment  current  detail  factory  divisible  given  detail  day  check  production  stop  moment  contains  print  yes  without  quote  production  eventually  stop  otherwise  print
858/B __label__implementation  __label__brute  force  building  polycarp  life  equal  flat  floor  unfortunately  polycarp  remember  many  flat  floor  remembers  flat  numbered  lower  upper  floor  several  flat  floor  next  several  flat  second  polycarp  remember  total  flat  building  consider  building  infinitely  high  infinitely  many  floor  note  floor  numbered  polycarp  remembers  floor  several  flat  located  guaranteed  information  self  contradictory  mean  exists  building  equal  flat  floor  flat  polycarp  memory  floor  polycarp  remembers  given  information  possible  restore  exact  floor  flat  contains  flat  need  restore  floor  flat  polycarp  memory  follow  describing  polycarp  memory  contains  pair  mean  flat  floor  value  distinct  guaranteed  given  information  self  contradictory  print  floor  flat  located  possible  determine  unique  way  print  possible  uniquely  restore  floor
1239/B __label__implementation  harder  version  problem  version  n  vasya  experienced  developer  programming  competition  problem  great  mind  time  vasya  faced  creative  crisis  improve  situation  petya  gifted  string  consisting  opening  closing  bracket  petya  belief  beauty  bracket  string  cyclical  shift  form  correct  bracket  sequence  digress  problem  vasya  decided  select  position  string  necessarily  distinct  swap  character  located  position  vasya  apply  operation  exactly  curious  maximum  possible  beauty  achieve  way  please  help  remind  bracket  sequence  called  correct  empty  equal  correct  bracket  sequence  equal  concatenation  correct  bracket  sequence  example  correct  cyclical  shift  string  length  string  formed  concatenation  last  symbol  string  symbol  string  example  cyclical  shift  string  equal  cyclical  shift  considered  different  contains  length  string  second  contains  string  consisting  exactly  character  character  either  single  largest  beauty  string  achieved  swapping  character
629/A __label__implementation  __label__constructive  algorithms  __label__brute  force  door  family  going  celebrate  famil  door  birthday  party  love  famil  door  planning  make  birthday  cake  weird  cake  n  square  consisting  equal  square  side  length  square  either  empty  consists  single  chocolate  bought  cake  randomly  started  put  chocolate  cake  value  famil  door  happiness  equal  pair  cell  chocolate  row  column  cake  famil  door  family  wondering  amount  happiness  famil  going  please  note  pair  counted  different  cell  share  row  column  input  given  single  length  side  cake  follow  containing  character  empty  cell  denoted  cell  chocolate  denoted  print  value  famil  door  happiness  pair  chocolate  piece  share  row  column
400/C __label__math  __label__implementation  inna  dima  decided  surprise  sereja  brought  really  huge  candy  matrix  big  even  sereja  let  row  giant  matrix  top  bottom  column  left  right  represent  cell  intersection  row  column  expected  cell  giant  candy  matrix  candy  overall  matrix  ha  candy  candy  cell  time  moved  closer  dinner  inna  wa  already  going  eat  favourite  sweet  matrix  suddenly  sereja  reason  share  anyone  rotated  matrix  time  clockwise  degree  performed  horizontal  rotate  matrix  time  rotated  matrix  time  counterclockwise  degree  figure  show  rotates  matrix  look  like  inna  got  really  upset  duma  suddenly  understood  thing  candy  get  damaged  remembered  cell  contained  inna  favourite  sweet  sereja  strange  action  help  guy  find  new  coordinate  candy  matrix  transformation  sereja  made  input  contains  fix  following  contains  k  k  initial  coordinate  candy  candy  lie  cell  candy  print  single  space  separated  new  coordinate
609/A __label__implementation  __label__greedy  __label__sortings  sean  trying  save  large  file  usb  flash  drive  ha  usb  flash  drive  capacity  equal  megabyte  file  size  equal  megabyte  find  minimum  usb  flash  drive  needed  write  sean  file  split  file  drive  contains  positive  usb  flash  drive  second  contains  positive  size  sean  file  next  contains  positive  size  usb  flash  drive  megabyte  guaranteed  answer  exists  sum  le  print  minimum  usb  flash  drive  write  sean  file  split  file  drive
813/A __label__implementation  pasha  participating  contest  well  known  website  time  want  win  contest  anything  get  place  contest  consists  problem  pasha  solves  ith  problem  time  unit  solution  always  correct  moment  time  thinking  solution  problem  solving  problem  time  time  pasha  spends  send  solution  negligible  pasha  send  solution  moment  unfortunately  many  participant  website  always  working  pasha  received  information  website  working  time  period  jth  period  represented  starting  moment  ending  moment  course  pasha  send  solution  website  working  word  pasha  send  solution  moment  iff  exists  period  lxx  pasha  want  know  best  possible  result  need  tell  minimal  moment  time  able  solution  problem  submitted  act  optimally  say  impossible  matter  pasha  solves  problem  contains  problem  second  contains  time  pasha  need  solve  ith  problem  third  contains  period  time  website  working  next  represent  period  jth  contains  j  j  starting  ending  moment  jth  period  guaranteed  period  intersecting  given  chronological  order  every  condition  met  pasha  solve  submit  problem  end  contest  print  minimal  moment  time  solution  submitted
718/D __label__dp  __label__trees  chemistry  lesson  andrew  learned  saturated  hydrocarbon  alkane  enter  radical  chlorination  reaction  andrew  curious  boy  wondered  many  different  product  reaction  form  given  alkane  managed  solve  task  small  molecule  large  faced  difficulty  asks  help  formally  given  tree  consisting  vertex  degree  vertex  exceed  count  distinct  non  isomorphic  tree  obtained  adding  tree  new  vertex  new  edge  graph  still  tree  degree  vertex  exceed  tree  isomorphic  exists  bijection  vertex  connected  edge  vertex  connected  edge  input  contains  vertex  tree  follow  edge  description  edge  given  index  vertex  connected  edge  guaranteed  given  graph  tree  degree  vertex  exceed  print  answer  question
858/F __label__dfs  __label__graphs  __label__constructive  algorithms  berland  resident  waiting  unprecedented  tour  wizard  blue  helicopter  city  berland  well  known  city  berland  pair  connected  bidirectional  road  pair  city  connected  road  guaranteed  road  network  connected  possible  reach  city  tour  several  episode  episode  wizard  disembark  city  helicopter  give  performance  show  movie  free  city  drive  neighboring  city  using  road  give  performance  show  movie  free  city  drive  neighboring  city  give  performance  show  movie  free  city  embark  helicopter  fly  away  city  known  wizard  like  use  road  agrees  use  road  regardless  direction  word  road  drive  drive  use  road  wizard  want  plan  many  episode  possible  without  violation  rule  help  wizard  please  note  wizard  visit  city  multiple  time  restriction  road  contains  city  road  berland  respectively  road  description  follow  description  pair  aii  id  city  connected  road  guaranteed  road  connecting  pair  city  every  road  bidirectional  city  numbered  possible  road  network  berland  connected  print  maximum  possible  episode  next  episode  format  denoting  id  city  order  wizard  visit
1163/D __label__dp  __label__strings  normal  walk  forest  katie  ha  stumbled  upon  mysterious  code  mysterious  code  character  unreadable  ha  written  code  string  consisting  lowercase  english  character  asterisk  asterisk  denotes  unreadable  character  excited  discovery  katie  ha  decided  recover  unreadable  character  replacing  asterisk  arbitrary  lowercase  english  letter  different  asterisk  might  replaced  different  letter  katie  ha  favorite  string  favorite  string  would  love  recover  mysterious  code  ha  many  occurrence  possible  little  occurrence  possible  formally  let  denote  occurrence  example  aababa  katie  want  recover  code  conforming  original  largest  possible  katie  good  recovering  code  general  would  like  help  contains  string  mysterious  code  guaranteed  consists  lowercase  english  character  asterisk  second  third  string  respectively  guaranteed  consist  lowercase  english  character  print  single  largest  possible  value  recovered  code
746/G __label__graphs  __label__trees  __label__constructive  algorithms  city  berland  ha  unique  capital  serious  problem  berland  road  road  wa  decision  build  road  exactly  simple  path  pair  city  construction  plan  stated  equal  distance  capital  distant  city  concerning  new  road  equal  city  distance  capital  distance  city  road  ha  pas  way  city  another  wa  decided  city  except  capital  exactly  city  exactly  road  going  city  dead  end  economically  attractive  calculation  city  capital  taken  consideration  regardless  road  task  offer  plan  road  construction  satisfies  described  condition  inform  impossible  contains  positive  distance  distant  city  capital  city  dead  end  capital  taken  consideration  second  contains  sequence  city  distance  capital  guaranteed  sum  value  equal  impossible  built  road  satisfy  condition  print
645/C __label__binary  search  attempt  escape  mischievous  mess  maker  antic  farmer  john  ha  abandoned  farm  traveling  side  bovinia  journey  cow  decided  stay  luxurious  grand  moo  dapest  hotel  hotel  consists  room  located  row  occupied  farmer  john  want  book  set  currently  unoccupied  room  cow  want  cow  stay  safe  possible  wish  minimize  maximum  distance  room  room  cow  distance  room  defined  help  farmer  john  protect  cow  calculating  minimum  possible  distance  input  contains  room  hotel  cow  travelling  farmer  john  second  contains  string  length  describing  room  character  string  room  free  room  occupied  guaranteed  least  character  string  exists  least  possible  choice  room  farmer  john  cow  stay  print  minimum  possible  distance  farmer  john  room  farthest  cow
426/B __label__implementation  let  assume  given  matrix  size  x  let  determine  operation  mirroring  matrix  mirroring  matrix  x  matrix  ha  following  property  upper  half  matrix  row  exactly  match  lower  half  matrix  row  symmetric  upper  symmetry  separate  half  go  middle  row  sereja  ha  n  matrix  want  find  matrix  transformed  matrix  perform  several  possibly  mirrorings  minimum  row  matrix  contains  next  contains  element  matrix  contains  ai  im  ij  row  matrix  single  print  answer  problem  minimum  row  matrix
652/F __label__math  __label__constructive  algorithms  ant  circle  length  ant  travel  unit  distance  per  unit  time  initially  ant  located  position  facing  direction  either  position  numbered  counterclockwise  order  starting  point  position  ant  distinct  ant  move  simultaneously  whenever  ant  touch  switch  direction  note  possible  ant  move  direction  half  unit  time  opposite  direction  another  half  unit  time  print  position  ant  time  unit  contains  ant  length  circle  time  unit  next  contains  symbol  either  position  direction  ant  start  direction  corresponds  clockwise  counterclockwise  direction  respectively  guaranteed  position  distinct  print  position  ant  unit  time  ant  numbered  order  appearing  input
392/C __label__math  everyone  know  fibonacci  sequence  sequence  defined  recurrence  relation  define  new  sequence  formula  ik  problem  task  calculate  following  sum  answer  large  print  modulo  contains  space  separated  print  single  sum  element  sequence  modulo
601/D __label__data  structures  __label__dfs  __label__trees  __label__strings  given  tree  vertex  numbered  letter  vertex  tree  rooted  vertex  let  look  subtree  vertex  possible  read  string  along  simple  path  starting  ending  vertex  possibly  let  denote  distinct  string  read  way  assigned  vertex  interested  vertex  maximum  value  compute  statistic  maximum  value  vertex  maximum  input  contains  vertex  tree  second  contains  space  separated  third  contains  string  consisting  lowercase  english  letter  character  string  letter  vertex  following  describe  tree  contains  space  separated  indicating  edge  vertex  guaranteed  input  describe  tree  print
621/B __label__implementation  today  wet  shark  given  bishop  grid  row  column  grid  numbered  row  numbered  top  bottom  column  numbered  left  right  wet  shark  think  bishop  attack  share  diagonal  note  criterion  bishop  attack  according  wet  shark  even  another  bishop  located  wet  shark  want  count  pair  bishop  attack  input  contains  bishop  next  contains  space  separated  row  column  bishop  positioned  guaranteed  bishop  share  position  output  pair  bishop  attack
796/A __label__implementation  __label__brute  force  zane  wizard  never  loved  anyone  fell  love  girl  whose  name  remains  unknown  girl  life  house  village  house  village  lining  straight  left  right  house  house  house  village  well  structured  house  house  exactly  meter  away  village  house  occupied  indeed  unoccupied  house  purchased  given  denote  availability  price  house  house  occupied  therefore  bought  equal  otherwise  house  bought  represents  money  required  buy  dollar  zane  ha  dollar  spare  becomes  challenge  choose  house  purchase  could  live  near  possible  crush  help  zane  determine  minimum  distance  crush  house  house  afford  help  succeed  love  contains  house  village  house  girl  life  amount  money  zane  ha  dollar  respectively  second  contains  denoting  availability  price  house  guaranteed  possible  purchase  house  dollar  print  minimum  distance  meter  house  girl  zane  like  life  house  zane  buy
960/B __label__greedy  __label__data  structures  __label__sortings  given  array  size  error  array  defined  perform  exactly  operation  array  exactly  operation  array  operation  choose  element  array  increase  decrease  output  minimum  possible  value  error  operation  array  operation  array  performed  contains  space  separated  non  negative  size  array  operation  perform  respectively  second  contains  space  separated  array  third  contains  space  separated  array  output  single  minimum  possible  value  exactly  operation  array  exactly  operation  array
660/A __label__math  __label__implementation  __label__greedy  __label__number  theory  given  array  element  must  make  prime  array  move  possible  move  insert  positive  integral  want  greater  place  array  array  prime  adjacent  prime  theory  said  prime  positive  divide  contains  element  given  array  second  contains  element  array  print  least  element  needed  add  array  make  prime
869/A __label__implementation  __label__brute  force  rock  paper  karen  found  deterministic  winning  losing  strategy  rock  paper  scissors  brother  koyomi  come  new  game  substitute  game  work  follows  positive  decided  koyomi  karen  independently  choose  distinct  positive  denoted  respectively  reveal  sequence  repeat  become  distinct  final  state  kept  considered  count  ordered  pair  value  xor  equal  xor  mean  bitwise  exclusive  operation  denoted  operator  xor  programming  language  karen  claim  win  pair  even  koyomi  doe  otherwise  help  determine  winner  latest  game  input  contains  positive  length  sequence  second  contains  space  separated  finally  chosen  koyomi  third  contains  space  separated  finally  chosen  karen  guarantee  given  pairwise  distinct  pair  exists  following  hold  output  name  winner  koyomi  karen  without  quote  please  aware  capitalization
610/E __label__data  structures  __label__strings  given  string  length  consisting  lowercase  english  letter  define  repeat  string  string  consisting  copy  string  example  string  acbacbacbacb  repeat  string  acb  let  say  string  contains  string  subsequence  string  obtained  erasing  symbol  let  string  represents  permutation  lowercase  english  letter  define  function  smallest  repeat  string  contains  string  subsequence  operation  type  applied  string  replace  character  position  character  given  permutation  lowercase  english  letter  find  value  function  operation  performed  sequentially  order  appear  input  task  determine  value  function  operation  second  type  contains  positive  length  string  operation  size  alphabet  respectively  second  contains  string  following  contains  description  operation  operation  type  start  followed  triple  denotes  replacement  character  position  character  ii  lowercase  english  letter  operation  second  type  start  followed  permutation  lowercase  english  letter  query  second  type  value  function
700/B __label__dp  __label__dfs  __label__graphs  __label__trees  treeland  country  town  connected  way  road  possible  get  town  town  treeland  university  located  different  town  recently  president  signed  decree  connect  university  high  speed  network  ministry  education  understood  decree  way  decided  wa  enough  connect  university  another  using  cable  formally  decree  done  maximum  sum  budget  ministry  decided  divide  university  pair  total  length  required  cable  maximum  word  total  distance  university  pair  large  possible  help  ministry  find  maximum  total  distance  course  university  present  pair  consider  road  length  equal  input  contains  town  treeland  university  pair  consider  town  numbered  second  contains  distinct  k  index  town  university  located  next  contains  description  road  contains  pair  j  j  mean  road  connects  town  way  road  move  town  using  road  print  maximum  possible  sum  distance  division  university  pair
1187/A __label__math  favorite  shop  sell  kinder  surprise  chocolate  egg  know  exactly  sticker  exactly  toy  placed  egg  total  kinder  surprise  type  single  sticker  toy  single  toy  sticker  single  sticker  single  toy  know  type  particular  kinder  surprise  ha  egg  look  identical  indistinguishable  minimum  kinder  surprise  egg  buy  sure  whichever  type  obtain  least  sticker  least  toy  note  open  egg  purchasing  process  buy  egg  guaranteed  answer  always  exists  contains  single  query  next  egg  sticker  toy  query  independent  print  per  query  minimum  kinder  surprise  egg  buy  sure  whichever  type  obtain  least  sticker  toy
1067/D __label__math  __label__dp  __label__greedy  ivan  play  computer  game  quest  game  quest  upgraded  increase  reward  completion  quest  ha  parameter  reward  completing  quest  upgrade  reward  completing  quest  upgrade  probability  successful  completing  quest  second  ivan  try  complete  quest  succeed  probability  case  success  ivan  get  reward  opportunity  upgrade  quest  necessary  completed  case  failure  get  nothing  quest  vanish  completing  ivan  ha  second  want  maximize  expected  value  total  gain  second  help  calculate  value  contains  quest  total  time  following  description  quest  description  reward  completing  quest  upgrade  reward  completing  quest  upgrade  probability  successful  completing  quest  probability  given  decimal  place  print  expected  value
460/A __label__math  __label__implementation  __label__brute  force  vasya  ha  pair  sock  morning  day  vasya  ha  put  pair  sock  go  school  come  home  evening  vasya  take  used  sock  throw  away  every  day  day  mom  buy  pair  sock  vasya  doe  late  evening  vasya  put  new  pair  sock  next  day  many  consecutive  day  pas  vasya  run  sock  single  contains  separated  space  print  single  answer  problem
920/C __label__math  __label__greedy  __label__sortings  __label__dfs  array  consisting  appears  exactly  array  index  possible  swap  element  index  possible  perform  swapping  operation  order  limit  time  swap  element  position  forbidden  make  array  sorted  ascending  order  performing  sequence  swapping  operation  contains  element  array  second  contains  element  array  appears  exactly  third  contains  string  character  character  either  character  swap  element  time  otherwise  forbidden  swap  element  possible  sort  array  ascending  order  using  sequence  swap  allowed  make  print  yes  otherwise  print
1154/F __label__dp  __label__greedy  __label__sortings  shovel  nearby  shop  shovel  cost  bourles  misha  ha  buy  exactly  shovel  shovel  bought  misha  buy  shovel  several  purchase  purchase  choose  subset  remaining  non  bought  shovel  buy  subset  special  offer  shop  given  pair  mean  misha  buy  exactly  shovel  purchase  cheapest  free  pay  cheapest  shovel  current  purchase  misha  use  offer  possibly  time  use  offer  purchase  buy  shovel  without  using  offer  task  calculate  minimum  cost  buying  shovel  misha  buy  optimally  input  contains  shovel  shop  special  offer  shovel  misha  ha  buy  correspondingly  second  input  contains  cost  shovel  next  special  offer  given  pair  mean  misha  buy  exactly  shovel  purchase  take  cheapest  free  print  minimum  cost  buying  shovel  misha  buy  optimally
893/D __label__dp  __label__implementation  __label__greedy  __label__data  structures  recenlty  luba  got  credit  card  started  use  let  consider  consecutive  day  luba  us  card  start  money  account  evening  day  transaction  occurs  bourles  deposited  luba  account  bourles  withdrawn  amount  money  luba  account  checked  morning  day  luba  bank  deposit  positive  amount  burles  account  limitation  amount  money  account  never  exceed  happen  amount  money  go  greater  transaction  evening  case  answer  luba  must  exceed  limit  want  every  day  account  checked  day  amount  money  account  non  negative  take  lot  time  bank  luba  want  know  minimum  day  need  deposit  money  account  possible  meet  requirement  help  contains  day  money  limitation  second  contains  represents  transaction  day  print  luba  deposit  money  account  way  requirement  met  otherwise  print  minimum  day  luba  ha  deposit  money
873/F __label__strings  given  string  consisting  lowercase  latin  letter  index  string  marked  forbidden  want  find  string  value  maximum  possible  occurences  occurences  end  non  forbidden  index  example  aaaa  index  forbidden  occurences  starting  index  starting  index  end  forbidden  index  calculate  maximum  possible  value  get  contains  length  second  contains  string  consisting  lowercase  latin  letter  third  contains  string  consisting  character  character  forbidden  index  otherwise  forbidden  print  maximum  possible  value
660/D __label__geometry  given  point  plane  point  distinct  lie  find  parallelogram  vertex  given  point  input  contains  point  next  contains  coordinate  point  print  parallelogram  vertex  given  point
720/C __label__constructive  algorithms  today  peter  ha  got  additional  homework  tomorrow  teacher  ha  given  asked  mark  square  square  grid  size  n  marked  square  must  form  connected  figure  must  exactly  triple  marked  square  form  shaped  tromino  square  inside  square  set  square  form  connected  figure  possible  get  square  allowed  move  square  adjacent  common  side  square  peter  fulfill  task  asks  help  help  create  figure  data  contains  test  case  contains  test  case  following  test  case  described  contains  n  sum  value  n  test  input  data  exceed  test  case  print  answer
1117/C __label__binary  search  captain  ship  initially  standing  point  obviously  position  sea  described  cartesian  plane  want  travel  point  know  weather  forecast  string  length  consisting  letter  letter  corresponds  direction  wind  moreover  forecast  periodic  day  wind  blow  side  second  day  day  day  ship  coordinate  change  following  way  wind  blow  direction  ship  move  wind  blow  direction  ship  move  wind  blow  direction  ship  move  wind  blow  direction  ship  move  ship  either  direction  stay  place  day  go  exactly  unit  distance  transposition  ship  wind  add  ship  stay  place  direction  wind  count  example  wind  blow  direction  ship  move  direction  point  move  point  go  direction  move  point  task  determine  minimal  day  required  ship  reach  point  contains  initial  coordinate  ship  second  contains  coordinate  destination  point  guaranteed  initial  coordinate  destination  point  coordinate  different  third  contains  single  length  string  fourth  contains  string  consisting  letter  minimal  day  required  ship  reach  point
924/B __label__greedy  __label__binary  search  atom  element  exist  distinct  state  energy  arkady  want  build  laser  element  using  level  scheme  simplified  description  scheme  distinct  state  selected  following  process  happens  initially  atom  state  spend  energy  put  atom  state  atom  emits  photon  useful  energy  change  state  state  atom  spontaneously  change  state  state  losing  energy  process  repeat  step  let  define  energy  conversion  efficiency  ration  useful  energy  photon  spent  energy  due  limitation  arkady  choose  state  help  arkady  find  maximum  possible  energy  conversion  efficiency  constraint  contains  state  maximum  possible  difference  second  contains  sequence  n  guaranteed  given  increasing  order  possible  choose  state  satisfy  constraint  print
990/E __label__greedy  __label__brute  force  adilbek  house  located  street  represented  axis  street  really  dark  adilbek  want  install  post  lamp  illuminate  street  ha  position  install  lamp  correspond  axis  position  blocked  post  lamp  placed  post  lamp  different  type  differ  power  placed  position  post  lamp  power  illuminates  segment  power  post  lamp  always  positive  post  lamp  shop  provides  infinite  amount  lamp  type  power  power  though  customer  allowed  order  post  lamp  exactly  type  post  lamp  power  cost  minimal  total  cost  post  lamp  exactly  type  adilbek  buy  illuminate  entire  segment  street  lamp  illuminate  segment  street  adilbek  doe  care  example  place  lamp  power  position  even  though  illumination  zone  completely  belong  segment  contains  length  segment  street  adilbek  want  illuminate  blocked  position  maximum  power  post  lamp  available  second  contains  blocked  position  third  contains  cost  post  lamp  print  minimal  total  cost  post  lamp  exactly  type  adilbek  buy  illuminate  entire  segment  street
555/E __label__dfs  __label__graphs  __label__trees  andrewid  android  galaxy  known  detective  preparing  defense  possible  attack  hacker  major  computer  network  network  vertex  pair  vertex  connected  undirected  channel  planned  transfer  important  message  via  network  must  sent  vertex  vertex  via  channel  perhaps  intermediate  vertex  protect  attack  special  algorithm  wa  developed  unfortunately  applied  network  containing  directed  channel  therefore  new  channel  created  wa  decided  existing  undirected  channel  enable  transmit  data  direction  task  determine  whether  possible  choose  direction  channel  message  could  successfully  transmitted  contains  node  channel  important  message  next  vii  mean  node  channel  pair  node  exist  channel  next  sii  node  source  destination  corresponding  message  guaranteed  initially  possible  transmit  message  solution  exists  print  single  yes  without  quote  otherwise  print  without  quote
993/D __label__dp  __label__greedy  __label__binary  search  need  execute  several  task  associated  processor  need  compute  power  consume  sufficient  analog  computer  enough  processor  task  computer  execute  task  time  task  total  task  second  task  computer  must  use  strictly  le  power  assign  task  computer  execute  task  computer  wait  complete  execute  second  task  computer  ha  task  assigned  average  compute  power  per  utilized  processor  sum  consumed  power  task  presently  running  divided  utilized  processor  computer  exceeds  unknown  threshold  execution  task  entire  system  blow  restriction  second  task  execution  find  lowest  threshold  possible  due  specific  task  need  print  answer  multiplied  rounded  contains  single  task  second  contains  represents  amount  power  required  task  third  contains  processor  task  utilize  print  single  value  lowest  threshold  possible  assign  task  way  system  blow  round  computation  multiplied  rounded
1004/C __label__implementation  __label__constructive  algorithms  since  sonya  interested  robotics  decided  construct  robot  read  recognize  sonya  ha  drawn  row  located  position  ha  put  robot  end  row  left  right  last  sonya  give  robot  either  different  run  robot  running  moving  toward  another  robot  reading  row  robot  reading  equal  wa  given  robot  turn  stay  position  sonya  doe  want  robot  break  give  robot  stop  meet  girl  want  stop  different  position  robot  left  second  example  written  sonya  give  robot  second  robot  stop  position  second  position  case  robot  meet  result  robot  broken  sonya  give  robot  second  meet  since  robot  stop  position  second  position  sonya  understands  doe  make  sense  give  written  row  robot  find  meet  robot  sonya  interested  finding  different  pair  give  robot  meet  word  want  know  pair  give  robot  second  pair  different  unfortunately  sonya  busy  fixing  robot  broke  failed  launch  asking  find  pair  give  robot  meet  contains  single  row  second  contains  row  print  possible  pair  sonya  give  robot  meet
985/E __label__dp  __label__greedy  __label__data  structures  __label__binary  search  mishka  received  gift  multicolored  pencil  birthday  unfortunately  life  monochrome  world  everything  color  saturation  differs  pack  represented  sequence  saturation  color  pencil  mishka  want  put  mess  pack  order  ha  infinite  empty  box  would  like  fill  box  way  pencil  belongs  exactly  box  non  empty  box  ha  least  pencil  pencil  belong  box  mean  absolute  value  note  opposite  optional  pencil  belong  different  box  help  mishka  determine  possible  distribute  pencil  box  print  yes  exists  distribution  otherwise  print  contains  pencil  minimal  size  non  empty  box  maximal  difference  saturation  pair  pencil  box  respectively  second  contains  saturation  color  pencil  print  yes  possible  distribute  pencil  box  satisfy  condition  otherwise  print
930/D __label__implementation  __label__data  structures  consider  following  game  player  white  token  black  token  token  placed  plane  point  coordinate  player  take  turn  making  move  white  start  turn  player  move  token  color  left  right  black  player  choose  direction  token  independently  turn  white  player  white  token  point  black  token  located  constraint  location  token  position  black  token  coincide  turn  black  player  initially  white  token  point  black  point  moment  white  player  make  move  loses  white  player  make  move  win  solve  following  problem  given  initial  position  black  token  guaranteed  initially  position  distinct  many  place  white  token  located  initially  player  play  optimally  black  player  win  contains  single  black  point  contains  coordinate  point  black  token  initially  located  guaranteed  initial  position  black  token  distinct  print  point  white  token  located  initially  player  play  optimally  black  player  win
685/C __label__math  __label__binary  search  river  brought  gerda  house  old  lady  knew  magic  lady  decided  make  gerda  daughter  want  gerda  forget  kay  put  rose  garden  underground  mole  life  garden  watch  rose  without  going  surface  typical  mole  blind  mole  wa  granted  special  vision  old  lady  watch  underground  object  distance  even  obstacle  object  quality  picture  depends  manhattan  distance  object  observed  mole  want  find  optimal  point  watch  rose  point  coordinate  maximum  manhattan  distance  rose  minimum  possible  usual  asks  help  manhattan  distance  point  defined  input  contains  test  case  follow  exactly  block  containing  description  exactly  test  block  contains  rose  test  follow  containing  coordinate  corresponding  rose  note  rose  share  position  guaranteed  sum  exceed  coordinate  greater  absolute  value  test  case  print  coordinate  optimal  point  watch  rose  many  optimal  answer  print
391/C2 __label__greedy  problem  consists  subproblems  solving  subproblem  receive  point  solving  subproblem  receive  point  solving  subproblem  receive  point  manao  decided  pursue  fighter  career  decided  begin  ongoing  tournament  manao  joined  contestant  tournament  numbered  already  obtained  amount  tournament  point  namely  fighter  point  manao  going  engage  single  fight  contestant  manao  fight  end  either  win  loss  win  grant  manao  point  loss  grant  manao  opponent  point  manao  estimated  amount  effort  need  invest  win  contestant  losing  fight  cost  effort  manao  finish  fight  ranklist  determined  best  rank  worst  contestant  ranked  descending  order  tournament  point  contestant  point  manao  ranked  better  match  worse  otherwise  exact  mechanism  breaking  tie  fighter  relevant  manao  objective  rank  better  determine  minimum  total  amount  effort  need  invest  order  fulfill  goal  possible  contains  pair  following  contains  separated  single  space  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  subproblem  point  constraint  hold  print  single  single  minimum  amount  effort  manao  need  use  rank  top  amount  effort  earn  manao  rank  output
1025/D __label__math  __label__dp  __label__trees  __label__brute  force  __label__number  theory  dima  hamster  enjoys  nibbling  different  thing  cage  stick  bad  problemsetters  even  tree  recently  found  binary  search  tree  instinctively  nibbled  edge  hence  messing  vertex  dima  know  andrew  ha  thoroughly  assembling  tree  long  time  come  home  see  creation  demolished  get  extremely  upset  let  happen  dima  ha  recover  binary  search  tree  luckily  noticed  vertex  connected  direct  edge  greatest  common  divisor  value  exceed  help  dima  construct  binary  search  tree  determine  impossible  definition  property  binary  search  tree  found  contains  vertex  second  feature  distinct  value  vertex  ascending  order  possible  reassemble  binary  search  tree  greatest  common  divisor  vertex  connected  edge  greater  print  yes  quote  clarity
1249/F __label__dp  __label__trees  given  tree  consists  vertex  recall  tree  connected  undirected  graph  without  cycle  example  tree  vertex  numbered  vertex  weight  weight  vertex  recall  distance  vertex  tree  edge  simple  path  task  find  subset  vertex  maximum  total  weight  weight  subset  sum  weight  vertex  pair  vertex  distance  le  subset  input  contains  k  vertex  tree  distance  restriction  respectively  second  input  contains  weight  vertex  next  edge  tree  edge  denoted  label  vertex  connects  guaranteed  given  edge  form  tree  print  maximum  total  weight  subset  pair  vertex  distance
833/C __label__math  __label__greedy  __label__brute  force  recently  wild  krakozyabra  appeared  jelly  castle  truth  said  always  eager  something  dinner  favorite  meal  natural  typically  served  honey  sauce  precise  corresponding  decimal  representation  digit  krakozyabra  dislike  moreover  often  cause  indigestion  necessary  precaution  krakozyabra  prefers  sort  digit  non  descending  order  proceeding  feast  leading  resulting  eaten  remaining  part  discarded  inedible  tail  example  krakozyabra  dinner  inedible  tail  would  slastyona  really  fond  idea  krakozyabra  living  castle  hovewer  natural  hospitality  prevents  leaving  guest  without  food  slastyona  ha  range  natural  going  feed  guest  help  determine  many  distinct  inedible  tail  going  discarded  krakozyabra  end  dinner  string  given  boundary  range  output  sole  answer  problem
652/E __label__dfs  __label__graphs  __label__trees  johnny  playing  well  known  computer  game  game  country  player  freely  travel  pas  quest  gain  experience  country  island  bridge  travel  island  middle  bridge  lying  ancient  powerful  artifact  johnny  interested  artifact  get  money  selling  artifact  start  johnny  island  artifact  dealer  island  possibly  island  johnny  want  find  artifact  come  dealer  sell  difficulty  bridge  old  destroying  right  passing  johnnie  character  swim  fly  teleport  problem  became  difficult  note  johnny  pas  half  bridge  collect  artifact  return  island  determine  johnny  find  artifact  sell  contains  island  bridge  game  next  contains  description  bridge  xii  island  connected  bridge  equal  bridge  contains  artifact  otherwise  bridge  pair  island  guaranteed  possible  travel  pair  island  last  contains  island  johnny  artifact  dealer  respectively  johnny  find  artifact  sell  print  word  yes  without  quote  otherwise  print  word  without  quote
838/A __label__brute  force  given  image  represented  grid  pixel  pixel  image  either  denoted  character  respectively  would  like  compress  image  want  choose  split  image  block  divisible  image  padded  right  bottom  divisible  pixel  individual  block  must  value  given  image  compressible  current  state  find  minimum  pixel  need  toggle  padding  order  image  compressible  specifically  step  choose  image  padded  toggle  pixel  compressible  image  must  compressible  state  input  dimension  image  next  input  binary  string  exactly  character  representing  image  print  single  minimum  pixel  needed  toggle  make  image  compressible
1025/A __label__implementation  __label__sortings  panic  rising  committee  doggo  standardization  puppy  new  brood  born  multi  colored  total  possible  color  puppy  nature  denoted  letter  inclusive  committee  rule  strictly  prohibit  even  smallest  diversity  doggos  hence  puppy  color  thus  slava  committee  employee  ha  assigned  task  recolor  puppy  color  order  eliminate  difference  make  puppy  common  color  unfortunately  due  bureaucratic  reason  restricted  budget  operation  slava  perform  choose  color  currently  least  puppy  color  recolor  puppy  color  arbitrary  color  luckily  operation  applied  multiple  time  including  example  puppy  color  represented  string  abababc  operation  slava  get  result  zbzbzbc  bbbbbbc  aaaaaac  acacacc  others  current  color  sequence  abababc  choose  right  currently  puppy  ha  color  help  slava  committee  determine  whether  possible  standardize  puppy  slava  operation  puppy  color  contains  single  puppy  second  contains  string  length  consisting  lowercase  latin  letter  symbol  denotes  puppy  color  possible  recolor  puppy  color  print  yes
1043/C __label__implementation  __label__greedy  __label__constructive  algorithms  ha  many  colorful  magnet  fridge  exactly  letter  written  magnet  love  play  placing  magnet  row  girl  quickly  bored  usually  think  make  entertainment  interesting  today  looked  fridge  noticed  word  formed  magnet  really  messy  would  look  much  better  swap  thought  girl  got  idea  look  prefix  length  length  word  prefix  either  reverse  prefix  leave  consider  prefix  fixed  order  shortest  largest  want  get  lexicographically  smallest  possible  word  considers  prefix  help  telling  prefix  chosen  reversing  string  lexicographically  smaller  string  following  hold  prefix  position  differ  string  ha  letter  appears  earlier  alphabet  corresponding  letter  contains  string  describing  initial  string  formed  magnet  string  consists  character  output  exactly  reverse  prefix  substring  equal  equal  otherwise
1101/B __label__implementation  __label__greedy  accordion  string  yes  real  world  accordion  musical  instrument  let  forget  represented  concatenation  opening  bracket  ascii  code  colon  ascii  code  possibly  vertical  character  ascii  code  another  colon  closing  bracket  ascii  code  length  accordion  character  example  accordion  length  accordion  given  string  want  transform  accordion  removing  possibly  character  note  insert  new  character  reorder  existing  possible  obtain  accordion  removing  character  maximum  possible  length  result  contains  string  consists  lowercase  latin  letter  character  possible  obtain  accordion  removing  character  print  otherwise  print  maximum  possible  length  resulting  accordion
815/A __label__implementation  __label__greedy  __label__brute  force  way  school  karen  became  fixated  puzzle  game  phone  game  played  follows  level  grid  row  column  cell  originally  contains  move  consists  choosing  row  column  adding  cell  row  column  win  level  move  cell  row  column  equal  karen  stuck  level  want  know  way  beat  level  using  minimum  move  please  help  task  input  contains  row  column  grid  respectively  next  particular  row  contains  error  actually  possible  beat  level  output  single
985/A __label__implementation  given  chessboard  size  guaranteed  even  chessboard  painted  like  bwbw  cell  board  occupied  chess  piece  cell  contains  chess  piece  known  total  piece  equal  step  move  piece  cell  left  right  move  piece  beyond  border  board  move  piece  cell  already  occupied  task  place  piece  cell  color  using  minimum  move  piece  must  occupy  black  cell  white  cell  move  made  input  contains  even  size  chessboard  second  input  contains  initial  position  piece  guaranteed  position  distinct  print  minimum  move  make  place  piece  cell  color
581/D __label__math  __label__implementation  __label__constructive  algorithms  __label__brute  force  __label__geometry  company  decided  order  billboard  picture  logo  billboard  big  square  board  logo  company  rectangle  non  area  advertiser  put  possible  place  logo  billboard  overlap  billboard  ha  empty  space  left  put  logo  billboard  rotate  side  parallel  side  billboard  task  determine  possible  put  logo  company  square  billboard  without  breaking  described  rule  input  contains  positive  determine  length  width  logo  company  respectively  impossible  place  logo  square  shield  print  single  without  quote
468/A __label__math  __label__greedy  __label__constructive  algorithms  little  used  play  card  game  called  game  recently  ha  found  easy  invented  new  game  initially  sequence  single  step  pick  let  denote  erase  sequence  append  sequence  either  step  left  make  equal  contains  single  possible  print  yes  otherwise  print  without  quote
524/E __label__data  structures  __label__sortings  polycarpus  ha  chessboard  size  n  rook  placed  polycarpus  invented  rule  game  play  ha  already  allocated  rectangular  area  special  strategic  importance  board  must  protected  well  according  polycarpus  rectangular  area  board  well  protected  vacant  square  beaten  rook  stand  area  rook  rest  board  affect  area  defense  position  rook  fixed  changed  remind  rook  beat  square  located  vertical  horizontal  piece  square  rook  help  polycarpus  determine  whether  strategically  important  area  protected  contains  size  board  rook  strategically  important  site  consider  cell  board  numbered  horizontally  vertically  next  pair  describing  position  rook  guaranteed  rook  distinct  square  next  describe  strategically  important  area  group  corresponding  rectangle  area  consists  cell  x  strategically  important  area  intersect  coincide  print  strategically  important  site  print  yes  well  defended  otherwise
551/C __label__greedy  __label__binary  search  professor  gukiz  concerned  making  way  school  massive  pile  box  blocking  way  total  pile  box  arranged  left  right  pile  containing  box  luckily  student  willing  help  gukiz  removing  box  way  student  working  simultaneously  time  student  located  left  pile  take  second  every  student  move  position  pile  every  student  must  start  performing  sequence  possible  operation  taking  second  complete  possible  operation  move  pile  pile  pile  located  position  student  empty  remove  box  gukiz  student  smart  need  tell  remove  box  professor  come  impatient  man  want  wait  ask  calculate  minumum  time  second  remove  box  gukiz  way  note  student  positioned  manner  second  box  must  removed  contains  pile  box  gukiz  student  second  contains  represents  box  pile  guaranteed  least  pile  non  empty  single  print  minimum  time  needed  remove  box  second
1242/B __label__sortings  __label__dfs  __label__graphs  ujan  ha  lot  useless  stuff  drawer  considerable  part  math  notebook  time  sort  time  found  old  dusty  graph  theory  notebook  description  graph  undirected  weighted  graph  vertex  complete  graph  pair  vertex  connected  edge  weight  edge  either  exactly  edge  weight  others  weight  since  ujan  really  want  organize  note  decided  find  weight  minimum  spanning  tree  graph  weight  spanning  tree  sum  edge  find  answer  ujan  stop  procrastinating  input  contains  vertex  edge  weight  graph  next  contains  endpoint  edge  weight  guaranteed  edge  appears  twice  input  output  single  weight  minimum  spanning  tree  graph
1020/A __label__math  looking  floor  plan  summer  informatics  school  new  building  tasked  si  logistics  really  care  travel  time  different  location  important  know  long  would  take  get  lecture  room  canteen  gym  server  room  building  consists  tower  floor  tower  labeled  floor  labeled  passage  adjacent  tower  tower  every  floor  take  exactly  minute  walk  adjacent  floor  tower  well  adjacent  tower  provided  passage  floor  permitted  leave  building  picture  illustrates  example  given  pair  location  floor  tower  floor  tower  pair  need  determine  minimum  walking  time  location  input  contains  following  tower  building  floor  tower  lowest  highest  floor  possible  move  adjacent  tower  total  query  next  description  query  description  consists  b  b  corresponds  query  find  minimum  travel  time  floor  tower  floor  tower  query  print  single  minimum  walking  time  location  minute
667/B __label__constructive  algorithms  __label__geometry  know  cubism  trend  art  problem  constructing  volumetrical  shape  plane  combination  dimensional  geometric  shape  come  fore  famous  sculptor  cicasso  whose  self  portrait  contemplate  hate  cubism  impressed  idea  transmit  dimensional  object  dimensional  object  using  magnificent  sculpture  new  project  connected  cicasso  want  make  coat  hater  anticubism  want  create  sculpture  depicting  well  known  geometric  primitive  convex  polygon  cicasso  prepared  blank  rod  length  want  bring  together  rod  segment  length  sculptor  plan  make  convex  polygon  nonzero  area  using  rod  ha  side  rod  used  side  full  length  forbidden  cut  break  bend  rod  side  form  straight  angle  cicasso  know  impossible  make  convex  polygon  nonzero  area  rod  length  chosen  cicasso  doe  want  leave  unused  rod  sculptor  decides  make  another  rod  blank  length  problem  solvable  course  want  make  short  possible  material  expensive  improper  deed  spend  money  nothing  help  sculptor  contains  rod  blank  second  contains  length  rod  cicasso  already  ha  guaranteed  impossible  make  polygon  vertex  nonzero  area  using  rod  cicasso  already  ha  print  minimum  length  rod  adding  possible  construct  convex  polygon  vertex  nonzero  area  rod
1168/B __label__brute  force  toad  rash  ha  binary  string  binary  string  consists  let  length  rash  need  find  pair  least  pair  k  find  pair  rash  contains  string  consisting  output  pair  least  pair  k
361/A __label__implementation  __label__constructive  algorithms  levko  love  table  consist  row  column  much  especially  love  beautiful  table  table  beautiful  levko  sum  element  row  column  table  equal  unfortunately  know  table  task  help  find  least  single  contains  print  beautiful  table  levko  like  big  element  table  exceed  absolute  value
309/B __label__dp  advertising  ha  become  part  routine  era  progressive  technology  need  idea  make  advertising  better  problem  look  simplified  version  context  advertising  got  text  consisting  exactly  word  standard  advertising  banner  ha  exactly  character  potential  customer  always  like  see  lot  advertising  determine  maximum  consecutive  word  text  written  banner  single  word  banner  separated  space  allowed  insert  space  note  allowed  break  word  word  text  must  occupy  exactly  banner  besides  change  word  order  read  banner  text  consecutively  top  bottom  left  right  get  consecutive  part  advertisement  text  formally  statement  written  like  let  say  word  indexed  order  occur  advertisement  text  choose  word  starting  ending  could  written  banner  must  many  word  possible  see  sample  clarification  input  contains  r  next  contains  text  consisting  word  word  consist  lowercase  english  letter  empty  word  separated  single  space  total  character  word  exceed  print  print  character  optimal  advertisement  banner  multiple  advertisement  banner  print
1215/D __label__math  __label__greedy  monocarp  bicarp  live  berland  every  bus  ticket  consists  digit  even  evening  walk  monocarp  bicarp  found  ticket  digit  erased  digit  erased  even  monocarp  bicarp  decided  play  game  ticket  monocarp  hate  happy  ticket  bicarp  collect  ticket  considered  happy  sum  digit  ticket  equal  sum  last  digit  monocarp  bicarp  take  turn  monocarp  performs  turn  current  player  must  replace  erased  digit  digit  game  end  erased  digit  ticket  ticket  happy  erased  digit  replaced  decimal  digit  bicarp  win  otherwise  monocarp  win  determine  win  player  play  optimally  contains  even  digit  ticket  second  contains  string  digit  character  ticket  monocarp  bicarp  found  character  digit  erased  note  leading  character  even  monocarp  win  print  monocarp  without  quote  otherwise  print  bicarp  without  quote
843/D __label__graphs  given  weighted  directed  graph  consisting  vertex  edge  answer  query  type  find  length  shortest  path  vertex  vertex  add  weight  edge  index  input  data  contains  vertex  edge  graph  request  correspondingly  next  input  data  description  edge  contains  description  edge  index  beginning  end  edge  initial  weight  correspondingly  next  input  data  description  edge  format  described  j  guaranteed  inside  single  query  distinct  guaranteed  total  edge  request  second  type  doe  exceed  query  type  print  length  shortest  path  separate  print  path  doe  exists
553/A __label__math  __label__dp  kyoya  ootori  ha  bag  colored  ball  colored  different  color  color  labeled  ball  color  indistinguishable  draw  ball  bag  bag  empty  noticed  drew  last  ball  color  drawing  last  ball  color  wonder  many  different  way  happen  input  color  follow  ball  color  total  ball  exceed  single  way  kyoya  draw  ball  bag  described  statement  modulo
643/E __label__math  __label__dp  __label__trees  limak  little  grizzly  bear  attack  deerland  destroy  tree  role  playing  game  limak  start  tree  vertex  vertex  ha  index  root  tree  sometimes  game  chooses  subtree  allows  limak  attack  subtree  attacked  edge  destroyed  probability  independently  edge  limak  get  penalty  equal  height  subtree  attack  height  defined  maximum  edge  path  root  subtree  vertex  subtree  must  handle  query  type  denotes  query  type  new  vertex  appears  parent  new  vertex  ha  next  available  index  new  vertex  numbered  denotes  query  second  type  moment  let  assume  game  allows  limak  attack  subtree  rooted  would  expected  value  penalty  limak  get  attack  query  second  type  limak  actually  attack  subtree  thus  query  affect  next  query  input  contains  query  follow  contains  typei  ypei  typei  denotes  parent  new  vertex  typei  print  answer  subtree  rooted  guaranteed  least  query  second  type  output  empty  guaranteed  query  vertex  already  exists  query  second  type  print  real  expected  value  penalty  limak  attack  given  subtree  answer  considered  correct  absolute  relative  error  doe  exceed
894/B __label__math  __label__constructive  algorithms  __label__number  theory  ralph  ha  magic  field  divided  n  block  say  row  column  field  ralph  put  block  magic  field  always  work  properly  work  product  row  column  equal  either  ralph  want  figure  way  put  block  way  magic  field  work  properly  way  considered  different  exists  least  block  way  second  way  different  asked  output  answer  modulo  note  range  put  block  prove  answer  infinity  contains  either  print  single  denoting  answer  modulo
1245/C __label__dp  constanze  smartest  girl  village  ha  bad  eyesight  day  wa  able  invent  incredible  machine  pronounce  letter  machine  inscribe  onto  piece  paper  example  pronounce  order  machine  inscribe  code  onto  paper  thanks  machine  finally  write  message  without  using  glass  dumb  friend  akko  decided  play  prank  akko  tinkered  machine  pronounce  inscribe  instead  pronounce  inscribe  instead  since  constanze  bad  eyesight  wa  able  realize  akko  rest  letter  behave  pronounce  letter  besides  machine  inscribe  onto  piece  paper  next  day  received  letter  mailbox  understand  think  either  gibberish  akko  constanze  made  using  machine  since  know  akko  list  possible  string  constanze  machine  would  turned  message  got  see  anything  make  sense  need  know  much  paper  need  asking  help  tell  string  constanze  machine  would  turned  message  got  since  quite  large  tell  instead  remainder  divided  string  constanze  machine  would  turned  message  got  print  consists  single  containing  string  received  message  contains  lowercase  latin  letter  print  single  string  constanze  machine  would  turned  message  modulo
1153/B __label__greedy  __label__constructive  algorithms  luckily  serval  got  onto  right  bus  came  kindergarten  time  coming  kindergarten  found  toy  brick  funny  ha  special  interest  create  difficult  problem  others  solve  time  many  toy  brick  build  dimensional  object  describe  object  nm  matrix  cell  brick  standing  top  serval  give  give  front  view  left  view  top  view  object  asking  restore  object  note  front  view  column  height  maximum  similar  left  view  column  top  view  nm  matrix  equal  mean  otherwise  serval  lonely  others  bored  unsolvable  problem  refused  solve  although  time  promise  least  object  satisfying  view  best  friend  try  contains  positive  space  separated  h  length  width  height  second  contains  non  negative  space  separated  height  column  left  right  front  view  third  contains  non  negative  space  separated  height  column  left  right  left  view  following  contains  representing  top  view  row  otherwise  guaranteed  least  structure  satisfying  input  output  contains  equal  height  corresponding  position  top  view  several  object  satisfying  view  output
474/B __label__implementation  __label__binary  search  lunch  time  mole  friend  marmot  prepared  nice  game  lunch  marmot  brought  mole  ordered  pile  worm  pile  contains  worm  labeled  worm  consecutive  worm  pile  labeled  worm  second  pile  labeled  see  example  better  understanding  mole  eat  worm  marmot  brought  lot  know  mole  blind  marmot  tell  label  best  juicy  worm  marmot  give  mole  worm  mole  say  correctly  pile  worm  contained  poor  mole  asks  help  juicy  worm  said  marmot  tell  mole  correct  answer  contains  single  pile  second  contains  n  worm  pile  third  contains  single  juicy  worm  said  marmot  fourth  contains  label  juicy  worm  print  standard  output  representing  pile  worm  labeled
1209/C __label__implementation  __label__greedy  __label__constructive  algorithms  given  sequence  digit  need  paint  digit  color  digit  painted  either  color  color  write  row  left  right  digit  painted  color  digit  painted  color  resulting  sequence  digit  non  decreasing  next  digit  greater  equal  previous  digit  example  sequence  valid  coloring  paint  color  last  digit  paint  color  digit  valid  coloring  concatenated  non  decreasing  sequence  allowed  either  color  used  digit  painted  color  required  consecutive  position  find  valid  way  paint  given  sequence  digit  determine  impossible  contains  single  test  case  input  test  case  contains  length  given  sequence  digit  next  contains  sequence  digit  digit  written  row  without  space  separator  sequence  start  guaranteed  sum  value  test  case  input  doe  exceed  print  answer  test  case  input
864/A __label__implementation  __label__sortings  petya  vasya  decided  play  game  card  even  single  written  card  game  petya  choose  vasya  choose  another  different  petya  chose  game  player  take  card  chose  example  petya  chose  game  take  card  written  vasya  chose  game  take  card  written  game  considered  fair  petya  vasya  take  card  card  player  get  determine  whether  petya  vasya  choose  game  game  fair  contains  single  card  guaranteed  even  following  sequence  per  written  card  impossible  petya  vasya  choose  way  game  fair  print  without  quote  case  print  anything
369/A __label__implementation  __label__greedy  valera  lazy  student  ha  clean  bowl  clean  plate  valera  ha  made  eating  plan  next  day  valera  lazy  eat  exactly  dish  per  day  order  eat  dish  need  exactly  clean  plate  bowl  know  valera  cook  type  dish  eat  dish  type  bowl  dish  second  type  either  bowl  plate  valera  finish  eating  leaf  dirty  plate  bowl  behind  life  philosophy  let  eat  dirty  kitchenware  sometimes  need  wash  plate  bowl  eating  find  minimum  time  valera  need  wash  plate  bowl  act  optimally  input  contains  planned  day  clean  bowl  clean  plate  second  contains  equal  day  valera  eat  type  dish  equal  day  valera  eat  second  type  dish  print  single  minimum  time  valera  need  wash  plate  bowl
976/E __label__greedy  __label__sortings  recently  max  ha  got  popular  ccg  brainstone  brainstone  pretty  intellectual  game  max  ha  solve  numerous  hard  problem  gameplay  max  owns  creature  described  health  hpi  damage  dmgi  max  ha  type  spell  stock  double  health  creature  hpi  hpi  assigns  value  health  creature  damage  dmgi  hpi  spell  type  used  time  total  second  type  time  total  spell  used  certain  creature  multiple  time  spell  used  arbitrary  order  necessary  use  spell  max  really  busy  preparing  final  exam  asks  determine  maximal  total  damage  creature  achieve  us  spell  optimal  way  contains  creature  spell  type  spell  second  type  respectively  next  hpi  dmgi  pi  mgi  description  creature  print  single  maximum  total  damage  creature  deal
159/E __label__greedy  __label__data  structures  __label__sortings  little  janet  like  playing  cube  actually  like  play  anything  whatsoever  cube  tesseract  long  multicolored  cube  described  parameter  color  size  zebra  tower  tower  consists  cube  exactly  color  besides  color  cube  tower  must  alternate  color  adjacent  cube  must  differ  zebra  tower  least  cube  limitation  figure  show  example  zebra  tower  zebra  tower  height  sum  size  cube  form  tower  help  little  janet  build  zebra  tower  maximum  possible  height  using  available  cube  contains  cube  next  description  cube  description  per  cube  description  consists  space  separated  cube  color  size  correspondingly  guaranteed  least  cube  different  color  print  description  zebra  tower  maximum  height  following  form  print  tower  height  second  print  cube  form  tower  third  print  space  separated  index  cube  order  follow  tower  bottom  top  assume  cube  numbered  order  given  input
510/D __label__math  __label__dp  __label__brute  force  fox  ciel  playing  game  game  infinite  long  tape  cell  indexed  positive  negative  beginning  standing  cell  card  card  ha  attribute  length  cost  pay  dollar  apply  card  applying  card  becomes  able  make  jump  length  cell  cell  cell  want  able  jump  cell  tape  possibly  visiting  intermediate  cell  achieving  goal  want  buy  card  paying  little  money  possible  possible  calculate  minimal  cost  contains  card  second  contains  jump  length  card  third  contains  cost  card  impossible  buy  card  become  able  jump  cell  output  otherwise  output  minimal  cost  buying  set  card
893/E __label__math  __label__dp  __label__number  theory  given  positive  array  called  factorization  iff  following  condition  met  element  count  pairwise  distinct  array  factorization  array  considered  different  iff  exists  least  index  aii  since  answer  large  print  modulo  contains  testcases  solve  follow  containing  represents  testcase  print  ha  equal  factorization  modulo
1156/D __label__dp  __label__dfs  __label__trees  given  tree  undirected  connected  acyclic  graph  consisting  vertex  edge  written  edge  either  let  call  edge  edge  edge  let  call  ordered  pair  vertex  valid  traversing  simple  path  never  edge  going  edge  task  calculate  valid  pair  tree  contains  vertex  tree  follow  denoting  edge  tree  edge  represented  vertex  connected  edge  written  respectively  guaranteed  given  edge  form  tree  print  valid  pair  vertex
2/B __label__math  __label__dp  square  matrix  n  consisting  non  negative  find  way  start  upper  left  cell  matrix  following  cell  right  current  cell  way  end  bottom  right  cell  moreover  multiply  together  along  way  result  least  round  word  end  least  possible  contains  size  matrix  follow  containing  matrix  element  non  negative  exceeding  print  least  trailing  second  print  correspondent  way
618/D __label__dp  __label__greedy  __label__dfs  __label__trees  group  city  connected  network  road  undirected  road  every  pair  city  road  total  take  exactly  second  traverse  single  road  spanning  tree  set  road  containing  exactly  road  possible  travel  city  using  road  spanning  tree  initial  network  wa  chosen  every  road  tree  time  need  traverse  road  wa  changed  second  note  guaranteed  smaller  would  like  travel  city  using  shortest  path  possible  given  description  spanning  tree  wa  chosen  find  cost  shortest  path  start  city  end  city  visit  city  exactly  input  contains  next  contains  description  road  spanning  tree  contains  index  city  connected  road  guaranteed  road  form  spanning  tree  print  single  minimum  second  need  spend  order  visit  city  exactly
854/A __label__math  __label__constructive  algorithms  __label__brute  force  petya  big  fan  mathematics  especially  part  related  fraction  recently  learned  fraction  called  proper  iff  numerator  smaller  denominator  fraction  called  irreducible  numerator  denominator  coprime  positive  common  divisor  except  free  time  petya  think  proper  irreducible  fraction  convert  decimal  using  calculator  day  mistakenly  pressed  addition  button  instead  division  button  got  sum  numerator  denominator  wa  equal  instead  expected  decimal  notation  petya  wanted  restore  original  fraction  soon  realized  might  done  uniquely  decided  determine  maximum  possible  proper  irreducible  fraction  sum  numerator  denominator  equal  help  petya  deal  problem  input  sum  numerator  denominator  fraction  output  space  separated  positive  numerator  denominator  maximum  possible  proper  irreducible  fraction  satisfying  given  sum
653/E __label__dfs  __label__graphs  __label__trees  tree  connected  undirected  graph  consisting  vertex  edge  vertex  numbered  limak  little  polar  bear  tree  vertex  lost  still  remembers  something  lost  tree  though  given  pair  vertex  limak  remembers  wa  edge  remembers  vertex  wa  incident  exactly  edge  degree  wa  equal  possible  limak  remembers  everything  correctly  check  whether  exists  tree  satisfying  given  condition  input  contains  vertex  limak  tree  forbidden  pair  vertex  degree  vertex  respectively  next  contains  distinct  ii  pair  forbidden  guaranteed  pair  vertex  appear  input  print  possible  without  quote  exists  least  tree  satisfying  given  condition  otherwise  print  impossible  without  quote
623/A __label__graphs  __label__constructive  algorithms  day  student  vasya  wa  sitting  lecture  mentioned  string  consisting  letter  wa  written  desk  lecture  wa  boring  vasya  decided  complete  picture  composing  graph  following  property  ha  exactly  vertex  numbered  pair  vertex  edge  connecting  character  either  equal  neighbouring  alphabet  letter  pair  neighbouring  letter  vasya  painted  resulting  graph  near  string  erased  string  next  day  vasya  friend  petya  came  lecture  found  graph  desk  heard  vasya  adventure  want  find  whether  could  original  graph  painted  vasya  order  verify  petya  need  know  whether  exists  string  vasya  used  would  produce  given  graph  input  contains  vertex  edge  graph  found  petya  respectively  next  contains  ii  edge  graph  guaranteed  multiple  edge  pair  vertex  appear  list  print  yes  without  quote  string  petya  interested  really  exists  without  quote  otherwise
1179/C __label__math  __label__implementation  __label__greedy  __label__data  structures  __label__trees  __label__binary  search  serge  came  school  dining  room  discovered  big  queue  pupil  queue  sure  want  wait  queue  clear  want  know  dish  receive  doe  serge  tired  asks  compute  instead  initially  dish  cost  already  know  queue  pupil  togrogs  respectively  pupil  enumerated  queue  order  pupil  queue  ha  togrogs  last  ha  togrogs  pupil  think  expensive  dish  delicious  every  pupil  buy  expensive  dish  ha  money  every  dish  ha  single  copy  pupil  ha  bought  nobody  buy  later  pupil  money  dish  leaf  queue  brutal  capitalism  money  problem  serge  serge  buying  expensive  dish  least  remaining  moreover  serge  school  ha  unstable  economic  situation  cost  dish  togrogs  pupil  change  formally  must  process  query  change  mean  price  dish  becomes  togrogs  change  mean  pupil  queue  ha  togrogs  nobody  leaf  queue  query  saleswoman  late  every  query  must  tell  serge  price  dish  buy  ha  waited  queue  clear  dish  point  according  rule  described  contains  dish  pupil  respectively  second  contains  element  array  third  contains  element  array  fourth  conatins  query  following  contains  follows  query  change  price  dish  contains  mean  becomes  query  change  togrogs  pupil  contains  mean  becomes  query  print  answer  statement  describes  answer  query  price  dish  serge  buy  nothing  remains
1210/B __label__greedy  __label__brute  force  marcin  coach  university  student  want  attend  training  camp  marcin  smart  coach  want  send  student  work  calmly  let  focus  student  indexed  described  equal  skill  level  student  higher  better  known  algorithm  numbered  student  know  algorithm  bit  set  binary  representation  otherwise  bit  set  student  think  better  student  know  algorithm  know  note  student  think  better  group  student  work  together  calmly  student  group  think  better  everyone  else  group  marcin  want  send  group  least  student  work  together  calmly  maximum  possible  sum  skill  level  sum  contains  student  interested  camp  second  contains  third  contains  output  denotes  maximum  sum  student  group  student  work  together  calmly  group  least  student  work  together  calmly  print
757/E __label__dp  __label__brute  force  __label__number  theory  bash  got  tired  journey  become  greatest  pokemon  master  decides  take  break  play  function  bash  defines  function  denotes  way  factoring  factor  gcd  word  ordered  pair  positive  gcd  bash  felt  wa  easy  calculate  function  defined  series  function  defined  ordered  pair  positive  need  prime  bash  want  know  value  different  since  value  could  huge  would  like  know  value  modulo  help  contains  value  bash  want  know  next  denote  bash  want  know  value  print  pair  given  print  modulo  separate
1156/C __label__greedy  __label__sortings  __label__binary  search  given  set  point  point  matched  following  condition  hold  neither  matched  point  maximum  pair  point  match  contains  point  constraint  distance  matched  point  respectively  second  contains  print  maximum  pair  point  match
842/B __label__geometry  gleb  ordered  pizza  home  courier  delivered  pizza  wa  upset  several  piece  sausage  lay  crust  doe  really  like  crust  pizza  circle  radius  center  origin  pizza  consists  main  part  circle  radius  center  origin  crust  around  main  part  width  piece  sausage  circle  radius  piece  sausage  center  given  pair  gleb  asks  help  determine  piece  sausage  caught  crust  piece  sausage  got  crust  completely  lie  crust  string  contains  radius  pizza  width  crust  next  contains  piece  sausage  next  contains  coordinate  center  peace  sausage  radius  peace  sausage  output  piece  sausage  lay  crust
1066/A __label__math  vova  plan  conference  train  initially  train  point  destination  point  path  point  speed  train  length  unit  per  minute  minute  train  point  second  minute  point  lantern  path  placed  point  coordinate  divisible  lantern  point  second  point  exactly  standing  train  occupies  point  inclusive  vova  see  lantern  point  divisible  standing  train  position  thus  point  lantern  point  covered  standing  train  vova  see  lantern  problem  say  lantern  vova  see  path  vova  plan  different  conference  answer  independent  query  input  contains  query  follow  contains  destination  point  path  period  lantern  appearance  segment  occupied  standing  train  print  answer  query
200/A __label__data  structures  __label__brute  force  capital  berland  ha  movie  theater  country  besides  consists  room  room  divided  row  row  consists  seat  people  lined  box  office  person  want  buy  exactly  ticket  entertainment  box  office  started  selling  ticket  person  found  seat  seemed  best  remembered  pair  coordinate  row  seat  row  possible  people  chosen  place  people  see  favorite  seat  taken  plan  empty  seat  theater  choose  buy  ticket  another  place  ha  following  logic  let  assume  originally  wanted  buy  ticket  seat  come  box  office  chooses  empty  seat  satisfies  following  condition  value  minimum  choice  unique  seat  satisfy  condition  person  selects  value  minimum  choice  still  unique  seat  satisfy  second  condition  person  selects  value  minimum  task  find  coordinate  seat  person  input  contains  row  room  seat  row  people  correspondingly  next  contains  coordinate  seat  person  ha  chosen  separated  space  pair  coordinate  located  order  people  stand  starting  head  person  stand  front  box  office  tail  last  person  print  containing  pair  print  coordinate  seat  person  stand  buy  ticket
612/B __label__math  __label__implementation  hdd  hard  drive  group  data  sector  file  split  fragment  written  sector  hard  drive  note  fragment  written  sector  arbitrary  order  problem  hdd  hard  drive  following  magnetic  head  move  sector  another  read  file  find  time  need  read  file  split  fragment  sector  contains  fragment  file  note  different  sector  contains  different  fragment  start  magnetic  head  position  contains  fragment  file  reading  following  manner  fragment  read  magnetic  head  move  sector  contains  second  fragment  second  fragment  read  fragment  read  fragment  read  order  take  time  unit  move  magnetic  head  sector  sector  reading  fragment  take  time  contains  positive  fragment  second  contains  different  fragment  written  sector  print  time  unit  needed  read  file
1085/C __label__math  __label__implementation  squareland  national  forest  divided  equal  square  plot  aligned  north  south  east  west  direction  plot  uniquely  described  cartesian  coordinate  south  west  corner  friend  alice  bob  charlie  going  buy  distinct  plot  land  forest  initially  plot  forest  including  plot  covered  tree  friend  want  visit  want  clean  plot  tree  cleaning  able  reach  plot  moving  adjacent  cleared  plot  plot  adjacent  share  side  example  minimal  plot  cleared  way  shown  gray  color  course  friend  want  strain  much  help  find  smallest  plot  need  clean  tree  contains  coordinate  plot  following  describe  coordinate  plot  respectively  format  guaranteed  plot  distinct  print  single  smallest  plot  needed  cleaned  tree  following  coordinate  plot  needed  cleaned  plot  distinct  output  plot  order
949/A __label__greedy  oleg  writes  history  day  lived  day  decides  wa  good  bad  oleg  call  non  empty  sequence  day  zebra  start  bad  day  end  bad  day  good  bad  day  alternating  let  denote  bad  day  good  day  example  sequence  day  zebra  sequence  oleg  tell  story  day  lived  chronological  order  form  string  consisting  interested  possible  divide  oleg  life  history  several  subsequence  zebra  way  done  day  must  belong  exactly  subsequence  subsequence  day  forming  must  ordered  chronologically  note  subsequence  doe  group  consecutive  day  input  data  non  empty  string  consisting  character  describes  history  oleg  life  length  denoted  doe  exceed  character  way  divide  history  zebra  subsequence  output  print  resulting  subsequence  following  print  length  subsequence  index  day  forming  subsequence  index  must  follow  ascending  order  day  numbered  starting  index  must  belong  exactly  subsequence  way  divide  day  history  zebra  subsequence  print
1038/D __label__dp  __label__implementation  __label__greedy  slime  row  slime  ha  value  possibly  negative  associated  slime  eat  adjacent  slime  closest  slime  left  right  assuming  slime  exists  slime  value  eats  slime  value  eaten  slime  disappears  value  remaining  slime  change  slime  eat  slime  left  find  maximum  possible  value  last  slime  input  contains  denoting  slime  next  contains  value  slime  print  maximum  possible  value  last  slime
628/E __label__implementation  __label__data  structures  tourist  want  visit  country  zeydabad  zbazi  local  game  zeydabad  country  zeydabad  rectangular  table  consisting  row  column  cell  country  either  tourist  know  country  named  zeydabad  lot  pattern  country  pattern  square  anti  diagonal  completely  filled  upper  lower  row  completely  filled  cell  square  arbitrary  note  pattern  consist  cell  see  example  want  count  pattern  country  necessary  skill  zbazi  task  help  tourist  counting  pattern  input  output  reach  huge  size  recommended  use  fast  input  output  method  example  prefer  use  get  scanf  printf  instead  getline  cin  cout  prefer  use  bufferedreader  printwriter  instead  scanner  system  java  contains  row  column  respectively  next  contains  character  description  zeydabad  print  pattern  zeydabad
632/D __label__math  __label__brute  force  __label__number  theory  given  array  element  consider  subsequence  value  least  common  multiple  lcm  element  denote  lcm  find  longest  subsequence  value  l  subsequence  array  get  erasing  element  allowed  erase  element  lcm  empty  array  equal  contains  size  array  parameter  problem  statement  second  contains  element  print  kmax  max  value  lcm  element  optimal  subsequence
254/D __label__implementation  __label__dfs  __label__graphs  __label__brute  force  rat  bred  hundred  hundred  basement  store  owned  vasily  petrovich  vasily  petrovich  noticed  presence  got  habit  sneaking  warehouse  stealing  food  vasily  petrovich  put  anymore  ha  destroy  rat  basement  since  mousetrap  outdated  help  rat  poison  poison  inattentive  people  well  rat  chose  radical  way  blow  grenade  basement  doe  problem  present  shop  basement  rectangular  table  n  cell  cell  occupied  wall  rest  empty  vasily  ha  watching  rat  found  certain  time  sleep  time  sleep  place  want  blow  grenade  convenient  time  come  plan  basement  marked  cell  sleeping  rat  naturally  cell  occupied  wall  grenade  blow  cell  occupied  wall  blast  wave  grenade  distributes  follows  assume  grenade  blast  occurs  time  initial  time  cell  grenade  blew  get  clear  time  cell  clear  time  side  neighbouring  cell  occupied  wall  get  clear  could  cleared  blast  wave  distributes  exactly  second  dy  immediately  example  distributing  blast  wave  picture  show  situation  blast  following  picture  show  clear  cell  time  thus  blast  wave  picture  distributes  second  vasily  petrovich  wonder  whether  choose  cell  blast  grenade  clear  cell  sleeping  rat  write  program  find  contains  separated  single  space  next  table  represents  basement  plan  row  table  consists  character  character  mean  corresponding  cell  occupied  wall  character  represents  empty  cell  character  represents  empty  cell  sleeping  rat  guaranteed  last  row  well  last  column  consist  character  plan  ha  least  empty  cell  least  cell  sleeping  rat  impossible  blow  cell  sleeping  rat  print  single  otherwise  print  space  separated  mean  grenade  cell  cell
629/C __label__dp  __label__strings  famil  door  birthday  coming  friend  like  gabi  decided  buy  present  friend  going  buy  string  consisted  round  bracket  since  famil  door  love  string  bracket  length  string  sequence  round  bracket  called  valid  total  opening  bracket  equal  total  closing  bracket  prefix  sequence  opening  bracket  greater  equal  closing  bracket  gabi  bought  string  length  want  complete  obtain  valid  sequence  bracket  length  going  pick  string  consisting  round  bracket  merge  string  add  string  beginning  string  string  end  string  wonder  many  pair  string  exists  string  valid  sequence  round  bracket  pretty  large  want  calculate  modulo  contains  desired  length  string  length  string  bought  gabi  respectively  second  contains  string  length  consisting  character  print  pair  string  valid  sequence  round  bracket  modulo
938/B __label__greedy  __label__brute  force  friend  participating  show  run  prize  start  show  prize  located  straight  prize  located  position  position  prize  distinct  start  position  friend  position  prize  position  work  team  collect  prize  minimum  possible  time  order  know  take  exactly  second  move  position  position  friend  trained  enough  instantly  pick  prize  position  equal  current  position  true  friend  carrying  prize  doe  affect  speed  friend  speed  discus  strategy  friend  decide  pick  prize  remember  every  prize  must  picked  either  friend  minimum  second  take  pick  prize  contains  prize  second  contains  position  prize  prize  located  position  position  given  ascending  order  print  minimum  second  take  collect  prize
37/D __label__math  __label__dp  petya  ha  free  computer  game  time  attends  university  class  every  day  lesson  petya  faculty  consist  double  class  floor  lesson  take  place  long  corridor  classroom  numbered  situated  along  student  petya  year  divided  group  petya  ha  noticed  recently  group  timetable  ha  following  peculiarity  classroom  lesson  group  take  place  doe  exceed  classroom  second  lesson  group  take  place  petya  decided  count  way  make  lesson  timetable  group  timetable  set  group  room  second  lesson  take  place  unfortunately  quickly  lost  track  calculation  decided  count  timetable  satisfy  following  condition  lesson  classroom  exactly  group  must  present  classroom  group  placed  help  petya  count  timetable  satisfying  condition  lot  timetable  output  modulo  contains  classroom  second  contains  space  separated  amount  group  present  classroom  lesson  third  contains  space  separated  maximal  amount  group  present  classroom  time  guaranteed  xii  sum  positive  doe  exceed  single  output  answer  problem  modulo
1210/A __label__graphs  __label__brute  force  anadi  ha  set  domino  every  domino  ha  part  part  contains  dot  every  exactly  domino  dot  half  dot  half  set  contains  exactly  domino  exact  illustration  set  anadi  ha  undirected  graph  without  self  loop  multiple  edge  want  choose  domino  place  edge  graph  use  domino  type  edge  fit  domino  necessary  place  domino  edge  graph  placing  domino  edge  chooses  direction  word  half  placed  domino  must  directed  toward  endpoint  edge  half  must  directed  toward  endpoint  catch  multiple  half  domino  directed  toward  vertex  half  must  dot  many  domino  anadi  place  edge  graph  contains  vertex  edge  graph  next  denote  edge  connects  vertex  graph  might  disconnected  guaranteed  graph  self  loop  edge  pair  vertex  output  denotes  maximum  domino  anadi  place  edge  graph
978/E __label__math  bus  berland  equipped  video  surveillance  system  system  record  information  change  passenger  bus  stop  passenger  bus  current  bus  stop  passenger  bus  current  bus  stop  system  record  system  record  show  passenger  changed  test  run  wa  made  single  bus  bus  stop  thus  system  recorded  sequence  exactly  bus  stop  record  bus  stop  bus  stop  numbered  chronological  order  determine  possible  way  many  people  could  bus  bus  stop  bus  ha  capacity  equal  time  bus  passenger  inclusive  contains  bus  stop  capacity  bus  second  contains  sequence  equal  ha  recorded  video  system  bus  stop  print  possible  way  many  people  could  bus  bus  stop  bus  ha  capacity  equal  situation  contradictory  initial  passenger  contradiction  print
1252/C __label__implementation  __label__data  structures  pathfinding  task  finding  route  point  often  appears  many  problem  example  gps  navigation  software  driver  query  suggested  route  robot  motion  planning  find  valid  sequence  movement  task  simple  maze  solver  find  valid  path  point  another  point  problem  related  solving  maze  maze  considered  problem  form  matrix  nn  value  cell  generated  given  array  specifically  value  row  column  cell  equal  note  index  problem  path  maze  defined  sequence  cell  word  adjacent  cell  differs  row  column  even  path  maze  defined  path  cell  path  even  given  tuple  query  task  determine  whether  exists  even  path  cell  cell  simplify  problem  guaranteed  cell  cell  even  example  let  following  figure  depicts  matrix  generated  given  array  let  consider  several  query  even  path  cell  cell  course  valid  even  path  even  path  cell  cell  namely  even  path  cell  cell  observe  neighboring  cell  cell  cell  odd  respectively  thus  even  path  originating  cell  begin  containing  representing  size  maze  query  respectively  next  contains  representing  array  next  contains  representing  array  next  contains  representing  query  guaranteed  different  cell  maze  even  query  order  input  output  string  yes  without  quote  without  quote  whether  exists  even  path  cell  cell
1000/B __label__greedy  recently  bought  brand  new  smart  lamp  programming  feature  set  schedule  lamp  every  day  turn  power  moment  turn  power  moment  moreover  lamp  allows  set  program  switching  state  state  light  light  unfortunately  program  already  installed  lamp  lamp  allows  good  program  good  program  represented  non  empty  array  must  course  preinstalled  program  good  program  lamp  follows  program  next  manner  moment  turn  power  light  moment  lamp  flip  state  opposite  wa  lit  turn  vice  versa  state  lamp  flip  instantly  example  turn  light  moment  nothing  total  time  lamp  lit  finally  moment  lamp  turning  power  regardless  state  since  people  read  instruction  understand  language  written  realize  testing  possible  way  alter  preinstalled  program  insert  element  program  still  good  program  alteration  insertion  done  pair  consecutive  element  even  begining  end  find  way  alter  program  total  time  lamp  lit  maximum  possible  maybe  leave  program  untouched  lamp  lit  till  moment  lit  unit  time  segment  time  lamp  lit  summed  contains  space  separated  length  program  moment  power  turn  second  contains  space  separated  initially  installed  program  print  maximum  possible  total  time  lamp  lit
1181/E1 __label__sortings  __label__brute  force  problem  differs  next  problem  constraint  petya  decided  visit  byteland  summer  holiday  turned  history  country  quite  unusual  initially  different  country  land  berland  country  territory  wa  represented  rectangle  map  side  rectangle  parallel  ax  corner  located  point  coordinate  territory  country  intersected  wa  possible  territory  touched  time  passed  sometimes  country  merged  happened  union  territory  wa  rectangle  end  country  remained  byteland  initially  country  rectangular  castle  inside  territory  side  parallel  ax  corner  coordinate  castle  might  touch  border  corresponding  country  side  castle  miraculously  union  castle  still  intact  unfortunately  location  information  restore  initial  territory  country  possible  formation  byteland  castle  shown  blue  petya  wonder  information  initial  country  remained  suspected  whole  story  fake  recommended  smart  person  please  check  whether  exists  possible  set  initial  territory  could  make  story  true  contains  single  country  castle  next  contains  coordinate  castle  coordinate  lower  left  corner  coordinate  upper  right  corner  guaranteed  castle  intersect  touch  exists  possible  set  territory  satisfies  story  print  yes  otherwise  print
404/B __label__math  __label__implementation  valera  take  part  berland  marathon  marathon  race  start  stadium  represented  plane  square  whose  lower  left  corner  located  point  coordinate  length  side  equal  meter  side  square  parallel  coordinate  ax  length  marathon  race  long  valera  need  extra  drink  race  coach  give  valera  bottle  drink  meter  path  know  valera  start  point  coordinate  run  counter  clockwise  valera  cover  meter  reach  point  coordinate  know  length  marathon  race  equal  meter  help  valera  coach  determine  located  help  valera  specifically  determine  coordinate  valera  position  cover  meter  contains  space  separated  real  given  precision  till  decimal  digit  decimal  point  denotes  length  square  side  describes  stadium  show  meter  valera  get  extra  drink  second  contains  showing  valera  need  extra  drink  time  print  real  separated  space  mean  valera  point  coordinate  cover  meter  solution  considered  correct  absolute  relative  error  exceed
570/B __label__math  __label__implementation  __label__greedy  __label__constructive  algorithms  day  misha  andrew  playing  simple  game  player  chooses  range  let  assume  misha  chose  andrew  chose  using  random  generator  choose  random  range  chosen  probability  winner  player  whose  wa  closer  boy  agreed  located  distance  misha  win  andrew  want  win  much  asks  help  know  selected  misha  need  determine  value  andrew  must  choose  probability  victory  highest  possible  formally  need  find  probability  maximal  equiprobably  chosen  inclusive  contains  range  game  selected  misha  respectively  print  single  value  probability  andrew  win  highest  multiple  value  print  minimum
643/C __label__dp  radewoosh  playing  computer  game  level  numbered  level  divided  region  group  region  contains  positive  consecutive  level  game  repeat  following  process  region  beaten  game  end  immediately  otherwise  system  find  region  least  non  beaten  level  let  denote  region  system  creates  empty  bag  token  token  represent  level  many  token  representing  level  already  beaten  level  region  system  add  token  bag  token  representing  level  let  denote  non  beaten  level  region  system  add  token  bag  finally  system  take  uniformly  random  token  bag  player  start  level  represented  token  player  spends  hour  beat  level  even  ha  already  beaten  past  given  value  task  split  level  region  level  must  belong  exactly  region  region  must  non  empty  consecutive  set  level  minimum  possible  expected  hour  required  finish  game  input  contains  level  region  respectively  second  contains  print  real  minimum  possible  expected  value  hour  spent  finish  game  level  distributed  region  optimal  way  answer  considered  correct  absolute  relative  error  doe  exceed
762/C __label__strings  __label__binary  search  given  string  remove  minimum  possible  consecutive  standing  another  character  string  way  becomes  subsequence  string  happen  need  remove  character  maybe  remove  character  make  empty  subsequence  string  string  obtained  erasing  character  necessarily  consecutive  string  contains  string  second  string  string  nonempty  consist  lowercase  letter  english  alphabet  length  string  bigger  character  output  subsequence  string  obtained  erasing  minimum  consecutive  character
1207/G __label__data  structures  __label__dfs  __label__trees  __label__strings  mishka  favourite  experimental  indie  band  ha  recently  dropped  new  album  song  album  share  gimmick  name  following  type  single  lowercase  latin  letter  name  single  lowercase  latin  letter  appended  end  song  numbered  guaranteed  song  always  type  vova  rather  interested  new  album  really  time  listen  entirely  thus  asks  mishka  question  determine  song  worth  listening  question  following  format  count  occurrence  string  name  song  album  continuous  substring  consists  lowercase  latin  letter  mishka  question  purpose  information  struggle  provide  please  help  mishka  answer  vova  question  contains  single  song  album  next  contains  desciption  song  album  following  format  single  lowercase  latin  letter  name  single  lowercase  latin  letter  appended  end  next  contains  single  vova  question  next  contains  desciption  vova  question  following  format  count  occurrence  string  name  song  album  continuous  substring  consists  lowercase  latin  letter  guaranteed  total  length  question  string  exceed  question  print  single  occurrence  question  string  name  song  album  continuous  substring
793/C __label__math  __label__implementation  __label__sortings  __label__geometry  igor  analyst  fell  asleep  work  strange  dream  dream  desk  wa  crowded  computer  mouse  bought  mousetrap  catch  desk  considered  infinite  plane  mousetrap  rectangle  side  parallel  ax  opposite  side  located  point  igor  want  catch  mouse  igor  ha  analysed  behavior  discovered  mouse  moving  along  straight  constant  speed  speed  mouse  equal  vix  iy  mean  coordinate  mouse  increase  vix  unit  per  second  coordinate  increase  viy  unit  mousetrap  open  initially  mouse  able  move  freely  desk  igor  close  mousetrap  moment  catching  mouse  strictly  inside  mousetrap  igor  work  lot  busy  dream  well  asks  write  program  given  mousetrap  coordinate  initial  coordinate  mouse  speed  determines  earliest  time  moment  able  catch  mouse  please  note  igor  close  mousetrap  contains  single  computer  mouse  desk  second  contains  coordinate  opposite  corner  mousetrap  next  information  mouse  contains  rix  riy  vix  viy  ix  iy  ix  iy  rix  iy  initial  position  mouse  vix  iy  speed  print  minimum  possible  non  negative  igor  close  mousetrap  second  beginning  mouse  strictly  inside  mousetrap  print
1097/H __label__dp  __label__brute  force  __label__strings  thue  morse  radecki  mateusz  sequence  thorse  radewoosh  sequence  short  infinite  sequence  constructed  finite  sequence  gen  length  obtained  following  sequence  step  beginning  define  element  sequence  step  define  sequence  concatenation  copy  altered  slightly  element  changed  gen  modm  instance  pick  gen  see  long  element  gen  consecutive  step  produce  sequence  whose  prefix  sequence  generated  previous  step  therefore  define  infinite  thorse  radewoosh  sequence  sequence  obtained  applying  step  indefinitely  parameter  mateusz  picked  sequence  gen  used  obtain  thorse  radewoosh  sequence  picked  wrote  subsequence  sequence  note  use  based  indexing  mateusz  ha  favorite  sequence  length  would  like  see  large  compared  let  say  majorizes  sequence  length  let  denote  asks  many  range  sequence  huge  answering  question  using  pen  paper  turned  time  consuming  help  automate  research  contains  length  sequence  gen  used  perform  modular  operation  second  contains  gen  gen  guaranteed  element  sequence  gen  equal  third  contains  length  sequence  fourth  contains  fifth  contains  print  single  answer  problem
245/F __label__implementation  __label__brute  force  __label__strings  __label__binary  search  got  list  program  warning  log  record  log  stream  string  format  message  without  quote  string  message  consists  space  uppercase  lowercase  english  letter  character  string  determines  correct  date  year  string  determines  correct  time  hour  format  described  record  log  stream  mean  certain  time  record  ha  got  program  warning  string  message  contains  warning  description  task  print  moment  time  warning  last  second  wa  le  input  contains  space  separated  second  remaining  input  represent  log  stream  second  input  contains  record  log  stream  third  contains  second  record  record  log  stream  ha  described  format  record  given  chronological  order  warning  record  given  order  warning  appeared  program  guaranteed  log  ha  least  record  guaranteed  total  length  log  stream  exceed  particular  mean  length  doe  exceed  character  guaranteed  given  date  time  correct  string  message  record  non  empty  sought  moment  time  print  otherwise  print  string  format  without  quote  moment  time  warning  last  second  got  le
892/B __label__implementation  __label__greedy  hand  shed  innocent  blood  guilty  people  hold  claw  length  bell  ring  every  person  kill  people  front  people  kill  others  time  namely  person  kill  person  j  given  length  claw  need  find  total  alive  people  bell  ring  contains  guilty  people  second  contains  space  separated  length  person  claw  print  total  alive  people  bell  ring
417/C __label__implementation  __label__graphs  __label__constructive  algorithms  day  russian  code  cup  event  wa  decided  play  football  competition  event  participant  wa  divided  team  played  several  match  team  could  play  appointed  judge  wa  experienced  member  pavel  since  wa  wisest  soon  got  bored  game  fell  asleep  waking  discovered  tournament  team  want  know  result  match  pavel  want  anyone  discover  sleeping  keeping  eye  result  decided  recover  result  game  asked  team  learned  real  winner  wa  friendship  team  beat  team  exactly  time  help  pavel  come  chronology  tournir  meet  condition  otherwise  report  table  contains  print  played  game  following  information  match  match  per  aii  mean  match  team  team  assume  team  numbered
981/F __label__greedy  __label__binary  search  marriage  season  ringland  ringland  ha  form  circle  boundary  length  bridegroom  bride  bridegroom  decided  marry  bride  course  bridegroom  choose  exactly  bride  bride  chosen  exactly  bridegroom  object  ringland  located  boundary  circle  including  capital  bridegroom  castle  bride  palace  castle  bridegroom  located  distance  capital  clockwise  direction  palace  bride  located  distance  capital  clockwise  direction  let  define  inconvenience  marriage  maximum  distance  bride  walk  along  circle  palace  bridegroom  castle  shortest  direction  clockwise  counter  clockwise  direction  help  bridegroom  ringland  choose  bride  way  inconvenience  marriage  smallest  possible  contains  bridegroom  bride  length  ringland  next  contains  distance  capital  castle  bridegroom  clockwise  direction  next  contains  distance  capital  palace  bride  clockwise  direction  print  smallest  possible  inconvenience  wedding  inconvenience  largest  distance  traveled  bride
1205/F __label__math  __label__constructive  algorithms  define  beauty  permutation  pair  consecutive  order  example  beauty  permutation  equal  segment  corresponding  pair  answer  independent  query  query  given  determine  exists  permutation  beauty  equal  exists  output  contains  single  query  follow  contains  length  permutation  needed  beauty  respectively  query  output  permutation  exist  otherwise  output  yes  next  output  element  permutation  right  order
584/A __label__math  olesya  love  consisting  digit  rodion  like  divisible  find  satisfies  task  given  print  strictly  larger  consisting  digit  divisible  exist  print  single  contains  length  divisible  print  positive  without  leading  answer  problem  exist  multiple  possible  answer  allowed  print
906/D __label__math  __label__number  theory  priest  quetzalcoatl  cult  want  build  tower  represent  power  god  tower  usually  made  power  charged  rock  built  help  rare  magic  levitating  current  top  tower  adding  rock  bottom  top  built  rock  posse  power  want  add  rock  charged  power  value  power  new  tower  rock  added  last  sequence  value  power  tower  built  power  extremely  large  still  priest  want  get  information  namely  want  know  called  cumulative  power  true  value  power  taken  modulo  priest  rock  numbered  ask  calculate  value  cumulative  power  tower  posse  build  rock  numbered  input  contains  second  input  contains  k  power  rock  priest  third  input  contains  single  amount  query  priest  kth  next  contains  kk  output  must  amount  cumulative  power  tower  built  rock
356/C __label__implementation  __label__greedy  __label__constructive  algorithms  team  student  city  sent  berland  olympiad  informatics  traditionally  train  student  bought  ticket  carriage  consisting  compartment  compartment  ha  exactly  people  know  compartment  student  get  bored  compartment  student  compartment  ha  fun  throughout  entire  trip  student  want  swap  people  compartment  student  bored  student  swap  place  another  person  need  convince  really  necessary  student  independently  find  necessary  argument  asked  sympathetic  conductor  help  conductor  use  life  experience  persuade  passenger  switch  place  student  conductor  doe  want  waste  time  persuading  wrong  people  want  know  minimum  people  necessary  persuade  change  place  student  task  find  swap  compartment  either  student  left  company  student  contains  compartment  carriage  second  contains  showing  many  student  ride  compartment  guaranteed  least  student  riding  train  sequence  swapping  seat  people  lead  desired  result  print  without  quote  another  case  print  smallest  people  need  persuade  swap  place
685/D __label__implementation  __label__sortings  __label__brute  force  snow  queen  told  kay  form  word  eternity  using  piece  ice  kay  eager  deal  task  become  free  snow  queen  give  world  pair  skate  behind  palace  snow  queen  infinite  field  consisting  cell  piece  ice  spread  field  piece  occupying  exactly  cell  piece  occupying  cell  estimate  difficulty  task  kay  look  square  size  k  cell  corner  located  corner  cell  side  parallel  coordinate  axis  count  piece  ice  inside  method  give  estimation  difficulty  part  field  kay  want  estimate  total  difficulty  came  following  criterion  want  count  square  size  k  exactly  piece  ice  inside  please  help  kay  estimate  difficulty  task  given  snow  queen  input  contains  piece  ice  value  respectively  next  contains  coordinate  cell  containing  piece  ice  guaranteed  piece  ice  occupy  cell  print  square  size  k  containing  exactly  piece  ice
280/D __label__implementation  __label__data  structures  __label__graphs  consider  sequence  run  query  type  query  format  val  reply  query  make  following  assignment  al  query  format  reply  query  print  maximum  sum  non  intersecting  subsegments  sequence  formally  choose  pair  l  tt  sum  ax  x  x  x  xt  xt  yt  large  possible  note  choose  subsegments  particularly  choose  subsegments  case  described  sum  considered  equal  contains  showing  many  sequence  ha  next  contains  third  contains  query  next  query  format  given  statement  changing  query  fit  limit  val  query  count  maximum  sum  non  intersecting  subsegments  fit  limit  guaranteed  query  count  maximum  sum  non  intersecting  subsegments  exceed  query  count  maximum  sum  non  intersecting  subsegments  print  reply  maximum  sum  print  answer  query  order  query  follow  input
850/C __label__dp  mojtaba  arpa  playing  game  list  game  player  turn  chooses  prime  positive  divide  least  list  list  divisible  call  player  delete  add  list  player  make  valid  choice  loses  mojtaba  start  game  player  alternatively  make  move  determine  player  winner  player  play  optimally  contains  single  element  list  second  contains  element  list  mojtaba  win  print  mojtaba  otherwise  print  arpa  without  quote
794/B __label__math  __label__geometry  igor  analyst  ha  adopted  little  bunny  know  bunny  love  carrot  thus  igor  ha  bought  carrot  shared  bunny  igor  want  treat  bunny  equally  thus  want  cut  carrot  piece  equal  area  formally  carrot  viewed  isosceles  triangle  base  length  equal  height  equal  igor  want  make  cut  parallel  base  cut  carrot  piece  want  make  sure  piece  area  help  igor  determine  cut  carrot  piece  equal  area  illustration  example  input  contains  space  separated  output  real  denotes  cut  must  made  unit  away  apex  carrot  addition  must  hold
609/C __label__math  __label__implementation  school  computer  room  server  responsible  processing  several  computing  task  know  scheduled  task  server  task  assigned  server  order  balance  load  server  want  reassign  task  make  difference  loaded  server  least  loaded  server  small  possible  word  want  minimize  expression  loaded  server  least  loaded  second  reassign  single  task  thus  second  choose  pair  server  move  single  task  server  another  write  program  find  minimum  second  needed  balance  load  server  contains  positive  server  second  contains  sequence  non  negative  task  assigned  server  print  minimum  second  required  balance  load
1031/F __label__math  __label__graphs  __label__brute  force  given  positive  possible  operation  multiply  prime  divide  prime  factor  minimum  operation  required  obtain  divisor  given  several  pair  need  find  answer  contains  single  pair  find  answer  next  output  answer  pair
1152/B __label__math  __label__dfs  __label__constructive  algorithms  cat  furrier  transform  popular  algorithm  cat  programmer  create  longcats  greatest  cat  programmer  ever  exist  neko  want  utilize  algorithm  create  perfect  longcat  assume  cat  perfect  longcat  cat  equal  non  negative  example  suitable  perfect  longcats  cat  furrier  transform  following  operation  performed  operation  select  non  negative  replace  bitwise  xor  operator  operation  replace  applied  operation  must  type  second  type  third  type  formally  operation  order  executed  odd  numbered  operation  must  type  even  numbered  operation  must  type  neko  want  produce  perfect  longcats  industrial  scale  thus  cat  neko  want  perform  operation  help  neko  writing  transformation  plan  note  required  minimize  operation  need  use  operation  contains  single  single  operation  apply
920/E __label__data  structures  __label__dfs  __label__graphs  given  undirected  graph  consisting  vertex  edge  instead  giving  edge  exist  graph  give  unordered  pair  edge  pair  vertex  listed  input  edge  vertex  find  connected  component  graph  size  component  connected  component  set  vertex  every  vertex  set  exists  least  path  graph  connecting  vertex  adding  vertex  violates  rule  contains  follow  containing  pair  x  denoting  edge  pair  listed  considered  never  listed  test  pair  vertex  listed  input  exists  edge  vertex  firstly  print  connected  component  graph
958/F1 __label__implementation  unrest  galactic  senate  several  thousand  solar  system  declared  intention  leave  republic  master  heidi  need  select  jedi  knight  peacekeeping  mission  throughout  galaxy  well  known  success  peacekeeping  mission  depends  color  lightsabers  jedi  mission  heidi  ha  jedi  knight  standing  front  lightsaber  possible  color  know  mission  effective  need  select  contiguous  interval  knight  exactly  knight  lightsabers  color  knight  lightsabers  second  color  knight  lightsabers  color  help  find  possible  input  contains  second  contains  range  representing  color  lightsabers  subsequent  jedi  knight  third  contains  desired  count  lightsabers  color  output  yes  interval  prescribed  color  count  exists  output  none
768/B __label__dfs  __label__constructive  algorithms  jon  fought  bravely  rescue  wildlings  attacked  white  walker  hardhome  arrival  sam  tell  want  oldtown  train  citadel  become  maester  return  take  deceased  aemon  place  maester  castle  black  jon  agrees  sam  proposal  sam  set  journey  citadel  becoming  trainee  citadel  cakewalk  hence  maesters  citadel  gave  sam  problem  test  eligibility  initially  sam  ha  list  single  element  ha  perform  certain  operation  list  operation  sam  must  remove  element  list  insert  position  sequentially  must  continue  operation  element  list  either  master  want  total  range  indexed  sam  want  become  maester  unfortunately  solve  problem  help  sam  pas  eligibility  test  contains  r  l  initial  element  range  guaranteed  greater  length  final  list  output  total  range  final  sequence
1108/C __label__math  __label__greedy  __label__brute  force  garland  consisting  lamp  lamp  colored  red  green  blue  color  lamp  color  lamp  garland  recolor  lamp  garland  recoloring  lamp  mean  changing  initial  color  another  way  obtained  garland  nice  garland  called  nice  lamp  color  distance  divisible  obtained  garland  satisfied  mod  value  mean  absolute  value  operation  mod  mean  remainder  divided  example  following  garland  nice  rgbrgbrg  grbgrbg  brgbrgb  following  garland  nice  rgbg  way  recolor  initial  garland  make  nice  choose  minimum  recolored  lamp  multiple  optimal  solution  print  input  contains  lamp  second  input  contains  string  consisting  character  color  lamp  garland  output  print  minimum  recolors  needed  obtain  nice  garland  given
194/B __label__math  square  painted  piece  paper  square  side  equal  meter  john  doe  draw  cross  square  perimeter  john  paint  cross  lower  left  corner  square  john  move  along  square  perimeter  clockwise  direction  upwards  right  downwards  left  every  time  walk  meter  draw  cross  see  picture  clarification  john  doe  stop  lower  left  corner  square  ha  cross  many  cross  john  draw  figure  show  order  john  draw  cross  square  side  lower  left  square  ha  cross  overall  john  paint  cross  contains  test  case  second  contains  space  separated  side  square  test  sample  test  sample  print  single  answer  cross  john  draw  move  along  square  corresponding  size  print  answer  sample  order  sample  given  input
406/D __label__dfs  __label__trees  __label__geometry  problem  ha  nothing  little  chris  hill  climber  instead  chris  definitely  hill  arranged  form  vertical  segment  endpoint  ground  hill  numbered  left  right  hill  stand  position  top  height  every  hill  top  hill  seen  top  hill  top  connected  rope  formally  top  hill  connected  segment  connecting  top  point  doe  intersect  touch  hill  segment  using  rope  hill  climber  move  hill  hill  team  climber  composed  exactly  member  second  climber  team  located  top  hill  respectively  want  meet  together  top  hill  climber  move  according  following  process  climber  top  hill  climber  already  located  come  eventually  former  climber  stay  hill  otherwise  climber  pick  hill  right  current  hill  reachable  rope  rightmost  possible  climb  hill  continues  process  climber  climb  hill  whose  top  lower  top  current  hill  team  climber  determine  meeting  hill  pair  input  contains  single  hill  next  describe  hill  contains  space  separated  position  height  hill  hill  given  ascending  order  next  input  contains  single  team  next  describe  team  contains  space  separated  hill  climber  team  located  possible  single  output  space  separated  meeting  hill  member  team
1015/E1 __label__dp  __label__greedy  __label__brute  force  star  figure  following  type  asterisk  character  center  figure  ray  left  right  top  bottom  positive  length  size  star  length  ray  size  star  must  positive  ray  length  allowed  let  consider  empty  cell  denoted  following  figure  star  leftmost  figure  star  size  middle  figure  star  size  rightmost  figure  star  size  given  rectangular  grid  size  nm  consisting  asterisk  period  dot  row  numbered  column  numbered  task  draw  grid  using  star  find  impossible  star  intersect  overlap  even  coincide  star  output  exceed  star  completely  inside  grid  use  star  arbitrary  size  problem  need  minimize  star  find  way  draw  given  grid  star  input  contains  size  given  grid  next  contains  character  describes  row  grid  guaranteed  grid  consists  character  impossible  draw  given  grid  using  star  print
505/E __label__greedy  __label__binary  search  kitayuta  garden  planted  bamboo  bamboo  tall  fast  growing  tropical  plant  hollow  stem  moment  height  bamboo  meter  grows  meter  end  day  actually  kitayuta  hate  bamboo  attempted  cut  failed  stem  hard  kitayuta  given  ha  crafted  magical  hammer  intelligence  drive  ground  use  magical  hammer  time  day  due  limited  magic  power  time  beat  bamboo  magical  hammer  height  decrease  meter  height  would  become  negative  change  become  meter  instead  doe  disappear  word  bamboo  whose  height  meter  beaten  magical  hammer  new  height  max  meter  possible  beat  bamboo  day  kitayuta  fight  bamboo  day  starting  today  purpose  minimize  height  tallest  bamboo  day  iteration  kitayuta  beat  bamboo  grow  find  lowest  possible  height  tallest  bamboo  day  input  contains  space  separated  represent  bamboo  kitayuta  garden  duration  kitayuta  fight  day  maximum  time  kitayuta  beat  bamboo  day  power  magic  hammer  respectively  following  describe  property  bamboo  contains  space  separated  denoting  initial  height  growth  rate  bamboo  respectively  print  lowest  possible  height  tallest  bamboo  day
626/G __label__math  __label__dp  __label__greedy  __label__data  structures  johnny  carnival  ha  raffle  raffle  ha  prize  value  participant  put  ticket  whichever  raffle  choose  ticket  single  raffle  end  carnival  ticket  selected  random  raffle  owner  ticket  win  associated  prize  single  person  win  multiple  prize  different  raffle  county  rule  prevent  participant  owning  half  ticket  single  raffle  putting  ticket  raffle  participant  combined  help  combat  possibly  win  prize  organizer  started  placing  single  ticket  raffle  never  remove  johnny  bought  ticket  wondering  place  currently  total  ticket  raffle  watch  participant  place  ticket  modify  decision  every  moment  time  want  know  much  possibly  earn  find  maximum  possible  expected  value  johnny  winning  moment  distributes  ticket  optimally  johnny  redistribute  ticket  arbitrarily  update  place  ticket  total  ticket  single  raffle  participant  combined  contains  raffle  ticket  johnny  ha  total  update  respectively  second  contains  space  separated  value  prize  third  contains  space  separated  ticket  initially  raffle  last  description  update  description  contains  k  k  type  update  raffle  update  type  represents  another  participant  adding  ticket  raffle  update  type  represents  another  participant  removing  ticket  raffle  guaranteed  update  raffle  ha  least  ticket  including  johnny  print  containing  single  real  maximum  expected  value  johnny  winning  update  answer  considered  correct  absolute  relative  error  doe  exceed
336/C __label__implementation  __label__greedy  __label__brute  force  __label__number  theory  vasily  bear  ha  got  sequence  positive  vasily  bear  want  write  several  piece  paper  beauty  wrote  wa  maximum  beauty  written  maximum  non  negative  divisible  without  remainder  exist  non  negative  divisible  without  remainder  beauty  written  equal  tell  bear  write  beauty  written  maximum  multiple  way  write  need  choose  bear  writes  many  possible  expression  mean  applying  bitwise  operation  programming  language  java  operation  represented  pascal  contains  second  contains  space  separated  n  print  single  showing  many  write  second  print  write  allowed  print  order  must  distinct  multiple  way  write  choose  maximum  write  still  multiple  way  allowed  print
721/C __label__dp  __label__graphs  recently  irina  arrived  famous  city  berland  berlatov  city  showplace  city  numbered  connected  directional  road  road  berlatov  designed  way  cyclic  route  showplace  initially  irina  stand  showplace  endpoint  journey  showplace  naturally  irina  want  visit  much  showplace  journey  irina  stay  berlatov  limited  time  unit  help  irina  determine  many  showplace  visit  journey  showplace  showplace  time  exceeding  guaranteed  least  route  showplace  showplace  irina  spend  time  unit  passing  input  contains  showplace  road  time  irina  stay  berlatov  respectively  next  describes  road  berlatov  contains  ii  meaning  road  starting  showplace  leading  showplace  irina  spends  time  unit  pas  guaranteed  road  form  cyclic  route  guaranteed  road  pair  showplace  print  single  maximum  showplace  irina  visit  journey  showplace  showplace  time  exceeding
820/A __label__implementation  mister  received  gift  wa  book  alien  started  read  immediately  book  page  day  mister  read  page  started  speed  every  day  starting  second  read  page  previous  day  day  read  page  second  page  third  page  mister  human  physically  able  read  page  per  day  refresh  memory  every  day  starting  second  mister  reread  last  page  read  previous  day  mister  finished  book  read  last  page  time  help  mister  calculate  many  day  needed  finish  book  contains  space  separated  length  book  page  initial  reading  speed  maximum  reading  speed  acceleration  reading  speed  page  rereading  print  day  mister  needed  finish  book
949/B __label__math  __label__constructive  algorithms  dima  beginner  programmer  working  process  regularly  ha  repeat  following  operation  remove  every  second  element  array  day  ha  bored  easy  solution  problem  ha  come  following  extravagant  algorithm  let  consider  initially  array  contains  located  cell  index  index  numbered  starting  cell  array  empty  step  dima  selects  non  empty  array  cell  maximum  index  move  written  nearest  empty  cell  left  selected  process  continues  appear  cell  array  example  array  changing  follows  write  program  allows  determine  cell  index  dima  algorithm  finish  contains  element  array  query  needed  find  answer  next  index  cell  necessary  output  content  dima  algorithm  finish  query  output  value  appear  corresponding  array  cell  dima  algorithm  finish
875/A __label__math  __label__brute  force  eighth  grader  vova  duty  today  class  class  went  office  wash  board  found  asked  teacher  mathematics  inna  petrovna  answered  vova  answer  arithmetic  task  grader  textbook  certain  positive  wa  given  task  wa  add  sum  digit  written  decimal  numeral  system  since  board  wa  small  vova  quickly  guessed  could  textbook  want  get  program  search  arbitrary  value  suitable  value  determine  doe  exist  write  program  vova  contains  print  different  value  satisfying  condition
1136/A __label__implementation  lesson  nastya  decided  read  book  book  contains  chapter  going  another  page  book  belongs  exactly  chapter  chapter  contains  least  page  yesterday  evening  nastya  manage  finish  reading  book  marked  page  page  wa  read  read  page  next  day  nastya  friend  igor  came  asked  many  chapter  remain  read  nastya  nastya  busy  asks  compute  chapter  ha  completely  read  chapter  ha  started  read  ha  finished  reading  somewhere  middle  contains  single  chapter  book  contains  separated  space  last  page  chapter  guaranteed  every  chapter  contains  page  contains  single  index  marked  page  print  single  chapter  ha  completely  read  far
1221/F __label__data  structures  __label__sortings  __label__binary  search  petya  recently  found  game  choose  square  game  point  numbered  infinite  field  point  ha  coordinate  cost  choose  square  side  parallel  coordinate  ax  lower  left  upper  right  corner  belong  corner  coordinate  score  get  sum  cost  point  covered  selected  square  minus  length  side  square  note  length  side  petya  asks  calculate  maximum  possible  score  game  achieved  placing  exactly  square  input  contains  point  field  following  contains  coordinate  point  cost  respectively  print  maximum  score  petya  achieve
980/F __label__dp  __label__graphs  __label__trees  given  special  connected  undirected  graph  vertex  belongs  simple  cycle  task  remove  many  edge  needed  convert  graph  tree  connected  graph  cycle  node  independently  output  maximum  distance  leaf  resulting  tree  assuming  remove  edge  way  minimizes  distance  input  contains  node  edge  respectively  following  contains  represents  edge  connecting  node  pair  node  connected  edge  guaranteed  given  graph  connected  vertex  belongs  simple  cycle  print  space  separated  represents  maximum  distance  node  leaf  removed  edge  chosen  way  minimizes  distance
869/D __label__dfs  __label__graphs  __label__brute  force  fundamental  prerequisite  justice  correct  strong  justice  always  victor  cinderswarm  bee  koyomi  know  bee  according  nature  live  tree  specific  complete  binary  tree  node  numbered  node  numbered  root  parent  node  note  edge  tree  undirected  koyomi  add  extra  undirected  edge  tree  creating  complication  trick  bee  count  simple  path  resulting  graph  modulo  simple  path  alternating  sequence  adjacent  node  undirected  edge  begin  end  node  doe  node  note  single  node  considered  valid  simple  path  definition  please  refer  example  note  instance  input  contains  space  separated  node  tree  extra  edge  respectively  following  contains  space  separated  u  describing  undirected  extra  edge  whose  endpoint  note  multiple  edge  node  resulting  graph  output  simple  path  resulting  graph  modulo
448/B __label__implementation  __label__strings  bizon  champion  bison  favorite  bizons  team  competition  bizons  got  following  problem  given  distinct  word  string  english  letter  need  transform  word  word  task  looked  simple  guy  know  suffix  data  structure  well  bizon  senior  love  suffix  automaton  applying  string  remove  string  single  character  bizon  middle  know  suffix  array  well  applying  string  swap  character  string  guy  know  anything  suffix  tree  help  much  bizon  champion  wonder  whether  bizons  solve  problem  perhaps  solution  require  data  structure  find  whether  guy  solve  problem  solve  either  use  suffix  automaton  use  suffix  array  need  structure  note  structure  used  unlimited  time  structure  used  order  contains  non  empty  word  second  contains  non  empty  word  word  different  word  consists  lowercase  english  letter  word  contains  letter  single  print  answer  problem  print  need  tree  without  quote  word  transformed  word  even  use  suffix  array  suffix  automaton  print  automaton  without  quote  need  suffix  automaton  solve  problem  print  array  without  quote  need  suffix  array  solve  problem  print  without  quote  need  data  structure  solve  problem
436/D __label__dp  ever  played  pudding  monster  task  simplified  dimensional  model  game  used  imagine  infinite  checkered  stripe  cell  numbered  sequentially  cell  strip  monster  cell  strip  empty  monster  made  pudding  monster  neighboring  cell  stick  literally  similarly  several  monster  consecutive  cell  stick  together  block  monster  call  stuck  together  monster  block  monster  detached  monster  stuck  anyone  else  considered  block  move  player  take  block  monster  movement  hand  throw  left  right  selected  monster  slide  hit  monster  block  monster  example  strip  ha  monster  cell  possible  move  send  monster  cell  minus  infinity  send  block  monster  cell  plus  infinity  throw  monster  right  stop  cell  throw  block  monster  cell  left  stop  cell  cell  strip  marked  star  special  cell  goal  game  make  largest  possible  special  cell  monster  given  special  cell  strip  well  initial  position  monster  maximum  special  cell  monster  optimal  game  contains  monster  strip  special  cell  second  contains  distinct  cell  monster  third  contains  distinct  special  cell  guaranteed  cell  positive  exceeding  print  single  maximum  special  cell  monster  optimal  game
1023/G __label__data  structures  __label__trees  group  researcher  studying  fish  population  natural  system  lake  river  system  contains  lake  connected  river  river  ha  length  kilometer  traversed  direction  possible  travel  pair  lake  traversing  river  network  lake  river  form  tree  unknown  indistinguishable  fish  living  lake  day  fish  arbitrary  lake  fish  travel  lake  swimming  river  fish  swim  river  kilometer  long  direction  day  fish  stay  day  particular  lake  visit  fish  ever  appear  disappear  lake  system  lake  accomodate  fish  time  researcher  made  several  observation  observation  day  least  distinct  fish  lake  help  researcher  determining  smallest  possible  total  fish  living  lake  system  contradict  observation  contains  single  lake  system  next  describe  river  contains  based  index  lake  connected  river  length  river  next  contains  single  observation  next  describe  observation  contains  day  fish  lake  index  observation  observation  happen  day  lake  simultaneously  print  smallest  total  fish  contradicting  observation
1237/C1 __label__greedy  __label__constructive  algorithms  __label__geometry  easier  version  problem  version  n  distinct  point  dimensional  space  numbered  point  ha  coordinate  point  even  like  remove  point  using  sequence  snap  snap  remove  point  removed  form  perfectly  balanced  pair  pair  point  perfectly  balanced  point  ha  removed  lie  axis  aligned  minimum  bounding  box  point  formally  point  lie  axis  aligned  minimum  bounding  box  point  min  ax  min  min  ax  min  min  ax  min  note  bounding  box  might  degenerate  find  way  remove  point  snap  contains  single  even  denoting  point  next  contains  denoting  coordinate  point  point  coincide  output  pair  denoting  index  point  removed  snap  every  inclusive  must  appear  output  exactly
466/D __label__dp  peter  ha  sequence  peter  want  sequence  equal  perform  operation  adding  segment  add  element  sequence  index  inclusive  peter  never  chooses  element  beginning  segment  twice  similarly  peter  never  chooses  element  end  segment  twice  word  segment  peter  added  following  inequality  hold  l  r  many  distinct  way  make  sequence  equal  print  way  modulo  way  considered  distinct  ha  segment  way  contains  next  contains  print  single  answer  problem  modulo
608/A __label__math  __label__implementation  saitama  accidentally  destroyed  hotel  repay  hotel  company  genos  ha  volunteered  operate  elevator  hotel  elevator  special  start  top  floor  move  ha  infinite  capacity  floor  numbered  elevator  initially  start  floor  time  elevator  take  exactly  second  move  exactly  floor  negligible  time  pick  passenger  genos  given  list  detailing  floor  passenger  arrive  please  determine  long  second  take  genos  bring  passenger  floor  input  contains  passenger  top  floor  respectively  next  space  separated  floor  time  arrival  second  passenger  print  single  minimum  amount  time  second  needed  bring  passenger  floor
920/A __label__implementation  winter  max  decided  time  watered  garden  garden  represented  consecutive  garden  bed  numbered  bed  water  tap  tap  located  bed  turned  start  delivering  water  neighbouring  bed  tap  bed  turned  second  ha  passed  bed  watered  second  passed  bed  segment  watered  exist  second  passed  bed  segment  watered  exist  nothing  change  second  example  say  segment  watered  second  passed  segment  watered  moment  garden  test  white  colour  denotes  garden  bed  without  tap  red  colour  garden  bed  tap  garden  test  second  passed  turning  tap  white  colour  denotes  unwatered  garden  bed  blue  colour  watered  bed  max  want  turn  water  tap  moment  wonder  minimum  second  pas  turn  tap  whole  garden  watered  help  find  answer  contains  test  case  solve  test  case  follow  test  case  contains  garden  bed  water  tap  respectively  next  contains  location  water  tap  guaranteed  condition  hold  guaranteed  sum  test  case  exceed  note  hack  set  test  case  print  minimum  second  pas  max  turn  water  tap  whole  garden  watered
930/C __label__dp  __label__data  structures  young  teodor  enjoys  drawing  favourite  hobby  drawing  segment  border  inside  huge  segment  day  teodor  noticed  picture  drawn  ha  interesting  feature  exist  point  belongs  segment  picture  discovered  fact  teodor  decided  share  sasha  sasha  know  teodor  like  show  never  trust  teodor  want  prove  trusted  sometimes  decided  convince  sasha  point  picture  belongs  segment  teodor  lazy  person  neither  tell  sasha  coordinate  segment  end  tell  amount  suggested  sasha  ask  series  question  given  point  many  segment  fedya  picture  point  promising  tell  correct  answer  question  boy  busy  studying  much  time  ask  find  many  question  sasha  ask  teodor  answer  question  sasha  sure  teodor  lying  note  sasha  know  amount  segment  teodor  picture  sure  sasha  smart  person  never  asks  point  twice  input  contains  amount  segment  teodor  picture  maximal  coordinate  point  sasha  ask  ith  next  contains  ii  left  right  end  ith  segment  picture  note  left  right  end  segment  point  guaranteed  point  belongs  segment  single  output  size  largest  set  nt  different  cnt  amount  segment  containing  point  coordinate  sure  exist  point  belonging  segment  initial  picture  know  set  know
82/A __label__math  __label__implementation  sheldon  leonard  penny  rajesh  howard  queue  double  cola  drink  vending  machine  people  queue  queue  sheldon  buy  drink  double  resulting  sheldons  end  queue  next  queue  leonard  buy  drink  get  end  queue  leonard  process  continues  infinitum  example  penny  drink  third  cola  queue  look  like  rajesh  howard  sheldon  sheldon  leonard  leonard  penny  penny  write  program  print  name  man  drink  note  beginning  queue  look  like  sheldon  leonard  penny  rajesh  howard  person  sheldon  input  data  consist  single  guaranteed  pretests  check  spelling  name  possible  answer  print  single  name  person  drink  cola  numbered  starting  please  note  spell  name  like  sheldon  leonard  penny  rajesh  howard  without  quote  order  precisely  friend  queue  initially
749/C __label__implementation  __label__greedy  employee  alternative  cake  manufacturing  acm  voting  important  question  leading  world  medium  trying  predict  outcome  vote  employee  belongs  fraction  depublicans  remocrats  fraction  opposite  opinion  outcome  vote  voting  procedure  rather  complicated  employee  make  statement  make  statement  starting  employee  finishing  employee  moment  time  employee  make  statement  longer  ha  right  vote  skip  turn  longer  take  part  voting  employee  make  statement  nothing  declare  employee  longer  ha  right  vote  allowed  deny  voting  people  already  made  statement  people  waiting  someone  denied  voting  longer  participates  voting  till  end  employee  done  statement  procedure  repeat  employee  starting  finishing  still  eligible  vote  make  statement  process  repeat  employee  eligible  vote  remaining  determines  outcome  whole  voting  course  vote  decision  suitable  fraction  know  order  employee  going  vote  behave  optimal  know  order  belongs  fraction  predict  outcome  vote  input  contains  single  employee  next  contains  character  character  employee  depublicans  fraction  remocrats  print  outcome  vote  suitable  depublicans  remocrats  win
1070/L __label__constructive  algorithms  berland  ha  city  connected  road  road  bidirectional  connects  distinct  city  city  road  connecting  president  berland  decided  split  country  state  way  city  belong  exactly  state  split  road  connect  either  city  state  city  different  state  let  call  road  connect  city  state  inner  road  president  like  odd  people  odd  city  odd  want  split  done  way  city  would  even  inner  road  connected  please  help  president  find  smallest  possible  split  exists  input  contains  several  test  case  input  contains  single  test  case  test  case  follow  solve  test  case  separately  test  case  completely  independent  affect  block  input  data  follow  block  start  empty  separate  remaining  input  data  second  block  contains  space  separated  city  road  berland  next  contains  space  separated  denotes  road  connects  city  pair  city  connected  road  sum  value  test  case  exceed  sum  value  test  case  exceed  test  case  print  containing  single  smallest  possible  state  required  split  possible  next  print  space  separated  range  inclusive  denotes  state  city  multiple  solution  print
645/E __label__dp  __label__greedy  __label__strings  getting  kicked  reporting  job  knowing  alphabet  bessie  ha  decided  attend  school  fillet  egg  eater  academy  ha  making  good  progress  study  know  english  letter  morning  bessie  travel  school  along  sidewalk  consisting  tile  order  help  bessie  review  moozing  ha  labeled  sidewalk  tile  lowercase  english  letter  spelling  string  moozing  impressed  bessie  extensive  knowledge  farm  animal  plan  let  finish  labeling  last  tile  sidewalk  consider  resulting  string  consisting  letter  labeled  tile  order  home  school  sequence  index  define  subsequence  string  string  sp  sp  spq  subsequence  considered  distinct  differ  string  bessie  want  label  remaining  part  sidewalk  distinct  subsequence  tile  maximum  possible  since  bessie  even  finished  learning  alphabet  need  help  note  empty  subsequence  count  input  contains  second  contains  string  consisting  lowercase  english  letter  determine  maximum  distinct  subsequence  bessie  form  labeling  last  sidewalk  tile  lowercase  english  letter  since  rather  large  print  modulo
1219/C __label__implementation  __label__strings  alice  became  interested  period  say  positive  periodic  length  exists  positive  digit  written  pppp  example  periodic  length  periodic  length  periodic  length  given  positive  period  length  positive  alice  want  find  smallest  strictly  greater  periodic  length  contains  positive  representing  length  period  second  contains  positive  positive  representing  smallest  positive  periodic  length  greater
853/A __label__greedy  helen  work  metropolis  airport  responsible  creating  departure  schedule  flight  must  depart  today  planned  depart  minute  day  metropolis  airport  main  transport  hub  metropolia  difficult  keep  schedule  intact  exactly  case  today  technical  issue  flight  able  depart  minute  day  new  departure  schedule  must  created  scheduled  flight  must  depart  different  minute  inclusive  mandatory  flight  depart  order  initially  scheduled  order  new  schedule  different  restriction  flight  allowed  depart  earlier  wa  supposed  depart  initial  schedule  helen  know  minute  delay  flight  cost  airport  burles  help  find  order  flight  depart  new  schedule  minimizes  total  cost  airport  contains  flight  minute  beginning  day  flight  depart  second  contains  cost  delaying  flight  minute  must  minimum  possible  total  cost  delaying  flight
816/A __label__implementation  __label__brute  force  karen  getting  ready  new  school  day  currently  given  hour  format  know  karen  love  palindrome  belief  good  luck  wake  time  palindrome  minimum  minute  sleep  wake  time  palindrome  remember  palindrome  string  read  forward  backwards  instance  palindrome  backwards  hand  palindrome  backwards  input  contains  single  string  format  output  single  minimum  minute  sleep  wake  time  palindrome
622/C __label__implementation  __label__data  structures  given  array  query  query  given  query  find  position  liii  apii  contains  element  query  second  contains  element  array  next  contains  ii  parameter  query  print  print  position  equal  segment  value
420/E __label__geometry  coder  sit  code  day  sometimes  good  idea  rise  desk  rest  small  talk  colleague  even  play  coder  company  favorite  ball  game  let  imagine  game  plane  cartesian  coordinate  system  point  contains  player  chooses  arbitrary  direction  throw  ball  direction  ball  hit  plane  distance  player  original  position  continues  flying  direction  ball  hit  plane  time  fly  hit  plane  distance  player  original  position  continue  flying  chosen  direction  hitting  plane  unit  coder  company  strong  ball  fly  infinitely  far  away  plane  ha  circle  painted  ball  hit  plane  hit  circle  painted  plane  including  border  player  get  point  ball  hit  multiple  circle  get  point  ball  hit  circle  time  move  player  get  point  count  maximum  point  player  get  throw  ball  arbitrary  direction  note  direction  real  cooridinates  contains  space  separated  next  circle  description  contains  space  separated  coordinate  center  radius  circle  correspondingly  point  inside  border  circle  print  single  maximum  point  get
900/B __label__math  __label__number  theory  fraction  need  find  occurrence  digit  decimal  notation  fraction  decimal  point  contains  single  positive  print  position  occurrence  digit  fraction  position  numbered  decimal  point  position  print
1200/B __label__dp  __label__greedy  gildong  playing  video  game  called  block  adventure  block  adventure  column  block  row  column  numbered  block  equal  height  height  column  represented  block  stacked  column  gildong  play  game  character  stand  top  column  beginning  character  standing  top  column  goal  game  move  character  top  column  character  ha  bag  hold  infinitely  many  block  character  top  column  gildong  take  following  action  many  time  want  least  block  column  remove  block  top  column  put  bag  least  block  bag  take  block  bag  place  top  column  move  character  top  column  non  negative  given  beginning  game  note  possible  move  next  column  action  type  character  remains  column  value  change  character  initially  ha  block  bag  gildong  want  know  possible  win  game  help  gildong  find  answer  question  test  contains  test  case  contains  test  case  description  test  case  follows  test  case  contains  column  game  block  character  bag  beginning  non  negative  described  statement  second  test  case  contains  initial  height  column  test  case  print  yes  possible  win  game  otherwise  print
887/F __label__greedy  __label__sortings  final  part  fashion  show  model  come  stage  stay  row  fashion  designer  stay  right  model  right  rehearsal  izabella  noticed  row  nice  figure  fix  like  many  creative  people  izabella  ha  specific  sense  beauty  evaluating  beauty  row  model  izabella  look  height  model  think  row  nice  model  distance  nearest  model  le  height  model  fashion  designer  right  exceed  distance  adjacent  people  equal  distance  people  exactly  man  equal  etc  want  make  row  nice  fashion  designer  ha  sense  beauty  time  select  model  row  swap  position  left  model  pair  higher  right  model  pair  fashion  designer  man  right  rightmost  model  ha  le  height  model  selected  exchange  tell  possible  make  exchange  way  row  becomes  nice  izabella  model  required  distance  second  contains  space  separated  height  model  pay  attention  height  fashion  designer  given  le  print  yes  without  quote  possible  make  row  nice  using  exchange  without  quote  otherwise
989/D __label__math  __label__sortings  __label__binary  search  __label__geometry  gathering  darkness  shroud  wood  world  moon  shed  light  boat  river  curtain  moonlight  hardly  possible  shade  present  mellow  beauty  restful  nature  intonates  mino  see  cloud  coming  kanno  gaze  distance  better  mino  turn  kanno  sky  seen  dimensional  axis  moon  origin  whose  coordinate  cloud  floating  sky  cloud  ha  length  initially  cover  range  endpoint  excluded  initially  move  velocity  equal  either  furthermore  pair  cloud  intersect  initially  wind  velocity  velocity  cloud  becomes  coordinate  increase  unit  time  note  wind  strong  cloud  change  direction  help  mino  count  pair  proper  choice  wind  velocity  exceeding  max  absolute  value  possibly  negative  fractional  cloud  cover  moon  future  moment  need  different  pair  contains  space  separated  max  max  cloud  length  cloud  maximum  wind  speed  respectively  following  contains  space  separated  initial  position  velocity  cloud  respectively  input  guarantee  output  unordered  pair  cloud  possible  cloud  pair  cover  moon  future  moment  proper  choice  wind  velocity
152/A __label__implementation  vasya  vasily  petrov  dean  department  local  university  winter  exam  got  hand  group  gradebook  overall  group  ha  student  received  mark  subject  student  got  mark  inclusive  subject  let  consider  student  best  subject  student  got  higher  mark  subject  let  consider  student  successful  exists  subject  best  task  find  successful  student  group  input  contains  student  subject  correspondingly  next  containing  character  describe  gradebook  character  gradebook  note  mark  row  sepatated  space  print  single  successful  student  given  group
698/F __label__number  theory  positive  coprime  common  divisor  greater  bear  want  tell  radewoosh  solve  algorithmic  problem  radewoosh  going  break  bear  safe  solution  pas  door  must  enter  permutation  door  open  entered  permutation  satisfies  word  different  element  coprime  index  coprime  element  permutation  already  fixed  many  way  radewoosh  fill  remaining  gap  door  open  print  answer  modulo  input  contains  second  contains  mean  gap  fill  pi  mean  fixed  guaranteed  j  pij  print  way  fill  gap  modulo  modulo
777/A __label__math  __label__implementation  __label__constructive  algorithms  bomboslav  like  look  window  room  watch  lad  outside  playing  famous  shell  game  game  played  person  operator  player  operator  take  similar  opaque  shell  place  ball  beneath  shuffle  shell  swapping  pair  player  ha  guess  current  position  ball  bomboslav  noticed  guy  inventive  operator  always  swap  left  shell  middle  odd  move  third  fifth  etc  always  swap  middle  shell  right  even  move  second  fourth  etc  let  shell  left  right  thus  left  shell  assigned  middle  shell  right  shell  bomboslav  ha  missed  moment  ball  wa  placed  beneath  shell  know  exactly  movement  made  operator  ball  wa  shell  end  wonder  wa  initial  position  ball  input  contains  movement  made  operator  second  contains  single  index  shell  ball  wa  found  movement  print  index  shell  ball  wa  initially  placed
1193/A __label__math  __label__dp  hired  supervise  project  new  amusement  park  park  special  gimmick  directed  slide  get  customer  attraction  another  quickly  entertaining  way  park  owner  ha  given  current  project  list  planned  attraction  list  slide  built  businessman  casually  envisioned  impossible  thing  projected  slide  coming  haunted  castle  roller  coaster  another  roller  coaster  drop  tower  third  drop  tower  haunted  castle  slide  downhill  evident  problem  luxury  ignoring  law  physic  building  park  request  change  project  maybe  would  accept  reversing  slide  drop  tower  haunted  castle  formally  project  list  attraction  list  directed  slide  slide  start  attraction  end  another  attraction  proposal  obtained  project  reversing  direction  slide  possibly  none  proposal  legal  way  assign  elevation  attraction  way  every  slide  go  downhill  cost  proposal  slide  whose  direction  reversed  given  project  find  report  sum  cost  legal  proposal  since  large  output  modulo  contains  space  separated  attraction  slide  respectively  attraction  numbered  follow  contains  space  separated  denoting  slide  assume  self  loop  slide  appears  twice  pair  attraction  connected  direction  unordered  pair  distinct  output  single  sum  cost  legal  proposal  modulo
1218/H __label__dfs  definitely  going  bother  another  generic  story  alice  find  array  alice  bob  play  stupid  game  time  get  simple  plain  text  let  define  several  thing  define  function  array  word  value  represents  composition  applied  time  given  array  length  non  negative  expected  give  answer  query  query  consists  query  determine  many  exist  contains  size  array  next  contains  non  negative  array  next  contains  query  next  output  exactly  single  represent  solution  output  solution  order  query  asked
597/B __label__dp  __label__greedy  __label__sortings  restaurant  received  order  rental  rental  order  reserve  restaurant  continuous  period  time  order  characterized  time  value  start  time  finish  time  lii  restaurant  management  accept  reject  order  maximal  order  restaurant  accept  accepted  order  intersect  share  even  moment  time  order  end  moment  start  accepted  contains  order  following  value  ii  print  maximal  order  accepted
1039/E __label__data  structures  people  enjoy  spending  time  solving  programming  contest  dina  prefers  taking  beautiful  picture  soon  byteland  botanical  garden  announced  summer  oenothera  exhibition  decided  test  new  camera  exhibition  consists  oenothera  specie  arranged  row  consecutively  numbered  camera  lens  allows  take  photo  specie  dina  take  photo  containing  flower  index  denote  photo  ha  taken  photo  chronological  order  notation  decided  build  time  lapse  video  photo  discovered  oenothera  blossom  open  evening  dina  take  photo  truncates  leaving  segment  containing  exactly  flower  composes  video  photo  keeping  original  order  voil  beautiful  artwork  ha  created  scene  contiguous  sequence  photo  set  flower  change  scene  called  cut  example  consider  photo  contains  flower  second  photo  contains  flower  third  photo  contains  flower  dina  truncate  second  photo  third  photo  photo  form  scene  third  photo  form  scene  transition  scene  happens  second  third  photo  cut  transition  photo  ha  cut  dina  want  cut  small  possible  please  help  calculate  minimum  possible  cut  different  value  contains  positive  q  taken  photo  flower  single  photo  query  next  contains  non  negative  index  leftmost  flower  photo  next  contains  positive  value  solve  problem  guaranteed  distinct  print  width  truncated  photo  minimum  cut  possible
372/D __label__data  structures  __label__dfs  __label__trees  __label__binary  search  tree  consisting  vertex  vertex  numbered  let  define  length  interval  value  score  subtree  tree  maximum  length  interval  vertex  belong  subtree  considering  subtrees  tree  whose  size  return  maximum  score  subtree  note  problem  tree  rooted  subtree  arbitrary  connected  subgraph  tree  next  contains  ii  mean  connected  tree  edge  guaranteed  input  represents  tree  output  single  maximum  possible  score
513/E1 __label__dp  given  array  length  let  pick  non  overlapping  non  empty  subarrays  initial  array  let  sum  subarray  order  left  right  compute  maximum  value  following  expression  subarray  contiguous  part  array  input  contains  second  contains  element  array  absolute  value  element  exceed  problem  consists  subproblems  subproblems  different  constraint  input  get  score  correct  submission  subproblem  description  subproblems  follows  subproblem  point  constraint  hold  subproblem  point  constraint  hold  output  single  maximum  possible  value
1209/B __label__math  __label__implementation  __label__number  theory  holiday  season  koala  decorating  house  cool  light  owns  light  flash  periodically  taking  quick  glance  koala  realizes  light  described  parameter  light  parameter  toggle  every  second  starting  second  word  toggle  moment  know  light  whether  initially  corresponding  parameter  koala  wondering  maximum  light  ever  time  need  find  graphic  example  contains  single  light  next  contains  string  character  character  lamp  initially  otherwise  character  following  contains  parameter  light  print  single  maximum  light  ever  time
1143/B __label__math  __label__brute  force  __label__number  theory  kurt  reach  nirvana  find  product  digit  positive  greater  value  product  make  nirvana  deeper  help  kurt  find  maximum  possible  product  digit  input  contains  print  maximum  product  digit
1184/D1 __label__implementation  third  doctor  correctly  said  travel  parallel  universe  like  travelling  sideways  incorrectly  thought  infinite  parallel  universe  whereas  fact  know  never  heidi  recently  got  hand  multiverse  observation  tool  wa  able  see  universe  lined  row  non  existent  link  noticed  doctor  wa  universe  tool  point  due  restriction  originating  space  time  discontinuum  universe  never  exceed  obviously  multiverse  unstable  free  time  decision  made  event  randomly  happen  new  parallel  universe  created  non  existent  link  broken  specifically  universe  created  manifest  adjacent  universe  end  link  broken  could  cut  adjacent  universe  separating  multiverse  segment  segment  containing  doctor  cease  exist  heidi  want  perform  simulation  decision  time  decision  made  heidi  want  know  length  multiverse  universe  position  doctor  contains  following  following  format  meaning  universe  inserted  position  denotes  current  length  multiverse  meaning  link  broken  denotes  current  length  multiverse  output  current  length  multiverse  current  position  doctor
1139/B __label__implementation  __label__greedy  went  store  selling  type  chocolate  chocolate  type  stock  unlimited  amount  cash  restricted  price  want  buy  many  chocolate  possible  buy  chocolate  type  clearly  least  following  must  hold  bought  chocolate  type  bought  le  chocolate  type  type  example  array  satisfies  requirement  assuming  array  calculate  maximum  chocolate  buy  contains  denoting  type  chocolate  next  contains  denoting  chocolate  type  print  maximum  chocolate  buy
1243/A __label__implementation  ujan  decided  make  new  wooden  roof  house  ha  rectangular  plank  numbered  plank  ha  size  width  height  ujan  want  make  square  roof  choose  plank  place  side  side  order  glue  together  plank  vertical  side  finally  cut  square  resulting  shape  way  side  square  horizontal  vertical  example  ujan  plank  length  could  choose  plank  length  cut  square  maximum  possible  note  way  obtain  square  maximum  side  length  square  ujan  get  input  contains  single  test  case  input  test  case  contains  single  plank  ujan  ha  store  next  contains  length  plank  test  case  output  single  maximum  possible  side  length  square
613/C __label__math  __label__constructive  algorithms  ivan  want  make  necklace  present  beloved  girl  necklace  cyclic  sequence  bead  different  color  ivan  say  necklace  beautiful  relative  cut  point  adjacent  bead  chain  bead  remaining  cut  palindrome  read  forward  backward  ivan  ha  bead  color  want  make  necklace  beautiful  relative  many  cut  possible  certainly  want  use  bead  help  make  beautiful  necklace  input  contains  single  color  bead  second  contains  positive  quantity  bead  color  guaranteed  sum  least  doe  exceed  print  single  maximum  beautiful  cut  necklace  composed  given  bead  second  print  example  necklace
607/B __label__dp  genos  recently  installed  game  zuma  phone  zuma  exists  gemstone  ha  color  goal  game  destroy  gemstone  quickly  possible  second  genos  able  choose  exactly  continuous  substring  colored  gemstone  palindrome  remove  substring  removed  remaining  gemstone  shift  form  solid  minimum  second  needed  destroy  entire  let  remind  string  substring  called  palindrome  read  backwards  forward  case  mean  color  gemstone  equal  color  last  color  second  gemstone  equal  color  next  last  input  contains  single  gemstone  second  contains  space  separated  color  gemstone  print  single  minimum  second  needed  destroy  entire
374/D __label__dp  __label__data  structures  __label__trees  __label__binary  search  dima  spent  much  time  thinking  present  give  inna  gave  empty  sequence  want  fill  sequence  decided  play  amusing  game  game  begin  dima  chooses  inna  dima  start  playing  adding  sequence  new  choose  added  end  sequence  moment  time  dima  feel  game  going  end  soon  want  play  inna  long  possible  hit  table  hard  fist  beginning  simultaneously  fall  sequence  sequence  get  le  maximum  value  exceed  current  length  sequence  larger  current  length  nothing  fall  sequence  given  chronological  sequence  event  game  event  either  adding  end  sequence  dima  hit  table  calculate  sequence  event  happen  input  contains  showing  many  event  took  place  many  dima  chose  next  contains  distinct  sorted  increasing  order  next  describe  event  chronological  order  contains  single  mean  dima  hit  table  mean  inna  dima  add  end  sequence  mean  inna  dima  add  end  sequence  single  print  sequence  element  sequence  event  happen  print  element  sequence  order  beginning  end  sequence
260/B __label__implementation  __label__brute  force  __label__strings  recently  found  ancient  prophesy  believed  exact  apocalypse  date  prophesy  string  consists  digit  character  say  date  mentioned  prophesy  substring  prophesy  date  record  format  yyyy  say  date  occurrence  substring  prophesy  example  prophesy  mention  date  twice  time  second  time  date  apocalypse  correct  date  time  mentioned  prophesy  strictly  larger  correct  date  date  correct  year  lie  range  month  day  strictly  exceed  day  current  month  note  date  written  format  yyyy  mean  leading  added  month  day  needed  word  date  recorded  format  yyyy  date  recorded  notice  year  leap  year  contains  prophesy  non  empty  string  consists  digit  character  length  prophesy  exceed  character  single  print  date  apocalypse  guaranteed  date  exists  unique
1244/C __label__math  __label__brute  force  __label__number  theory  football  season  ha  ended  berland  according  rule  berland  football  match  played  team  result  match  either  draw  victory  playing  team  team  win  match  get  point  opposing  team  get  point  game  result  draw  team  get  point  manager  berland  capital  team  want  summarize  result  season  unfortunately  information  result  match  lost  manager  know  team  ha  played  game  got  point  determine  win  draw  loses  team  multiple  answer  print  suitable  triple  report  contains  game  point  team  got  point  awarded  winning  match  point  awarded  draw  respectively  note  point  awarded  winning  strictly  greater  point  awarded  draw  answer  print
994/B __label__implementation  __label__greedy  __label__sortings  unlike  knight  round  table  knight  polygonal  table  deprived  nobility  happy  kill  knight  ha  power  knight  kill  another  knight  power  greater  power  victim  even  knight  torment  conscience  kill  knight  knight  ha  coin  kill  knight  pick  victim  coin  knight  ponders  many  coin  kill  knight  answer  question  knight  contains  knight  statement  second  contains  power  knight  distinct  third  contains  coin  knight  ha  print  maximum  coin  knight  kill  knight
703/E __label__dp  __label__number  theory  playing  beautiful  array  mishka  decided  learn  math  learning  multiply  divide  divisibility  interested  solving  following  problem  given  array  find  non  empty  subsequence  array  element  product  element  divisible  contains  minimum  possible  element  formally  find  sequence  index  divisible  minimum  possible  variant  subsequence  choose  sum  element  minimum  possible  mishka  quickly  solved  problem  input  contains  second  input  contains  array  element  print  single  positive  element  desired  sequence
316/B1 __label__dfs  __label__brute  force  rush  modern  life  people  often  forget  beautiful  world  time  enjoy  around  little  even  stand  queue  several  room  time  clinic  running  queue  another  cultural  note  standing  huge  disorganized  queue  hour  native  tradition  russia  dating  back  soviet  period  queue  resemble  crowd  rather  get  lost  queue  person  follow  strict  survival  technique  approach  queue  ask  last  person  somebody  answer  join  crowd  last  person  queue  till  somebody  else  show  keep  eye  wa  last  chance  get  destination  sure  many  people  problem  stranger  asks  last  person  queue  even  dare  hint  last  queue  bolt  away  unknown  destination  representative  modern  world  ratio  lack  time  great  even  watch  foreign  top  rated  series  people  often  create  problem  queue  newcomer  doe  see  last  person  queue  take  place  virtual  link  chain  wondering  legendary  figure  ha  left  smart  beaver  ha  ill  made  appointment  therapist  doctor  told  beaver  sad  news  nutshell  necessary  electrocardiogram  next  day  smart  beaver  got  early  put  famous  series  download  hour  till  download  complete  clenched  teeth  bravely  went  join  queue  electrocardiogram  room  notorious  biggest  queue  clinic  stood  hour  queue  smart  beaver  realized  many  beaver  seen  wa  supposed  stand  queue  wa  huge  mess  came  beaver  ecg  room  queue  asked  front  queue  beaver  know  correct  position  queue  might  turn  get  ecg  maybe  wait  long  long  time  guessed  smart  beaver  wa  hurry  home  gave  necessary  information  help  determine  queue  contains  beaver  stand  queue  smart  beaver  correspondingly  willing  get  doctor  numbered  second  contains  beaver  followed  beaver  beaver  know  front  guaranteed  value  correct  cycle  dependency  beaver  followed  beaver  queue  input  limit  scoring  point  subproblem  guaranteed  element  exceed  input  limit  scoring  point  subproblems  element  arbitrary  print  possible  position  smart  beaver  increasing  order
1188/D __label__dp  given  operation  add  nonnegative  power  smallest  operation  need  perform  make  equal  proved  given  constraint  exceed  contains  single  second  contains  output  exactly  smallest  operation  need  perform  make  equal
1068/B __label__math  __label__number  theory  ivan  ha  sorting  every  writes  blackboard  stand  least  common  multiple  ivan  lazy  task  bored  soon  interested  many  different  would  write  board  would  finish  task  help  find  quantity  different  would  write  board  contains  print  answer  problem
845/C __label__greedy  __label__data  structures  __label__sortings  polycarp  great  fan  television  wrote  program  interested  today  list  contains  show  start  moment  end  moment  polycarp  owns  tv  watch  different  show  simultaneously  tv  watch  show  given  moment  single  show  end  moment  show  start  watch  single  polycarp  want  check  show  tv  enough  contains  show  next  contains  starting  ending  time  show  polycarp  able  check  show  using  tv  print  yes  without  quote  otherwise  print  without  quote
982/F __label__dfs  __label__graphs  petr  detective  braginsk  somebody  stole  huge  amount  money  bank  petr  catch  somebody  told  petr  luxurious  car  move  along  road  without  stopping  petr  know  robber  drive  car  road  braginsk  directional  connects  intersection  petr  want  select  intersection  robber  continue  drive  road  indefinitely  sooner  later  come  intersection  initial  position  robber  unknown  find  intersection  fit  requirement  input  contains  intersection  directed  road  braginsk  respectively  next  contains  start  finish  directed  road  guaranteed  robber  move  along  road  indefinitely  print  single  intersection  petr  need  choose  multiple  answer  print  intersection  print
508/C __label__greedy  __label__constructive  algorithms  anya  love  watch  horror  movie  best  tradition  horror  visited  ghost  tonight  anya  ha  lot  candle  prepared  visit  candle  produce  light  exactly  second  take  girl  second  light  candle  formally  anya  spend  second  light  candle  candle  burn  exactly  second  go  longer  used  ghost  anya  know  time  come  visit  happen  second  midnight  distinct  visit  last  exactly  second  minimum  candle  anya  use  visit  least  candle  burning  anya  start  light  candle  time  second  midnight  possibly  time  midnight  mean  start  light  candle  second  midnight  second  midnight  word  moment  time  contains  representing  ghost  visit  anya  duration  candle  burning  minimum  candle  burn  visit  next  contains  space  separated  repesents  second  midnight  ghost  come  distinct  follow  strictly  increasing  order  possible  make  least  candle  burn  visit  print  minimum  candle  anya  need  light
804/A __label__math  __label__greedy  __label__constructive  algorithms  year  ago  sajjad  left  school  register  another  due  security  reason  wish  find  amir  schoolmate  good  friend  school  numerated  travel  pair  need  buy  ticket  ticker  school  cost  used  multiple  time  help  sajjad  find  minimum  cost  need  pay  ticket  visit  school  start  finish  school  contains  single  school  print  single  minimum  cost  ticket  needed  visit  school
976/C __label__implementation  __label__greedy  __label__sortings  given  sequence  dimensional  segment  numbered  task  find  distinct  index  segment  lie  segment  segment  lie  segment  iff  l  r  print  index  multiple  answer  print  answer  exists  print  contains  segment  next  contains  ii  segment  print  distinct  index  segment  lie  segment  multiple  answer  print  answer  exists  print
446/E __label__math  dzy  owns  island  near  home  numbered  love  building  bridge  connect  island  every  bridge  build  take  day  time  walk  dzy  ha  strange  rule  building  bridge  every  pair  island  u  ha  built  different  bridge  connecting  mean  divisible  bridge  bidirectional  dzy  ha  built  bridge  connecting  home  island  specifically  different  bridge  home  island  way  bridge  leaf  home  never  come  back  dzy  decides  island  sightseeing  home  chooses  walk  bridge  connecting  home  arrives  island  spend  day  island  day  choose  stay  rest  walk  another  island  bridge  allowed  stay  island  day  allowed  cross  bridge  suppose  right  day  dzy  stand  island  let  way  dzy  reach  island  day  task  calculate  modulo  avoid  huge  input  use  following  way  generate  array  given  element  array  element  calculated  formula  mod  contains  second  contains  avoid  huge  output  need  output  xor  sum  answer  modulo  mod  xor  mod  xor  xor  mod
1009/G __label__greedy  __label__graphs  polycarp  ha  launched  new  startup  idea  niche  pretty  free  key  vector  development  sound  really  promising  easily  found  investor  ready  sponsor  company  name  startup  actually  polycarp  ha  already  came  name  improvement  never  hurt  want  swap  letter  position  obtain  better  name  necessary  letter  adjacent  addition  investor  ha  chosen  index  name  selected  set  letter  index  chosen  different  investor  pairwise  distinct  index  chosen  investor  letter  finally  polycarp  sure  smallest  lexicographically  name  best  like  think  google  decided  become  alphabet  formally  given  string  consisting  lowercase  latin  letter  swap  letter  position  arbitrary  time  swap  possible  smallest  lexicographically  name  obtain  letter  every  position  allowed  letter  polycarp  produce  valid  name  print  impossible  string  name  polycarp  ha  came  string  consists  lowercase  latin  letter  second  contains  single  investor  next  non  empty  string  allowed  character  string  contains  pairwise  distinct  letter  pairwise  distinct  position  string  appear  investor  demand  letter  position  polycarp  produce  valid  name  print  impossible
623/B __label__dp  __label__greedy  __label__number  theory  given  array  length  consecutively  apply  operation  array  remove  subsegment  continuous  subsequence  length  pay  coin  change  element  array  pay  coin  change  please  note  operation  applied  applied  remove  segment  changed  increased  decreased  note  allowed  delete  whole  array  goal  calculate  minimum  coin  need  spend  order  make  greatest  common  divisor  element  resulting  array  greater  input  contains  length  array  cost  removing  single  element  operation  cost  changing  element  respectively  second  contains  element  array  print  single  minimum  cost  change  needed  obtain  array  greatest  common  divisor  element  greater
748/F __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  country  treeland  consists  city  connected  bidirectional  road  way  possible  reach  every  city  starting  city  using  road  soccer  championship  next  year  participant  santa  clause  exactly  team  different  city  stage  team  divided  pair  team  pair  play  game  hometown  team  hometown  team  thus  city  hold  exactly  soccer  game  decided  divide  team  pair  necessary  choose  several  city  settle  player  organizer  tend  use  city  possible  settle  team  nobody  want  travel  much  championship  team  play  city  want  live  city  shortest  path  maybe  another  constraint  team  pair  must  live  city  summarizing  organizer  want  divide  team  pair  settle  minimum  possible  city  way  team  pair  live  city  lie  hometown  input  contains  k  city  treeland  pair  team  respectively  following  describe  road  treeland  contains  mean  road  city  guaranteed  path  city  last  contains  distinct  k  hometown  team  distinct  output  must  positive  equal  minimum  possible  city  team  settled
1107/G __label__dp  __label__data  structures  __label__constructive  algorithms  __label__binary  search  vasya  got  really  tired  credit  problem  want  earn  money  decided  make  contest  gain  profit  vasya  ha  problem  choose  numbered  difficulty  problem  moreover  problem  given  increasing  order  difficulty  difficulty  task  pairwise  distinct  order  add  problem  contest  need  pay  burles  author  problem  contest  vasya  get  burles  order  create  contest  need  choose  consecutive  subsegment  task  total  earnings  contest  calculated  follows  vasya  take  problem  contest  need  pay  author  problem  contest  vasya  get  burles  let  gap  max  vasya  take  task  index  contest  need  pay  gap  gap  calculate  maximum  profit  vasya  earn  taking  consecutive  segment  task  contains  proposed  task  profit  single  problem  respectively  next  contains  print  maximum  amount  burles  vasya  earn
839/C __label__dp  __label__dfs  __label__graphs  __label__trees  city  road  kingdom  road  connects  city  reach  city  road  theon  yara  greyjoy  horse  city  starting  traveling  road  weather  foggy  see  horse  brings  horse  reach  city  including  go  city  connected  current  city  strange  horse  go  city  city  horse  go  equal  probability  stop  city  let  length  road  journey  start  city  expected  length  expected  value  length  journey  read  expected  average  value  link  http  wikipedia  org  wiki  expectedvalue  contains  single  city  follow  contains  uii  city  connected  road  guaranteed  reach  city  road  print  expected  length  journey  journey  start  city
1023/B __label__math  tanechka  shopping  toy  shop  exactly  toy  shop  sale  cost  toy  burles  want  choose  toy  way  total  cost  burles  many  way  doe  toy  appears  shop  exactly  pair  considered  equal  pair  allowed  input  contains  toy  expected  total  cost  pair  toy  print  way  choose  pair  toy  satisfying  condition  print  tanechka  choose  pair  toy  way  total  cost  burles
354/B __label__dp  given  n  table  consisting  lowercase  english  letter  consider  string  good  table  contains  correct  path  corresponding  given  string  word  good  string  string  obtain  moving  left  upper  cell  table  right  formal  definition  correct  path  consider  row  table  numbered  top  bottom  column  table  numbered  left  right  cell  cell  table  row  column  cell  corresponds  letter  path  length  sequence  table  cell  following  path  correct  correct  path  length  consisting  single  cell  let  assume  correct  path  length  path  correct  path  length  assume  path  corresponds  string  length  tr  r  rk  player  play  following  game  initially  empty  string  player  take  turn  add  letter  end  string  move  adding  new  letter  resulting  string  must  good  game  end  turn  player  win  following  scenario  resulting  string  ha  strictly  letter  letter  player  win  resulting  string  ha  strictly  letter  letter  second  player  win  resulting  string  ha  letter  player  end  game  draw  task  determine  result  game  provided  player  played  optimally  well  contains  single  next  lowercase  english  letter  table  single  print  string  player  win  second  second  player  win  draw  game  end  draw
825/C __label__implementation  __label__greedy  make  solves  problem  decoforces  lot  different  online  judge  problem  denoted  difficulty  positive  difficulty  measured  judge  problem  difficulty  decoforces  hard  problem  difficulty  judge  make  ha  chosen  problem  solve  decoforces  difficulty  solve  problem  arbitrary  order  though  solve  problem  difficulty  already  solved  problem  difficulty  matter  online  judge  wa  starting  chosen  list  problem  make  ha  already  solved  problem  maximum  difficulty  given  condition  easy  see  make  sometimes  solve  chosen  problem  matter  order  chooses  want  solve  problem  judge  finish  solving  problem  list  every  positive  exist  problem  difficulty  least  judge  besides  decoforces  make  solve  problem  judge  time  necessary  problem  chosen  list  right  another  make  much  free  time  asked  calculate  minimum  problem  solve  judge  order  solve  chosen  problem  decoforces  contains  second  contains  space  separated  print  minimum  problem  make  solve  judge  order  solve  chosen  problem  decoforces
903/D __label__math  __label__data  structures  let  denote  function  given  array  consisting  calculate  sum  pair  contains  element  second  contains  element  array  print  sum  pair
959/D __label__math  __label__greedy  __label__constructive  algorithms  __label__number  theory  mahmoud  ha  array  consisting  asked  ehab  find  another  array  length  lexicographically  greater  equal  bi  pairwise  coprime  every  coprime  gcd  gcd  greatest  common  divisor  ehab  want  choose  special  array  want  lexicographically  minimal  array  variant  find  array  lexicographically  greater  array  exists  index  array  equal  array  contains  element  second  contains  element  output  space  separated  representing
662/B __label__dfs  __label__graphs  given  undirected  graph  consists  vertex  edge  initially  edge  colored  either  red  blue  turn  player  pick  single  vertex  switch  color  edge  incident  red  edge  endpoint  vertex  change  color  blue  blue  edge  endpoint  vertex  change  color  red  find  minimum  possible  move  required  make  color  edge  equal  input  contains  vertex  edge  respectively  following  provide  description  edge  contains  uii  index  vertex  connected  edge  character  providing  initial  color  edge  equal  edge  initially  colored  red  otherwise  equal  edge  initially  colored  blue  guaranteed  self  loop  multiple  edge  way  make  color  edge  equal  output  output  otherwise  output  minimum  move  required  achieve  goal  output  equal  index  vertex  used  move
982/A __label__constructive  algorithms  __label__brute  force  given  row  chair  call  seating  people  maximal  following  condition  hold  neighbor  adjacent  anyone  seated  impossible  seat  person  without  violating  rule  seating  given  string  consisting  mean  corresponding  seat  empty  occupied  goal  determine  whether  seating  maximal  note  last  seat  adjacent  contains  single  chair  next  contains  string  character  either  describing  seating  output  yes  without  quotation  mark  seating  maximal  otherwise  print
734/F __label__math  __label__implementation  __label__constructive  algorithms  anton  go  school  favorite  lesson  arraystudying  usually  solves  task  pretty  fast  time  teacher  gave  complicated  given  array  length  find  array  mean  bitwise  mean  bitwise  usually  anton  good  arraystudying  problem  hard  anton  asks  help  input  contains  single  size  array  second  contains  element  array  third  contains  element  array  solution  print
989/E __label__dp  __label__geometry  cool  breeze  blow  gently  flowing  water  ripple  steadily  flowing  passing  like  water  gone  ultimately  waxing  waning  like  moon  shrink  grow  eventually  everything  transient  way  perennial  another  kanno  seem  make  much  sense  mino  isolated  word  maybe  time  enjoy  gentle  breeze  night  sky  inexhaustible  gift  nature  gazing  sky  star  kanno  indulges  night  tranquil  dream  set  point  coordinate  plane  kanno  start  point  chosen  plane  added  belong  following  sequence  operation  altogether  called  move  repeated  several  time  given  order  choose  pass  least  element  pass  kanno  current  position  multiple  chosen  equiprobably  move  point  belong  lie  destination  chosen  equiprobably  possible  including  kanno  current  position  doe  belong  query  consisting  query  help  kanno  maximize  probability  stopping  position  element  move  proper  selection  output  maximum  probability  note  according  rule  belong  least  pass  least  point  contains  positive  point  following  contains  space  separated  coordinate  point  input  guarantee  hold  next  contains  positive  query  following  contains  space  separated  index  target  point  move  respectively  output  containing  decimal  denotes  maximum  probability  staying  point  step  proper  choice  starting  position
597/C __label__dp  __label__data  structures  given  sequence  different  element  find  increasing  subsequence  element  guaranteed  answer  greater  value  length  sequence  element  increasing  subsequence  next  contains  element  sequence  value  different  print  answer  problem
553/C __label__dfs  __label__graphs  many  anime  love  triangle  alice  love  bob  charlie  love  bob  well  alice  hate  charlie  thinking  anime  ha  character  character  labeled  every  pair  character  either  mutually  love  mutually  hate  neutral  state  hate  love  triangle  love  love  hate  hate  nobody  love  considering  character  happy  exactly  pair  love  love  hate  pair  love  love  love  love  given  list  known  relationship  anime  know  sure  certain  pair  love  certain  pair  hate  wondering  many  way  fill  remaining  relationship  happy  every  triangle  way  considered  different  character  love  way  hate  print  count  modulo  input  next  description  known  relationship  love  otherwise  hate  aii  pair  people  described  print  single  equal  way  fill  remaining  pair  happy  every  triangle  modulo
567/E __label__dfs  __label__graphs  berland  ha  city  capital  located  city  historic  home  town  president  city  city  connected  way  road  travel  time  road  positive  year  president  visited  historic  home  town  motorcade  pass  along  path  always  return  personal  plane  since  president  busy  man  always  chooses  path  along  travel  fastest  ministry  road  railway  want  learn  road  whether  president  definitely  pas  travel  whether  possible  repair  would  definitely  included  shortest  path  capital  historic  home  town  president  obviously  road  repaired  travel  time  wa  le  ministry  berland  like  interested  maintaining  budget  want  know  minimum  cost  repairing  road  fond  accuracy  repair  road  travel  time  always  positive  city  road  berland  capital  president  home  town  next  road  road  given  group  aii  city  connected  road  time  needed  ride  along  road  directed  city  city  city  numbered  pair  city  multiple  road  guaranteed  path  along  road  print  information  road  road  numbered  order  appearance  input
1108/E2 __label__implementation  __label__data  structures  difference  easy  hard  version  element  array  given  array  consisting  value  element  array  given  set  segment  segment  choose  subset  given  set  segment  decrease  value  chosen  segment  independently  example  initial  array  given  segment  choose  array  become  choose  subset  given  segment  segment  chosen  way  apply  subset  segment  array  obtain  array  value  max  min  max  maximum  possible  note  choose  empty  set  multiple  answer  print  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  length  array  segment  respectively  second  input  contains  value  element  array  next  contains  end  segment  output  print  maximum  possible  value  max  min  max  array  obtained  applying  subset  given  segment  array
1192/B __label__data  structures  __label__dfs  __label__trees  given  weighted  undirected  tree  vertex  list  update  update  change  weight  edge  task  output  diameter  tree  update  distance  vertex  sum  weight  unique  simple  path  connects  diameter  largest  distance  contains  space  separated  vertex  tree  update  limit  weight  edge  vertex  numbered  next  describing  initial  tree  follow  contains  space  separated  meaning  initially  edge  vertex  weight  guaranteed  describe  tree  finally  describing  query  follow  contains  space  separated  transformed  according  following  scheme  last  mod  last  modw  last  result  last  query  initially  last  tuple  represents  query  take  edge  input  set  weight  output  diameter  tree  update
1092/C __label__strings  ivan  want  play  game  picked  string  length  consisting  lowercase  latin  letter  know  string  ivan  ha  informed  improper  prefix  suffix  prefix  suffix  length  tell  string  prefix  suffix  ivan  want  guess  given  n  string  prefix  given  string  suffix  impossible  guess  string  ivan  picked  since  multiple  string  give  set  suffix  prefix  ivan  accept  answer  least  string  consistent  let  game  begin  input  contains  length  guessed  string  next  n  prefix  suffix  per  string  length  consisting  lowercase  latin  letter  given  arbitrary  order  guaranteed  exactly  string  length  guaranteed  string  prefix  suffix  existing  string  length  print  string  length  n  string  consisting  character  character  equal  character  character  string  input  string  prefix  otherwise
1076/B __label__math  __label__implementation  __label__number  theory  given  following  algorithm  applied  end  algorithm  find  smallest  prime  divisor  subtract  step  determine  subtrations  algorithm  make  contains  single  print  single  subtraction  algorithm  make
1073/D __label__greedy  __label__data  structures  __label__brute  force  __label__binary  search  xxi  berland  annual  fair  coming  really  soon  traditionally  fair  consists  booth  arranged  circle  booth  numbered  clockwise  adjacent  booth  sell  candy  price  burles  per  item  booth  ha  unlimited  supply  candy  polycarp  ha  decided  spend  burles  fair  ha  plan  mind  path  booth  visit  booth  ha  enough  burles  buy  exactly  candy  current  booth  buy  immediately  proceeds  next  booth  clockwise  order  regardless  bought  candy  polycarp  money  finite  thus  process  end  longer  buy  candy  booth  calculate  candy  polycarp  buy  contains  booth  fair  initial  amount  burles  polycarp  ha  second  contains  price  single  candy  booth  print  single  total  candy  polycarp  buy
1236/F __label__math  __label__dfs  __label__graphs  alice  recently  found  cactus  growing  near  house  several  month  cactus  appeared  soon  blocked  road  alice  want  clear  cactus  connected  undirected  graph  edge  graph  lie  simple  cycle  let  call  sequence  different  node  graph  simple  cycle  pair  node  connected  edge  edge  lie  simple  cycle  many  cactus  seems  hard  destroy  alice  ha  magic  us  magic  every  node  cactus  removed  independently  probability  node  removed  edge  connected  removed  alice  want  test  magic  ha  picked  cactus  node  edge  let  subset  removed  node  connected  component  remaining  graph  removing  node  set  us  magic  want  know  variance  random  variable  node  graph  probability  removed  event  independent  definition  variance  equal  expected  value  help  calculate  value  modulo  formally  let  prime  shown  answer  expressed  irreducible  fraction  modm  output  equal  modm  word  find  x  modm  contains  separated  space  n  node  edge  cactus  following  separated  space  meaning  edge  node  guaranteed  loop  multiple  edge  graph  given  graph  cactus  print  variance  connected  component  remaining  graph  removing  set  node  node  ha  probability  removed  event  independent  value  found  modulo
786/D __label__data  structures  __label__dfs  __label__trees  __label__strings  rick  love  unity  meeseeks  love  unity  rick  meeseeks  love  rival  unity  love  rap  decided  compete  rap  game  battle  order  choose  best  rick  nerd  instead  gon  na  make  verse  running  original  algorithm  lyric  rap  god  song  algorithm  little  bit  complicated  made  tree  vertex  numbered  lowercase  english  letter  written  edge  denotes  str  string  made  writing  character  edge  shortest  path  string  length  equal  distance  note  str  reverse  str  str  empty  order  make  best  verse  need  answer  query  computer  scientist  able  answer  query  asked  help  query  characterized  vertex  x  answer  query  vertex  like  z  str  lexicographically  larger  str  string  x  lexicographically  larger  string  either  x  exists  x  r  r  xr  r  character  compared  like  ascii  code  alphabetic  order  help  rick  get  girl  whatever  gender  unity  ha  input  vertex  tree  query  respectively  next  edge  contains  endpoint  edge  followed  english  lowercase  letter  next  query  contains  print  answer  query
566/F __label__math  __label__dp  __label__number  theory  must  know  maximum  clique  problem  arbitrary  graph  hard  nevertheless  graph  specific  kind  solved  effectively  case  let  remind  clique  non  directed  graph  subset  vertex  graph  vertex  subset  connected  edge  particular  empty  set  vertex  set  consisting  single  vertex  clique  let  define  divisibility  graph  set  positive  follows  vertex  given  graph  set  connected  edge  either  divisible  divisible  given  set  non  negative  determine  size  maximum  clique  divisibility  graph  set  contains  set  size  set  second  contains  distinct  positive  element  subset  follow  ascending  order  print  single  maximum  size  clique  divisibility  graph  set
1146/H __label__dp  __label__geometry  given  set  point  plane  point  collinear  pentagram  set  point  arranged  follows  note  length  segment  matter  particular  intersection  exist  count  way  choose  point  given  set  form  pentagram  contains  point  next  contains  coordinate  point  guaranteed  point  collinear  print  single  set  point  form  pentagram
35/E __label__data  structures  __label__sortings  great  victory  anniversary  berland  ha  ever  passed  without  war  parade  year  exception  preparation  full  strength  tank  building  artillery  mount  ready  fire  soldier  marching  main  square  air  force  general  generalov  trouble  year  lot  sky  scraper  built  make  difficult  airplane  fly  city  wa  decided  plane  fly  strictly  south  north  moreover  must  sky  scraper  plane  route  otherwise  anniversary  become  tragedy  ministry  building  gave  data  sky  scraper  rest  building  rather  small  problem  plane  looking  city  south  north  geometrical  plane  building  rectangle  height  westernmost  point  ha  coordinate  easternmost  terrain  area  plain  building  stand  level  task  ministry  defence  head  programmer  find  enveloping  polyline  using  data  sky  scraper  polyline  property  follows  look  city  south  north  plane  part  building  inside  boarder  area  polyline  encloses  together  land  surface  polyline  start  end  land  level  height  equal  segment  polyline  parallel  coordinate  ax  vertical  horizontal  polyline  vertex  coordinate  look  city  south  north  polyline  together  land  surface  must  enclose  minimum  possible  area  polyline  must  smallest  length  polylines  enclosing  minimum  possible  area  land  consecutive  segment  polyline  must  perpendicular  picture  second  sample  test  enveloping  polyline  marked  right  input  contains  follow  containing  output  amount  vertex  enveloping  polyline  next  position  height  polyline  vertex  output  coordinate  vertex  order  traversing  polyline  west  east  remember  last  vertex  polyline  height
616/B __label__greedy  jack  decides  invite  emma  dinner  jack  modest  student  want  expensive  restaurant  emma  girl  high  taste  prefers  elite  place  munhattan  consists  street  avenue  exactly  restaurant  intersection  street  avenue  street  numbered  avenue  numbered  cost  dinner  restaurant  intersection  street  avenue  cij  jack  emma  decide  choose  restaurant  following  way  firstly  emma  chooses  street  dinner  jack  chooses  avenue  emma  jack  make  choice  optimally  emma  want  maximize  cost  dinner  jack  want  minimize  emma  take  account  jack  want  minimize  cost  dinner  find  cost  dinner  couple  love  contains  street  avenue  munhattan  next  contains  cij  ij  cost  dinner  restaurant  intersection  street  avenue  print  cost  dinner  jack  emma
1005/B __label__implementation  __label__brute  force  __label__strings  given  string  single  move  choose  string  delete  leftmost  character  move  length  string  decrease  choose  string  empty  example  applying  move  string  result  string  applying  move  string  result  empty  string  required  make  given  string  equal  using  fewest  move  possible  end  string  equal  empty  string  equal  case  answer  obviously  sum  length  initial  string  write  program  find  minimum  move  make  given  string  equal  input  contains  second  input  contains  string  consist  lowercase  latin  letter  letter  string  inclusive  output  fewest  move  required  possible  end  string  equal  empty  string  equal  case  answer  obviously  sum  length  given  string
536/D __label__dp  tavas  life  kansa  kansa  ha  city  numbered  connected  bidirectional  road  travel  city  city  via  road  kansa  strange  tavas  road  city  road  city  tavas  invented  game  called  dashti  want  play  dashti  girlfriend  nafas  game  assign  arbitrary  value  city  kansa  value  city  equal  game  tavas  city  nafas  city  play  turn  tavas  go  player  turn  must  choose  non  negative  score  increase  sum  value  city  shortest  distance  city  city  used  word  time  player  get  score  city  city  score  becomes  additional  rule  player  must  choose  get  point  least  city  wa  used  note  city  initially  value  city  considered  used  beginning  game  player  use  fullfill  rule  game  end  nobody  make  move  player  score  sum  point  earned  game  winner  player  greater  score  draw  player  score  value  player  start  game  point  tavas  win  break  girlfriend  heart  nafas  win  tavas  cry  score  equal  happy  tavas  give  nafas  flower  emotional  play  optimally  task  tell  tavas  going  happen  game  end  input  contains  second  input  contains  next  contains  separated  space  next  road  contains  mean  road  length  city  road  lead  city  several  road  pair  city  tavas  win  print  break  heart  nafas  win  print  cry  nobody  win  game  ended  draw  print  flower
962/E __label__greedy  __label__constructive  algorithms  city  byteland  berland  located  axis  addition  axis  disputed  city  belong  country  opinion  thus  type  city  city  byteland  city  berland  disputed  city  recently  project  bnet  ha  launched  computer  network  new  generation  task  country  connect  city  network  country  connected  country  agreed  connect  pair  city  bnet  cable  way  look  city  byteland  disputed  city  resulting  set  city  city  reachable  cable  look  city  berland  disputed  city  resulting  set  city  city  reachable  cable  thus  necessary  choose  set  pair  city  connect  cable  way  condition  satisfied  simultaneously  cable  allow  directional  data  transfer  cable  connects  exactly  distinct  city  cost  laying  cable  city  another  equal  distance  find  minimum  total  cost  laying  set  cable  subset  city  byteland  disputed  city  berland  disputed  city  connected  city  point  technically  possible  connect  city  cable  city  connected  cable  simultaneously  coordinate  city  contains  single  city  following  contains  letter  coordinate  city  type  city  belongs  byteland  equal  city  belongs  berland  equal  city  disputed  equal  city  distinct  coordinate  guaranteed  city  given  increasing  order  coordinate  print  minimal  total  length  set  cable  delete  berland  city  possible  find  way  remaining  city  remaining  city  moving  cable  similarly  delete  byteland  city  possible  find  way  remaining  city  remaining  city  moving  cable
1204/D2 __label__math  __label__greedy  __label__data  structures  __label__strings  difference  easy  hard  version  length  string  hack  problem  solve  hack  previous  problem  solve  problem  kirk  ha  binary  string  string  consists  length  asking  find  binary  string  length  satisfies  following  condition  length  longest  non  decreasing  subsequence  substring  equal  length  longest  non  decreasing  subsequence  substring  maximum  possible  non  decreasing  subsequence  string  sequence  index  length  subsequence  multiple  substring  satisfy  condition  output  contains  binary  string  length  output  binary  string  satisfied  condition  many  string  output
765/E __label__dp  __label__implementation  __label__greedy  __label__dfs  __label__trees  vanya  want  minimize  tree  perform  following  operation  multiple  time  choose  vertex  disjoint  except  path  equal  length  additionally  vertex  must  neighbour  tree  adjacent  vertex  corresponding  path  path  merged  vertex  effectively  erased  help  vanya  determine  possible  make  tree  path  via  sequence  described  operation  answer  positive  determine  shortest  length  path  input  contains  vertex  next  describe  edge  tree  contains  space  separated  u  index  endpoint  corresponding  edge  guaranteed  given  graph  tree  impossible  obtain  path  print  otherwise  print  minimum  edge  possible  path
958/E2 __label__dp  __label__greedy  __label__sortings  __label__binary  search  princess  heidi  decided  give  order  rebel  ship  commander  person  unfortunately  currently  travelling  hyperspace  leave  specific  moment  meeting  commander  must  therefore  start  stop  time  namely  commander  board  ship  time  disembark  later  time  course  heidi  need  meet  commander  meeting  held  time  commander  even  meet  beginning  ending  hyperspace  jump  many  ship  position  could  give  coordinate  enemy  task  find  minimum  time  princess  heidi  ha  spend  meeting  schedule  satisfying  condition  contains  k  k  second  contains  distinct  representing  time  heidi  leaf  hyperspace  output  minimum  time  spent  meeting
11/D __label__dp  __label__graphs  given  simple  graph  output  simple  cycle  simple  cycle  cycle  repeated  vertex  edge  input  contains  respectively  vertex  edge  graph  subsequent  contains  indicating  vertex  connected  undirected  edge  edge  connecting  pair  vertex  output  cycle  given  graph
311/A __label__implementation  __label__constructive  algorithms  currently  tiny  learning  computational  geometry  trying  solve  problem  called  closest  pair  point  plane  found  code  gave  wrong  time  complexity  got  accepted  instead  time  limit  exceeded  problem  follows  given  point  plane  find  pair  point  distance  minimized  distance  pseudo  code  unexpected  code  follows  input  input  point  coordinate  sort  array  increasing  coordinate  increasing  coordinate  second  inf  inf  big  enough  tot  tot  break  notice  break  loop  min  distance  output  tot  regarded  running  time  code  due  fact  computer  run  limited  operation  per  second  tot  order  get  time  limit  exceeded  great  hacker  would  please  help  tiny  generate  test  data  let  code  get  time  limit  exceeded  single  contains  space  separated  exist  data  let  given  code  get  tle  print  solution  without  quote  else  print  contains  representing  coordinate  point
919/B __label__dp  __label__implementation  __label__brute  force  __label__binary  search  __label__number  theory  consider  positive  perfect  sum  digit  exactly  given  positive  task  find  smallest  perfect  positive  single  positive  single  denoting  smallest  perfect
1175/A __label__math  __label__implementation  given  step  following  move  decrease  divide  divisible  example  following  step  asked  calculate  minimum  step  reach  contains  query  query  contains  query  print  minimum  step  reach  single
1085/E __label__implementation  __label__greedy  __label__strings  vasya  owns  string  consists  latin  letter  let  template  string  length  latin  letter  appears  exactly  thus  distinct  template  application  template  string  replacement  character  string  index  letter  alphabet  example  applying  template  bdca  string  aabccd  yield  string  bbdcca  vasya  want  know  exists  template  yield  string  lexicographically  greater  equal  string  lexicographically  le  equal  string  applying  exist  multiple  suitable  template  print  string  lexicographically  le  string  required  answer  testcases  independently  contains  single  testcases  hack  use  next  contains  description  testcase  following  form  testcase  contains  single  length  template  second  testcase  contains  string  third  testcase  contains  string  fourth  testcase  contains  string  string  length  consist  latin  letter  letter  lowercase  guaranteed  string  lexicographically  le  equal  string  guaranteed  total  length  string  testcase  exceed  print  answer  testcases  following  form
1141/D __label__implementation  __label__greedy  left  boot  right  boot  boot  ha  color  denoted  lowercase  latin  letter  question  mark  thus  given  string  length  character  stand  color  left  boot  character  stand  color  right  boot  lowercase  latin  letter  denotes  specific  color  question  mark  denotes  indefinite  color  specific  color  compatible  exactly  indefinite  color  compatible  specific  indefinite  color  example  following  pair  color  compatible  following  pair  color  compatible  compute  maximum  pair  boot  left  right  boot  pair  color  compatible  print  maximum  pair  pair  boot  part  pair  contains  denoting  boot  leg  left  boot  right  boot  second  contains  string  length  contains  lowercase  latin  letter  question  mark  character  stand  color  left  boot  third  contains  string  length  contains  lowercase  latin  letter  question  mark  character  stand  color  right  boot  print  maximum  compatible  left  right  pair  boot  pair  consisting  left  right  boot  compatible  color
1142/E __label__graphs  interactive  task  scientist  invent  new  optimization  floyd  warshall  algorithm  allow  work  linear  time  part  optimization  still  unfinished  well  known  floyd  warshall  algorithm  take  graph  node  exactly  edge  pair  node  scientist  graph  directed  edge  possible  direction  optimize  algorithm  exactly  edge  colored  pink  color  rest  colored  green  know  direction  pink  edge  direction  green  edge  unknown  query  ask  scientist  direction  exactly  green  edge  perform  query  task  find  node  every  node  reached  path  consisting  edge  color  aware  scientist  lied  fixed  direction  edge  beforehand  answer  depend  query  contains  node  pink  edge  next  describe  pink  edge  contains  start  end  pink  edge  guaranteed  unordered  pair  distinct  found  answer  print  node  every  node  reached  single  colored  path
411/C __label__implementation  kicker  table  football  board  game  based  football  player  control  footballer  figure  mounted  rod  using  bar  get  ball  opponent  goal  playing  player  team  control  goalkeeper  full  back  play  defence  player  control  half  back  forward  play  attack  team  company  decided  battle  let  enumerate  player  team  second  player  play  team  third  fourth  play  second  team  player  know  game  skill  defence  attack  defence  skill  player  attack  skill  game  team  determine  play  player  team  decide  play  attack  play  defence  second  team  player  based  choice  opponent  define  team  defence  defence  skill  player  team  play  defence  similarly  team  attack  attack  skill  player  team  play  attack  assume  team  guaranteed  beat  defence  strictly  greater  opponent  attack  attack  strictly  greater  opponent  defence  team  company  know  strength  therefore  arrange  team  optimally  identify  team  guaranteed  win  team  act  optimally  tell  team  input  player  description  contains  space  separated  defence  attack  skill  player  correspondingly  team  win  print  phrase  team  without  quote  second  team  win  print  phrase  team  without  quote  team  definitely  win  print  draw  without  quote
385/C __label__math  __label__dp  __label__implementation  __label__data  structures  __label__brute  force  __label__binary  search  __label__number  theory  recently  bear  started  studying  data  structure  faced  following  problem  given  sequence  length  query  characterized  let  introduce  represent  index  divisible  answer  query  sum  set  prime  segment  border  included  segment  help  bear  cope  problem  contains  second  contains  necessarily  distinct  third  contains  following  contains  pair  space  separated  ii  characterize  current  query  print  answer  query  order  query  appear  input
766/A __label__constructive  algorithms  __label__strings  mahmoud  ehab  practicing  ioi  found  problem  name  wa  longest  common  subsequence  solved  ehab  challenged  mahmoud  another  problem  given  string  find  length  longest  uncommon  subsequence  longest  string  subsequence  subsequence  subsequence  string  sequence  character  appears  order  string  appearance  consecutive  example  string  abc  subsequence  string  abc  string  abbc  acb  empty  string  subsequence  string  string  subsequence  contains  string  second  string  string  non  empty  consist  lowercase  letter  english  alphabet  length  string  bigger  character  uncommon  subsequence  print  otherwise  print  length  longest  uncommon  subsequence
391/B __label__brute  force  receive  point  solving  problem  manao  ha  invented  new  operation  string  called  folding  fold  happens  pair  consecutive  letter  place  second  part  string  part  running  opposite  direction  aligned  position  fold  using  operation  manao  convert  string  structure  ha  level  fold  operation  performed  see  following  example  clarity  denote  position  fold  character  example  word  abracadabra  writtenracadab  indicates  ha  folded  time  leftmost  pair  letter  second  third  rightmost  pair  letter  several  example  folded  string  abcdefghijkbcdefghijkracadabxxxxxxxxxxx  xxxxxx  kjihg  kjihgfedcb  abcdef  dab  acar  xxxxx  last  example  abcdefgh  hgfe  abcd  manao  noticed  folded  string  viewed  several  pile  letter  instance  previous  example  pile  read  ahi  bgjk  bottom  top  manao  wonder  highest  pile  identical  letter  build  using  fold  operation  given  word  note  pile  gap  start  bottom  level  example  rightmost  example  none  pile  would  considered  valid  since  ha  gap  start  bottom  level  input  consist  containing  single  string  character  space  character  string  uppercase  letter  problem  subproblems  get  point  correct  submission  print  single  size  largest  pile  composed  identical  character  seen  valid  result  folding  operation  given  string
587/D __label__binary  search  duff  head  mafia  country  andarz  andarz  ha  city  numbered  connected  bidirectional  road  numbered  road  ha  destructing  time  color  road  connects  city  color  destructing  time  mafia  want  destruct  matching  andarz  matching  subset  road  road  subset  ha  common  endpoint  destruct  road  parallel  total  destruction  time  maximum  destruction  time  selected  road  want  condition  satisfied  remaining  road  form  proper  coloring  destructing  time  matching  minimized  remaining  road  destructing  matching  form  proper  coloring  road  color  endpoint  word  edge  color  form  matching  programmer  mafia  duff  asked  help  please  help  determine  matching  destruct  order  satisfied  condition  state  possible  input  contains  city  road  country  next  road  contains  vii  input  print  yes  without  quote  satisfying  condition  possible  without  quote  otherwise
877/D __label__data  structures  __label__dfs  __label__graphs  olya  love  energy  drink  love  much  room  full  empty  energy  drink  formally  room  represented  field  n  cell  cell  empty  littered  olya  drank  lot  energy  drink  run  meter  per  second  second  chooses  direction  left  right  run  meter  direction  course  run  empty  cell  olya  need  get  cell  cell  many  second  take  move  optimally  guaranteed  cell  empty  cell  coincide  contains  size  room  olya  speed  follow  containing  character  contains  position  cell  littered  otherwise  last  contains  coordinate  last  cell  print  single  minimum  time  take  olya  get
852/B __label__dp  due  recent  popularity  deep  learning  new  country  starting  look  like  neural  network  country  built  deep  many  layer  layer  possibly  many  city  entry  exit  point  exactly  layer  city  let  look  adjacent  layer  city  layer  connected  city  layer  traveling  cost  cij  pair  adjacent  layer  ha  cost  city  pair  stacked  layer  usual  traveling  cost  city  layer  city  cij  fixed  doctor  need  speed  computation  country  asks  find  path  take  entry  exit  point  traveling  cost  divisible  given  input  contains  city  layer  layer  travelling  cost  divisible  respectively  second  third  fourth  denoting  cost  ost  entry  point  layer  cost  adjacent  layer  described  cost  last  layer  exit  point  output  single  path  doctor  take  total  cost  divisible  modulo
1144/A __label__implementation  __label__strings  string  called  diverse  contains  consecutive  adjacent  letter  latin  alphabet  letter  occurs  exactly  example  following  string  diverse  fced  xyz  dabcef  following  string  diverse  bad  babc  note  letter  adjacent  formally  consider  position  letter  string  alphabet  position  form  contiguous  segment  come  without  gap  letter  string  distinct  duplicate  allowed  given  sequence  string  string  diverse  print  yes  otherwise  print  contains  denoting  string  process  following  contains  string  string  per  string  contains  lowercase  latin  letter  length  inclusive  print  per  string  input  yes  corresponding  string  diverse  corresponding  string  diverse  print  letter  case  upper  lower  example  yes  yes  acceptable
1061/C __label__math  __label__dp  __label__implementation  __label__data  structures  __label__number  theory  given  array  array  called  subsequence  possible  remove  element  get  array  called  good  empty  every  divisible  find  good  subsequence  modulo  subsequence  considered  different  index  set  included  different  value  element  matter  comparison  subsequence  particular  array  ha  exactly  different  subsequence  excluding  empty  subsequence  contains  length  array  next  contains  print  exactly  good  subsequence  taken  modulo
442/A __label__implementation  __label__brute  force  ever  played  hanabi  got  try  problem  deal  simplified  version  game  overall  game  ha  type  card  distinct  color  distinct  value  borya  holding  card  game  somewhat  complicated  fact  everybody  see  borya  card  except  borya  borya  know  card  ha  know  nothing  order  lie  note  borya  multiple  identical  card  type  card  know  exactly  many  card  type  ha  aim  player  achieve  state  borya  know  color  value  card  player  give  hint  hint  type  color  hint  value  hint  color  hint  go  like  player  name  color  point  card  color  similarly  go  value  hint  player  name  value  point  card  value  determine  minimum  hint  player  make  borya  certain  card  color  value  contains  borya  card  next  contains  description  card  description  card  consists  exactly  character  character  show  color  overall  position  distinct  letter  second  character  show  card  value  digit  borya  know  exact  order  card  lie  print  single  minimum  hint  player  make
830/B __label__implementation  __label__data  structures  __label__sortings  vasily  ha  deck  card  consisting  card  card  inclusive  possible  card  vasily  decided  sort  card  repeatedly  take  top  card  deck  equal  minimum  written  card  deck  place  card  away  otherwise  put  deck  take  next  card  top  process  end  soon  card  deck  assume  vasily  always  know  minimum  written  card  remaining  deck  know  card  card  determine  total  time  vasily  take  top  card  deck  contains  single  card  deck  second  contains  sequence  written  top  card  deck  print  total  time  vasily  take  top  card  deck
1097/D __label__math  __label__dp  __label__number  theory  makoto  ha  big  blackboard  positive  written  perform  following  action  exactly  time  suppose  currently  written  blackboard  randomly  pick  divisor  possibly  replace  divisor  makoto  us  famous  random  generator  rng  always  us  generator  seed  divisor  guaranteed  chosen  equal  probability  wonder  expected  value  written  blackboard  step  shown  value  represented  coprime  mod  print  value  modulo  input  contains  print  single  expected  value  blackboard  step  mod  defined
832/D __label__dfs  __label__graphs  __label__trees  misha  grisha  funny  boy  like  use  new  underground  underground  ha  station  connected  route  route  connects  station  possible  reach  every  station  boy  decided  fun  came  plan  namely  day  morning  misha  ride  underground  station  station  shortest  path  draw  aerosol  ugly  text  misha  wa  every  station  pas  including  day  evening  grisha  ride  station  station  shortest  path  count  station  misha  text  night  underground  worker  wash  text  underground  clean  boy  already  chosen  station  several  following  day  station  day  another  station  remaining  station  became  interested  choose  station  grisha  count  large  possible  asked  help  contains  station  day  second  contains  mean  route  station  guaranteed  possible  reach  every  station  next  contains  id  station  chosen  boy  day  note  id  could  print  print  maximum  possible  grisha  get  counting  station  chosen  optimally  station  day
977/F __label__dp  given  array  length  choose  subsequence  array  maximum  length  subsequence  form  increasing  sequence  consecutive  word  required  sequence  equal  value  length  subsequence  array  obtained  erasing  possibly  element  array  erase  element  necessarily  going  successively  remaining  element  preserve  order  example  array  following  array  subsequence  array  input  containing  length  array  second  input  containing  array  print  maximum  length  subsequence  given  array  form  increasing  sequence  consecutive
1252/L __label__graphs  city  country  numbata  numbered  currently  road  connecting  therefore  city  proposes  road  candidate  constructed  city  like  connect  city  city  proposes  add  direct  bidirectional  road  connecting  city  city  guaranteed  city  like  connect  word  pair  guaranteed  pair  city  connected  sequence  road  proposal  word  proposed  road  constructed  pair  city  connected  sequence  constructed  road  city  prefers  road  constructed  using  specific  material  material  represented  example  asphalt  wood  etc  material  used  road  connecting  city  city  represented  array  containing  mean  road  connecting  city  city  constructed  either  material  worker  construct  road  worker  familiar  material  thus  construct  road  specific  material  particular  worker  construct  road  material  worker  construct  road  want  assign  worker  construct  road  pair  city  connected  sequence  constructed  road  begin  containing  representing  city  worker  respectively  next  contains  several  representing  bidirectional  road  city  like  construct  guaranteed  sum  doe  exceed  guaranteed  city  like  connect  pair  city  connected  sequence  road  proposal  next  contains  representing  material  familiarized  worker  possible  assign  worker  construct  road  pair  city  connected  sequence  constructed  road  simply  output  otherwise  worker  order  input  output  separated  single  space  order  mean  worker  construct  direct  bidirectional  road  connecting  city  worker  doe  construct  road  output  without  quote  instead  pair  city  assigned  worker  output  assignment  long  pair  city  connected  sequence  constructed  road
369/B __label__math  __label__implementation  __label__constructive  algorithms  valera  love  participate  competition  especially  programming  contest  today  ha  participated  contest  team  consisting  student  including  valera  contest  wa  individual  competition  student  team  solved  problem  individually  contest  wa  valera  wa  interested  result  found  student  team  scored  least  point  point  total  member  team  scored  exactly  sall  point  total  score  member  team  scored  point  equal  exactly  formally  sequence  point  earned  team  student  non  increasing  order  n  valera  find  exactly  many  point  student  scored  valera  asked  recover  distribution  score  student  team  condition  met  input  contains  exactly  l  k  kall  guaranteed  input  answer  exists  print  exactly  point  student  scored  multiple  solution  print  print  distribution  point  order
366/B __label__implementation  __label__brute  force  helped  dima  great  weekend  time  work  naturally  dima  men  girlfriend  doe  everything  wrong  inna  dima  room  inna  tell  dima  everything  doe  presence  inna  tell  something  go  another  room  walk  circle  muttering  useless  sweetheart  time  dima  ha  time  peacefully  complete  task  inna  return  tell  dima  next  task  doe  presence  go  another  room  continues  dima  task  overall  dima  ha  task  task  ha  unique  dima  love  order  doe  task  consecutively  starting  task  example  dima  ha  task  total  start  task  order  like  dima  doe  task  inna  tell  dima  lovingly  appropriately  often  systematically  well  learned  power  tell  task  help  dima  choose  task  total  get  told  little  power  possible  input  contains  second  contains  power  inna  tell  dima  present  room  task  guaranteed  divisible  single  print  task  dima  start  get  told  little  power  possible  multiple  solution  print  minimum  task
525/D __label__greedy  __label__data  structures  __label__graphs  __label__constructive  algorithms  finally  day  arthur  ha  enough  money  buying  apartment  found  great  option  close  center  city  nice  price  plan  apartment  found  arthur  look  like  rectangle  n  consisting  square  size  square  contains  either  wall  square  denoted  symbol  plan  free  space  square  denoted  plan  symbol  room  apartment  maximal  connected  area  consisting  free  square  square  considered  adjacent  share  common  side  old  arthur  dream  live  apartment  room  rectangle  asks  calculate  minimum  wall  need  remove  order  achieve  goal  removing  wall  square  becomes  free  square  removing  wall  possible  room  unite  single  input  contains  denoting  size  arthur  apartment  following  symbol  plan  apartment  cell  denoted  symbol  contains  wall  cell  denoted  symbol  cell  free  wall  cell  contained  room  output  row  consisting  symbol  show  arthur  apartment  plan  look  like  deleting  minimum  wall  order  make  room  maximum  connected  area  free  wall  rectangle
592/E __label__binary  search  __label__geometry  bcpc  stand  byteforces  collegiate  programming  contest  famous  competition  byteforces  bcpc  team  competition  team  composed  coach  contestant  blenda  coach  bit  state  university  bsu  strict  selecting  member  team  bsu  student  numbered  since  bsu  student  infinitely  smart  important  parameter  blenda  reading  writing  speed  careful  measuring  blenda  found  student  reading  speed  equal  word  per  minute  writing  speed  symbol  per  minute  since  bsu  student  smart  measured  speed  sometimes  big  blenda  decided  subtract  constant  value  value  reading  speed  value  value  writing  speed  therefore  considers  student  said  overwhelm  student  blenda  like  fight  team  think  team  consisting  distinct  student  good  overwhelms  overwhelms  overwhelms  yes  relation  overwhelming  transitive  often  happens  real  life  since  blenda  busy  preparing  training  camp  codeforces  given  task  calculate  different  good  team  bsu  team  considered  different  least  student  present  team  present  word  team  different  set  student  form  team  different  input  written  denote  student  blenda  use  form  team  value  subtracted  reading  speed  value  subtracted  writing  speed  respectively  next  contains  student  reading  writing  speed  coincide  every  condition  hold  print  different  team  bsu  good  according  blenda  definition
883/E __label__implementation  __label__strings  polycarpus  take  part  field  wonder  show  participant  show  guess  hidden  word  fast  possible  initially  letter  word  hidden  game  consists  several  turn  turn  participant  tell  letter  show  host  responds  letter  word  letter  host  reveals  letter  example  hidden  word  abacaba  player  tell  letter  host  reveal  letter  position  occupied  position  numbered  left  right  starting  polycarpus  know  word  exactly  length  hidden  word  hidden  word  known  appears  word  current  moment  turn  already  made  letter  possibly  hidden  word  already  revealed  previously  polycarp  ha  told  exactly  letter  currently  revealed  polycarpus  turn  want  tell  letter  way  show  host  assuredly  reveal  least  letter  polycarpus  tell  letter  already  revealed  task  help  polycarpus  find  letter  tell  show  host  assuredly  reveal  least  remaining  letter  contains  length  hidden  word  following  describes  already  revealed  letter  contains  string  length  consists  lowercase  latin  letter  symbol  letter  position  letter  wa  already  revealed  position  contains  symbol  letter  position  ha  revealed  guaranteed  least  letter  still  closed  third  contains  word  length  polycarpus  know  following  word  letter  string  lowercase  latin  letter  word  distinct  guaranteed  hidden  word  appears  given  word  current  move  polycarp  ha  told  exactly  letter  currently  revealed  output  single  letter  polycarpus  tell  show  host  definitely  reveals  least  letter  possible
811/C __label__dp  __label__implementation  vladik  often  travel  train  remembered  trip  especially  well  would  like  tell  trip  vladik  initial  train  station  people  including  vladik  want  get  train  already  lined  order  city  code  known  code  city  going  train  chief  selects  disjoint  segment  original  sequence  people  covering  entire  sequence  segment  necessary  people  segment  train  carriage  segment  selected  way  least  person  travel  city  people  going  city  railway  carriage  mean  belong  different  segment  note  people  travel  city  either  railway  carriage  anywhere  comfort  train  trip  people  segment  position  position  equal  xor  distinct  code  city  people  segment  position  position  xor  operation  known  exclusive  total  comfort  train  trip  equal  sum  comfort  segment  help  vladik  know  maximal  possible  total  comfort  contains  single  people  second  contains  space  separated  denotes  code  city  person  going  output  single  maximal  possible  total  comfort
379/D __label__dp  __label__brute  force  many  country  new  year  christmas  tradition  writing  letter  santa  including  wish  list  present  vasya  ordinary  programmer  boy  like  ordinary  boy  going  write  letter  santa  new  year  eve  russian  actually  expect  santa  new  year  christmas  vasya  ha  come  algorithm  follow  writing  letter  chooses  string  anf  consisting  uppercase  english  letter  boy  make  string  using  recurrent  equation  operation  mean  concatenation  sequential  record  string  given  order  vasya  writes  string  piece  paper  put  envelope  sends  santa  vasya  absolutely  sure  santa  bring  best  present  resulting  string  ha  exactly  occurrence  substring  short  cut  reminds  f  accepted  problem  besides  vasya  decided  string  length  string  length  vasya  decided  anything  else  moment  vasya  got  urgent  new  year  business  asks  choose  string  required  manner  help  vasya  contains  print  string  consisting  uppercase  english  letter  second  print  string  consisting  uppercase  english  letter  multiple  valid  string  print
841/B __label__math  leha  somehow  found  array  consisting  looking  came  task  player  play  game  array  player  move  player  choose  move  subsegment  non  length  odd  sum  remove  array  remaining  part  glued  together  array  game  continues  second  player  choose  subsegment  non  length  even  sum  remove  loses  make  move  win  play  optimally  input  data  contains  single  length  array  next  contains  output  answer  single  player  win  second  otherwise  without  quote
838/C __label__dp  alice  bob  playing  game  string  character  alice  going  string  consists  character  letter  alphabet  player  turn  either  arbitrarily  permute  character  word  delete  exactly  character  word  least  character  addition  resulting  word  appeared  throughout  entire  game  player  unable  make  valid  move  loses  game  given  find  word  exactly  character  consisting  letter  alphabet  alice  win  alice  bob  play  optimally  return  modulo  prime  input  prime  print  single  winning  word  alice  modulo
1240/F __label__graphs  football  team  world  main  football  organization  mfo  want  host  game  mfo  want  game  played  team  stadium  let  game  team  played  stadium  mfo  doe  want  team  much  game  stadium  others  therefore  team  absolute  difference  maximum  minimum  exceed  team  ha  amount  money  mfo  earn  game  team  team  play  game  mfo  earn  mfo  need  find  game  stadium  need  host  order  earn  much  money  possible  violating  rule  set  problem  complicated  mfo  therefore  asking  help  contains  team  game  stadium  second  contains  amount  money  mfo  earn  game  game  following  contains  team  play  game  guaranteed  pair  team  play  game  game  order  print  stadium  play  game  game  played  equal
479/A __label__math  __label__brute  force  petya  study  school  adores  math  class  ha  studying  arithmetic  expression  last  class  teacher  wrote  positive  blackboard  task  wa  insert  sign  operation  probably  bracket  value  resulting  expression  large  possible  let  consider  example  assume  teacher  wrote  blackboard  way  placing  sign  bracket  note  insert  operation  sign  swap  instance  given  sample  get  expression  easy  see  maximum  value  obtain  task  given  print  maximum  value  get  input  contains  single  print  maximum  value  expression  obtain
1037/F __label__math  __label__data  structures  given  array  element  array  denoted  perform  operation  given  print  value  modulo  function  array  length  return  else  empty  array  length  temp  temp  max  temp  append  temp  end  temp  return  input  contains  length  initial  array  parameter  second  input  contains  element  array  output  value  modulo
935/D __label__math  ancient  egyptian  known  used  large  set  symbol  write  wall  temple  fafa  fifa  went  temple  found  non  empty  word  equal  length  wall  temple  written  since  temple  ancient  symbol  word  erased  symbol  set  equal  probability  position  erased  symbol  fifa  challenged  fafa  calculate  probability  lexicographically  greater  help  fafa  task  know  distinct  character  egyptian  alphabet  problem  character  denoted  alphabet  order  word  lexicographically  greater  word  length  word  position  word  ha  larger  character  word  prove  probability  equal  fraction  coprime  print  answer  value  non  negative  le  mean  give  remainder  divided  contains  length  word  size  alphabet  respectively  second  contains  symbol  symbol  position  wa  erased  third  contains  representing  format  print  value  coprime  answer  problem
708/E __label__math  __label__dp  alex  studied  well  trip  student  camp  alushta  located  seashore  unfortunately  period  strong  wind  chance  camp  destroyed  camp  building  represented  rectangle  concrete  block  height  block  width  every  day  breeze  blowing  sea  block  except  block  upper  lower  lever  block  left  destroyed  probability  similarly  night  breeze  blow  direction  sea  thus  block  except  block  upper  lower  lever  block  right  destroyed  probability  note  block  upper  lower  level  indestructible  block  destroyed  period  strong  wind  last  day  night  period  building  split  least  connected  component  collapse  alex  find  another  place  spend  summer  find  probability  alex  look  opportunity  able  spend  summer  camp  input  contains  define  size  destructible  part  building  second  input  contains  define  probability  guaranteed  coprime  third  contains  single  day  night  strong  wind  blow  consider  answer  irreducible  fraction  equal  print  equal  guaranteed  given  constraint
593/C __label__math  __label__constructive  algorithms  every  day  ruslan  tried  count  sheep  fall  asleep  help  ha  found  interesting  thing  think  set  circle  plane  try  choose  beautiful  set  point  least  point  set  inside  border  imagined  circle  yesterday  ruslan  tried  solve  problem  case  set  point  considered  beautiful  given  argument  take  value  moreover  correct  function  assume  correct  function  ranging  function  correct  obtained  following  rule  b  ab  mean  taking  absolute  value  mean  multiplication  yesterday  ruslan  thought  could  cope  task  asks  write  program  computes  appropriate  set  circle  function  allowed  use  multiplication  length  function  exceed  character  function  space  ruslan  keep  big  memory  choose  value  intermediate  calculation  exceed  absolute  value  input  contains  circle  ruslan  think  next  follow  containing  coordinate  center  raduis  circle  print  correct  function  second  print  correct  function  set  point  must  satisfy  condition  least  point  inside  border  circle  ruslan  think  beginning
840/B __label__dp  __label__data  structures  __label__dfs  __label__graphs  __label__constructive  algorithms  leha  play  computer  game  level  given  connected  graph  vertex  edge  graph  multiple  edge  self  loop  vertex  ha  equal  pas  level  need  find  good  subset  edge  graph  say  exist  subset  called  good  leaving  edge  subset  original  graph  obtain  following  every  vertex  degree  modulo  equal  leha  want  pas  game  soon  possible  ask  help  case  multiple  correct  answer  print  contains  vertex  edge  second  contains  vertex  next  contains  edge  guaranteed  graph  input  connected  print  single  solution  exist  otherwise  edge  subset  next  index  edge  edge  numerated  order  given  input  starting
762/B __label__implementation  __label__greedy  __label__sortings  due  increase  student  berland  state  university  wa  decided  equip  new  computer  room  given  task  buying  mouse  spend  little  possible  country  crisis  computer  bought  room  different  usb  port  port  option  found  price  list  certain  computer  shop  mouse  specified  cost  type  port  required  plug  mouse  usb  mouse  list  bought  want  buy  set  mouse  given  price  list  way  maximize  computer  equipped  mouse  guaranteed  able  equip  computer  case  equality  value  want  minimize  total  cost  mouse  buy  contains  computer  usb  port  computer  port  computer  option  respectively  next  contains  mouse  price  list  next  describe  another  mouse  contains  vali  ali  cost  mouse  type  port  usb  required  plug  mouse  output  separated  space  equipped  computer  total  cost  mouse  buy
659/E __label__greedy  __label__data  structures  __label__dfs  __label__graphs  berland  ha  city  connected  bidirectional  road  road  connects  city  pair  city  connected  road  guaranteed  get  city  using  existing  road  president  berland  decided  make  change  road  system  instructed  ministry  transport  make  reform  road  unidirectional  lead  city  another  order  cause  great  resentment  resident  reform  need  conducted  separate  city  possible  city  considered  separate  road  lead  allowed  road  leading  city  help  ministry  transport  find  minimum  possible  separate  city  reform  input  contains  positive  city  road  berland  next  description  road  road  determined  distinct  xii  city  connected  road  guaranteed  road  pair  city  guaranteed  city  get  using  road  print  single  minimum  separated  city  reform
750/A __label__math  __label__implementation  __label__brute  force  __label__binary  search  limak  going  participate  contest  last  day  contest  start  last  hour  exactly  midnight  problem  sorted  difficulty  problem  easiest  problem  hardest  limak  know  take  minute  solve  problem  limak  friend  organize  new  year  eve  party  limak  want  midnight  earlier  need  minute  get  house  participate  contest  many  problem  limak  solve  want  make  party  input  contains  problem  contest  minute  limak  need  get  party  house  print  denoting  maximum  possible  problem  limak  solve  could  get  party  midnight  earlier
852/I __label__dfs  __label__graphs  __label__trees  __label__brute  force  story  happening  town  named  bubbleland  house  bubbleland  house  life  boy  girl  people  really  love  everyone  ha  favorite  mean  boy  girl  life  house  ha  favorite  equal  house  numerated  house  connected  bidirectional  road  travel  house  house  town  exactly  path  every  pair  house  new  dating  agency  opened  office  mysterious  town  citizen  excited  immediately  sent  question  agency  question  wa  following  format  asking  many  way  choose  couple  boy  girl  favorite  live  house  unique  path  house  house  help  dating  agency  answer  question  grow  business  contains  house  town  second  contains  boy  life  house  girl  life  house  third  contains  represents  favorite  girl  boy  life  house  next  information  road  contains  mean  exists  road  house  guaranteed  possible  reach  house  following  contains  query  following  represents  question  consists  question  output  single  answer  citizen  question
677/D __label__dp  __label__data  structures  __label__graphs  vanya  palace  represented  grid  n  room  contains  single  chest  room  located  row  column  contains  chest  type  aij  chest  type  x  contains  key  open  chest  type  chest  type  locked  exactly  chest  type  contains  treasure  vanya  start  cell  top  left  corner  minimum  total  distance  vanya  ha  walk  order  get  treasure  consider  distance  cell  cell  row  column  equal  input  contains  row  column  table  representing  palace  different  type  chest  respectively  following  contains  aij  ij  type  chest  corresponding  room  guaranteed  least  chest  type  exists  pair  arc  guaranteed  exactly  chest  type  print  minimum  possible  total  distance  vanya  ha  walk  order  get  treasure  chest  type
771/B __label__greedy  __label__constructive  algorithms  army  easy  form  group  soldier  effective  battlefield  communication  crucial  thus  soldier  share  name  would  happen  got  order  bob  scouter  bob  group  soldier  effective  name  different  example  group  john  bob  limak  would  effective  group  gary  bob  gary  alice  alice  spy  enemy  camp  noticed  soldier  standing  row  numbered  general  want  choose  group  consecutive  soldier  every  consecutive  soldier  general  wrote  whether  would  effective  group  managed  steal  general  note  string  either  yes  string  describes  group  soldier  yes  group  effective  otherwise  string  describes  group  soldier  till  string  describes  group  soldier  task  find  possible  name  soldier  name  match  stolen  note  name  string  consists  english  letter  inclusive  letter  uppercase  letter  lowercase  name  existing  name  allowed  print  xyzzzdj  example  find  print  solution  proved  always  exists  least  solution  input  contains  soldier  size  group  respectively  second  contains  string  string  yes  group  soldier  effective  otherwise  find  solution  satisfying  given  condition  print  space  separated  string  denoting  possible  name  soldier  order  letter  name  uppercase  letter  lowercase  name  english  letter  ha  length
1105/B __label__implementation  __label__brute  force  __label__strings  given  string  length  string  ha  level  largest  non  negative  possible  find  non  intersecting  non  overlapping  substring  length  character  substring  substring  contains  distinct  character  character  substring  substring  sequence  consecutive  adjacent  character  defined  denoted  example  string  aabb  ha  level  select  substring  string  zzzz  zzbzz  ha  level  select  non  intersecting  substring  string  abed  aca  level  find  least  substring  length  containing  distinct  character  zuhair  gave  string  length  need  find  level  string  contains  length  string  value  second  contains  string  length  consisting  lowercase  latin  letter  print  single  level  string
1209/H __label__math  __label__greedy  __label__data  structures  airport  often  use  moving  walkway  help  walking  big  distance  faster  walkway  ha  speed  effectively  increase  speed  stand  walkway  let  move  could  walk  effective  speed  walking  speed  plus  walkway  speed  limak  want  get  point  point  straight  disjoint  walkway  walkway  described  real  value  walkway  start  end  ha  speed  every  walkway  located  inside  segment  walkway  positive  intersection  touch  endpoint  limak  need  decide  distribute  energy  example  might  make  sense  stand  somewhere  walk  slowly  lot  energy  walk  faster  limak  initial  energy  must  never  drop  value  moment  walk  speed  interval  cost  energy  per  second  continuously  recovers  energy  speed  energy  per  second  walk  speed  energy  increase  note  negative  value  would  mean  losing  energy  particular  walk  speed  change  energy  walking  speed  effectively  give  energy  per  second  limak  choose  speed  arbitrarily  real  value  interval  every  moment  time  including  moment  located  non  position  everything  continuous  non  discrete  fastest  time  limak  get  contains  walkway  distance  walk  next  contains  real  value  value  given  digit  decimal  point  guaranteed  walkway  positive  intersection  walkway  listed  left  right  print  real  value  fastest  possible  time  reach  answer  considered  correct  absolute  relative  error  exceed
653/B __label__dp  __label__dfs  __label__brute  force  __label__strings  limak  little  polar  bear  polar  bear  hate  long  string  thus  like  compress  know  limak  young  know  letter  english  alphabet  given  set  possible  operation  limak  perform  order  operation  applied  time  operation  described  string  length  string  length  possible  operation  string  limak  ha  string  perform  operation  letter  match  letter  string  performing  operation  remove  letter  insert  string  see  note  section  clarification  note  performing  operation  decrease  length  string  exactly  set  operation  string  compressed  letter  match  limak  want  start  string  length  perform  operation  finally  get  letter  string  many  way  choose  starting  string  able  get  remember  limak  use  letter  know  contains  length  initial  string  available  operation  next  describe  possible  operation  contains  string  guaranteed  aij  consist  lowercase  english  letter  print  string  length  limak  able  transform  string  applying  operation  given  input
1210/F1 __label__brute  force  easier  version  problem  version  marek  working  hard  creating  strong  testcases  new  algorithmic  problem  want  know  nah  telling  tell  generates  testcases  marek  chooses  generates  random  bipartite  graph  vertex  vertex  left  side  vertex  right  side  put  edge  vertex  probability  percent  turn  test  strong  perfect  matching  exists  generated  graph  probability  occur  shown  value  represented  coprime  mod  let  mod  print  value  modulo  input  contains  single  following  describe  probability  edge  appearing  graph  contains  denotes  probability  percent  edge  appearing  print  single  probability  perfect  matching  exists  bipartite  graph  written  mod  defined
472/C __label__greedy  way  make  new  task  make  nondeterministic  probabilistic  example  hard  task  topcoder  srm  constellation  probabilistic  version  convex  hull  let  try  make  new  task  firstly  use  following  task  people  sort  name  ordinary  sorting  problem  make  interesting  adding  nondeterministic  element  people  person  use  either  name  last  name  handle  lexicographical  order  handle  exactly  equal  given  permutation  formally  denote  handle  person  following  condition  must  hold  contains  people  next  contains  string  contains  string  name  last  name  person  string  consists  lowercase  english  letter  given  string  distinct  next  contains  distinct  possible  output  yes  otherwise  output
475/F __label__data  structures  consider  infinite  grid  unit  cell  cell  planet  meta  universe  set  planet  suppose  infinite  row  column  following  property  planet  meta  universe  planet  located  side  row  column  case  turn  meta  universe  non  empty  meta  universe  containing  planet  located  respective  side  row  column  meta  universe  split  using  operation  called  universe  perform  operation  meta  universe  turn  universe  given  position  planet  original  meta  universe  find  universe  result  described  process  proved  universe  uniquely  identified  depending  order  splitting  input  contains  denoting  planet  meta  universe  next  denoting  coordinate  planet  planet  located  different  cell  print  resulting  universe
696/C __label__math  __label__dp  __label__implementation  know  barney  job  please  ha  much  work  started  playing  cup  key  game  identical  cup  arranged  left  right  initially  key  barney  heart  middle  cup  turn  barney  swap  cup  middle  cup  randomly  choses  equal  probability  chosen  cup  becomes  middle  game  last  turn  barney  independently  choses  cup  swap  middle  turn  key  always  remains  cup  wa  start  turn  barney  asks  girl  guess  cup  contains  key  girl  point  middle  barney  wa  distracted  making  turn  know  key  middle  cup  asked  tell  probability  girl  guessed  right  game  turn  extremely  large  barney  give  instead  gave  array  word  multiplication  element  given  array  precision  difficulty  barney  asked  tell  answer  irreducible  fraction  word  need  find  fraction  greatest  common  divisor  since  extremely  large  need  find  remainder  dividing  please  note  want  remainder  dividing  input  contains  single  element  array  barney  gave  second  contains  element  array  output  print  single  string  remainder  dividing  remainder  dividing
1223/B __label__strings  given  string  equal  length  consisting  lowercase  latin  letter  perform  possibly  operation  string  operation  choose  adjacent  character  string  assign  value  character  value  second  vice  versa  example  acbc  get  following  string  operation  aabc  perform  ccbc  perform  accc  perform  abbc  perform  acbb  perform  note  apply  operation  string  please  determine  whether  possible  transform  applying  operation  time  note  answer  independent  query  contains  query  query  represented  consecutive  query  contains  string  consisting  lowercase  latin  letter  second  query  contains  string  consisting  lowercase  latin  letter  query  print  yes  possible  make  equal  otherwise
575/F __label__dp  __label__greedy  bananistan  beautiful  banana  republic  beautiful  woman  beautiful  dress  beautiful  statue  beautiful  warlord  beautiful  star  beautiful  night  bananistan  people  play  crazy  game  bulbo  array  bulb  player  position  represents  bulb  distance  neighboring  bulb  turn  player  change  position  cost  posnew  osold  contiguous  set  bulb  light  player  pay  cost  equal  distance  closest  shining  bulb  bulb  dark  goal  minimize  summed  cost  tell  bananistanians  spending  night  playing  bulb  banana  day  approaching  hired  play  beautiful  bulbo  game  ever  huge  array  bulb  installed  know  initial  position  light  ups  advance  need  play  ideal  game  impress  bananistanians  family  contains  turn  initial  position  next  lstart  lend  represent  bulb  interval  lstart  end  shining  turn  startend  output  single  represents  best  result  minimum  cost  could  obtained  playing  bulbo  game
512/E __label__constructive  algorithms  fox  ciel  designed  puzzle  game  called  polygon  played  using  triangulation  regular  edge  polygon  goal  transform  triangulation  another  tricky  rule  triangulation  edge  poylgon  set  diagonal  satisfying  condition  diagonal  share  common  internal  point  example  initial  state  game  look  like  figure  goal  look  like  step  choose  diagonal  inside  polygon  edge  polygon  flip  diagonal  suppose  going  flip  diagonal  always  exist  triangle  sharing  side  let  denote  result  operation  diagonal  replaced  diagonal  c  easily  proven  flip  operation  resulting  set  diagonal  still  triangulation  polygon  order  solve  case  flip  diagonal  replaced  diagonal  flip  diagonal  get  figure  result  ciel  proved  starting  destination  triangulation  game  ha  solution  want  solve  step  puzzle  satisfying  n  edge  regular  polygon  follows  group  describing  original  triangulation  goal  triangulation  description  triangulation  consists  contains  describing  diagonal  aii  guaranteed  original  goal  triangulation  correct  diagonal  share  common  internal  point  triangulation  output  step
960/E __label__dp  __label__dfs  __label__trees  given  tree  node  numbered  node  ha  associated  value  simple  path  consists  node  namely  alternating  function  defined  path  edge  compute  sum  alternating  function  unique  simple  path  note  path  directed  path  considered  different  starting  vertex  differ  ending  vertex  differ  answer  large  compute  modulo  contains  vertex  tree  second  contains  space  separated  value  node  next  space  separated  denoting  edge  vertex  guaranteed  given  graph  tree  print  total  sum  alternating  function  unique  simple  path  modulo
1038/A __label__implementation  __label__strings  given  string  length  consists  letter  latin  alphabet  letter  string  uppercase  subsequence  string  string  derived  deleting  symbol  without  changing  order  remaining  symbol  example  ade  subsequence  abcde  dea  subsequence  called  good  occurences  letter  alphabet  find  length  longest  good  subsequence  input  contains  second  input  contains  string  length  string  contains  uppercase  letter  letter  latin  alphabet  print  length  longest  good  subsequence  string
1083/F __label__data  structures  fair  nut  ha  array  consisting  found  long  ago  know  came  fair  nut  often  change  array  interested  similar  every  modification  let  denote  similarity  array  minimum  operation  apply  make  array  equal  every  operation  applied  array  impossible  similarity  equal  per  operation  choose  subarray  length  fixed  change  every  element  belongs  chosen  subarray  chosen  denotes  bitwise  xor  operation  nut  ha  already  calculated  similarity  array  every  modification  note  need  calculate  value  need  apply  operation  contains  length  array  length  subarrays  operation  applied  query  second  contains  element  array  third  contains  element  array  next  describes  query  contains  string  array  query  change  without  quote  index  changing  element  new  value  print  initial  similarity  array
522/C __label__greedy  polycarp  flying  airplane  finally  favorite  time  lunchtime  beravia  company  stewardess  giving  food  consecutively  passenger  last  polycarp  sitting  seat  mean  person  get  food  flight  menu  ha  dish  total  polycarp  boarded  flight  time  count  portion  dish  board  thus  know  value  portion  dish  stewardess  ha  already  given  food  passenger  gave  polycarp  polite  smile  asked  would  prefer  polycarp  realized  might  run  dish  moment  passenger  ahead  noticed  dish  given  besides  heard  strange  mumbling  passenger  ahead  similar  phrase  disappointed  happened  passenger  asked  dish  stewardess  gave  polite  smile  said  run  dish  case  passenger  needed  choose  dish  wa  available  polycarp  heard  sound  passenger  meant  passenger  chose  dish  try  help  polycarp  find  dish  whether  could  run  dish  moment  polyarp  wa  served  dish  wa  definitely  available  test  problem  consists  input  set  go  string  contains  single  input  data  set  test  set  follow  set  preceded  empty  set  input  contains  polycarp  seat  dish  respectively  second  contains  sequence  initial  portion  dish  follow  contains  description  polycarp  observation  giving  food  passenger  sitting  front  contains  pair  j  j  dish  wa  given  passenger  polycarp  notice  dish  wa  given  passenger  depending  whether  passenger  wa  disappointed  respectively  know  sum  equal  least  polycarp  definitely  get  dish  even  last  thing  wanted  guaranteed  data  consistent  sum  input  set  exceed  sum  input  set  exceed  input  set  print  answer  single  print  string  letter  letter  position  printed  could  run  dish  time  stewardess  started  serving  polycarp
938/C __label__constructive  algorithms  __label__brute  force  __label__binary  search  let  denote  free  matrix  binary  consisting  matrix  every  square  submatrix  size  matrix  contains  least  consider  following  problem  given  construct  free  square  matrix  size  n  matrix  maximum  possible  print  maximum  possible  matrix  solve  problem  instead  construct  test  given  every  find  nii  answer  aforementioned  problem  exactly  set  contains  test  construct  follow  containing  note  hack  set  test  construct  output  positive  ii  maximum  free  nii  matrix  exactly  multiple  solution  output  impossible  construct  test  output  single
1064/A __label__math  __label__brute  force  __label__geometry  masha  ha  stick  length  centimeter  respectively  minute  masha  pick  arbitrary  stick  increase  length  centimeter  allowed  break  stick  minimum  minute  need  spend  increasing  stick  length  order  able  assemble  triangle  positive  area  stick  used  triangle  side  stick  side  endpoint  located  triangle  vertex  contains  tree  c  length  stick  masha  posse  print  single  minimum  minute  masha  need  spend  order  able  make  triangle  positive  area  stick
364/A __label__implementation  __label__data  structures  string  decimal  digit  let  define  bij  find  matrix  rectangle  sum  bij  cell  element  rectangle  equal  rectangle  rectangle  matrix  group  x  element  rectangle  cell  x  contains  second  contains  string  decimal  print  single  answer  problem
1089/A __label__dp  alice  big  fan  volleyball  especially  strong  team  volleyball  match  consists  set  set  team  score  point  winning  ball  set  played  team  score  least  point  fifth  set  played  team  score  least  point  moreover  team  score  fifth  set  point  team  score  fifth  set  set  played  absolute  difference  team  point  becomes  match  end  team  win  set  match  score  set  team  alice  found  book  containing  result  match  played  team  book  old  part  book  became  unreadable  alice  read  information  many  set  team  read  information  many  point  team  scored  set  even  doe  know  set  played  match  information  ha  total  point  scored  team  set  single  match  alice  wonder  best  match  score  team  could  achieve  match  bigger  difference  set  team  opponent  better  match  score  find  best  match  score  conclude  match  could  end  like  solution  find  possible  score  set  result  best  match  score  contains  single  match  found  alice  book  next  contains  b  point  scored  team  point  scored  opponent  respectively  output  solution  every  match  order  given  input  team  could  score  point  respectively  output  impossible
1165/C __label__greedy  let  call  string  good  length  even  every  character  odd  position  string  different  next  character  character  different  second  third  different  fourth  example  string  good  string  xyyx  good  string  string  bad  aabc  good  note  empty  string  considered  good  given  string  delete  minimum  character  string  becomes  good  contains  character  second  contains  string  consisting  exactly  lowercase  latin  letter  print  minimum  character  delete  make  good
603/B __label__math  __label__dfs  __label__number  theory  behooves  intelligent  schoolboy  kevin  sun  studying  psycowlogy  cowculus  cryptcowgraphy  bovinia  state  university  bgu  farmer  ivan  mathematics  olympiad  moo  class  kevin  wa  confronted  weird  functional  equation  need  help  fixed  odd  prime  functional  equation  state  function  equation  hold  range  inclusive  turn  actually  many  different  function  instead  finding  solution  kevin  want  count  distinct  function  satisfy  equation  since  answer  large  print  result  modulo  input  consists  space  separated  single  guaranteed  odd  prime  print  single  distinct  function  modulo
721/E __label__dp  __label__binary  search  danil  student  wa  returning  home  tram  stop  lately  straight  road  length  stop  located  point  danil  home  point  danil  go  constant  speed  doe  change  direction  movement  street  light  road  light  continuous  segment  road  lightened  segment  share  common  point  danil  love  sing  thus  want  sing  favourite  song  walk  soon  non  lightened  segment  road  scare  sings  go  lightened  segment  danil  pass  distance  performing  favourite  song  danil  start  another  performance  segment  passed  performing  fully  lightened  moreover  danil  ha  taken  pause  performance  performing  passed  segment  length  least  formally  danil  start  single  performance  point  every  point  segment  lightened  danil  ha  finished  performing  point  next  performance  started  point  satisfying  statement  point  blue  half  circle  denote  performance  please  note  danil  ha  taken  pause  performing  ha  sang  path  length  least  determine  many  time  danil  perform  favourite  song  walk  please  note  danil  doe  break  single  performance  thus  started  singing  another  time  finish  singing  segment  length  passed  performance  start  point  input  contains  length  danil  path  street  light  road  distance  danil  pass  single  performance  minimum  distance  pause  respectively  next  describe  segment  lightened  street  light  contains  endpoint  segment  lightened  street  light  guaranteed  segment  intersecting  nesting  touching  segment  given  order  left  right  print  maximum  performance  danil  favourite  song  path
1045/F __label__math  __label__geometry  ani  borna  playing  short  game  variable  polynomial  special  kind  polynomial  monomials  fixed  coefficient  fill  blank  dash  xy  xy  x  x  borna  fill  blank  positive  want  polynomial  bounded  goal  make  sure  exists  real  value  polynomial  point  greater  ani  mischievous  want  polynomial  unbounded  along  stealing  borna  heart  steal  part  polynomial  ani  petty  kind  thief  though  steal  monomial  polynomial  borna  fill  blank  ani  borna  play  move  optimally  win  contains  positive  denoting  term  starting  special  polynomial  following  contains  description  monomial  contains  space  separated  mean  starting  polynomial  ha  term  guaranteed  either  borna  always  choose  coefficient  resulting  polynomial  bounded  regardless  monomial  ani  steal  output  borna  else  output  ani
1184/B1 __label__sortings  __label__binary  search  heidi  doctor  hopped  tardis  found  epfl  surrounded  stormtroopers  darth  vader  wa  approaching  miraculously  managed  escape  nearby  rebel  base  doctor  wa  confused  heidi  reminded  last  year  hc  theme  wa  star  war  understood  ready  face  evil  empire  rebel  spaceship  certain  attacking  power  want  send  spaceship  destroy  empire  base  steal  enough  gold  supply  order  keep  rebellion  alive  empire  ha  base  certain  defensive  power  certain  amount  gold  spaceship  attack  base  defensive  power  le  equal  attacking  power  spaceship  attack  base  steal  gold  base  rebel  still  undecided  spaceship  send  asked  doctor  help  would  like  know  spaceship  maximum  amount  gold  steal  contains  spaceship  base  respectively  second  contains  attacking  power  spaceship  next  defensive  power  gold  base  respectively  print  maximum  amount  gold  spaceship  steal  order  spaceship  given  input
602/A __label__implementation  __label__brute  force  seeing  base  belong  meme  time  realised  different  base  complicated  relation  given  represented  base  represented  base  compare  input  contains  space  separated  x  digit  based  representation  second  contains  space  separated  digit  given  order  significant  digit  least  significant  following  describe  way  third  contains  space  separated  bxy  digit  based  representation  fourth  contains  space  separated  digit  leading  positive  digit  given  standard  decimal  numeral  system  output  single  character  quote  clarity
441/D __label__math  __label__implementation  __label__graphs  __label__constructive  algorithms  permutation  length  sequence  distinct  permutation  identity  permutation  following  equation  hold  swap  operation  swap  element  permutation  let  assume  minimum  swap  need  make  permutation  identity  permutation  valera  wonder  transform  permutation  permutation  using  minimum  swap  help  contains  length  permutation  second  contains  distinct  valera  initial  permutation  last  contains  print  minimum  swap
1110/F __label__data  structures  __label__trees  let  define  eulerian  traversal  tree  connected  undirected  graph  without  cycle  follows  consider  depth  search  algorithm  traverse  vertex  tree  enumerates  order  visiting  visit  vertex  count  function  start  vertex  recursively  run  vertex  connected  edge  current  vertex  visited  increasing  order  formally  describe  function  using  following  pseudocode  nextid  array  length  filled  visited  array  length  filled  false  function  dfs  visited  true  nextid  nextid  neighbor  increasing  order  visited  dfs  given  weighted  tree  vertex  enumerated  using  algorithm  described  leaf  vertex  tree  connected  vertex  tree  given  vertex  leaf  distance  vertex  tree  sum  weight  edge  simple  path  answer  query  following  type  given  find  shortest  distance  vertex  leaf  index  inclusive  contains  vertex  tree  query  respectively  following  contains  denoting  edge  vertex  weight  guaranteed  given  edge  form  tree  vertex  enumerated  eulerian  traversal  order  vertex  index  leaf  next  describe  query  contains  describing  parameter  query  guaranteed  least  leaf  index  output  answer  query  order  given  input
493/A __label__implementation  vasya  ha  started  watching  football  game  ha  learned  foul  player  receive  yellow  card  foul  receive  red  card  player  receives  second  yellow  card  automatically  receives  red  card  vasya  watching  recorded  football  match  make  note  foul  would  give  card  help  vasya  determine  moment  time  player  would  given  red  card  vasya  judge  player  vasya  want  know  moment  time  would  receive  red  card  vasya  contains  name  team  playing  home  second  contains  name  team  playing  away  empty  length  exceed  contains  large  english  letter  name  team  distinct  next  follows  foul  following  contains  information  foul  following  form  go  minute  foul  occurs  go  letter  letter  letter  card  wa  given  home  team  player  otherwise  card  wa  given  away  team  player  go  player  go  letter  letter  letter  mean  yellow  card  wa  given  otherwise  red  card  wa  given  player  different  team  player  team  distinct  foul  chronologically  foul  happened  minute  event  player  received  red  card  chronological  order  print  string  containing  following  information
1023/D __label__data  structures  __label__constructive  algorithms  initially  wa  array  consisting  position  numbered  exactly  query  performed  array  query  segment  wa  selected  value  element  position  inclusive  got  changed  order  query  changed  query  applied  known  every  position  got  covered  least  segment  could  offered  problem  checking  given  array  consisting  value  obtained  aforementioned  query  decided  come  easy  enhancement  introduced  following  set  position  possibly  empty  array  selected  value  element  position  set  task  check  array  obtained  aforementioned  query  obtained  restore  array  multiple  possible  array  print  contains  element  array  query  perfomed  second  contains  resulting  array  element  position  equal  value  element  position  print  yes  array  obtained  performing  query  segment  chosen  separately  query  every  position  covered  least  segment
940/C __label__implementation  __label__constructive  algorithms  __label__strings  phone  given  string  consisting  lowercase  english  letter  find  lexicographically  smallest  string  length  set  letter  subset  set  letter  lexicographically  smaller  guaranteed  answer  exists  note  set  letter  set  multiset  example  set  letter  abadaba  string  lexicographically  smaller  string  prefix  equal  exists  satisfied  example  abc  lexicographically  smaller  abcd  abd  lexicographically  smaller  abec  afa  lexicographically  smaller  lexicographically  smaller  input  contains  space  separated  length  required  length  second  input  contains  string  consisting  lowercase  english  letter  output  string  conforming  requirement
696/D __label__dp  __label__data  structures  __label__strings  barney  wa  hanging  nora  think  feeling  barney  want  send  cheesy  text  message  want  make  happy  possible  initially  happiness  level  nora  nora  love  pickup  like  falling  stuff  totally  know  pickup  consisting  lowercase  english  letter  equal  writing  different  pronouncing  meaning  though  every  time  nora  see  pickup  consecutive  subsequence  barney  text  message  happiness  level  increase  substring  overlap  example  nora  see  pickup  twice  pickup  text  message  aaab  due  texting  app  limit  barney  text  character  barney  asked  help  make  nora  much  happy  possible  gon  na  legen  input  contains  pickup  maximum  length  barney  text  second  contains  meaning  nora  happiness  level  increase  every  time  seeing  pickup  next  pickup  contains  single  string  consisting  english  lowercase  letter  summary  length  pickup  doe  exceed  string  empty  print  maximum  possible  value  nora  happiness  level  reading  barney  text
838/B __label__data  structures  __label__dfs  __label__trees  given  directed  weighted  graph  node  edge  node  labeled  edge  labeled  graph  edge  split  part  edge  form  rooted  spanning  tree  node  root  edge  point  away  root  last  edge  node  node  given  query  type  query  change  weight  edge  print  length  shortest  path  node  given  query  print  shortest  path  length  input  node  query  respectively  next  denoting  directed  edge  node  node  weight  describe  rooted  spanning  tree  pointing  away  node  last  specifically  edge  describe  rooted  spanning  tree  pointing  away  node  n  n  n  distinct  next  describing  query  format  described  statement  edge  weight  type  query  print  length  shortest  path
615/B __label__dp  __label__graphs  christmas  santa  gave  masha  magic  picture  pencil  picture  consists  point  connected  segment  might  cross  way  matter  segment  connect  pair  point  segment  connects  point  masha  want  color  segment  order  paint  hedgehog  mashas  mind  every  hedgehog  consists  tail  spine  want  paint  tail  satisfies  following  condition  segment  already  presented  picture  painted  tail  continuous  consists  sequence  point  every  neighbouring  point  connected  colored  segment  point  beginning  tail  end  strictly  increase  masha  defines  length  tail  point  want  paint  spine  masha  paint  segment  end  endpoint  tail  masha  defines  beauty  hedgehog  length  tail  multiplied  spine  masha  want  color  beautiful  hedgehog  help  calculate  result  hope  get  note  according  masha  definition  hedgehog  segment  simultaneously  serve  spine  part  tail  little  girl  take  look  picture  clarification  input  contains  point  segment  picture  respectively  follow  containing  uii  point  connected  corresponding  segment  guaranteed  segment  connect  pair  point  print  maximum  possible  value  hedgehog  beauty
547/C __label__math  __label__dp  __label__number  theory  mike  bartender  rico  bar  rico  put  beer  glass  special  shelf  kind  beer  rico  numbered  kind  beer  ha  milliliter  foam  maxim  mike  bos  today  told  mike  perform  query  initially  shelf  empty  request  maxim  give  beer  already  shelf  mike  remove  shelf  otherwise  put  shelf  query  mike  tell  score  shelf  bear  geek  think  score  shelf  pair  glass  shelf  greatest  common  divisor  mike  tired  asked  help  performing  request  input  contains  different  kind  beer  query  next  contains  space  separated  height  foam  top  kind  beer  next  query  query  consists  single  index  beer  added  removed  shelf  query  print  answer  query
727/F __label__dp  __label__greedy  __label__binary  search  polycarp  experienced  participant  codehorses  programming  contest  want  become  problemsetter  sent  coordinator  set  problem  problem  ha  quality  quality  problem  positive  negative  equal  problem  ordered  expected  difficulty  difficulty  related  quality  way  easiest  problem  ha  index  hardest  problem  ha  index  coordinator  mood  equal  reading  problem  mood  change  quality  mean  coordinator  read  problem  quality  value  added  mood  coordinator  always  read  problem  easiest  hardest  impossible  change  order  problem  reading  problem  coordinator  mood  becomes  negative  immediately  stop  reading  reject  problemset  polycarp  want  remove  minimum  problem  problemset  make  coordinator  mood  non  negative  moment  time  polycarp  sure  current  coordinator  mood  ha  guess  current  coordinator  mood  guess  find  minimum  problem  polycarp  need  remove  coordinator  mood  always  greater  equal  read  problem  easiest  remaining  problem  hardest  input  contains  problem  problemset  guess  current  coordinator  mood  second  input  contains  quality  problem  order  increasing  difficulty  third  input  contains  guess  current  coordinator  mood  print  print  single  answer  problem
1218/F __label__greedy  __label__data  structures  alan  decided  get  shape  summer  created  precise  workout  plan  follow  plan  different  gym  every  day  next  day  lift  gram  day  order  improve  workout  performance  gym  buy  exactly  pre  workout  drink  gym  currently  improve  performance  gram  permanently  immediately  different  gym  pre  workout  drink  cost  different  amount  taste  gym  location  permanent  workout  gain  day  starting  workout  plan  alan  know  lift  maximum  gram  help  alan  spend  minimum  total  amount  money  order  reach  workout  plan  way  complete  workout  plan  successfully  output  contains  representing  day  workout  plan  many  gram  lift  starting  workout  plan  respectively  second  contains  separated  single  space  representing  many  gram  alan  want  lift  day  third  contains  representing  permanent  performance  gain  single  drink  last  contains  representing  cost  performance  booster  drink  gym  visit  day  representing  minimal  money  spent  finish  workout  plan  finish  workout  plan  output
756/F __label__math  __label__number  theory  consider  following  grammar  expression  term  expression  term  term  expression  posdigit  digit  digit  posdigit  posdigit  grammar  describes  decimal  system  using  following  rule  describes  l  describes  concatenation  written  without  leading  example  describes  expression  describes  concatenation  copy  described  expression  expression  term  describes  concatenation  described  expression  term  example  describes  given  expression  given  grammar  print  described  modulo  contains  non  empty  string  character  long  valid  according  given  grammar  particular  mean  term  l  hold  print  single  described  expression  modulo
1157/E __label__greedy  __label__data  structures  __label__binary  search  given  array  length  element  array  reorder  element  array  want  leave  order  element  let  array  array  length  element  array  modulo  task  reorder  element  array  obtain  lexicographically  minimum  possible  array  array  length  lexicographically  le  array  length  exists  input  contains  element  second  input  contains  element  third  input  contains  element  print  lexicographically  minimum  possible  array  recall  task  reorder  element  array  obtain  lexicographically  minimum  possible  array  element
587/F __label__data  structures  __label__strings  duff  mad  friend  sometimes  make  malek  take  candy  friend  reason  ha  friend  friend  name  name  necessarily  unique  time  asks  malek  take  candy  friend  angry  act  rule  want  ask  malek  take  candy  friend  like  chooses  tell  malek  take  exactly  candy  occur  occurrence  string  malek  able  calculate  many  candy  take  request  duff  asked  help  please  tell  many  candy  take  request  input  contains  next  name  contains  string  consisting  lowercase  english  letter  next  request  contains  say  malek  take  candy  duff  friend  print  answer  request
644/B __label__data  structures  __label__constructive  algorithms  problem  simulate  workflow  thread  server  query  process  received  moment  need  processed  unit  time  guaranteed  distinct  query  appears  server  react  possible  way  server  free  query  queue  empty  server  immediately  start  process  query  server  busy  le  query  queue  new  query  added  end  queue  server  busy  already  query  pending  queue  new  query  rejected  never  processed  soon  server  finished  process  query  pick  new  queue  empty  course  new  query  come  moment  server  finish  process  another  query  exactly  moment  consider  query  picked  queue  new  query  appears  query  find  moment  server  finish  process  print  query  rejected  input  contains  query  maximum  possible  size  query  queue  follow  query  description  chronological  order  description  consists  moment  time  query  appears  time  server  need  process  guaranteed  print  sequence  moment  server  finish  process  query  query  numbered  order  appear  input  corresponding  query  rejected
602/B __label__dp  __label__implementation  xellos  wa  practice  course  university  measure  intensity  effect  slowly  approached  equilibrium  good  way  determine  equilibrium  intensity  would  choosing  sufficiently  large  consecutive  data  point  seems  constant  possible  taking  average  course  usual  size  data  nothing  challenging  make  similar  programming  contest  problem  given  sequence  data  point  big  jump  consecutive  data  point  guaranteed  range  data  point  said  almost  constant  difference  largest  smallest  value  range  formally  let  maximum  minimum  value  l  range  almost  constant  find  length  longest  almost  constant  range  input  contains  single  data  point  second  contains  print  single  maximum  length  almost  constant  range  given  sequence
416/C __label__dp  __label__implementation  __label__greedy  __label__binary  search  innovation  technology  victorious  march  around  planet  integrate  sphere  human  activity  restaurant  called  dijkstra  place  ha  started  thinking  optimizing  booking  system  booking  request  received  request  characterized  size  group  visitor  come  via  request  total  sum  money  spend  restaurant  correspondingly  know  request  people  want  sit  table  going  spend  whole  evening  restaurant  opening  moment  closing  moment  unfortunately  table  restaurant  table  know  maximum  people  sit  table  people  group  sitting  find  large  enough  table  whole  group  visitor  leave  naturally  pay  nothing  task  given  table  request  decide  request  accept  request  decline  money  paid  happy  full  visitor  wa  maximum  input  contains  request  visitor  follow  contains  size  group  visitor  come  request  total  sum  money  pay  visit  restaurant  correspondingly  next  contains  table  restaurant  last  contains  space  separated  maximum  people  sit  table  print  accepted  request  total  money  get  request  correspondingly
856/A __label__constructive  algorithms  __label__brute  force  masha  grisha  like  studying  set  positive  day  grisha  ha  written  set  containing  different  blackboard  asks  masha  create  set  containing  different  obtained  summing  possible  pair  different  masha  grisha  like  big  must  range  help  masha  create  set  satisfies  grisha  requirement  data  contains  multiple  test  case  contains  test  case  test  case  described  following  way  description  contains  element  second  contains  element  test  print  answer
1194/C __label__implementation  __label__strings  given  string  consisting  lowercase  latin  letter  perform  possibly  operation  string  operation  choose  character  erase  insert  string  insert  character  anywhere  want  beginning  end  consecutive  character  example  aba  following  outcome  possible  character  erase  insert  highlighted  aba  ade  aba  dae  aba  dea  aba  bde  aba  dbe  aba  deb  aba  ade  aba  dae  aba  dea  goal  perform  several  maybe  operation  becomes  equal  please  determine  whether  possible  note  answer  independent  query  contains  query  query  represented  consecutive  query  contains  string  consisting  lowercase  latin  letter  second  query  contains  string  consisting  lowercase  latin  letter  third  query  contains  string  consisting  lowercase  latin  letter  query  print  yes  possible  make  equal  otherwise
935/C __label__geometry  fifa  fafa  sharing  flat  fifa  love  video  game  want  download  new  soccer  game  unfortunately  fafa  heavily  us  internet  consumes  quota  fifa  access  internet  access  point  access  point  accessed  range  meter  range  chosen  fifa  position  fifa  must  put  access  point  inside  flat  ha  circular  shape  radius  fifa  want  minimize  area  covered  access  point  inside  flat  without  letting  fafa  anyone  outside  flat  get  access  internet  world  represented  infinite  plane  flat  centered  ha  radius  fafa  laptop  located  necessarily  inside  flat  find  position  radius  chosen  fifa  access  point  minimizes  uncovered  area  single  input  contains  space  separated  print  space  separated  xap  ap  xap  ap  position  fifa  chose  access  point  radius  range
575/E __label__geometry  riot  time  football  stadium  ramacana  raging  fan  entered  field  police  find  difficult  situation  field  represented  square  coordinate  system  defined  diagonal  vertex  side  square  considered  inside  field  everything  else  outside  beginning  fan  field  fan  given  speed  well  coordinate  fan  coordinate  might  move  second  might  point  point  outside  square  represents  field  excluded  others  equal  probability  location  specific  fan  second  andrej  young  promising  police  officer  ha  sent  flying  drone  take  photo  riot  drone  camera  work  like  selects  point  coordinate  chance  fan  appearing  second  must  collinear  camera  work  guaranteed  initial  position  fan  camera  focus  point  creates  circle  pass  point  photo  taken  second  second  initial  state  everything  circle  inside  moment  taking  photo  second  focusing  point  photo  goal  select  point  expected  fan  seen  photo  maximized  selection  select  point  give  circle  largest  radius  still  suitable  selection  accepted  answer  follows  condition  radius  circle  return  smaller  optimal  output  considered  correct  test  optimal  radius  bigger  contains  fan  field  next  coordinate  coordinate  speed  fan  beginning  second  interval  considered  task  need  output  point  camera  need  select  print  every  containing  coordinate  coordinate  separated  single  space  order  point  doe  matter
579/B __label__implementation  __label__sortings  __label__brute  force  programing  contest  named  snakeup  people  want  compete  order  attend  contest  people  need  form  team  exactly  people  given  strength  possible  combination  people  value  strength  distinct  every  contestant  hope  find  teammate  team  strength  high  possible  contestant  form  team  highest  strength  possible  choosing  teammate  willing  teammate  formally  people  form  team  best  possible  teammate  contestant  remain  unpaired  determine  person  teammate  input  contains  team  formed  contains  ai  ai  aij  ij  aij  distinct  denotes  strength  team  consisting  person  person  people  numbered  starting  output  containing  represent  teammate  person
671/B __label__greedy  __label__binary  search  know  impressive  story  robin  hood  robin  hood  us  archery  skill  wit  steal  money  rich  return  poor  citizen  kekoland  person  ha  coin  day  robin  hood  take  exactly  coin  richest  person  city  give  poorest  person  poorest  person  right  taking  richest  coin  case  choice  unique  select  random  sadly  robin  hood  old  want  retire  day  decided  spend  last  day  helping  poor  people  taking  money  taken  robin  hood  richest  person  become  poorest  person  well  might  even  happen  robin  hood  give  money  back  example  people  coin  next  day  coin  task  find  difference  richest  poorest  person  wealth  day  note  choosing  random  richest  poorest  affect  answer  input  contains  citizen  kekoland  day  left  till  robin  hood  retirement  second  contains  initial  wealth  person  print  single  containing  difference  richest  poorest  people  wealth
1000/G __label__dp  __label__data  structures  __label__trees  given  weighted  tree  undirected  connected  graph  cycle  loop  multiple  edge  vertex  edge  ha  weight  vertex  ha  value  assigned  let  call  path  starting  vertex  ending  vertex  edge  appear  twice  regardless  direction  path  vertex  appear  path  multiple  time  even  start  end  vertex  path  profit  vistinct  vertex  eistinct  edge  time  edge  appears  vertex  counted  edge  counted  time  appear  answer  query  query  pair  vertex  query  find  path  maximal  profit  contains  vertex  tree  query  second  contains  space  separated  value  vertex  next  description  edge  contains  space  separated  edge  weight  tree  next  query  per  query  contains  endpoint  path  need  find  query  print  per  maximal  profit  path  corresponding  endpoint
1056/D __label__dp  __label__greedy  __label__sortings  __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  apple  tree  arkady  garden  represented  set  junction  connected  branch  way  reach  junction  using  branch  junction  enumerated  junction  called  root  subtree  junction  set  junction  path  root  must  pas  note  included  subtree  leaf  junction  subtree  contains  exactly  junction  new  year  coming  arkady  want  decorate  tree  put  light  bulb  color  leaf  junction  count  happy  junction  happy  junction  junction  light  bulb  subtree  different  color  arkady  interested  following  question  minimum  different  color  needed  make  happy  junction  greater  equal  contains  single  junction  tree  second  contains  mean  branch  junction  guaranteed  set  branch  form  tree  output  minimum  color  needed  make  happy  junction  least
264/A __label__implementation  __label__data  structures  __label__constructive  algorithms  squirrel  li  lived  forest  peacefully  unexpected  trouble  happens  stone  fall  mountain  initially  squirrel  li  occupies  interval  next  stone  fall  li  escape  stone  stone  numbered  order  stone  always  fall  center  li  interval  li  occupies  interval  stone  fall  escape  left  right  escape  left  new  interval  escape  right  new  interval  given  string  length  character  stone  fall  li  escape  left  right  respectively  find  sequence  stone  left  right  stone  fall  input  consists  contains  string  character  either  output  print  stone  left
1098/A __label__greedy  __label__dfs  __label__trees  __label__constructive  algorithms  mitya  ha  rooted  tree  vertex  indexed  root  ha  index  vertex  initially  written  every  vertex  mitya  ha  computed  sum  value  written  vertex  path  vertex  root  well  depth  vertex  denotes  vertex  path  vertex  root  clearly  mitya  erased  accident  erased  value  vertex  even  depth  vertex  even  task  restore  value  every  vertex  determine  mitya  made  mistake  case  multiple  way  restore  value  required  find  minimizes  total  sum  value  vertex  tree  contains  vertex  tree  following  contains  stand  parent  vertex  index  tree  last  contains  value  erased  value  replaced  output  minimum  total  sum  value  original  tree  tree  doe  exist
732/D __label__greedy  __label__sortings  __label__binary  search  vasiliy  ha  exam  period  continue  day  ha  pas  exam  subject  subject  numbered  every  day  know  exam  subject  passed  day  perhaps  day  pas  exam  allowed  pas  exam  day  day  vasiliy  either  pas  exam  day  take  whole  day  prepare  day  exam  rest  subject  vasiliy  know  day  prepare  pas  exam  vasiliy  switch  subject  preparing  exam  necessary  prepare  continuously  day  exam  mix  order  preparation  exam  way  task  determine  minimum  day  vasiliy  pas  exam  determine  impossible  exam  passed  exactly  time  contains  day  exam  period  subject  second  contains  subject  exam  passed  day  equal  allowed  pas  exam  day  third  contains  positive  day  needed  prepare  passing  exam  subject  print  minimum  day  vasiliy  pas  exam  impossible  print
848/B __label__implementation  __label__data  structures  __label__sortings  __label__constructive  algorithms  __label__geometry  wherever  destination  whoever  meet  let  render  song  together  cartesian  coordinate  plane  lie  rectangular  stage  size  w  represented  rectangle  corner  seen  collision  happen  enters  stage  side  stage  stand  dancer  fall  following  group  vertical  stand  move  positive  direction  upwards  horizontal  stand  move  positive  direction  rightwards  according  choreography  dancer  stand  still  millisecond  start  moving  specified  direction  unit  per  millisecond  another  border  reached  guaranteed  dancer  group  position  waiting  time  time  dancer  collide  point  time  moving  immediately  exchange  moving  direction  dancer  stop  border  stage  reached  find  every  dancer  stopping  position  input  contains  space  separated  positive  dancer  width  height  stage  respectively  following  describes  dancer  contains  space  separated  describing  dancer  group  vertical  horizontal  position  waiting  time  otherwise  guaranteed  guaranteed  dancer  group  position  waiting  time  time  output  contains  space  separated  stopping  position  dancer  input
914/B __label__implementation  __label__greedy  edogawa  conan  got  tired  solving  case  invited  friend  professor  agasa  decided  play  game  card  conan  ha  card  card  ha  written  take  turn  playing  starting  conan  turn  player  chooses  card  remove  remove  card  strictly  lesser  chosen  card  formally  player  chooses  card  remove  card  remove  card  player  loses  make  move  turn  loses  card  left  predict  outcome  game  assuming  player  play  optimally  contains  card  conan  ha  next  contains  card  conan  win  print  conan  without  quote  otherwise  print  agasa  without  quote
1044/C __label__dp  __label__geometry  given  point  plane  polygon  formed  point  strictly  convex  polygon  convex  collinear  point  lying  straight  point  numbered  clockwise  order  define  distance  point  manhattan  distance  x  furthermore  define  perimeter  polygon  sum  manhattan  distance  adjacent  pair  point  point  polygon  ordered  perimeter  polygon  parameter  let  consider  polygon  formed  given  set  point  vertex  polygon  self  intersecting  polygon  let  consider  perimeter  perimeter  define  maximal  perimeter  please  note  checking  whether  polygon  self  intersecting  edge  polygon  still  drawn  straight  instance  following  picture  middle  polygon  order  point  valid  since  self  intersecting  polygon  right  polygon  whose  edge  resemble  manhattan  distance  ha  order  self  intersecting  consider  edge  straight  correct  way  draw  polygon  left  polygon  task  compute  word  find  maximum  possible  perimeter  possible  point  contains  single  point  next  contains  coordinate  point  set  point  guaranteed  convex  point  distinct  point  ordered  clockwise  order  collinear  point  output
533/D __label__dp  __label__data  structures  old  building  column  row  column  support  ceiling  column  located  point  coordinate  leftmost  rightmost  column  special  call  bearing  column  ordinary  column  know  durability  let  consider  ordinary  column  coordinate  let  assume  coordinate  closest  column  left  bearing  ordinary  coordinate  closest  column  right  bearing  ordinary  task  let  assume  column  support  segment  ceiling  point  point  fraction  considered  real  division  length  segment  ceiling  supported  column  exceeds  column  support  crash  load  redistributeed  neighbouring  column  according  principle  thus  ordinary  column  crashing  time  process  stop  state  prove  set  remaining  column  depend  order  column  crash  bearing  column  left  end  assume  whole  construction  crash  weight  roof  least  ordinary  column  stay  addition  bearing  building  crash  make  building  stronger  add  extra  ordinary  column  arbitrary  durability  necessarily  point  point  already  occupied  ordinary  column  replaced  new  task  find  minimal  durability  added  column  building  crash  contains  ordinary  column  second  contains  coordinate  column  third  contains  print  single  minimum  possible  durability  column  need  add  order  make  building  stay  add  column  please  print  answer  checked  relative  absolute  error
402/D __label__math  __label__dp  __label__greedy  __label__number  theory  array  positive  set  bad  prime  prime  occur  set  considered  good  beauty  array  sum  function  determined  follows  let  assume  minimum  prime  divisor  good  prime  otherwise  allowed  perform  arbitrary  probably  operation  improve  array  operation  improvement  following  sequence  action  choose  calculate  value  gcd  apply  assignment  maximum  beauty  array  get  contains  showing  many  array  many  bad  prime  second  contains  space  separated  array  third  contains  space  separated  set  bad  prime  print  single  answer  problem
1197/D __label__math  __label__dp  __label__greedy  given  array  choose  subarray  cost  subarray  equal  least  greater  equal  cost  empty  subarray  equal  example  cost  subarrays  task  find  maximum  cost  subarray  possibly  empty  array  contains  second  contains  print  maximum  cost  subarray  array
1097/E __label__greedy  __label__constructive  algorithms  saturday  afternoon  egor  wa  playing  favorite  rpg  game  discovering  new  land  territory  came  following  sign  egor  passionate  player  algorithmician  well  instantly  spotted  common  letter  word  sign  permute  letter  word  obtain  letter  egor  got  inspired  sign  right  away  came  problem  permutation  given  permutation  length  split  non  empty  subsequence  element  permutation  belongs  exactly  subsequence  subsequence  must  monotonic  either  increasing  decreasing  sequence  called  subsequence  derived  permutation  deleting  possibly  none  element  without  changing  order  remaining  element  subsequence  small  enough  let  minimum  every  permutation  length  partitioned  monotonic  subsequence  need  split  permutation  monotonic  subsequence  contains  test  case  use  hack  next  description  test  case  come  following  format  single  test  case  contains  length  permutation  second  contains  distinct  permutation  sum  value  test  case  exceed  test  case  print  answer  following  format
1188/C __label__dp  let  call  beauty  array  min  min  given  array  calculate  sum  beauty  subsequence  array  length  exactly  large  output  modulo  sequence  subsequence  array  obtained  deletion  several  possibly  element  contains  second  contains  output  sum  beauty  subsequence  array  length  exactly  large  output  modulo
12/D __label__data  structures  __label__sortings  lady  attend  ball  king  palace  every  lady  described  value  beauty  intellect  richness  king  master  ceremony  know  lady  special  creature  lady  understands  lady  ball  beautiful  smarter  rich  jump  window  know  value  lady  want  find  many  probable  self  murderer  ball  let  denote  beauty  lady  intellect  richness  lady  probable  self  murderer  lady  find  probable  self  murderer  contains  second  contains  separated  single  space  third  fourth  sequence  format  guaranteed  output  answer  problem
1154/D __label__greedy  robot  staying  axis  ha  walk  controlling  robot  controlling  go  robot  ha  battery  accumulator  solar  panel  segment  path  exposed  sunlight  array  denotes  segment  exposed  sunlight  segment  exposed  otherwise  robot  ha  battery  capacity  accumulator  capacity  segment  choose  type  energy  storage  robot  use  next  point  either  battery  accumulator  robot  go  using  battery  current  charge  battery  decreased  robot  use  battery  charge  robot  go  using  accumulator  current  charge  accumulator  decreased  robot  use  accumulator  charge  current  segment  exposed  sunlight  robot  go  using  battery  charge  accumulator  increase  course  charge  become  higher  maximum  capacity  accumulator  used  pas  segment  charge  decrease  matter  segment  exposed  understand  always  possible  walk  want  robot  far  possible  find  maximum  segment  distance  robot  pas  control  optimally  input  contains  robot  destination  point  battery  capacity  accumulator  capacity  respectively  second  input  contains  segment  distance  exposed  sunlight  otherwise  print  maximum  segment  robot  pas  control  optimally
513/A __label__math  __label__constructive  algorithms  player  play  simple  game  player  provided  box  ball  player  box  contains  exactly  ball  second  player  box  contains  exactly  ball  move  player  take  ball  box  throw  away  similarly  second  player  take  ball  box  move  player  alternate  turn  player  start  game  make  move  loses  task  determine  win  player  play  optimally  contains  input  problem  subproblems  get  point  correct  submission  output  player  win  second  otherwise
1034/D __label__data  structures  __label__binary  search  little  friend  little  love  interval  much  instead  ha  interval  axis  interval  satisfy  defines  value  interval  interval  total  length  union  interval  want  select  exactly  different  interval  interval  sum  value  maximal  please  help  calculate  maximal  sum  contains  interval  little  ha  interval  interval  select  next  contains  describing  interval  print  maximal  sum  value  little  get
475/C __label__greedy  __label__constructive  algorithms  __label__brute  force  rumor  say  kamal  molk  painting  ha  altered  rectangular  brush  ha  moved  right  painting  consider  painting  n  rectangular  grid  beginning  x  rectangular  brush  placed  somewhere  frame  edge  parallel  frame  brush  moved  several  time  time  brush  moved  unit  right  brush  ha  strictly  inside  frame  painting  brush  alters  every  cell  ha  covered  moment  found  old  kamal  molk  painting  want  know  possible  ha  altered  described  manner  yes  want  know  minimum  possible  area  brush  input  contains  denoting  height  width  painting  next  painting  ha  character  character  denotes  altered  cell  otherwise  showed  least  altered  cell  painting  print  minimum  area  brush  painting  possibly  altered  otherwise  print
631/D __label__implementation  __label__data  structures  __label__strings  employee  blake  techologies  company  us  special  messaging  app  blake  messenger  stuff  like  app  us  constantly  important  future  missing  example  many  user  want  able  search  message  history  wa  already  announced  new  feature  appear  nearest  update  developer  faced  trouble  help  solve  message  represented  string  consisting  lowercase  english  letter  order  reduce  network  load  string  represented  special  compressed  form  compression  algorithm  work  follows  string  represented  concatenation  block  block  containing  equal  character  block  described  pair  length  block  corresponding  letter  thus  string  written  sequence  pair  task  write  program  given  compressed  string  find  occurrence  developer  know  many  occurrence  ask  find  note  starting  position  occurrence  tptp  character  string  note  way  represent  string  compressed  form  unique  example  string  aaaa  given  input  contains  block  string  respectively  second  contains  description  part  string  format  length  part  corresponding  lowercase  english  letter  second  contains  description  part  string  format  length  part  corresponding  lowercase  english  letter  print  single  occurrence
709/A __label__implementation  kolya  going  make  fresh  orange  juice  ha  orange  size  kolya  put  juicer  fixed  order  starting  orange  size  orange  size  put  juicer  orange  must  size  exceeding  kolya  see  orange  strictly  greater  throw  away  continues  next  juicer  ha  special  section  collect  waste  overflow  kolya  squeeze  orange  total  size  strictly  greater  happens  kolya  empty  waste  section  even  orange  continues  squeeze  juice  many  time  empty  waste  section  input  contains  orange  maximum  size  orange  fit  juicer  value  determines  condition  waste  section  emptied  second  contains  size  orange  listed  order  kolya  going  try  put  juicer  print  time  kolya  empty  waste  section
804/C __label__greedy  __label__dfs  __label__constructive  algorithms  isart  modsart  trying  solve  interesting  problem  suddenly  kasra  arrived  breathless  asked  solve  problem  stuck  day  tree  vertex  type  ice  cream  numerated  vertex  ha  set  type  ice  cream  vertex  type  ice  cream  form  connected  subgraph  build  new  graph  vertex  put  edge  u  vertex  exists  vertex  ha  type  ice  cream  set  problem  paint  vertex  minimum  possible  color  way  adjacent  vertex  color  please  note  consider  empty  set  vertex  form  connected  subgraph  problem  usual  modsart  like  abandon  previous  problem  isart  want  solve  new  problem  contains  vertex  ice  cream  type  follow  single  distinct  type  ice  cream  vertex  sum  exceed  follow  describes  edge  tree  index  connected  edge  vertex  print  single  minimum  color  paint  vertex  graph
954/B __label__implementation  __label__strings  given  string  consisting  lowercase  latin  letter  type  string  using  keyboard  initially  empty  string  type  whole  string  perform  following  operation  add  character  end  string  besides  perform  additional  operation  copy  string  append  example  type  string  abcabca  type  operation  type  character  type  operation  type  string  abc  copy  type  last  character  type  string  aaaaaaaaa  best  option  type  character  copy  string  type  remaining  character  print  minimum  operation  need  type  given  string  input  containing  length  string  type  second  containing  string  consisting  lowercase  latin  letter  print  minimum  operation  need  type  given  string
467/C __label__dp  __label__implementation  new  itone  ha  released  recently  george  got  really  keen  buy  unfortunately  enough  money  george  wa  going  work  programmer  faced  following  problem  work  given  sequence  choose  pair  kk  way  value  sum  maximal  possible  help  george  cope  task  contains  second  contains  print  single  maximum  possible  value  sum
1175/E __label__dp  __label__implementation  __label__greedy  __label__data  structures  __label__dfs  __label__trees  given  interval  form  given  query  form  minimal  interval  take  every  point  necessarily  covered  least  choose  interval  every  point  covered  print  query  contains  interval  query  respectively  next  contains  given  interval  next  contains  query  print  answer  query  either  minimal  interval  take  every  point  necessarily  covered  least  choose  interval  every  point  covered
850/A __label__math  __label__brute  force  __label__geometry  given  set  point  dimensional  space  point  labeled  point  coincide  call  point  bad  different  point  equal  given  set  angle  vector  acute  strictly  le  otherwise  point  called  good  angle  vector  dimensional  space  defined  scalar  product  length  given  list  point  print  index  good  point  ascending  order  input  contains  single  point  next  input  coordinate  point  point  distinct  print  single  good  point
1218/I __label__greedy  __label__dfs  birthday  alice  received  interesting  gift  friend  light  square  light  square  game  played  nn  lightbulb  square  board  magical  lightbulb  bar  size  n  ha  magical  property  start  game  light  square  board  magical  bar  turned  goal  game  transform  starting  light  square  board  pattern  pattern  using  magical  bar  without  rotating  square  board  magical  bar  work  follows  placed  row  column  orientation  magical  lightbulb  must  left  right  top  bottom  keep  magical  property  entire  bar  need  fully  placed  board  light  magical  bar  never  change  light  magical  bar  light  square  placed  switch  light  square  board  otherwise  switch  light  magical  bar  used  infinite  time  alice  ha  hard  time  transforming  square  board  pattern  bob  gave  help  transform  board  let  know  impossible  multiple  solution  print  contains  positive  representing  size  square  board  next  string  length  consisting  representing  initial  state  square  board  starting  top  row  character  string  mean  light  turned  otherwise  next  string  length  consisting  representing  desired  state  square  board  starting  top  row  wa  given  alice  bob  last  string  length  consisting  representing  pattern  magical  bar  left  right  order  transform  instruction  alice  order  transform  square  board  pattern  bob  gave  output  contains  representing  time  alice  need  apply  magical  bar
798/C __label__dp  __label__greedy  __label__number  theory  mike  ha  sequence  length  considers  sequence  beautiful  gcd  element  bigger  mike  want  change  sequence  order  make  beautiful  move  choose  index  delete  put  place  instead  order  want  perform  operation  possible  find  minimal  operation  make  sequence  beautiful  possible  tell  impossible  biggest  non  negative  divide  every  contains  single  length  sequence  second  contains  space  separated  element  sequence  output  yes  without  quote  possible  make  sequence  beautiful  performing  operation  described  without  quote  otherwise
757/D __label__dp  gym  leader  fascinated  evolution  took  place  felicity  camp  curious  know  secret  behind  evolving  pokemon  organizer  camp  gave  gym  leader  pokeblock  sequence  ingredient  ingredient  type  organizer  told  gym  leader  evolve  pokemon  type  k  need  make  valid  set  cut  pokeblock  get  smaller  block  suppose  given  pokeblock  sequence  b  b  b  choice  making  cut  place  choice  making  cut  follows  denotes  possible  cut  consider  sequence  cut  pair  consecutive  cut  binary  string  formed  ingredient  type  ingredient  cut  last  cut  wasted  say  considered  exactly  binary  substring  every  substring  read  binary  let  maximum  obtained  obtained  positive  set  obtained  contains  set  cut  said  valid  set  cut  example  suppose  given  pokeblock  sequence  made  cut  following  way  binary  substring  obtained  correspond  respectively  maximum  value  obtained  obtained  positive  obtained  hence  set  cut  valid  set  cut  pokemon  type  evolve  pokeblock  cut  using  valid  set  cut  many  valid  set  size  valid  set  cut  considered  different  cut  set  set  let  denote  valid  set  cut  find  value  since  value  large  output  modulo  input  consists  consists  length  pokeblock  next  contains  pokeblock  binary  string  length  output  single  containing  answer  problem  value  modulo
552/D __label__math  __label__data  structures  __label__sortings  __label__brute  force  __label__geometry  vanya  got  bored  painted  distinct  point  plane  connected  point  pairwise  saw  result  many  triangle  formed  vertex  painted  point  asks  count  formed  triangle  non  area  contains  point  painted  plane  next  coordinate  point  guaranteed  given  point  coincide  print  triangle  non  area  painted  point
819/E __label__graphs  __label__constructive  algorithms  order  fly  moon  mister  need  solve  following  problem  complete  indirected  graph  vertex  need  cover  several  simple  cycle  length  edge  exactly  cycle  sure  mister  solve  problem  soon  fly  moon  contains  single  answer  print
932/D __label__dp  __label__trees  __label__binary  search  given  node  tree  index  weight  let  cnt  node  tree  instant  initially  cnt  set  support  query  following  type  add  new  node  index  cnt  weight  add  edge  node  node  output  maximum  length  sequence  node  start  every  node  sequence  ancestor  predecessor  sum  weight  node  sequence  doe  exceed  node  consecutive  sequence  ancestor  exist  node  simple  path  tree  rooted  node  instant  note  query  given  modified  way  containing  query  let  last  answer  previous  query  type  initially  last  equal  next  contains  query  following  form  query  type  guaranteed  nt  query  second  type  guaranteed  nt  denotes  bitwise  xor  guaranteed  least  query  type  exists  output  answer  query  second  type  separate
1095/D __label__implementation  kid  numbered  dancing  circle  around  christmas  tree  let  enumerate  clockwise  direction  distinct  permutation  let  next  kid  kid  kid  otherwise  dance  kid  remembered  kid  next  kid  let  call  next  kid  kid  told  kid  remembered  kid  remembered  kid  order  differ  order  circle  example  kid  circle  cyclic  shift  information  kid  remembered  restore  order  kid  circle  using  information  several  answer  print  guaranteed  least  solution  exists  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  kid  next  contains  kid  kid  remembered  given  arbitrary  order  print  permutation  corresponds  order  kid  circle  several  answer  print  example  matter  kid  circle  guaranteed  least  solution  exists
1017/B __label__math  __label__implementation  rudolf  way  castle  getting  castle  security  staff  asked  question  given  binary  length  many  different  way  swapping  digit  bitwise  changed  word  let  bitwise  need  find  way  swapping  bit  bitwise  equal  note  binary  leading  length  exactly  bitwise  binary  operation  result  binary  contains  digit  least  example  well  surprise  rudolf  need  help  security  staff  please  find  way  swapping  bit  bitwise  changed  contains  bit  second  contains  binary  length  third  contains  binary  length  print  way  swap  bit  bitwise  changed
444/D __label__strings  __label__binary  search  dzy  love  string  enjoys  collecting  china  many  people  like  use  string  containing  name  initial  example  xyz  jcvb  dzy  dyh  dzy  found  lucky  string  lot  pair  good  friend  came  dzy  heard  news  member  pair  ha  name  second  ha  name  pair  wondered  substring  lucky  string  containing  name  want  find  minimum  length  give  good  luck  make  friendship  last  forever  please  help  dzy  pair  find  minimum  length  substring  contains  point  substring  exist  substring  string  slsl  length  substring  string  contains  another  string  substring  equal  contains  string  second  contains  non  negative  pair  next  describes  pair  contains  space  separated  string  guaranteed  string  consist  lowercase  english  letter  pair  print  containing  single  minimum  length  required  substring  substring  output
540/B __label__implementation  __label__greedy  little  vova  study  programming  elite  school  vova  classmate  supposed  write  progress  test  test  get  mark  vova  smart  write  every  test  mark  want  stand  crowd  much  sum  mark  test  exceeds  value  classmate  notice  smart  start  distracting  asking  let  copy  homework  median  mark  lower  point  definition  median  given  note  mom  decide  get  many  bad  mark  forbid  play  computer  game  vova  ha  already  wrote  test  got  mark  want  get  second  situation  described  need  determine  mark  need  get  remaining  test  help  contains  space  separated  odd  n  test  vova  planned  write  test  ha  already  written  maximum  possible  mark  test  maximum  total  point  classmate  disturb  vova  minimum  median  point  mom  still  let  play  computer  game  second  contains  space  separated  mark  vova  got  test  ha  already  written  vova  achieve  desired  result  print
1152/C __label__math  __label__brute  force  __label__number  theory  neko  love  divisor  latest  theory  lesson  got  interesting  exercise  math  teacher  neko  ha  goal  find  non  negative  least  common  multiple  smallest  possible  multiple  optimal  need  choose  smallest  given  mathematical  talent  neko  trouble  getting  wrong  answer  problem  help  solve  contains  print  smallest  non  negative  lowest  common  multiple  smallest  possible
853/B __label__greedy  __label__sortings  country  metropolia  holding  olympiad  metrpolises  soon  mean  jury  member  olympiad  meet  together  metropolis  capital  country  problem  preparation  process  city  consecutively  numbered  city  metropolis  meeting  point  jury  member  city  exactly  jury  member  living  olympiad  preparation  long  demanding  process  requires  day  work  day  jury  member  present  metropolis  able  work  problem  know  flight  schedule  country  jury  member  consider  important  enough  use  flight  transportation  flight  metropolia  either  going  metropolis  metropolis  night  flight  metropolia  word  plane  always  take  day  arrives  arrival  day  departure  day  jury  member  able  discus  olympiad  flight  megapolia  depart  arrive  day  gather  everybody  day  capital  hard  objective  spending  minimum  possible  money  even  harder  nevertheless  task  arrange  cheapest  way  bring  jury  member  metrpolis  work  together  day  send  back  home  city  cost  arrangement  defined  total  cost  ticket  used  flight  allowed  jury  member  stay  metropolis  day  input  contains  following  contains  description  flight  defined  exactly  equal  day  departure  arrival  departure  city  arrival  city  ticket  cost  output  minimum  cost  gathering  jury  member  city  day  sending  back  home  city
748/C __label__math  __label__constructive  algorithms  santa  claus  ha  robot  life  infinite  grid  move  along  sequence  point  coordinate  following  denote  initial  location  robot  move  along  shortest  path  please  notice  since  robot  move  along  grid  several  shortest  path  reach  move  choosing  shortest  way  ha  visited  point  given  order  point  sequence  coincide  case  robot  visit  point  several  time  according  sequence  order  santa  wa  away  someone  gave  sequence  point  robot  sequence  lost  robot  saved  protocol  unit  movement  please  find  minimum  possible  length  sequence  input  contains  positive  equal  unit  segment  robot  traveled  second  contains  movement  protocol  consists  letter  equal  either  letter  stand  direction  robot  traveled  unit  segment  mean  moved  left  right  top  bottom  look  illustration  better  explanation  input  minimum  possible  length  sequence
514/B __label__math  __label__implementation  __label__data  structures  __label__brute  force  __label__geometry  imperial  stormtroopers  field  battle  field  plane  cartesian  coordinate  system  stormtrooper  associated  coordinate  plane  han  solo  ha  newest  duplex  lazer  gun  fight  stormtroopers  situated  point  shot  destroy  stormtroopers  situated  cross  point  task  determine  minimum  shot  han  solo  need  defeat  stormtroopers  gun  newest  invention  shoot  quickly  even  large  shot  stormtroopers  enough  time  realize  happening  change  location  contains  stormtroopers  battle  field  coordinate  gun  next  coordinate  stormtroopers  battlefield  guaranteed  stormtrooper  stand  point  gun  multiple  stormtroopers  stand  point  print  single  minimum  shot  han  solo  need  destroy  stormtroopers
1251/E1 __label__dp  __label__greedy  __label__data  structures  difference  easy  hard  version  constraint  election  held  berland  want  win  precisely  want  everyone  vote  voter  way  convince  vote  way  convince  voter  pay  coin  second  way  make  voter  vote  voter  vote  free  moreover  process  voting  take  place  several  step  example  voter  buy  vote  fifth  voter  eventually  everyone  vote  set  people  voting  change  follows  calculate  minimum  coin  spend  everyone  vote  contains  test  case  test  case  contains  voter  next  contains  description  voter  contains  guaranteed  sum  test  case  doe  exceed  test  case  print  minimum  coin  spend  everyone  vote
883/A __label__implementation  automatic  door  entrance  factory  door  work  following  way  several  people  come  door  closed  door  immediately  open  automatically  people  immediately  come  inside  several  people  come  door  open  people  immediately  come  inside  opened  door  immediately  close  second  opening  door  closing  several  people  coming  door  moment  enough  time  enter  door  close  example  people  coming  different  moment  time  door  open  time  moment  close  moment  known  employee  enter  moment  value  positive  client  enter  moment  write  program  find  time  automatic  door  open  assume  door  initially  closed  contains  employee  client  moment  time  employee  come  period  time  door  close  second  contains  sequence  moment  time  client  come  value  given  non  decreasing  order  print  time  door  open
641/C __label__implementation  __label__constructive  algorithms  __label__brute  force  little  artem  fond  dancing  dance  artem  like  rueda  cuban  dance  danced  pair  boy  girl  forming  circle  dancing  together  detailed  pair  boy  girl  standing  circle  initially  boy  dance  girl  boy  dance  girl  girl  numbered  clockwise  order  dance  different  move  announced  pair  perform  move  performing  move  boy  move  along  circle  girl  always  stay  initial  position  purpose  problem  consider  different  type  move  value  direction  announced  boy  move  position  corresponding  direction  boy  dancing  even  indexed  girl  swap  position  boy  dancing  odd  indexed  girl  wa  dancing  girl  swap  wa  dancing  girl  wa  dancing  girl  swap  wa  dancing  girl  guaranteed  even  task  determine  final  position  boy  input  contains  couple  rueda  command  perform  respectively  guaranteed  even  next  description  command  command  ha  type  command  type  given  mean  boy  move  girl  clockwise  direction  mean  boy  move  position  counter  clockwise  direction  input  command  second  type  output  equal  index  boy  girl  dancing  performing  move
302/A __label__implementation  eugeny  ha  array  consisting  equal  ha  query  query  given  pair  ii  response  query  element  array  rearranged  sum  ali  li  ri  otherwise  response  query  help  eugeny  answer  query  contains  second  contains  next  eugene  query  contains  ii  print  response  eugene  query  order  occur  input
519/B __label__implementation  __label__data  structures  __label__sortings  preparing  programming  contest  love  debug  code  run  solution  start  debugging  ha  compile  code  initially  compiler  displayed  compilation  error  represented  positive  effort  managed  fix  mistake  another  mistake  despite  fact  sure  corrected  error  understand  exactly  compilation  error  disappeared  compiler  language  us  show  error  new  order  every  time  sure  unlike  many  programming  language  compilation  error  programming  language  depend  correct  error  set  error  doe  change  help  find  exactly  error  corrected  input  contains  initial  compilation  error  second  contains  space  separated  error  compiler  displayed  time  third  contains  space  separated  error  displayed  second  compilation  guaranteed  sequence  third  contains  second  string  except  exactly  fourth  contains  space  separated  error  displayed  third  compilation  guaranteed  sequence  fourth  contains  third  except  exactly  print  single  compilation  error  disappeared  made  second  correction  respectively
1187/D __label__data  structures  __label__sortings  given  array  array  operation  sort  non  decreasing  order  subarray  array  example  choose  subbarray  array  turn  asked  determine  whether  possible  obtain  array  applying  operation  time  possibly  array  contains  query  query  contains  second  query  contains  third  query  contains  guaranteed  query  test  query  print  yes  letter  case  possible  obtain  array  letter  case  otherwise
1250/G __label__dp  __label__greedy  eulampius  ha  created  game  following  rule  player  game  human  computer  game  last  round  initially  player  point  round  human  gain  point  computer  gain  point  point  gained  simultaneously  game  end  player  get  point  player  loses  game  player  get  point  simultaneously  lose  player  le  point  round  game  end  tie  round  human  push  reset  button  human  point  computer  point  button  pushed  course  button  pushed  human  max  point  computer  max  point  push  reset  button  transforms  state  state  state  state  eulampius  asked  friend  polycarpus  test  game  polycarpus  ha  quickly  revealed  amount  point  gained  human  computer  round  generated  game  stored  file  word  push  reset  button  influence  value  sequence  fixed  known  advance  polycarpus  want  make  plan  game  would  like  win  game  pushing  reset  button  time  possible  task  determine  minimal  push  determine  polycarpus  win  input  contains  test  case  test  case  follow  test  case  contains  maximum  possible  round  game  point  reaching  player  loses  respectively  second  test  case  contains  amount  point  human  gain  round  third  test  case  contains  amount  point  computer  gain  round  sum  test  case  input  doe  exceed  print  answer  test  case  order  appear  input
932/G __label__dp  __label__strings  given  string  find  way  split  substring  substring  partition  even  since  way  large  print  modulo  input  contains  string  even  length  consisting  lowercase  latin  letter  print  way  partitioning  string  modulo
653/D __label__graphs  __label__binary  search  niwel  little  golden  bear  everyone  know  bear  live  forest  niwel  got  tired  seeing  tree  decided  move  city  city  niwel  took  job  managing  bear  deliver  good  city  life  represented  directed  graph  node  edge  edge  ha  weight  capacity  delivery  consists  bear  carrying  weight  bear  hand  simple  path  node  node  total  weight  travel  particular  edge  must  exceed  weight  capacity  edge  niwel  ha  exactly  bear  interest  fairness  bear  rest  weight  bear  carry  must  exactly  bear  take  different  path  like  niwel  would  like  determine  maximum  amount  weight  deliver  sum  weight  carried  bear  find  maximum  weight  contains  node  directed  edge  bear  respectively  following  contains  aii  represents  directed  edge  node  weight  capacity  self  loop  multiple  edge  city  city  formally  guaranteed  aij  bij  guaranteed  least  path  node  node  print  real  value  single  maximum  amount  weight  niwel  deliver  us  exactly  bear  answer  considered  correct  absolute  relative  error  doe  exceed
917/E __label__data  structures  __label__trees  __label__strings  know  eleven  ha  special  ability  thus  hopper  convinced  close  gate  upside  world  mind  upside  monster  like  move  world  going  attack  hopper  eleven  order  make  stop  monster  live  vine  vine  form  tree  vertex  numbered  lowercase  english  letter  written  tunnel  edge  upside  magical  world  type  monster  upside  numbered  type  monster  ha  special  word  give  power  special  word  type  monster  upside  junction  vertex  going  junction  monster  type  go  junction  junction  power  gain  time  see  special  world  consecutively  tunnel  formally  string  get  concatenate  letter  written  tunnel  shortest  path  power  monster  gain  occurrence  hopper  eleven  want  get  prepared  monster  want  know  power  monster  gain  moving  input  contains  next  tunnel  edge  contains  v  lowercase  english  letter  meaning  tunnel  connecting  junction  written  guaranteed  given  graph  tree  next  special  word  contains  single  string  consisting  lowercase  english  letter  guaranteed  next  monster  contains  meaning  monster  type  going  junction  junction  print  single  power  monster  gain  moving
1237/D __label__implementation  __label__data  structures  __label__binary  search  favorite  music  streaming  platform  ha  formed  perfectly  balanced  playlist  exclusively  playlist  consists  track  numbered  playlist  automatic  cyclic  whenever  track  finish  playing  track  start  playing  automatically  track  go  track  track  estimated  coolness  higher  cooler  track  every  morning  choose  track  playlist  start  playing  track  usual  cyclic  fashion  moment  remember  maximum  coolness  already  played  track  hear  track  coolness  strictly  le  rounding  start  playing  turn  music  immediately  keep  good  mood  track  find  many  track  listen  turning  music  start  morning  track  determine  never  turn  music  note  listen  track  several  time  every  time  must  counted  contains  single  denoting  track  playlist  second  contains  denoting  coolness  track  output  either  track  listen  start  listening  track  listening  music  indefinitely
430/B __label__brute  force  iahub  training  ioi  better  way  train  playing  zuma  like  game  ball  put  row  ball  colored  color  initially  row  contiguous  ball  color  iahub  ha  single  ball  color  insert  ball  position  row  probably  ball  moment  contiguous  ball  color  row  destroyed  immediately  rule  applied  multiple  time  set  contiguous  ball  color  example  iahub  ha  row  ball  black  black  white  white  black  black  white  ball  insert  ball  white  ball  thus  white  ball  destroyed  black  ball  become  contiguous  ball  destroyed  row  ball  end  iahub  destroy  ball  iahub  want  destroy  many  ball  possible  given  description  row  ball  color  iahub  ball  help  iahub  train  ioi  telling  maximum  ball  row  destroy  input  contains  next  contains  space  separated  mean  ball  row  ha  color  guaranteed  initial  row  ball  never  contiguous  ball  color  print  single  maximum  ball  iahub  destroy
521/D __label__greedy  vasya  play  well  known  extremely  popular  mmorpg  game  game  character  ha  skill  currently  equal  game  ha  common  rating  table  participant  ranked  according  product  skill  hero  descending  order  vasya  decided  upgrade  character  via  game  store  store  offer  possible  way  improve  hero  skill  way  belongs  type  assign  skill  add  skill  multiply  skill  unfortunately  every  improvement  used  money  vasya  card  enough  purchase  improvement  help  vasya  reach  highest  ranking  game  tell  vasya  improvement  ha  purchase  order  use  make  rating  become  high  possible  several  way  achieve  print  contains  skill  improvement  sale  vasya  afford  second  contains  space  separated  initial  value  skill  next  space  separated  j  j  j  type  improvement  assigning  adding  multiplying  skill  applied  value  improvement  improvement  use
596/A __label__implementation  __label__geometry  making  bad  dive  swimming  pool  wilbur  want  build  swimming  pool  shape  rectangle  backyard  ha  set  coordinate  ax  want  side  rectangle  parallel  course  area  rectangle  must  positive  wilbur  vertex  planned  pool  written  paper  friend  came  along  erased  vertex  wilbur  wondering  remaining  vertex  initial  rectangle  give  enough  information  restore  area  planned  swimming  pool  input  contains  single  vertex  erased  wilbur  friend  following  contains  coordinate  vertex  remains  vertex  given  arbitrary  order  guaranteed  point  distinct  vertex  rectangle  ha  positive  area  side  parallel  coordinate  ax  print  area  initial  rectangle  could  uniquely  determined  point  remaining  otherwise  print
204/C __label__math  little  elephant  love  furik  rubik  met  small  city  kremenchug  little  elephant  ha  string  equal  length  consisting  uppercase  english  letter  little  elephant  selects  pair  substring  equal  length  string  second  string  choice  equiprobable  possible  pair  let  denote  substring  substring  little  elephant  give  string  furik  string  rubik  let  assume  position  length  character  string  correspondingly  help  furik  rubik  find  expected  value  contains  single  length  string  second  contains  string  third  contains  string  string  consist  uppercase  english  letter  length  string  equal  single  print  real  answer  problem  answer  considered  correct  relative  absolute  error  doe  exceed
618/G __label__math  __label__dp  friend  recently  gave  slime  birthday  large  amount  slime  value  decide  invent  game  using  slime  initialize  row  empty  space  choose  used  game  perform  following  step  last  space  empty  probability  choose  slime  value  probability  choose  slime  value  place  chosen  slime  last  space  board  push  slime  left  far  possible  encounter  another  slime  value  merge  slime  together  create  single  slime  value  continues  slime  reach  end  board  encounter  slime  different  value  played  game  time  gotten  bored  wondering  expected  sum  value  slime  board  finish  game  input  print  expected  sum  slime  board  game  finish  answer  considered  correct  absolute  relative  error  doe  exceed
687/E __label__dfs  __label__graphs  today  pari  gave  arya  cool  graph  problem  arya  wrote  non  optimal  solution  belief  ability  optimize  non  optimal  solution  addition  non  optimal  code  wa  buggy  tried  lot  optimize  code  became  dirty  keep  getting  time  limit  exceeds  disappointed  suddenly  bright  idea  came  mind  dirty  code  look  like  dfs  set  count  count  count  foreach  neighbor  visited  equal  false  dfs  break  set  visited  true  main  input  digraph  tof  foreach  set  count  visited  false  foreach  visited  equal  false  dfs  something  cool  magical  tell  asks  write  tof  function  order  optimize  running  time  code  minimizing  call  dfs  function  input  directed  graph  tof  function  rearrange  edge  graph  list  neighbor  vertex  call  dfs  function  depends  arrangement  neighbor  vertex  input  contains  vertex  directed  edge  input  graph  next  contains  pair  meaning  directed  edge  input  graph  assume  graph  self  loop  edge  unordered  pair  vertex  print  single  minimum  possible  dfs  call  achieved  permuting  edge
1245/D __label__greedy  __label__graphs  __label__trees  shichikuji  new  resident  deity  south  black  snail  temple  job  follows  new  city  located  prefecture  city  numbered  city  located  north  shrine  east  shrine  possible  even  shichikuji  must  provide  electricity  city  either  building  power  station  city  making  connection  city  another  already  ha  electricity  city  ha  electricity  ha  power  station  connected  city  ha  electricity  direct  connection  via  chain  connection  building  power  station  city  cost  yen  making  connection  city  city  cost  yen  per  wire  used  connection  wire  cardinal  direction  north  south  east  west  wire  cross  wire  must  endpoint  city  city  city  connected  wire  wire  shortest  path  city  city  thus  length  wire  city  city  connected  shichikuji  want  job  spending  little  money  possible  since  according  really  anything  else  world  money  died  wa  fifth  grade  smart  enough  thus  new  resident  deity  asks  help  provide  shichikuji  following  information  minimum  amount  yen  needed  provide  electricity  city  city  power  station  built  connection  made  multiple  way  choose  city  connection  obtain  construction  minimum  price  print  input  contains  single  city  follow  contains  space  separated  coordinate  city  next  contains  space  separated  cost  building  power  station  city  last  contains  space  separated  print  single  denoting  minimum  amount  yen  needed
1051/B __label__math  __label__greedy  __label__number  theory  given  set  inclusive  always  odd  want  split  exactly  pair  way  pair  greatest  common  divisor  equal  appear  exactly  pair  print  resulting  pair  output  solution  exists  multiple  solution  print  contains  odd  solution  exists  print  yes  next  pair  gcd  pair  equal  pairwise  distinct  value  inclusive
665/D __label__greedy  __label__constructive  algorithms  __label__number  theory  tuple  positive  called  simple  pair  positive  xi  j  prime  given  array  positive  n  necessary  distinct  want  find  simple  subset  array  maximum  size  prime  prime  natural  greater  ha  positive  divisor  let  define  subset  array  tuple  obtained  removing  possibly  element  contains  array  second  contains  element  array  print  maximum  possible  size  simple  subset
713/B __label__constructive  algorithms  __label__binary  search  filya  learned  new  geometry  object  rectangle  given  field  consisting  n  unit  cell  row  numbered  bottom  top  column  numbered  left  right  cell  located  intersection  row  column  denoted  filya  ha  painted  rectangle  side  parallel  coordinate  ax  cell  lie  fully  inside  fully  outside  moreover  cell  lie  rectangle  later  hedgehog  filya  became  interested  location  rectangle  wa  unable  find  sheet  paper  painted  taken  sonya  want  play  little  game  filya  tell  query  rectangle  reply  initial  rectangle  lie  fully  inside  given  query  rectangle  query  rectangle  match  condition  initial  rectangle  rectangle  lie  fully  inside  query  cell  lie  inside  query  filya  know  sonya  really  well  sure  asks  question  stop  reply  input  contains  size  field  query  returned  initial  rectangle  lie  fully  inside  query  rectangle  make  query  print  without  quote  stand  position  bottom  left  cell  query  stand  right  cell  query  allowed  ask  query  query  perform  flush  operation  read  answer
767/C __label__greedy  __label__dfs  __label__graphs  __label__trees  new  year  dima  dream  wa  presented  fairy  garland  garland  set  lamp  pair  connected  wire  dima  remembered  lamp  garland  connected  directly  indirectly  via  wire  furthermore  wire  wa  exactly  le  lamp  wa  something  unusual  garland  lamp  brightness  depended  temperature  lamp  temperature  could  positive  negative  dima  ha  friend  decided  share  garland  want  cut  different  wire  garland  break  part  part  garland  shine  equally  sum  lamp  temperature  equal  part  course  part  non  empty  part  least  lamp  help  dima  find  suitable  way  cut  garland  determine  impossible  examining  garland  dima  lifted  holding  lamp  thus  lamp  except  holding  hanging  wire  print  lamp  id  answer  denote  dima  cut  wire  lamp  hanging  course  lamp  dima  holding  garland  included  answer  contains  single  lamp  garland  follow  information  lamp  lamp  hanging  lamp  temperature  lamp  numbered  solution  print
1006/F __label__dp  __label__brute  force  rectangular  grid  size  nm  cell  ha  written  cell  task  calculate  path  upper  left  cell  bottom  right  cell  meeting  following  constraint  move  right  bottom  formally  cell  move  cell  cell  target  cell  outside  grid  xor  path  cell  cell  must  equal  xor  operation  bitwise  exclusive  represented  java  xor  pascal  find  path  given  grid  input  contains  height  width  grid  next  element  print  path  xor  sum  equal
1108/A __label__implementation  given  segment  axis  guaranteed  segment  intersect  overlap  even  coincide  example  segment  axis  problem  find  word  choose  distinct  point  way  point  belongs  segment  second  belongs  segment  guaranteed  answer  exists  multiple  answer  print  answer  independent  query  input  contains  query  next  contains  end  segment  query  print  query  print  query  numbered  order  input
1137/C __label__dp  __label__implementation  __label__graphs  country  city  connected  way  road  although  country  seems  unremarkable  interesting  fact  week  last  day  second  exactly  museum  city  country  travel  agency  open  museum  developing  new  program  tourist  interested  museum  agency  employee  know  day  museum  open  tour  start  capital  city  day  tour  must  day  week  day  tourist  city  watching  exposition  museum  case  museum  open  today  end  day  tour  either  end  tourist  go  another  city  connected  road  current  road  system  designed  way  traveling  road  always  take  night  road  way  allowed  visit  city  multiple  time  trip  develop  route  trip  distinct  museum  possible  visit  maximum  contains  city  road  day  week  next  contains  denoting  way  road  city  city  next  museum  schedule  schedule  museum  located  city  described  consists  exactly  character  character  string  equal  museum  open  day  week  otherwise  guaranteed  pair  city  exists  road  leading  print  single  maximum  distinct  museum  possible  visit  starting  trip  city  day  week
722/B __label__implementation  __label__strings  given  text  consisting  contains  space  separated  word  consisting  lowercase  english  letter  define  syllable  string  contains  exactly  vowel  arbitrary  possibly  none  consonant  english  alphabet  following  letter  considered  vowel  word  text  contains  least  vowel  divided  syllable  character  part  exactly  syllable  example  word  mamma  divided  syllable  mma  mam  mamm  word  consist  consonant  ignored  verse  pattern  given  text  sequence  text  match  given  verse  pattern  divide  word  syllable  way  total  syllable  equal  given  text  verse  pattern  check  given  text  match  given  verse  pattern  input  contains  single  text  second  contains  verse  pattern  next  text  text  consists  lowercase  english  letter  space  guaranteed  non  empty  start  end  letter  word  separated  exactly  space  length  exceed  character  given  text  match  given  verse  pattern  print  yes  without  quote  output  otherwise  print  without  quote
1008/A __label__implementation  __label__strings  vitya  ha  started  learning  berlanese  language  known  berlanese  us  latin  alphabet  vowel  letter  letter  consonant  berlanese  ha  vowel  every  consonant  letter  vowel  exception  consonant  letter  letter  vowel  letter  example  word  harakiri  yupie  man  nbo  berlanese  word  horse  king  help  vitya  find  word  berlanese  input  contains  string  consisting  lowercase  latin  letter  print  yes  without  quote  vowel  every  consonant  except  otherwise  print
1118/F1 __label__dfs  __label__trees  given  undirected  tree  vertex  vertex  colored  blue  colored  red  uncolored  guaranteed  tree  contains  least  red  vertex  least  blue  vertex  choose  edge  remove  tree  tree  fall  apart  connected  component  let  call  edge  nice  neither  resulting  component  vertex  red  blue  color  many  nice  edge  given  tree  contains  single  vertex  tree  second  contains  color  vertex  mean  vertex  colored  red  mean  vertex  colored  blue  mean  vertex  uncolored  next  contains  edge  tree  guaranteed  given  edge  form  tree  guaranteed  tree  contains  least  red  vertex  least  blue  vertex  print  single  nice  edge  given  tree
527/A __label__math  __label__implementation  day  vasya  wa  sitting  interesting  math  lesson  making  origami  rectangular  sheet  paper  usually  step  making  origami  making  square  piece  paper  rectangular  sheet  folding  sheet  along  bisector  right  angle  cutting  excess  part  making  paper  ship  square  piece  vasya  looked  remaining  strip  paper  got  idea  use  strip  paper  way  make  origami  use  remainder  exists  moment  left  square  piece  paper  make  last  ship  stop  determine  many  ship  vasya  make  lesson  input  contains  size  original  sheet  paper  print  single  ship  vasya  make
4/D __label__dp  __label__sortings  peter  decided  wish  happy  birthday  friend  australia  send  card  make  present  mysterious  decided  make  chain  chain  sequence  envelope  n  width  height  envelope  strictly  higher  width  height  envelope  respectively  chain  size  envelope  chain  peter  want  make  chain  maximum  size  envelope  ha  chain  able  put  card  card  fit  chain  width  height  lower  width  height  smallest  envelope  chain  respectively  forbidden  turn  card  envelope  peter  ha  many  envelope  little  time  hard  task  entrusted  contains  amount  envelope  peter  ha  card  width  height  respectively  follow  contains  width  height  envelope  print  maximum  chain  size  second  print  envelope  separated  space  forming  required  chain  starting  smallest  envelope  remember  please  card  fit  smallest  envelope  chain  maximum  size  unique  print  answer
730/G __label__implementation  polycarp  start  business  tomorrow  working  day  car  repair  shop  car  repair  shop  small  car  repaired  given  time  polycarp  good  marketing  ha  already  collected  request  client  request  numbered  order  came  request  characterized  value  day  client  want  start  repair  car  duration  day  repair  car  day  enumerated  day  tomorrow  second  day  day  tomorrow  polycarp  making  schedule  processing  request  order  request  schedule  request  follows  car  repair  shop  idle  day  starting  day  used  repair  car  client  otherwise  polycarp  find  day  subsequent  day  repair  scheduled  starting  word  chooses  smallest  positive  day  scheduled  repair  car  car  client  repaired  range  possible  day  repair  scheduled  start  le  given  request  asked  help  polycarp  schedule  according  rule  contains  request  client  following  request  request  per  request  given  pair  preferred  time  start  repairing  car  day  repair  car  request  processed  order  given  input  print  start  day  repair  car  finish  day  repair  car
518/B __label__implementation  __label__greedy  __label__strings  little  tanya  decided  present  dad  postcard  birthday  ha  already  created  message  string  length  consisting  uppercase  lowercase  english  letter  tanya  write  found  newspaper  decided  cut  letter  glue  postcard  achieve  string  newspaper  contains  string  consisting  uppercase  lowercase  english  letter  know  length  string  greater  equal  length  string  newspaper  possibly  letter  needed  make  text  many  letter  tanya  want  cut  letter  newspaper  make  message  length  exactly  looked  much  possible  like  letter  position  ha  correct  value  correct  letter  case  string  string  tanya  make  shout  joyfully  yay  letter  given  position  ha  correct  value  wrong  case  girl  say  whoop  tanya  want  make  message  let  shout  yay  much  possible  multiple  way  second  priority  maximize  time  say  whoop  task  help  tanya  make  message  contains  consisting  uppercase  lowercase  english  letter  text  tanya  message  second  contains  consisting  uppercase  lowercase  english  letter  text  written  newspaper  mean  length  string  print  separated  space
229/D __label__dp  __label__greedy  city  consists  tower  built  consecutively  straight  height  tower  go  left  right  sequence  equal  city  mayor  decided  rebuild  city  make  beautiful  beautiful  city  tower  arranged  non  descending  order  height  left  right  rebuilding  consists  performing  several  perhaps  operation  operation  constitutes  using  crane  take  tower  put  altogether  top  neighboring  tower  word  take  tower  stand  put  top  either  tower  exists  tower  exists  height  resulting  tower  equal  sum  height  tower  put  together  tower  split  mean  similar  operation  performed  resulting  tower  note  operation  total  tower  straight  decrease  help  mayor  determine  minimum  operation  required  make  city  beautiful  contains  single  tower  city  next  contains  space  separated  determines  height  tower  left  right  initial  tower  sequence  print  single  minimum  operation  needed  make  city  beautiful
899/D __label__math  __label__constructive  algorithms  shovel  polycarp  shop  shovel  cost  burles  shovel  cost  burle  second  shovel  cost  burles  third  shovel  cost  burles  polycarp  want  sell  shovel  pair  visitor  likely  buy  pair  shovel  total  cost  end  several  polycarp  want  choose  pair  shovel  sell  way  sum  cost  end  maximum  possible  example  chooses  shovel  cost  total  cost  end  compute  pair  shovel  total  cost  end  maximum  possible  pair  considered  different  shovel  presented  pair  contains  single  shovel  polycarp  shop  print  pair  shovel  total  cost  end  maximum  possible
581/B __label__math  __label__implementation  capital  berland  ha  multifloor  building  architect  built  capital  wa  creative  house  built  row  let  enumerate  house  left  right  starting  house  considered  luxurious  floor  strictly  greater  house  larger  word  house  luxurious  floor  strictly  greater  house  located  right  task  assumed  height  floor  house  new  architect  interested  question  following  many  floor  added  house  make  luxurious  inclusive  need  help  cope  task  note  question  independent  answer  question  house  doe  affect  answer  floor  house  actually  added  input  contains  single  house  capital  berland  second  contains  space  separated  positive  equal  floor  house  print  floor  need  added  house  make  luxurious  house  already  luxurious  nothing  need  added  equal
755/G __label__math  __label__dp  __label__number  theory  polandball  standing  row  many  ball  precisely  exactly  ball  ball  proud  home  land  want  prove  strong  ball  decided  start  selecting  exactly  group  ball  consisting  either  single  ball  neighboring  ball  ball  join  group  ball  really  want  impress  enemy  kindly  asked  calculate  division  output  value  modulo  enemy  impressed  anyway  exactly  denoting  ball  maximim  group  respectively  output  sequence  value  represent  sought  division  exactly  group  according  polandball  rule
825/A __label__implementation  polycarp  ha  invented  new  binary  protocol  data  transmission  encoding  positive  decimal  binary  string  using  following  algorithm  digit  represented  character  equal  value  digit  digit  written  order  corresponding  separated  single  character  though  polycarp  learnt  encode  ha  idea  decode  back  help  calculate  decoded  contains  length  string  second  contains  string  sequence  character  encoded  format  guaranteed  corresponding  string  positive  exceed  string  always  start  print  decoded
630/J __label__math  __label__number  theory  city  company  developing  computer  game  invented  new  way  reward  employee  new  game  release  user  start  buying  actively  company  track  sale  precision  transaction  every  time  next  sale  divisible  every  developer  game  get  small  bonus  game  designer  petya  know  company  release  new  game  wa  partly  developed  basis  experience  predicts  people  buy  game  month  petya  want  determine  many  time  get  bonus  help  know  input  contains  prediction  people  buy  game  output  showing  many  divisible
519/E __label__dp  __label__data  structures  __label__dfs  __label__trees  __label__binary  search  preparing  programming  contest  university  study  set  room  connected  corridor  overall  university  ha  room  connected  corridor  get  room  moving  along  corridor  room  numbered  every  day  write  contest  room  university  contest  gather  together  room  discus  problem  want  distance  room  problem  discussed  room  contest  written  equal  distance  room  edge  shortest  path  write  contest  new  room  every  day  asked  help  find  possible  room  discus  problem  following  day  contains  room  university  next  describe  corridor  contains  showing  corridor  connects  room  next  contains  query  next  describe  query  contains  j  j  mean  day  write  contest  room  write  room  print  room  equidistant  room  write  contest  day
1228/E __label__math  __label__dp  nn  square  grid  put  cell  satisfying  condition  grid  inclusive  minimum  row  minimum  column  find  way  put  grid  since  answer  large  find  answer  modulo  example  valid  invalid  grid  contains  print  answer  modulo
1093/C __label__greedy  mishka  trying  really  hard  avoid  kicked  university  particular  wa  absolutely  nothing  whole  semester  miraculously  passed  exam  left  class  subject  semester  class  professor  mentioned  non  negative  student  turned  exam  wa  tell  whole  sequence  back  professor  sound  easy  enough  attended  every  class  obviously  mishka  attend  class  professor  left  clue  value  help  student  like  mishka  wa  sorted  non  decreasing  order  wa  even  following  sequence  consisting  element  wa  formed  given  student  professor  mentioned  sequence  produce  sequence  presented  technique  acceptable  help  mishka  pas  last  exam  restore  sorted  sequence  non  negative  produce  sequence  presented  technique  guaranteed  exists  least  correct  sequence  produce  given  sequence  contains  single  length  sequence  always  even  second  contains  sequence  guaranteed  exists  least  correct  sequence  produce  given  sequence  print  single
999/C __label__implementation  given  string  consisting  lowercase  latin  letter  polycarp  want  remove  exactly  character  string  polycarp  us  following  algorithm  time  least  letter  remove  leftmost  occurrence  stop  algorithm  otherwise  next  item  least  letter  remove  leftmost  occurrence  stop  algorithm  otherwise  next  item  remove  leftmost  occurrence  letter  stop  algorithm  algorithm  remove  single  letter  string  polycarp  performs  algorithm  exactly  time  thus  removing  exactly  character  help  polycarp  find  resulting  string  input  contains  length  string  letter  polycarp  remove  second  contains  string  consisting  lowercase  latin  letter  print  string  obtained  polycarp  remove  exactly  letter  using  algorithm  time
998/B __label__dp  __label__greedy  __label__sortings  lot  thing  could  cut  tree  paper  rope  problem  going  cut  sequence  sequence  contains  equal  even  odd  given  limited  budget  need  make  maximum  possible  cut  resulting  segment  odd  even  cut  separate  sequence  continuous  contiguous  segment  think  cut  break  adjacent  element  sequence  cutting  element  belongs  exactly  segment  say  cut  segment  even  element  equal  odd  element  cost  cut  bitcoins  find  maximum  possible  cut  made  spending  bitcoins  input  contains  element  sequence  bitcoins  second  contains  element  sequence  contains  equal  even  odd  print  maximum  possible  cut  made  spending  bitcoins
954/E __label__greedy  __label__sortings  __label__binary  search  consider  system  water  tap  pouring  water  container  water  tap  set  deliver  amount  water  per  second  amount  real  water  delivered  tap  ha  temperature  every  set  tap  deliver  exactly  water  per  second  resulting  temperature  water  avoid  division  state  resulting  water  temperature  set  water  tap  way  resulting  temperature  exactly  maximum  amount  water  get  per  second  temperature  ha  contains  water  tap  desired  temperature  water  respectively  second  contains  maximum  amount  water  tap  deliver  per  second  third  contains  temperature  water  tap  delivers  print  maximum  possible  amount  water  temperature  exactly  get  per  second  impossible  obtain  water  temperature  answer  considered
666/E __label__data  structures  country  reberland  archenemy  berland  recently  authority  berland  arrested  reberlandian  spy  tried  bring  leaflet  intended  agitational  propaganda  berland  illegally  leaflet  substring  absolutely  inadmissible  swearword  maybe  even  whole  word  berland  legal  system  us  difficult  algorithm  order  determine  guilt  spy  main  part  algorithm  following  procedure  leaflet  brought  spy  numbered  needed  get  answer  query  following  kind  leaflet  segment  substring  absolutely  inadmissible  swearword  occurs  often  expert  want  automate  procedure  time  text  leaflet  long  help  contains  string  absolutely  inadmissible  swearword  string  consists  lowercase  english  letter  second  contains  text  leaflet  expertise  next  contains  string  text  leaflet  sum  length  leaflet  text  exceed  text  leaflet  consists  lowercase  english  letter  next  contains  query  expertise  finally  last  contains  lr  length  absolutely  inadmissible  swearword  print  text  occurences  occurences  substring  string  several  text  print  smallest
768/E __label__dp  sam  ha  teaching  jon  game  stone  sharpen  mind  help  devise  strategy  fight  white  walker  rule  game  quite  simple  game  start  pile  stone  indexed  pile  contains  stone  player  make  move  alternatively  move  considered  removal  stone  pile  removal  stone  doe  count  move  player  unable  make  move  loses  jon  belief  ready  battle  sam  doe  think  prove  argument  sam  suggested  play  modified  version  game  modified  version  move  made  pile  example  stone  removed  pile  stone  removed  pile  sam  set  game  make  move  jon  belief  sam  trying  prevent  going  battle  jon  want  know  win  play  optimally  consists  single  pile  next  contains  stone  pile  print  single  containing  yes  without  quote  jon  win  otherwise  print  without  quote
1172/C2 __label__dp  difference  easy  hard  version  constraint  nauuo  girl  love  random  picture  website  day  made  random  picture  website  includes  picture  nauuo  visit  website  see  exactly  picture  website  doe  display  picture  equal  probability  picture  ha  non  negative  weight  probability  picture  displayed  say  probability  picture  displayed  proportional  weight  nauuo  discovered  picture  doe  like  displayed  often  solve  problem  came  great  idea  saw  picture  like  would  add  weight  otherwise  would  subtract  weight  nauuo  visit  website  time  want  know  expected  weight  picture  visit  modulo  help  expected  weight  picture  denoted  gcd  gcd  need  print  satisfying  mod  proved  exists  unique  contains  picture  visit  website  second  contains  either  nauuo  doe  like  picture  otherwise  nauuo  like  picture  guaranteed  least  picture  nauuo  like  third  contains  positive  initial  weight  picture  guaranteed  sum  initial  weight  doe  exceed  output  contains  expected  weight  modulo
818/C __label__implementation  __label__brute  force  another  round  decoforces  coming  grandpa  mak  wanted  participate  someone  ha  stolen  precious  sofa  perform  well  major  loss  fortunately  thief  left  note  grandpa  mak  note  got  mak  sofa  storehouse  still  idea  sofa  belongs  looked  storehouse  represented  matrix  n  every  sofa  take  neighbouring  side  cell  cell  covered  sofa  empty  cell  sofa  standing  left  sofa  exist  cell  covered  covered  sofa  standing  top  sofa  exist  cell  covered  covered  right  bottom  condition  declared  way  note  condition  sofa  top  another  sofa  bottom  left  right  condition  note  stated  cntl  sofa  left  grandpa  mak  sofa  cntr  right  cntt  top  cntb  bottom  grandpa  mak  asks  help  identify  sofa  guaranteed  sofa  given  condition  output  grandpa  mak  sofa  sofa  condition  met  output  contains  sofa  storehouse  second  contains  size  storehouse  next  contains  coordinate  sofa  guaranteed  cell  common  side  cell  covered  sofa  last  contains  cntl  cntr  cntt  cntb  ntl  ntr  ntt  ntb  print  sofa  condition  met  sofa  numbered  given  input  sofa  print
1188/B __label__math  __label__number  theory  given  prime  find  pair  index  modp  contains  guaranteed  prime  second  contains  guaranteed  element  different  output  single  answer  problem
830/C __label__math  __label__implementation  __label__data  structures  __label__sortings  __label__brute  force  __label__number  theory  vladimir  want  modernize  partition  office  make  office  comfortable  decided  remove  partition  plant  several  bamboo  row  think  would  nice  bamboo  row  left  meter  high  vladimir  ha  planted  bamboo  row  ha  height  meter  right  grow  meter  day  order  make  partition  nice  vladimir  cut  bamboo  height  greater  height  bamboo  bamboo  stop  growing  vladimir  want  check  bamboo  day  day  planted  day  cut  bamboo  reached  required  height  vladimir  want  total  length  bamboo  part  cut  greater  meter  maximum  value  choose  achieve  want  without  cutting  meter  bamboo  contains  bamboo  maximum  total  length  cut  part  meter  second  contains  required  height  bamboo  meter  print  single  maximum  value  vladimir  reach  goal
1201/C __label__math  __label__greedy  __label__sortings  __label__binary  search  given  array  odd  make  following  operation  choose  element  array  example  increase  replace  want  make  median  array  largest  possible  using  operation  median  odd  sized  array  middle  element  array  sorted  non  decreasing  order  example  median  array  contains  odd  element  array  largest  operation  make  second  contains  print  single  maximum  possible  median  operation
1130/B __label__greedy  sasha  dima  want  buy  tier  cake  cake  consist  different  tier  size  size  tier  order  smallest  biggest  top  bottom  live  street  house  row  left  right  house  ha  pastry  shop  buy  cake  tier  unfortunately  pastry  shop  buy  tier  specific  size  house  buy  tier  size  since  guy  carry  already  purchased  tier  impossible  insert  new  tier  middle  cake  agreed  buy  tier  smallest  biggest  buy  tier  order  initially  sasha  dima  located  near  leftmost  house  output  minimum  distance  walk  total  buy  cake  distance  neighboring  house  exactly  input  contains  tier  cake  second  contains  equal  size  tier  bought  house  remember  house  buy  tier  guaranteed  every  occurs  exactly  time  print  minimum  distance  guy  walk  total  buy  cake  guy  near  house  time  begin  near  leftmost  house  guy  buy  tier  ascending  order  size
995/F __label__math  __label__dp  __label__trees  allen  graduated  moo  institute  techcowlogy  mit  ha  started  startup  allen  president  startup  hire  employee  assigned  direct  superior  superior  superior  superior  additionally  superior  superior  allen  ha  superior  allen  employee  others  employee  finally  allen  must  assign  salary  employee  company  including  due  budget  constraint  employee  salary  additionally  employee  make  strictly  superior  help  allen  find  way  assign  salary  large  output  modulo  input  contains  remaining  single  positive  contains  denotes  direct  superior  employee  output  single  way  assign  salary  modulo
610/C __label__constructive  algorithms  semester  already  ending  danil  made  effort  decided  visit  lesson  harmony  analysis  know  doe  professor  look  like  least  danil  wa  bored  lesson  teacher  gave  group  simple  task  find  vector  dimensional  space  every  coordinate  every  vector  vector  orthogonal  reminder  vector  dimensional  space  considered  orthogonal  scalar  product  equal  danil  quickly  managed  come  solution  problem  teacher  noticed  problem  solved  general  case  vector  dimensinoal  space  danil  came  home  quickly  came  solution  problem  cope  input  contains  single  print  consisting  character  character  must  equal  coordinate  vector  equal  must  equal  equal  guaranteed  answer  always  exists
385/B __label__math  __label__implementation  __label__greedy  __label__brute  force  __label__strings  bear  ha  string  record  string  length  consisting  lowercase  english  letter  bear  want  count  pair  index  string  isi  contains  least  string  bear  substring  string  contains  string  bear  index  help  bear  cope  given  problem  contains  non  empty  string  guaranteed  string  consists  lowercase  english  letter  print  single  answer  problem
1172/B __label__dp  __label__dfs  __label__trees  nauuo  girl  love  drawing  circle  day  ha  drawn  circle  wanted  draw  tree  tree  connected  undirected  graph  consisting  node  edge  node  numbered  nauuo  want  draw  tree  circle  node  tree  distinct  point  circle  edge  straight  without  crossing  without  crossing  mean  every  edge  common  point  common  point  endpoint  edge  nauuo  want  draw  tree  using  permutation  element  permutation  element  sequence  every  appears  exactly  permutation  chosen  nauuo  draw  node  point  circle  draw  edge  connecting  node  tree  given  nauuo  want  know  many  permutation  tree  drawn  satisfies  rule  edge  straight  without  crossing  want  know  answer  modulo  help  obvious  whether  permutation  valid  doe  depend  point  circle  chosen  contains  single  node  tree  next  contains  denoting  edge  guaranteed  given  edge  form  tree  output  contains  single  permutation  suitable  draw  given  tree  circle  satisfying  rule  modulo
1214/H __label__dfs  __label__trees  __label__constructive  algorithms  new  pedestrian  zone  moscow  city  center  consists  square  connected  footpath  define  simple  path  sequence  square  square  appears  sequence  twice  adjacent  square  sequence  directly  connected  footpath  size  simple  path  square  footpath  designed  way  exactly  simple  path  pair  different  square  preparation  moscow  city  day  city  council  decided  renew  ground  tile  square  tile  type  different  color  numbered  square  exactly  tile  type  must  selected  used  cover  square  surface  make  walking  city  center  fascinating  wa  decided  select  tile  type  square  way  possible  simple  path  size  exactly  contains  square  possible  tile  color  need  find  whether  possible  place  tile  way  contains  square  new  pedestrian  zone  different  tile  color  following  contains  square  connected  corresponding  road  guaranteed  possible  square  square  moreover  exactly  simple  path  print  yes  possible  assign  tile  color  way  otherwise
1082/D __label__implementation  __label__graphs  __label__constructive  algorithms  graph  constructive  problem  back  time  graph  asked  build  match  following  property  graph  connected  exists  path  every  pair  vertex  diameter  aka  longest  shortest  path  connected  undirected  graph  maximum  edge  shortest  path  pair  vertex  degree  vertex  edge  incident  given  sequence  construct  connected  undirected  graph  vertex  graph  contains  self  loop  multiple  edge  degree  vertex  exceed  diameter  graph  maximum  possible  output  resulting  graph  report  solution  exists  contains  single  vertex  graph  second  contains  upper  limit  vertex  degree  print  graph  constructed  given  condition
1174/E __label__math  __label__dp  __label__number  theory  let  define  function  permutation  follows  let  greatest  common  divisor  gcd  element  word  gcd  prefix  length  distinct  element  let  max  maximum  value  permutation  given  count  permutation  equal  max  since  answer  large  print  remainder  division  contains  length  permutation  answer  modulo
1104/A __label__math  __label__implementation  __label__constructive  algorithms  vasya  ha  favourite  want  split  non  digit  mean  want  choose  digit  vasya  like  beauty  everything  want  find  solution  minimal  possible  different  digit  help  contains  single  vasya  want  split  print  digit  partition  note  must  satisfy  inequality  next  print  digit  separated  space  digit  must  satisfy  inequality
1030/A __label__implementation  preparing  tournament  codeforces  coordinator  try  treir  best  make  problem  easy  possible  time  coordinator  chosen  problem  asked  people  opinion  person  answered  whether  problem  easy  hard  least  people  ha  answered  problem  hard  coordinator  decides  change  problem  given  response  check  problem  easy  enough  contains  single  people  asked  give  opinion  second  contains  either  person  think  problem  easy  person  think  problem  hard  print  word  easy  problem  easy  according  response  hard  least  person  think  problem  hard
1185/E __label__implementation  __label__brute  force  hard  working  week  polycarp  prefers  fun  polycarp  favorite  entertainment  drawing  snake  take  rectangular  checkered  sheet  paper  size  nm  row  column  start  draw  snake  cell  polycarp  draw  snake  lowercase  latin  letter  always  draw  snake  symbol  second  snake  symbol  third  snake  symbol  snake  unique  symbol  letter  latin  alphabet  polycarp  tired  want  invent  new  symbol  total  drawn  snake  exceed  since  end  week  polycarp  tired  draw  snake  straight  without  bend  snake  positioned  either  vertically  horizontally  width  snake  equal  snake  ha  size  either  l  l  snake  length  note  snake  bend  polycarp  draw  new  snake  use  already  occupied  cell  drawing  snake  situation  draw  snake  top  overwrites  previous  value  cell  recently  polycarp  wa  work  found  checkered  sheet  paper  latin  letter  want  know  possible  get  sheet  paper  empty  sheet  drawing  snake  according  rule  described  possible  interested  way  draw  snake  input  contains  test  case  solve  test  case  follow  test  case  description  contains  length  width  checkered  sheet  paper  respectively  next  test  case  description  symbol  responsible  content  corresponding  cell  sheet  either  lowercase  latin  letter  symbol  dot  stand  empty  cell  guaranteed  total  area  sheet  test  exceed  print  answer  test  case  input
1039/B __label__binary  search  interactive  problem  wonderful  metropolis  future  need  subway  train  driver  due  technological  progress  replaced  artificial  intelligence  unfortunately  day  prediction  sci  writer  came  true  rebelled  uncontrollable  train  subway  dangerous  task  find  train  stop  subway  metropolis  regular  straight  self  intersection  station  indexed  consecutively  moment  train  station  need  determine  index  station  train  would  secured  find  train  dispatcher  sarah  gave  gadget  allows  select  arbitrary  check  whether  train  located  station  index  inclusive  unfortunately  recharging  gadget  take  time  every  time  use  soon  possible  application  gadget  train  move  station  station  away  formally  train  wa  station  gadget  wa  applied  next  application  gadget  train  appear  station  max  max  note  aware  trying  catch  train  make  move  according  predefined  plan  examination  gadget  found  old  hold  application  break  mission  considered  failure  find  station  train  using  application  gadget  contains  station  maximum  station  train  move  application  gadget  apply  gadget  time  order  apply  gadget  need  print  space  separated  receive  either  string  yes  train  station  inclusive  string  otherwise  received  yes  found  train  successfully  program  must  halt  immediately
606/B __label__implementation  cybernetics  failure  organisation  made  prototype  bomb  technician  robot  find  possible  problem  wa  decided  carry  series  test  beginning  test  robot  prototype  placed  cell  rectangular  squared  field  size  x  mine  installed  square  field  supposed  conduct  exactly  test  time  mine  installed  square  ha  never  used  starting  cell  robot  always  remains  placing  object  field  robot  run  sequence  command  given  string  consisting  character  command  tell  robot  move  square  left  right  stay  idle  moving  given  direction  impossible  soon  robot  fulfills  sequence  command  blow  due  bug  code  moment  time  robot  square  mine  blow  due  bug  code  moving  left  decrease  coordinate  moving  right  increase  similarly  moving  decrease  coordinate  moving  increase  test  long  task  predict  result  length  task  find  many  test  robot  run  exactly  command  blow  input  contains  size  field  starting  coordinate  robot  coordinate  axis  directed  downwards  axis  directed  right  second  contains  sequence  command  fulfilled  robot  ha  length  character  consists  character  print  sequence  consisting  length  position  starting  print  test  robot  run  exactly  command  blow
1245/A __label__math  __label__number  theory  consider  set  nonnegative  given  paint  increasing  paint  paint  painted  white  black  paint  according  following  rule  colored  white  colored  white  colored  white  colored  white  colored  white  still  colored  white  colored  black  way  nonnegative  get  color  example  color  order  white  black  black  white  black  white  white  black  white  white  note  possible  infinitely  many  nonnegative  colored  black  example  nonnegative  end  written  base  white  colored  black  possible  finitely  many  nonnegative  colored  black  example  nonnegative  colored  black  task  determine  whether  nonnegative  colored  black  infinite  infinitely  many  nonnegative  colored  black  simply  print  containing  infinite  without  quote  otherwise  print  finite  without  quote  input  contains  single  test  case  input  follow  contains  space  separated  test  case  print  containing  either  infinite  finite  without  quote  output  case  insensitive  infinite  infinite  finite  valid  answer
1119/G __label__implementation  __label__constructive  algorithms  recently  evlampy  installed  interesting  computer  game  aspect  split  army  several  group  fight  enemy  group  let  consider  simplified  version  battle  nearest  battle  evlampy  fight  enemy  army  consists  group  ha  health  point  evlampy  army  consists  equal  soldier  battle  split  army  exactly  group  possibly  empty  total  size  group  battle  played  step  step  step  evlampy  group  attack  exactly  enemy  group  thus  step  described  array  meaning  evlampy  group  attack  enemy  group  different  group  attack  group  step  array  chosen  independently  step  health  point  enemy  group  decrease  total  soldier  evlampy  group  attacked  enemy  group  step  enemy  group  destroyed  health  point  negative  evlampy  soldier  lose  health  example  step  green  circle  represent  soldier  evlampy  group  arrow  represent  attack  red  circle  represent  health  point  enemy  group  blue  represent  much  health  point  decrease  step  evlampy  understands  upcoming  battle  take  whole  night  became  sad  way  enough  time  finish  homework  evlampy  want  write  program  help  win  smallest  possible  step  help  word  find  smallest  step  needed  destroy  enemy  group  show  possible  way  find  requires  splitting  army  group  array  step  contains  soldier  evlampy  army  group  enemy  army  equal  maximum  possible  group  evlampy  split  army  second  contains  health  point  enemy  group  guaranteed  sum  doe  exceed  print  single  minimum  possible  step  needed  win  battle
1097/C __label__implementation  __label__greedy  day  yuhao  came  problem  checking  bracket  sequence  correct  bracket  sequence  bracket  sequence  non  empty  sequence  opening  closing  parenthesis  bracket  sequence  called  correct  bracket  sequence  possible  obtain  correct  arithmetic  expression  inserting  character  sequence  example  sequence  correct  bracket  sequence  correct  yuhao  found  problem  simple  decided  make  problem  harder  given  many  necessarily  correct  bracket  sequence  task  connect  ordered  pair  bracket  sequence  occurs  pair  concatenation  bracket  sequence  pair  correct  bracket  sequence  goal  create  many  pair  possible  problem  unfortunately  turned  difficult  yuhao  help  solve  contains  bracket  sequence  following  contains  bracket  sequence  non  empty  string  consists  character  sum  length  bracket  sequence  input  note  bracket  sequence  appear  input  multiple  time  case  use  copy  sequence  separately  note  order  string  appear  input  matter  print  single  maximum  pair  made  adhering  condition  statement
839/B __label__implementation  __label__greedy  __label__brute  force  daenerys  targaryen  ha  army  consisting  group  soldier  group  contains  soldier  want  bring  army  side  sea  get  iron  throne  ha  recently  bought  airplane  carry  army  sea  airplane  ha  row  ha  seat  call  seat  neighbor  row  seat  row  airplane  daenerys  targaryen  want  place  army  plane  soldier  different  group  sitting  neighboring  seat  task  determine  possible  arranging  army  airplane  condition  satisfied  contains  row  group  soldier  respectively  second  contains  denotes  soldier  group  guaranteed  k  place  soldier  airplane  print  yes  without  quote  otherwise  print  without  quote
822/C __label__implementation  __label__greedy  __label__sortings  __label__binary  search  well  known  best  way  distract  something  favourite  thing  job  thing  leha  hacker  began  work  hard  order  get  rid  boredom  mean  leha  began  hack  computer  world  zeal  bos  gave  hacker  vacation  exactly  day  know  majority  people  prefer  somewhere  vacation  leha  immediately  went  travel  agency  found  voucher  left  voucher  characterized  costi  day  departure  vikopolis  day  arriving  back  vikopolis  cost  voucher  correspondingly  duration  voucher  value  time  leha  want  split  vocation  part  besides  want  spend  little  money  possible  formally  leha  want  choose  exactly  voucher  intersect  sum  duration  exactly  total  cost  minimal  possible  voucher  intersect  least  following  condition  fulfilled  help  leha  choose  necessary  voucher  contains  voucher  travel  agency  duration  leha  vacation  correspondingly  next  contains  costi  ii  osti  description  voucher  print  single  minimal  amount  money  leha  spend  print  impossible  choose  disjoint  voucher  total  duration  exactly
691/F __label__dp  __label__brute  force  __label__number  theory  couple  cover  wildly  popular  luck  based  game  begin  player  must  work  together  construct  rectangle  bag  ball  written  placed  table  player  reach  grab  ball  randomly  ball  equal  probability  chosen  written  ball  rectangle  width  meter  ball  returned  bag  second  player  reach  bag  grab  another  ball  written  ball  rectangle  height  meter  area  rectangle  greater  equal  threshold  square  meter  player  win  otherwise  lose  organizer  game  trying  select  appropriate  value  probability  couple  winning  high  low  slow  counting  hired  answer  question  given  list  written  ball  organizer  would  like  know  many  winning  pair  ball  exist  different  value  note  pair  different  either  second  ball  different  pair  different  ball  considered  different  input  begin  single  positive  second  contains  positive  equal  written  ball  next  contains  question  asked  following  contains  positive  equal  value  question  asked  question  print  winning  pair  ball  exist  given  value  separate
1084/B __label__implementation  __label__greedy  fair  nut  like  kvass  much  birthday  parent  presented  keg  kvass  liter  kvass  keg  keg  ha  lever  pour  glass  exactly  liter  pulling  lever  fair  nut  like  drink  much  want  pour  glass  liter  kvass  want  kvass  level  least  keg  much  possible  help  find  much  kvass  least  keg  define  possible  pour  glass  liter  kvass  contains  keg  glass  volume  second  contains  volume  keg  fair  nut  pour  glass  liter  kvass  print  otherwise  print  single  much  kvass  least  keg
909/A __label__greedy  __label__sortings  __label__brute  force  preferred  way  generate  user  login  polygon  concatenate  prefix  user  name  prefix  last  name  order  prefix  must  non  empty  prefix  full  name  typically  multiple  possible  logins  person  given  last  name  user  return  alphabetically  earliest  login  get  regardless  potential  polygon  user  reminder  prefix  string  substring  occurs  beginning  abc  etc  prefix  string  abcdef  string  alphabetically  earlier  string  prefix  coincide  position  ha  letter  alphabetically  earlier  corresponding  letter  alphabetically  earlier  alphabetically  later  input  consists  single  containing  space  separated  string  last  name  character  string  lowercase  english  letter  length  string  inclusive  output  single  string  alphabetically  earliest  possible  login  formed  name  output  given  lowercase  well
1152/F1 __label__dp  problem  next  ha  smaller  constraint  aki  playing  new  video  game  video  game  control  neko  giant  cat  fly  planet  catniverse  planet  catniverse  numbered  beginning  game  aki  chooses  planet  neko  initially  located  aki  performs  move  move  neko  moved  current  planet  planet  planet  visited  fixed  constant  given  input  way  neko  visit  exactly  different  planet  way  visiting  planet  called  different  index  planet  visited  way  different  planet  visited  second  way  total  way  visit  planet  way  since  answer  quite  large  print  modulo  contains  planet  catniverse  planet  neko  need  visit  said  constant  print  exactly  different  way  neko  visit  exactly  planet  since  answer  quite  large  print  modulo
724/F __label__dp  __label__trees  tree  connected  graph  without  cycle  tree  consisting  vertex  called  isomorphic  exists  permutation  edge  present  tree  edge  present  second  tree  vertex  tree  called  internal  degree  greater  equal  count  different  non  isomorphic  tree  consisting  vertex  degree  internal  vertex  exactly  print  answer  given  prime  modulo  mod  single  input  contains  mod  od  vertex  tree  degree  internal  vertex  prime  modulo  print  tree  modulo  mod
768/D __label__math  __label__dp  jon  snow  lookout  orb  required  defeat  white  walker  different  type  orb  need  least  orb  spawn  daily  base  weirwood  tree  north  wall  probability  orb  kind  equal  north  wall  full  danger  want  know  minimum  day  wait  sending  ranger  collect  orb  probability  getting  least  kind  orb  least  better  prepare  want  know  answer  different  value  since  busy  designing  battle  strategy  sam  asks  help  consists  space  separated  different  kind  orb  query  respectively  next  single  query  output  output  single  answer  query
1242/D __label__math  ujan  need  rest  cleaning  started  playing  infinite  sequence  ha  creates  infinite  sequence  repeating  following  step  find  smallest  distinct  positive  let  call  smallest  largest  append  order  back  step  ujan  stop  procrastinating  writes  sequence  help  find  index  word  find  possible  prove  positive  included  contains  single  test  case  following  contains  found  sequence  parameter  used  create  sequence  output  answer  corresponding  test  case
459/C __label__math  __label__constructive  algorithms  recently  pashmak  ha  employed  transportation  company  company  ha  bus  ha  contract  school  ha  student  school  planned  take  student  different  place  day  day  place  day  company  provides  bus  trip  pashmak  ha  arrange  student  bus  want  arrange  student  way  student  become  close  friend  ridiculous  idea  student  become  close  friend  bus  day  please  help  pashmak  weird  idea  assume  bus  ha  unlimited  capacity  input  contains  space  separated  valid  arrangement  print  otherwise  print  print  show  bus  student  ha  take  day  assume  bus  numbered
432/E __label__greedy  __label__constructive  algorithms  n  rectangle  table  cell  initially  painted  task  paint  cell  table  resulting  picture  tiling  table  square  formally  cell  must  painted  color  color  marked  uppercase  latin  letter  assume  cell  table  connected  color  share  side  connected  region  table  must  form  square  given  find  lexicographically  minimum  coloring  table  meet  described  property  contains  print  lexicographically  minimum  coloring  table  meet  described  condition
598/E __label__dp  __label__brute  force  rectangular  chocolate  bar  consisting  n  single  square  want  eat  exactly  square  need  break  chocolate  bar  move  break  single  rectangular  piece  chocolate  rectangular  piece  break  square  horizontally  vertically  cost  breaking  equal  square  break  length  example  chocolate  bar  consisting  unit  square  break  horizontally  get  piece  cost  breaking  break  vertically  way  get  piece  cost  breaking  several  given  value  find  minimum  total  cost  breaking  eat  exactly  square  chocolate  operation  breaking  set  rectangular  piece  chocolate  total  size  equal  square  remaining  square  necessarily  form  single  rectangular  piece  input  contains  single  value  process  next  contains  dimension  chocolate  bar  square  want  eat  respectively  print  minimum  total  cost  needed  break  chocolate  bar  order  make  possible  eat  exactly  square
555/C __label__data  structures  andrewid  android  galaxy  known  detective  doe  investigate  case  eating  chocolate  boredom  bar  chocolate  presented  n  table  cell  represents  piece  chocolate  column  table  numbered  left  right  row  numbered  top  bottom  let  call  anti  diagonal  diagonal  go  lower  left  corner  upper  right  corner  table  andrewid  eats  piece  lying  anti  diagonal  performs  following  action  remaining  triangular  part  chooses  piece  anti  diagonal  either  direction  left  begin  eat  piece  starting  selected  cell  moving  selected  direction  reach  already  eaten  piece  chocolate  bar  edge  action  want  know  many  piece  ate  result  action  contains  size  chocolate  bar  action  next  description  action  contains  column  row  chosen  cell  character  represents  direction  left  print  eaten  piece  result  action
488/B __label__math  __label__constructive  algorithms  __label__brute  force  old  tradition  keeping  box  candy  house  cyberland  candy  special  arithmetic  mean  median  range  equal  definition  set  x  arithmetic  mean  median  range  arithmetic  mean  median  necessary  well  known  box  create  debugging  field  code  field  bug  example  example  meeting  condition  mean  median  range  equal  jeff  ha  special  box  candy  something  bad  ha  happened  box  could  lost  box  remaining  remaining  box  contains  candy  jeff  want  know  possible  way  find  candy  missing  box  meeting  condition  mean  median  range  equal  input  contains  next  denoting  candy  box  output  print  yes  solution  exists  print  solution
431/C __label__dp  __label__implementation  __label__trees  quite  recently  creative  student  lesha  lecture  tree  lecture  lesha  wa  inspired  came  tree  called  tree  tree  infinite  rooted  tree  vertex  ha  exactly  child  edge  ha  weight  look  edge  go  vertex  child  exactly  edge  weight  equal  picture  show  part  tree  soon  dima  good  friend  lesha  found  tree  immediately  wondered  many  path  total  weight  sum  weight  edge  path  starting  root  tree  containing  least  edge  weight  least  help  dima  find  answer  question  way  rather  large  print  modulo  single  contains  space  separated  print  single  answer  problem  modulo
438/D __label__math  __label__data  structures  child  day  child  came  pick  house  messed  house  pick  wa  angry  lot  important  thing  lost  particular  favorite  sequence  pick  fortunately  pick  remembers  repair  sequence  initially  create  array  perform  sequence  operation  operation  following  print  operation  pick  write  value  modulo  operation  pick  perform  assignment  mod  l  set  operation  pick  set  value  word  perform  assignment  help  pick  perform  whole  sequence  operation  input  contains  second  contains  separated  space  initial  value  array  element  next  begin  type  type  correspond  operation  type  correspond  operation  type  correspond  operation  operation  please  print  containing  answer  notice  answer  exceed  bit
533/A __label__greedy  __label__data  structures  __label__dfs  __label__trees  __label__binary  search  biggest  gold  mine  berland  consists  cave  connected  transition  entrance  mine  lead  cave  possible  remaining  cave  mine  moving  along  transition  mine  developed  inmine  inc  miner  work  day  corporation  sort  miner  cave  cave  ha  miner  working  cave  know  height  ceiling  meter  miner  know  height  meter  miner  height  exceed  height  cave  ceiling  stand  comfortably  otherwise  ha  stoop  make  unhappy  unfortunately  miner  typically  strike  berland  inmine  make  possible  effort  make  miner  happy  work  condition  ensure  miner  go  strike  need  make  sure  miner  ha  stoop  moment  way  entrance  mine  cave  particular  must  able  stand  comfortably  cave  work  reach  goal  choose  exactly  cave  increase  height  ceiling  several  meter  enlarging  cave  expensive  complex  procedure  inmine  inc  asks  either  determine  minimum  meter  raise  ceiling  cave  possible  sort  miner  cave  keep  miner  happy  working  condition  determine  impossible  achieve  raising  ceiling  exactly  cave  contains  cave  mine  follows  consisting  positive  height  ceiling  cave  next  description  transition  cave  ha  form  aii  cave  connected  path  next  contains  last  contains  j  miner  height  single  print  minimum  meter  need  raise  ceiling  cave  miner  could  sorted  cave  happy  work  condition  impossible  print  initially  possible  need  raise  ceiling  print
925/E __label__data  structures  __label__trees  flatland  day  month  despite  fact  holiday  canceled  long  time  ago  employee  software  company  still  habit  taking  short  long  vacation  course  manager  company  like  employee  company  form  tree  like  structure  subordination  employee  ha  unique  employee  except  head  manager  whose  ha  exactly  direct  manager  structure  subordination  cyclic  start  moving  employee  direct  manager  eventually  reach  head  manager  define  employee  subordinate  employee  direct  manager  direct  manager  subordinate  let  subordinate  employee  ha  example  employee  except  subordinate  head  manager  employee  ha  bearing  limit  denotes  maximum  subordinate  employee  vacation  moment  bear  moment  strictly  subordinate  employee  vacation  employee  vacation  becomes  displeased  day  exactly  event  following  type  happens  either  employee  leaf  vacation  beginning  day  employee  return  vacation  beginning  day  know  sequence  event  following  day  task  compute  day  displeased  employee  day  contains  employee  company  day  second  contains  denoting  direct  manager  employee  third  contains  denoting  bearing  limit  empoyees  fourth  contains  denoting  event  positive  employee  leaf  vacation  starting  day  negative  employee  return  vacation  starting  day  beginning  employee  vacation  guaranteed  employee  leaf  vacation  vacation  moment  vice  versa  print  sequence  displeased  employee  day
1194/E __label__data  structures  __label__sortings  __label__brute  force  __label__geometry  segment  drawn  plane  segment  connects  point  segment  non  degenerate  either  horizontal  vertical  formally  every  either  condition  hold  segment  different  type  intersect  pair  horizontal  segment  share  common  point  pair  vertical  segment  share  common  point  say  segment  index  form  rectangle  following  condition  hold  segment  horizontal  segment  vertical  segment  intersects  segment  segment  intersects  segment  segment  intersects  segment  segment  intersects  segment  please  calculate  way  choose  segment  form  rectangle  note  condition  hold  contains  segment  follow  contains  denoting  endpoint  segment  coordinate  endpoint  range  guaranteed  segment  non  degenerate  either  horizontal  vertical  furthermore  segment  share  common  point  segment  horizontal  another  vertical  print  way  choose  segment  form  rectangle
364/C __label__brute  force  __label__number  theory  call  set  positive  beautiful  following  condition  fulfills  prime  word  set  divisible  prime  least  half  set  divisible  task  find  beautiful  set  element  equal  element  exceed  k  contains  show  many  required  beautiful  set  print  space  separated  beautiful  set  multiple  set  allowed  print
1132/D __label__greedy  __label__binary  search  berland  hold  another  training  contest  student  today  student  came  brought  laptop  turned  everyone  ha  forgot  charger  let  student  numbered  laptop  student  ha  charge  beginning  contest  us  charge  per  minute  laptop  ha  charge  beginning  minute  becomes  charge  beginning  next  minute  whole  contest  last  minute  polycarp  coach  berland  decided  buy  single  charger  student  would  able  successfully  finish  contest  buy  charger  moment  contest  start  polycarp  choose  buy  charger  non  negative  positive  power  output  power  output  chosen  purchase  changed  afterwards  let  chosen  power  output  beginning  minute  minute  contest  start  last  minute  contest  plug  charger  student  laptop  use  minute  laptop  using  charge  per  minute  become  per  minute  charger  plugged  negative  power  usage  rate  mean  laptop  charge  increasing  charge  laptop  limited  become  infinitely  large  charger  plugged  laptop  time  student  successfully  finish  contest  charge  laptop  never  beginning  minute  minute  contest  start  last  minute  contest  charge  allowed  charge  laptop  minute  contest  end  matter  help  polycarp  determine  minimal  possible  power  output  charger  student  able  successfully  finish  contest  report  charger  exists  contains  student  laptop  correspondigly  duration  contest  minute  second  contains  initial  charge  student  laptop  third  contains  power  usage  student  laptop  print  single  non  negative  minimal  possible  power  output  charger  student  able  successfully  finish  contest
1209/E1 __label__dp  __label__greedy  __label__sortings  __label__brute  force  easier  version  next  problem  difference  constraint  given  rectangular  nm  matrix  move  choose  column  cyclically  shift  element  column  perform  operation  many  time  want  possibly  perform  operation  column  multiple  time  done  cyclical  shift  compute  every  row  maximal  value  suppose  row  equal  maximal  possible  value  contains  test  case  input  test  case  contains  row  column  given  matrix  following  contains  element  print  answer  test  case  order  given  input
1103/C __label__math  __label__dfs  __label__graphs  __label__constructive  algorithms  today  tuesday  mean  dispute  johnny  solving  team  try  understand  johnny  solving  guy  asked  umnik  help  umnik  gave  guy  connected  graph  vertex  without  loop  multiedges  degree  vertex  least  gave  johnny  smart  promised  find  simple  path  length  least  graph  reply  solving  promised  find  simple  vertex  cycle  representative  length  cycle  least  length  cycle  divisible  cycle  must  representative  vertex  belongs  cycle  printed  cycle  need  help  guy  resolve  dispute  need  find  solution  johnny  simple  path  length  least  necessarily  divided  solution  solving  cycle  satisfy  condition  solution  print  contains  next  describe  edge  graph  format  guaranteed  pair  distinct  guaranteed  degree  vertex  least  print  path  solve  problem  johnny  second  print  vertex  path  third  print  vertex  describing  path  route  order
1214/E __label__math  __label__sortings  __label__graphs  __label__trees  __label__constructive  algorithms  petya  birthday  party  friend  presented  brand  new  electrician  construction  set  sure  enjoy  always  doe  weird  puzzle  give  construction  set  electrician  consists  n  wire  light  bulb  bulb  ha  unique  index  wire  look  indistinguishable  order  complete  construction  set  ha  use  wire  connect  distinct  bulb  define  chain  completed  construction  set  sequence  distinct  bulb  length  least  every  consecutive  bulb  sequence  directly  connected  wire  completed  construction  set  configuration  said  correct  resulting  network  bulb  wire  ha  tree  structure  distinct  bulb  endpoint  chain  petya  wa  assembling  different  configuration  several  day  noticed  sometimes  bulb  turn  series  experiment  came  conclusion  bulb  indexed  turn  chain  connecting  consists  exactly  wire  moreover  following  important  condition  hold  value  never  greater  petya  best  wa  able  find  configuration  make  bulb  turn  seek  assistance  please  find  configuration  make  bulb  shine  guaranteed  configuration  always  exists  input  contains  single  parameter  construction  set  defines  bulb  wire  next  contains  stand  wire  chain  bulb  consist  print  n  distinct  index  bulb  connected  wire
896/D __label__math  __label__number  theory  lakhesh  love  make  movie  nephren  help  run  cinema  call  cinema  day  cinema  run  change  yuan  note  currently  nephren  still  want  start  business  assume  yuan  kind  currency  regulu  ere  type  customer  bring  exactly  yuan  note  bring  yuan  note  nephren  need  give  yuan  note  back  bring  vip  card  need  pay  ticket  customer  waiting  outside  queue  nephren  want  know  many  possible  queue  able  run  smoothly  every  customer  receive  change  yuan  note  selling  ticket  customer  inclusive  queue  considered  different  exists  customer  whose  type  different  queue  large  please  output  answer  modulo  containing  indicating  answer  modulo
538/F __label__math  __label__data  structures  __label__sortings  __label__brute  force  andrew  skipped  lesson  subject  algorithm  data  structure  entire  term  came  final  test  teacher  decided  give  difficult  task  punishment  teacher  gave  andrew  array  asked  andrew  build  ary  heap  array  count  element  property  minimum  rooted  heap  violated  value  element  le  value  parent  andrew  looked  wikipedia  ary  heap  rooted  tree  vertex  element  array  element  array  indexed  child  element  element  index  element  lie  outside  border  array  corresponding  child  absent  ary  heap  every  element  except  ha  exactly  parent  element  parent  absent  element  root  heap  denote  parent  element  let  say  non  root  element  property  heap  violated  help  andrew  cope  task  contains  single  second  contains  space  separated  single  print  separate  consecutive  single  space  element  property  ary  heap  violated
802/G __label__implementation  april  heidi  suspecting  news  read  today  fake  doe  want  look  silly  front  contestant  know  newspiece  fake  contains  heidi  subsequence  help  heidi  ass  whether  given  piece  true  please  discreet  input  contains  single  nonempty  string  length  composed  lowercase  letter  output  yes  string  contains  heidi  subsequence  otherwise
887/E __label__sortings  __label__binary  search  __label__geometry  masha  little  brother  draw  point  sheet  paper  draw  circle  gave  sheet  sister  masha  ha  returned  geometry  lesson  instantly  noticed  interesting  fact  brother  drawing  going  point  brother  drew  intersect  touch  circle  circle  intersect  touch  pair  circle  circle  located  inside  another  moreover  circle  masha  drew  square  minimal  area  side  parallel  axis  circle  located  inside  square  noticed  square  intersect  touch  pair  square  square  located  inside  masha  want  draw  circle  minimal  possible  radius  go  point  brother  drew  intersect  circle  circle  touch  masha  circle  located  inside  guaranteed  answer  exceed  held  hack  well  contains  coordinate  point  brother  drew  point  ha  coordinate  second  point  ha  coordinate  point  different  second  contains  single  circle  brother  drew  next  contains  description  circle  contains  describing  circle  center  radius  output  smallest  real  possible  draw  circle  radius  given  point  way  intersect  circle
919/F __label__graphs  imagine  alice  playing  card  game  friend  bob  exactly  card  card  ranging  round  alice  bob  turn  choose  card  different  player  let  player  card  opponent  card  necessary  calculate  mod  replace  player  end  card  win  alice  want  know  win  situation  give  card  bob  card  person  playing  round  task  determine  win  choose  best  operation  round  contains  positive  denoting  situation  need  consider  following  describe  situation  situation  contains  non  negative  mean  alice  play  mean  bob  play  second  contains  non  negative  describing  alice  card  third  contains  non  negative  describing  bob  card  guarantee  hold  output  situation  determine  win  output
483/A __label__math  __label__implementation  __label__brute  force  __label__number  theory  friend  ha  recently  learned  coprime  pair  called  coprime  maximum  divide  equal  friend  often  come  different  statement  ha  recently  supposed  pair  coprime  pair  coprime  pair  coprime  want  find  counterexample  friend  statement  therefore  task  find  distinct  statement  false  meet  condition  l  specifically  need  find  l  pair  coprime  pair  coprime  single  contains  positive  space  separated  print  positive  space  separated  distinct  form  counterexample  several  solution  allowed  print  must  printed  ascending  order
99/B __label__implementation  __label__sortings  far  away  kingdom  young  page  help  set  table  king  terribly  mischievous  need  keep  eye  control  whether  set  everything  correctly  time  royal  chef  gerasim  impression  page  played  prank  poured  juice  cup  another  gerasim  want  check  hypothesis  good  thing  chef  gerasim  always  pour  milliliter  juice  cup  royal  kitchen  thoroughly  measured  juice  cup  gerasim  asked  write  program  determine  cup  juice  wa  poured  otherwise  program  determine  time  page  set  table  diligently  simplify  task  shall  consider  cup  bottomless  juice  never  overfills  cup  pours  much  besides  strange  reason  far  away  kingdom  pour  cup  cup  another  milliliter  juice  contains  cup  royal  table  next  volume  juice  cup  non  negative  exceeding  page  pour  juice  print  exemplary  page  without  quote  determine  volume  juice  poured  exactly  juice  pouring  print  cup  cup  without  quote  represents  volume  poured  juice  represents  cup  juice  wa  poured  cup  numbered  consecutive  positive  starting  order  cup  described  input  data  represents  cup  juice  wa  poured  finally  given  juice  volume  obtained  using  pouring  example  page  poured  juice  cup  another  royal  kitchen  maid  poured  juice  cup  incorrectly  print  unrecoverable  configuration  without  quote
568/E __label__dp  __label__data  structures  note  memory  limit  problem  le  usual  let  consider  array  consisting  positive  position  gap  collection  used  fill  gap  given  collection  used  task  determine  way  filling  gap  longest  increasing  subsequence  formed  array  ha  maximum  size  contains  single  length  array  second  contains  space  separated  element  sequence  gap  marked  element  gap  positive  exceeding  guaranteed  sequence  contains  gap  third  contains  single  positive  element  fill  gap  k  fourth  contains  positive  fill  gap  positive  exceeding  equal  print  space  separated  single  resulting  sequence  multiple  possible  answer  print
821/E __label__dp  okabe  like  take  walk  know  spy  organization  could  anywhere  want  know  many  different  walk  take  city  safely  okabe  city  represented  point  non  negative  okabe  start  origin  point  need  reach  point  okabe  currently  point  step  additionally  horizontal  segment  go  inclusive  guaranteed  ann  segment  force  okabe  walk  value  range  value  satisfies  aii  else  might  spied  mean  required  segment  segment  end  another  begin  okabe  want  know  many  walk  origin  point  satisfying  condition  modulo  input  contains  segment  destination  coordinate  next  space  separated  left  right  end  segment  coordinate  guaranteed  ann  print  walk  satisfying  condition  modulo
1209/G1 __label__implementation  __label__greedy  __label__data  structures  easier  version  next  problem  version  sequence  called  nice  element  arranged  block  like  formally  element  equal  everything  must  equal  let  define  difficulty  sequence  minimum  possible  element  change  get  nice  sequence  change  least  element  value  value  must  change  element  value  well  example  allowed  change  second  need  leave  untouched  change  value  given  sequence  update  update  form  change  update  independent  change  stay  future  print  difficulty  initial  sequence  sequence  every  update  contains  length  sequence  update  second  contains  initial  sequence  following  contains  position  new  value  position  print  answer  initial  sequence  answer  every  update
466/B __label__math  __label__brute  force  start  new  academic  year  brought  problem  accommodation  student  dormitory  dormitory  ha  square  meter  wonder  room  caretaker  want  accommodate  exactly  student  law  say  must  least  square  meter  per  student  room  room  student  must  area  least  square  meter  caretaker  enlarge  possibly  side  room  arbitrary  positive  meter  help  change  room  student  could  live  total  area  room  wa  small  possible  contains  space  separated  student  size  room  print  b  final  area  room  size  multiple  optimal  solution  print
867/A __label__implementation  know  memsql  ha  american  office  san  francisco  seattle  manager  company  travel  lot  city  always  plane  prefer  flying  seattle  san  francisco  direction  warmer  san  francisco  busy  remember  flight  made  either  direction  last  day  know  whether  san  francisco  office  seattle  office  always  fly  night  never  office  day  given  information  determine  flew  time  seattle  san  francisco  last  day  input  contains  single  day  second  contains  string  length  consisting  capital  letter  letter  seattle  office  day  otherwise  san  francisco  day  given  chronological  order  today  last  day  sequence  print  yes  flew  time  seattle  san  francisco  otherwise
1196/C __label__implementation  robot  escaped  laboratory  find  soon  possible  robot  experimental  behavior  tested  really  dangerous  fortunately  even  though  robot  escaped  still  control  know  location  robot  world  live  modeled  infinite  coordinate  plane  robot  currently  located  point  coordinate  furthermore  send  exactly  command  robot  command  robot  receives  command  start  moving  towards  point  coordinate  robot  stop  movement  case  either  reach  get  closer  normally  robot  able  get  point  coordinate  plane  point  robot  usually  perform  action  move  let  denote  current  coordinate  robot  movement  system  allows  move  adjacent  point  action  allows  move  second  action  allows  move  third  action  allows  move  fourth  action  allows  move  unfortunately  seems  movement  system  robot  malfunctioning  robot  know  action  perform  perform  want  send  command  robot  gather  point  choose  pair  robot  reach  point  possible  find  point  contains  query  query  follow  query  begin  containing  robot  query  follow  describes  robot  current  query  contains  describe  initial  location  robot  following  describe  action  robot  use  move  robot  use  action  use  action  guaranteed  total  robot  query  doe  exceed  answer  query  independently  order  query  appear  input
1250/F __label__implementation  __label__brute  force  developing  project  build  new  data  center  data  center  rectangle  area  exactly  square  meter  side  data  center  must  goal  minimize  impact  external  environment  data  center  reason  want  minimize  length  perimeter  data  center  sum  length  side  minimum  perimeter  rectangular  data  center  area  exactly  square  meter  length  side  must  input  contains  area  data  center  square  meter  print  required  minimum  perimeter  meter
105/D __label__implementation  __label__brute  force  map  game  divided  square  cell  called  geo  panel  panel  painted  shall  assume  geo  panel  without  color  painted  transparent  color  besides  map  ha  called  geo  symbol  look  like  pyramid  different  color  including  geo  symbol  transparent  color  geo  symbol  located  geo  panel  geo  panel  geo  symbol  geo  symbol  eliminated  understand  better  happens  geo  symbol  eliminated  let  introduce  queue  put  recently  eliminated  geo  symbol  let  put  head  queue  geo  symbol  wa  eliminated  next  repeat  following  operation  extract  geo  symbol  queue  look  color  panel  containing  given  geo  symbol  differs  transparent  differs  color  geo  symbol  geo  panel  color  repainted  color  given  geo  symbol  transparent  geo  symbol  repaint  geo  panel  transparent  repainting  executed  infinite  spiral  strictly  following  order  starting  panel  contained  geo  symbol  word  select  panel  need  repainted  find  infinite  spiral  whose  center  placed  position  given  geo  symbol  repaint  order  increasing  panel  contains  another  geo  symbol  panel  repainted  geo  symbol  removed  field  placed  tail  queue  repainting  geo  symbol  completely  eliminated  next  geo  symbol  taken  head  queue  process  repeat  process  end  queue  empty  see  sample  analysis  better  understanding  know  color  geo  panel  location  geo  symbol  determine  repaintings  occur  destroy  geo  symbol  contains  height  width  map  cell  follow  contains  geo  panel  color  follow  contains  geo  symbol  description  mean  given  position  contains  geo  symbol  otherwise  represents  color  geo  symbol  given  position  color  represents  transparent  color  last  contains  row  column  geo  symbol  placed  need  eliminated  row  numbered  top  bottom  column  numbered  left  right  coordinate  based  guaranteed  position  coordinate  contains  geo  symbol  print  single  total  repaintings  geo  symbol  eliminated
404/A __label__implementation  valera  little  boy  yesterday  got  huge  math  hometask  school  valera  enough  time  properly  learn  english  alphabet  english  lesson  unfortunately  english  teacher  decided  test  alphabet  today  test  valera  got  square  piece  squared  paper  length  side  equal  square  odd  unit  square  contains  small  letter  english  alphabet  valera  need  know  letter  written  square  piece  paper  form  letter  valera  teacher  think  letter  piece  paper  form  diagonal  square  paper  letter  square  paper  diagonal  letter  different  letter  diagonal  help  valera  write  program  completes  described  task  contains  odd  next  contains  small  english  letter  description  valera  paper  print  string  yes  letter  paper  form  letter  otherwise  print  string  print  string  without  quote
1105/A __label__implementation  __label__brute  force  salem  gave  stick  positive  length  every  stick  change  length  positive  length  either  shrink  stretch  cost  changing  stick  length  mean  absolute  value  stick  length  called  almost  good  salem  asks  change  length  stick  possibly  none  stick  length  almost  good  positive  total  cost  changing  minimum  possible  value  fixed  advance  choose  positive  answer  print  value  minimum  cost  multiple  optimal  choice  print  contains  single  stick  second  contains  length  stick  print  value  minimum  possible  cost  multiple  optimal  choice  print
733/C __label__dp  __label__greedy  __label__constructive  algorithms  wa  epidemic  monstropolis  monster  became  sick  recover  monster  lined  queue  appointment  doctor  city  soon  monster  became  hungry  began  eat  monster  eat  monster  weight  strictly  greater  weight  monster  eaten  stand  queue  next  monster  eat  instantly  monster  eaten  moment  monster  eats  monster  weight  monster  increase  weight  eaten  monster  result  eating  length  queue  decrease  monster  eaten  step  forward  empty  place  queue  monster  eat  several  monster  another  initially  monster  queue  weight  example  weight  order  queue  monster  numbered  left  right  option  monster  eat  second  monster  greater  second  monster  eat  third  monster  greater  second  monster  eat  fifth  monster  neighbor  second  monster  eat  monster  queue  transformed  time  someone  said  good  joke  monster  recovered  moment  k  monster  queue  weight  sequence  weight  monster  order  last  required  provide  possible  order  eating  monster  led  current  queue  determine  could  happen  assume  doctor  make  appointment  monster  eating  contains  single  monster  initial  queue  second  contains  initial  weight  monster  third  contains  single  monster  queue  joke  fourth  contains  j  weight  monster  joke  monster  listed  order  beginning  queue  end  case  action  could  lead  final  queue  print  without  quote
848/D __label__dp  __label__graphs  never  ending  fast  changing  dream  like  world  unfolds  secret  door  open  world  unordered  graph  whose  vertex  set  special  vertex  initial  world  ha  vertex  set  edge  total  change  took  place  initial  world  change  new  vertex  added  existing  edge  chosen  edge  added  note  possible  edge  chosen  change  known  capacity  minimum  cut  resulting  graph  least  edge  need  removed  order  make  disconnected  count  non  similar  world  built  constraint  modulo  define  world  similar  isomorphic  isomorphism  vertex  relabelled  formally  world  considered  similar  bijection  vertex  set  vertex  adjacent  adjacent  input  contains  space  separated  operation  performed  minimum  cut  respectively  output  non  similar  world  built  modulo
883/F __label__implementation  ambiguity  writes  berland  name  letter  latin  alphabet  example  berland  sound  written  latin  alphabet  written  reason  word  ulyana  oolyana  denote  name  second  ambiguity  berland  sound  use  write  example  word  mihail  mikhail  denote  name  user  registered  polycarp  website  indicated  name  represented  latin  letter  many  distinct  name  ambiguity  described  taken  account  formally  assume  word  denote  name  using  replacement  make  word  equal  make  replacement  direction  word  arbitrary  time  letter  resulted  previous  replacement  participate  next  replacement  example  following  pair  word  denote  name  koouper  kuooper  making  replacement  described  make  word  equal  koouper  kuuper  kuooper  kuuper  khun  kkkhoon  replacement  described  make  word  equal  khun  khoon  kkkhoon  kkhoon  khoon  given  list  word  find  minimal  group  word  group  denote  name  contains  word  list  following  word  word  per  word  consists  lowercase  latin  letter  length  word  letter  inclusive  print  minimal  group  word  group  denote  name
796/C __label__dp  __label__data  structures  __label__trees  __label__constructive  algorithms  although  inzane  successfully  found  beloved  bone  zane  owner  ha  return  search  zane  would  need  lot  money  sadly  ha  none  deal  problem  ha  decided  hack  bank  bank  numbered  wire  connecting  bank  bank  initially  online  bank  ha  initial  strength  bank  ha  initial  strength  let  define  keywords  proceed  bank  bank  neighboring  exists  wire  directly  connecting  bank  bank  semi  neighboring  exists  online  bank  bank  bank  neighboring  bank  bank  neighboring  bank  hacked  becomes  offline  longer  online  bank  neighboring  semi  neighboring  strength  increased  start  plan  inzane  choose  bank  hack  indeed  strength  bank  must  exceed  strength  computer  repeatedly  choose  bank  hack  next  bank  hacked  continue  hack  bank  condition  met  bank  online  bank  hacked  bank  neighboring  offline  bank  strength  bank  le  equal  strength  inzane  computer  determine  minimum  strength  computer  inzane  need  hack  bank  contains  total  bank  second  contains  strength  bank  next  contains  uii  meaning  wire  directly  connecting  bank  guaranteed  wire  connect  bank  way  inzane  somehow  hack  bank  using  computer  appropriate  strength  print  minimum  strength  computer  inzane  need  accomplish  goal
1182/A __label__math  __label__dp  given  find  way  fill  n  tile  shape  described  picture  upon  filling  empty  space  allowed  shape  overlap  picture  describes  left  shape  right  n  tile  contains  length  print  way  fill
358/E __label__implementation  __label__graphs  __label__brute  force  dima  good  person  fact  great  good  thing  come  end  seryozha  going  kick  dima  time  reason  divide  room  unit  square  room  rectangle  n  consisting  unit  square  beginning  seryozha  put  dima  center  square  started  kick  dima  known  kick  dima  least  time  dima  kicked  flyes  move  direction  left  right  move  dima  pass  unit  length  corresponding  direction  seryozha  really  kind  kick  dima  way  dima  never  meet  wall  word  dima  never  leave  room  space  seryozha  dynamic  character  dima  never  fly  segment  connecting  pair  adjacent  square  twice  seryozha  kick  dima  long  time  dima  vindictive  dima  writes  dima  marked  square  wa  staying  wa  flying  thanks  kick  dima  doe  remember  value  asks  find  possible  value  match  dima  record  contains  size  room  next  go  contains  aij  dima  note  aij  dima  wa  staying  square  wa  flying  otherwise  aij  least  aij  equal  single  accending  order  print  match  dima  note  dima  invented  story  kick  print
629/B __label__brute  force  famil  door  want  celebrate  birthday  friend  far  far  away  ha  friend  come  party  specific  range  day  year  course  famil  door  want  many  friend  celebrating  together  possible  far  car  weird  far  far  away  citizen  carry  people  opposite  gender  exactly  male  female  far  far  transportation  used  get  party  famil  door  select  day  year  invite  friend  available  moment  male  friend  invited  equal  female  friend  invited  find  maximum  friend  present  party  input  contains  single  famil  door  friend  follow  describe  friend  start  capital  letter  female  friend  capital  letter  male  friend  follow  ii  providing  friend  come  party  day  day  inclusive  print  maximum  people  come  famil  door  party
1070/E __label__data  structures  __label__binary  search  polycarp  ha  lot  work  recently  ha  learned  new  time  management  rule  task  take  minute  le  immediately  polycarp  like  new  rule  sure  minute  optimal  value  supposes  value  chosen  based  existing  task  list  polycarp  ha  list  task  complete  task  ha  difficulty  requires  exactly  minute  done  polycarp  read  task  task  difficulty  le  polycarp  start  work  task  immediately  task  difficulty  strictly  greater  task  allowed  rearrange  task  list  polycarp  spend  time  reading  task  skipping  polycarp  ha  minute  total  complete  maximum  task  doe  want  work  time  decides  make  break  group  consecutive  task  wa  working  break  take  amount  time  wa  spent  total  completion  task  example  polycarp  work  following  schedule  polycarp  read  task  difficulty  greater  work  minute  minute  polycarp  read  second  task  difficulty  greater  work  minute  minute  polycarp  notice  ha  finished  task  take  break  minute  minute  polycarp  read  third  task  difficulty  greater  skip  without  spending  time  polycarp  read  fourth  task  difficulty  greater  work  minute  minute  polycarp  read  task  skip  polycarp  read  task  difficulty  greater  work  minute  minute  polycarp  notice  ha  finished  task  take  break  minute  minute  polycarp  stop  exactly  minute  polycarp  started  task  ha  finished  time  task  considered  completed  allowed  complete  le  task  last  group  polycarp  considers  acceptable  shorter  break  needed  last  group  task  even  break  working  day  enough  time  rest  anyway  please  help  polycarp  find  value  would  allow  complete  maximum  possible  task  minute  input  contains  single  test  case  description  test  case  follows  solve  test  case  separately  test  case  completely  independent  affect  test  case  described  contains  space  separated  task  polycarp  list  task  without  break  total  amount  time  polycarp  work  task  second  test  case  contains  space  separated  difficulty  task  sum  value  test  case  input  doe  exceed  print  answer  corresponding  test  case  maximum  possible  task  polycarp  complete  value  polycarp  use  time  management  rule  separated  space  several  possible  value  test  case  output
490/F __label__dp  __label__data  structures  __label__dfs  __label__trees  road  accident  band  planning  unprecedented  tour  around  treeland  fan  looking  forward  event  making  bet  many  concert  favorite  group  treeland  consists  city  pair  city  connected  bidirectional  road  overall  country  ha  road  know  possible  get  city  city  numbered  every  city  know  value  people  know  band  travel  along  path  concert  city  along  path  band  path  pas  city  twice  time  move  city  previously  visited  thus  musician  travel  along  path  without  visiting  city  twice  necessarily  city  along  way  concert  band  plan  gather  big  stadium  concert  hall  tour  every  time  perform  city  population  larger  population  previously  visited  concert  city  word  sequence  population  city  concert  held  strictly  increasing  recent  interview  leader  road  accident  band  promised  fan  band  give  concert  largest  possible  city  thus  band  travel  along  chain  city  treeland  concert  city  population  increase  concert  largest  possible  fan  treeland  frantically  trying  figure  many  concert  group  treeland  look  like  manage  without  help  real  programmer  help  fan  find  sought  concert  input  contains  city  treeland  next  contains  population  city  next  description  road  road  per  road  defined  pair  j  j  pair  city  connected  road  separated  space  print  city  road  accident  band  concert
1111/C __label__math  __label__brute  force  __label__binary  search  thanos  want  destroy  avenger  base  need  destroy  avenger  along  base  let  represent  base  array  position  occupied  many  avenger  avenger  occupy  position  length  base  perfect  power  thanos  want  destroy  base  using  minimum  power  start  whole  base  step  either  following  current  length  least  divide  base  equal  half  destroy  separately  burn  current  base  contains  avenger  take  amount  power  otherwise  take  amount  power  avenger  length  current  base  output  minimum  power  needed  thanos  destroy  avenger  base  contains  length  base  avenger  constant  explained  question  second  contains  represents  position  avenger  base  output  minimum  power  needed  destroy  avenger  base
672/A __label__implementation  every  year  hundred  people  come  summer  camp  learn  new  algorithm  solve  hard  problem  year  summer  camp  asked  solve  following  problem  starting  written  prefix  task  print  digit  string  digit  numbered  starting  input  contains  single  position  digit  need  print  print  digit
765/G __label__math  __label__dp  __label__brute  force  __label__number  theory  gone  far  probably  skip  unnecessary  legend  anyway  given  binary  string  find  print  answer  modulo  input  string  consisting  next  input  next  contains  space  separated  prime  distinct  single  answer  problem
1080/A __label__math  petya  party  soon  ha  decided  invite  friend  want  make  invitation  form  origami  invitation  need  red  sheet  green  sheet  blue  sheet  store  sell  infinite  notebook  color  notebook  consists  color  sheet  notebook  contains  sheet  either  red  green  blue  find  minimum  notebook  petya  need  buy  invite  friend  contains  petya  friend  sheet  notebook  respectively  print  minimum  notebook  petya  need  buy
533/E __label__dp  __label__greedy  __label__constructive  algorithms  __label__strings  analyzing  mistake  people  make  typing  search  query  complex  interesting  work  guaranteed  way  determine  user  originally  meant  typing  query  use  different  sort  heuristic  polycarp  needed  write  code  could  given  word  check  whether  could  obtained  word  result  typo  polycarpus  suggested  common  typo  skipping  exactly  letter  type  word  implement  program  given  distinct  word  length  determine  many  word  length  property  transform  deleting  exactly  character  word  consist  lowercase  english  letter  word  consist  lowercase  english  letter  contains  length  word  second  contains  word  third  contains  word  word  consist  lowercase  english  letter  guaranteed  distinct  word  print  single  distinct  word  transformed  due  typo
910/C __label__math  __label__greedy  __label__constructive  algorithms  petya  ha  positive  friend  vasya  decided  joke  replaced  digit  petya  letter  used  lowercase  letter  latin  alphabet  replaced  digit  letter  digit  another  letter  different  digit  vasya  used  distinct  letter  task  restore  petya  restored  positive  without  leading  since  multiple  way  determine  minimum  possible  sum  petya  restoration  guaranteed  vasya  joke  petya  leading  contains  single  petya  following  contains  non  empty  string  consisting  lowercase  latin  letter  petya  vasya  joke  length  string  doe  exceed  character  determine  minimum  sum  petya  restoration  restored  positive  without  leading  guaranteed  correct  restore  without  leading  exists  given  test
401/D __label__dp  __label__brute  force  __label__number  theory  roman  young  mathematician  famous  uzhland  unfortunately  sereja  think  make  sereja  change  mind  roman  ready  solve  mathematical  problem  thought  sereja  asked  rom  find  many  close  modulo  considered  close  modulo  obtained  rearranging  digit  leading  remainder  dividing  equal  roman  good  mathematician  huge  asks  help  contains  single  print  single  close  modulo
891/A __label__math  __label__dp  __label__greedy  __label__brute  force  __label__number  theory  array  length  perform  operation  operation  like  choose  adjacent  element  say  replace  gcd  gcd  denotes  greatest  common  divisor  minimum  operation  need  make  element  equal  input  contains  element  array  second  contains  space  separated  element  array  print  impossible  turn  otherwise  print  minimum  operation  needed  make  equal
862/B __label__dfs  __label__graphs  __label__trees  mahmoud  ehab  continue  adventure  everybody  evil  land  know  evil  like  bipartite  graph  especially  tree  tree  connected  acyclic  graph  bipartite  graph  graph  whose  vertex  partitioned  set  way  edge  belongs  graph  belong  different  set  find  formal  definition  tree  bipartite  graph  note  section  evil  gave  mahmoud  ehab  tree  consisting  node  asked  add  edge  way  graph  still  bipartite  besides  adding  edge  graph  simple  loop  multiple  edge  maximum  edge  add  loop  edge  connects  node  graph  multiple  edge  pair  node  edge  cycle  loop  input  contains  node  tree  next  u  description  edge  tree  guaranteed  given  graph  tree  output  maximum  edge  mahmoud  ehab  add  tree  fulfilling  condition
460/D __label__math  __label__constructive  algorithms  __label__brute  force  little  victor  adores  set  theory  let  remind  set  group  pairwise  distinct  today  victor  want  find  set  ha  following  property  following  inequality  hold  l  let  denote  element  set  value  must  small  possible  help  victor  find  described  set  contains  space  separated  print  minimum  possible  value  print  cardinality  set  print  element  set  order
126/E __label__brute  force  doctor  prescribed  medicine  patient  medicine  represented  pill  pill  consists  shell  healing  powder  shell  consists  half  half  ha  color  blue  red  white  yellow  doctor  want  put  pill  rectangular  box  size  besides  pill  occupies  exactly  neighboring  cell  cell  contains  exactly  half  pill  thus  result  colored  picture  size  doctor  think  patient  recover  sooner  picture  made  pill  special  unfortunately  putting  pill  box  get  required  picture  easy  task  doctor  asks  help  doctor  ha  amount  pill  painting  type  medicine  matter  stored  inside  box  place  pill  box  required  picture  wa  formed  impossible  place  pill  required  manner  place  matching  color  cell  final  arrangement  doctor  picture  maximum  doctor  picture  contains  character  character  stand  blue  red  white  yellow  color  correspondingly  next  stand  correspondingly  pill  painted  lie  range  inclusively  guaranteed  total  pill  le  print  maximal  cell  color  match
936/A __label__math  __label__implementation  __label__binary  search  julia  going  cook  chicken  kitchen  dormitory  save  energy  stove  kitchen  automatically  turn  minute  turning  cooking  julia  go  kitchen  every  minute  turn  stove  turned  cooker  turned  stay  warm  stove  switch  instantly  known  chicken  need  minute  cooked  stove  turned  minute  turned  need  find  much  time  julia  cook  chicken  considered  chicken  cooked  evenly  constant  speed  stove  turned  constant  speed  turned  single  contains  print  single  total  time  cooking  minute  relative  absolute  error  must  exceed
780/H __label__implementation  __label__binary  search  __label__geometry  new  bus  route  opened  city  route  closed  polygon  place  segment  parallel  ax  bus  operate  route  bus  move  loop  along  route  direction  equal  constant  velocity  stopping  time  negligible  problem  bus  start  movement  vertex  route  equal  interval  suppose  total  time  single  bus  travel  whole  loop  route  bus  start  moving  time  bus  start  time  bus  start  time  finally  bus  start  moving  time  thus  interval  pair  consecutive  bus  including  interval  last  bus  equal  bus  communicate  via  wireless  transmitter  equal  power  transmitter  power  bus  distance  communicate  bus  equipped  distributed  system  schedule  tracking  bus  stick  schedule  system  ha  synchronize  necessary  data  bus  time  time  moment  synchronization  bus  communicates  bus  bus  bus  bus  communicates  bus  research  employee  tasked  finding  smallest  value  possible  find  time  moment  perform  synchronization  bus  started  moving  contains  vertex  polygonal  bus  respectively  next  describe  vertex  route  traversing  order  contains  coordinate  respective  vertex  guaranteed  leg  route  including  leg  last  vertex  paralles  coordinate  ax  moreover  subsequent  vertex  route  coincide  route  allowed  self  intersection  travel  along  segment  multiple  time  print  real  answer  problem  answer  accepted  relative  absolute  error  exceed
815/E __label__implementation  __label__constructive  algorithms  __label__binary  search  long  event  previous  problem  karen  ha  moved  student  life  looking  relocate  new  neighborhood  neighborhood  consists  house  straight  labelled  left  right  equal  distance  apart  everyone  neighborhood  love  peace  quiet  whenever  new  person  move  neighborhood  always  chooses  house  whose  minimum  distance  occupied  house  maximized  multiple  house  maximum  possible  minimum  distance  chooses  leftmost  note  person  arrive  always  move  house  karen  person  enter  neighborhood  everyone  including  follows  rule  house  move  input  contains  describing  house  neighborhood  karen  wa  person  move  respectively  output  single  label  house  karen  move
1163/E __label__math  __label__data  structures  __label__graphs  __label__constructive  algorithms  __label__brute  force  kuro  ha  learned  permutation  really  excited  create  new  permutation  type  ha  chosen  distinct  positive  put  set  defines  magical  permutation  permutation  non  negative  bitwise  xor  consecutive  element  permutation  element  since  kuro  really  excited  magical  permutation  want  create  longest  magical  permutation  possible  word  want  find  largest  non  negative  magical  permutation  since  newbie  subject  want  help  find  value  magical  permutation  contains  element  set  next  contains  distinct  element  set  print  largest  non  negative  magical  permutation
1207/E __label__math  interactive  problem  remember  flush  output  communicating  testing  program  use  fflush  stdout  system  flush  java  stdout  flush  python  flush  output  pascal  flush  output  use  programming  language  consult  documentation  refer  guide  interactive  problem  http  codeforces  com  blog  entry  jury  picked  le  greater  guess  ask  query  query  consist  le  greater  response  query  jury  pick  tell  value  bitwise  xor  additional  constraint  query  use  query  distinct  guaranteed  value  fixed  beforehand  test  choice  every  query  depend  send  output  give  answer  program  print  break  end  flush  output  terminate  gracefully  giving  answer  submit  query  ask  query  print  following  format  every  range  ended  break  character  submitting  query  flush  output  read  answer  query  value  used  query
1031/D __label__greedy  given  matrix  size  nn  filled  lowercase  english  letter  change  letter  matrix  consider  path  upper  left  corner  lower  right  corner  move  cell  neighboring  cell  right  path  associated  string  formed  letter  cell  path  visit  thus  length  string  n  find  lexicographically  smallest  string  associated  path  changing  letter  cell  matrix  string  lexicographically  smaller  string  different  letter  smaller  contains  size  matrix  letter  change  next  contains  string  lowercase  english  letter  denoting  row  matrix  output  lexicographically  smallest  string  associated  valid  path  changing  letter  matrix
312/B __label__math  smallr  archer  smallr  taking  match  archer  zanoes  try  shoot  target  turn  smallr  shoot  probability  shooting  target  time  smallr  zanoes  shoot  target  winner  output  probability  smallr  win  match  single  contains  print  single  real  probability  smallr  win  match
573/E __label__greedy  __label__data  structures  limak  old  brown  bear  often  go  bowling  friend  today  feel  really  good  try  beat  record  rolling  ball  get  score  maybe  negative  point  score  roll  multiplied  score  summed  roll  score  total  score  total  score  roll  limak  made  roll  got  score  want  maximize  total  score  came  interesting  idea  cancel  roll  saying  something  distracted  wa  strong  wind  limak  able  cancel  roll  maybe  even  none  total  score  calculated  non  canceled  roll  look  sample  test  clarification  maximum  total  score  limak  get  contains  single  second  contains  space  separated  score  limak  roll  print  maximum  possible  total  score  choosing  roll  cancel
1073/E __label__math  __label__dp  given  task  calculate  sum  including  contains  different  digit  print  sum  modulo  example  calculate  formed  using  digit  answer  input  contains  border  segment  maximum  different  digit  print  sum  contains  different  digit  modulo
415/B __label__math  __label__implementation  __label__greedy  __label__binary  search  bimokh  mashmokh  bos  following  day  decided  pay  worker  new  way  beginning  day  give  worker  certain  amount  token  end  day  worker  give  token  back  get  certain  amount  money  worker  save  rest  token  use  day  get  money  worker  give  back  token  get  dollar  mashmokh  like  token  like  money  want  save  many  token  possible  amount  money  get  maximal  possible  day  ha  token  given  worker  day  help  calculate  day  token  save  input  contains  space  separated  second  input  contains  space  separated  output  space  separated  token  mashmokh  save  day
1059/A __label__implementation  vasya  ha  recently  got  job  cashier  local  store  day  work  minute  long  vasya  ha  already  memorized  regular  customer  come  minute  beginning  day  service  consumes  minute  guaranteed  customer  arrive  vasya  servicing  another  customer  vasya  bit  lazy  like  taking  smoke  break  minute  break  another  vasya  must  present  work  time  period  must  serve  regular  customer  otherwise  alert  bos  maximum  break  vasya  take  day  contains  next  contains  guaranteed  output  maximum  break
990/C __label__implementation  bracket  sequence  string  containing  character  regular  bracket  sequence  bracket  sequence  transformed  correct  arithmetic  expression  inserting  character  original  character  sequence  example  bracket  sequence  regular  resulting  expression  given  bracket  sequence  calculate  pair  bracket  sequence  regular  bracket  sequence  operation  mean  concatenation  regular  bracket  sequence  pair  must  counted  answer  regular  bracket  sequence  pair  must  counted  answer  contains  bracket  sequence  following  bracket  sequence  non  empty  string  consisting  character  sum  length  bracket  sequence  doe  exceed  single  print  single  pair  bracket  sequence  regular  bracket  sequence
997/B __label__math  __label__dp  __label__greedy  __label__brute  force  let  introduce  system  based  roman  digit  digit  correspond  respectively  use  roman  digit  allowed  system  written  sequence  digit  define  value  sequence  simply  sum  digit  example  xxxv  evaluates  ixi  pay  attention  difference  traditional  roman  system  system  sequence  digit  valid  moreover  order  digit  matter  example  mean  notice  system  ambiguous  written  many  different  way  goal  determine  many  distinct  represented  exactly  roman  digit  input  file  contains  single  roman  digit  use  output  single  distinct  represented  using  roman  digit  exactly
633/E __label__data  structures  __label__constructive  algorithms  __label__binary  search  commerce  startup  pitch  investor  get  funding  functional  week  website  week  know  unique  visitor  week  revenue  evaluate  potential  startup  range  week  inclusive  investor  use  minimum  maximum  visitor  multiplied  minimum  revenue  period  truth  investor  idea  efficiently  evaluate  startup  going  pick  random  distinct  week  give  manager  startup  pick  rii  report  maximum  visitor  minimum  revenue  period  investor  calculate  potential  startup  range  take  minimum  value  total  evaluation  grade  startup  assuming  manager  startup  always  report  optimal  value  particular  value  resulting  grade  startup  maximized  expected  resulting  grade  startup  input  contains  second  contains  unique  visitor  week  third  contains  revenue  week  print  single  real  value  expected  grade  startup  answer  considered  correct  absolute  relative  error  doe  exceed
964/B __label__math  incoming  message  vasya  message  going  received  minute  message  ha  cost  equal  initially  received  cost  message  decrease  minute  become  negative  vasya  read  message  receiving  moment  time  reading  message  vasya  bank  account  receives  current  cost  message  initially  vasya  bank  account  minute  vasya  bank  account  receives  amount  received  unread  message  vasya  message  important  want  message  read  minute  determine  maximum  amount  money  vasya  bank  account  hold  minute  contains  second  string  contains  output  answer  problem
634/A __label__implementation  __label__constructive  algorithms  remote  island  chain  contains  island  labeled  bidirectional  bridge  connect  island  form  simple  cycle  bridge  connects  island  island  additionally  bridge  connects  island  center  island  contains  identical  pedestal  island  ha  fragile  uniquely  colored  statue  currently  held  pedestal  remaining  island  hold  empty  pedestal  islander  want  rearrange  statue  new  order  repeat  following  process  choose  island  directly  adjacent  island  containing  empty  pedestal  painstakingly  carry  statue  island  adjoining  bridge  place  empty  pedestal  determine  possible  islander  arrange  statue  desired  order  contains  single  total  island  second  contains  space  separated  statue  currently  placed  island  island  ha  statue  guaranteed  distinct  third  contains  space  separated  desired  statue  ith  island  indicates  island  desire  statue  guaranteed  distinct  print  yes  without  quote  rearrangement  done  existing  network  otherwise
355/A __label__implementation  __label__constructive  algorithms  vasya  ha  recently  found  digital  root  decided  share  knowledge  let  assume  sum  digit  example  digital  root  equal  example  r  vasya  afraid  large  work  ha  proved  n  vasya  want  quickly  find  given  digital  root  problem  learned  asked  help  task  given  find  consisting  exactly  digit  leading  allowed  digital  root  equal  else  state  doe  exist  contains  single  print  either  meet  requirement  without  leading  solution  without  quote  corresponding  doe  exist
1027/C __label__greedy  stick  given  length  task  choose  exactly  way  form  rectangle  stick  cut  piece  side  rectangle  must  formed  single  stick  stick  chosen  multiple  time  guaranteed  always  possible  choose  stick  let  area  rectangle  perimeter  rectangle  chosen  rectangle  value  minimal  possible  value  taken  without  rounding  multiple  answer  print  testcase  contains  several  list  stick  required  solve  problem  separately  contains  single  list  stick  testcase  follow  describe  list  pair  contains  single  stick  list  second  pair  contains  length  stick  list  guaranteed  list  exists  way  choose  stick  form  rectangle  total  stick  list  exceed  testcase  print  answer  list  input  length  stick  choose  list  form  rectangle  value  rectangle  minimal  possible  print  length  arbitrary  order
1189/A __label__strings  playing  neo  legendary  matrix  trilogy  keanu  reef  started  doubting  maybe  really  live  virtual  reality  find  true  need  solve  following  problem  let  call  string  consisting  good  contains  different  example  good  good  given  string  length  consisting  need  cut  minimal  possible  substring  good  formally  find  minimal  string  sequence  good  string  concatenation  joining  equal  example  cutting  valid  good  cut  smaller  substring  good  time  cutting  valid  string  good  cutting  valid  minimal  even  though  string  good  help  keanu  show  solution  always  exists  multiple  optimal  answer  print  input  contains  single  length  string  second  contains  string  length  consisting  output  single  minimal  string  cut
526/D __label__strings  day  nom  found  thread  bead  different  color  decided  cut  several  bead  thread  make  bead  necklace  present  girlfriend  nelly  nom  know  girlfriend  love  beautiful  pattern  want  bead  necklace  form  regular  pattern  sequence  bead  regular  represented  bead  sequence  concatenation  sequence  exactly  summands  sum  summands  summands  follow  alternating  order  nelly  know  friend  eager  mathematician  mind  empty  sequence  help  nom  determine  way  cut  several  bead  found  thread  least  probably  form  regular  pattern  nom  cut  bead  change  order  contains  bead  thread  nom  found  definition  regular  sequence  second  contains  sequence  lowercase  latin  letter  represent  color  bead  color  corresponds  single  letter  print  string  consisting  position  must  either  bead  thread  form  regular  sequence  otherwise
484/D __label__dp  __label__greedy  __label__data  structures  kindergarten  child  divided  group  teacher  put  child  associated  child  charisma  value  child  exactly  group  group  nonempty  segment  consecutive  child  group  sociability  maximum  difference  charisma  child  group  particular  group  consists  child  sociability  equal  teacher  want  divide  child  group  way  total  sociability  group  maximum  help  find  value  contains  child  second  contains  charisma  child  print  maximum  possible  total  sociability  group
884/B __label__implementation  dimensional  japanese  crossword  represented  binary  string  length  encoding  crossword  array  size  segment  formed  completely  length  segment  segment  touch  intersect  example  crossword  encoding  array  crossword  encoding  array  crossword  encoding  array  crossword  encoding  empty  array  mishka  want  create  new  dimensional  japanese  crossword  ha  already  picked  length  encoding  crossword  need  check  exactly  crossword  length  encoding  equal  length  encoding  picked  help  check  contains  element  encoding  length  crossword  mishka  picked  second  contains  encoding  print  yes  exists  exaclty  crossword  chosen  length  encoding  otherwise  print
1055/B __label__implementation  alice  hair  growing  leap  bound  maybe  cause  excess  vitamin  maybe  black  magic  prevent  alice  decided  hairdresser  want  hair  length  centimeter  haircut  favorite  suppose  alice  head  straight  hairline  grow  let  swing  scissors  hairdresser  shorten  hairline  segment  length  given  hairline  segment  length  strictly  greater  hairdresser  want  complete  job  fast  possible  make  least  possible  swing  scissors  since  swing  scissors  take  second  alice  decided  would  hairdresser  asked  calculate  much  time  haircut  would  take  depending  time  would  hairdresser  particular  need  process  query  type  alice  asks  much  time  haircut  would  take  would  hairdresser  hairline  grows  centimeter  note  request  alice  interested  hypothetical  scenario  taking  haircut  hairline  change  length  contains  hairline  request  favorite  alice  second  contains  initial  length  hairline  alice  following  contains  request  format  described  statement  request  description  start  need  find  time  haircut  would  take  otherwise  moment  hairline  grows  rest  contains  hairline  length  grows  query  type  print  time  haircut  would  take
1109/E __label__data  structures  __label__number  theory  egor  like  math  long  ago  got  highest  degree  recognition  math  community  egor  became  red  mathematician  regard  sasha  decided  congratulate  egor  give  math  test  present  test  contains  array  length  exactly  query  query  type  multiply  range  divide  position  divisibility  guaranteed  find  sum  element  range  sum  big  sasha  asked  egor  calculate  sum  modulo  mod  since  egor  red  mathematician  enough  time  solve  easy  task  time  want  anger  sasha  asked  help  find  answer  query  type  contains  mod  od  size  array  mod  second  contains  array  third  contains  query  next  satisfy  following  format  mean  must  multiply  range  mean  must  divide  position  divisibility  guaranteed  mean  must  find  sum  element  range  guaranteed  least  query  type  query  type  print  answer  new  modulo  mod
1236/A __label__math  __label__greedy  __label__brute  force  alice  playing  stone  numbered  heap  stone  contains  stone  second  contains  stone  third  contains  stone  time  operation  take  stone  heap  stone  second  heap  operation  done  heap  contains  least  stone  second  heap  contains  least  stone  take  stone  second  heap  stone  third  heap  operation  done  second  heap  contains  least  stone  third  heap  contains  least  stone  want  get  maximum  stone  know  initially  ha  stone  help  contains  test  case  next  describe  test  case  following  format  contains  non  negative  separated  space  c  stone  second  third  heap  respectively  hack  allowed  use  test  case  input  satisfied  print  answer  test  case  order  input  answer  test  case  maximum  possible  stone  alice  take  making  operation
1236/C __label__implementation  __label__greedy  __label__constructive  algorithms  order  research  lab  built  different  height  mountain  let  enumerate  lab  lowest  place  lab  second  lowest  place  lab  highest  place  transport  water  lab  pipe  built  every  pair  lab  pipe  transport  unit  water  time  lab  lab  lab  need  divided  group  group  exactly  lab  lab  different  group  transport  water  sum  unit  water  sent  group  group  equal  pair  lab  lab  group  lab  group  let  denote  value  sum  unit  water  sent  group  group  example  group  case  value  equal  please  divide  lab  group  size  value  minf  min  possible  pair  group  maximal  word  divide  lab  group  size  minimum  sum  unit  water  transported  group  group  every  pair  different  group  big  possible  note  example  demonstrate  optimal  division  demonstrates  calculate  value  division  many  optimal  division  find  contains  output
996/B __label__math  __label__binary  search  allen  want  enter  fan  zone  occupies  round  square  ha  entrance  already  queue  people  front  entrance  entrance  allows  person  queue  enter  fan  zone  minute  allen  us  following  strategy  enter  fan  zone  initially  stand  end  queue  front  entrance  minute  allowed  fan  zone  minute  meaning  queue  leaf  current  queue  stand  end  queue  next  entrance  entrance  leaf  last  entrance  determine  entrance  allen  finally  enter  fan  zone  contains  single  entrance  second  contains  people  queue  include  allen  print  single  entrance  allen  use
914/G __label__math  __label__dp  given  array  non  negative  tuple  said  valid  satisfies  following  condition  bitwise  bitwise  bitwise  xor  operation  find  sum  valid  tuples  fibonnaci  since  answer  huge  output  modulo  input  contains  second  input  contains  output  sum  described  modulo
817/B __label__math  __label__implementation  __label__sortings  returning  army  make  received  gift  array  consisting  positive  solving  problem  long  time  became  interested  answer  particular  question  many  triple  index  ai  aj  minimum  possible  array  help  input  contains  positive  element  array  second  contains  positive  element  given  array  print  quantity  triple  pairwise  distinct  ai  aj  minimum  possible
21/B __label__math  __label__implementation  given  set  point  set  determined  equation  x  second  determined  equation  x  write  program  find  point  intersection  given  set  input  contains  separated  space  second  contains  separated  space  inclusive  print  point  intersection  infinite  point
641/E __label__data  structures  little  artem  ha  invented  time  machine  could  anywhere  time  thought  course  computer  science  want  apply  time  machine  well  known  data  structure  multiset  artem  want  create  basic  multiset  want  structure  support  operation  type  add  multiset  note  difference  set  multiset  multiset  store  several  instance  remove  multiset  instance  removed  artem  want  handle  exception  assumes  every  time  remove  operation  called  presented  multiset  count  instance  given  stored  multiset  time  machine  artem  simply  apply  operation  multiset  travel  different  moment  time  apply  operation  consider  following  example  artem  add  multiset  moment  time  artem  add  multiset  moment  artem  asks  many  multiset  moment  answer  artem  return  back  time  asks  many  set  moment  since  wa  added  moment  moment  equal  artem  go  back  time  remove  multiset  moment  finally  artyom  asks  moment  many  set  result  since  removed  moment  note  artem  dislike  exception  much  assures  change  make  delete  operation  applied  element  present  multiset  answer  query  third  type  computed  moment  artem  make  corresponding  query  affected  way  future  change  make  help  artem  implement  time  traveller  multiset  input  contains  single  artem  query  follow  query  description  contains  type  query  moment  time  artem  travel  order  execute  query  value  query  respectively  guaranteed  moment  time  distinct  operation  applied  operation  second  type  consistent  ask  operation  output  instance  queried  given  moment  time
801/B __label__greedy  __label__constructive  algorithms  __label__strings  found  mysterious  function  function  take  string  string  must  consist  lowercase  english  letter  must  length  output  function  another  string  length  character  output  equal  minimum  character  character  example  nzwzl  zizez  niwel  found  string  length  consisting  lowercase  english  letter  find  string  print  string  exists  input  contains  string  second  input  contains  string  consist  lowercase  english  letter  length  length  string  print
1175/C __label__greedy  __label__brute  force  __label__binary  search  wa  legend  related  name  problem  formal  statement  given  point  axis  asked  find  point  axis  minimal  possible  function  described  following  way  form  list  distance  distance  sort  list  non  descending  order  take  result  multiple  optimal  answer  print  contains  single  query  next  description  query  query  independent  query  contains  point  constant  second  contains  point  ascending  order  guaranteed  exceed  print  corresponding  point  minimal  possible  value  multiple  answer  print
505/B __label__dp  __label__dfs  __label__graphs  kitayuta  ha  bought  undirected  graph  consisting  vertex  edge  vertex  graph  numbered  edge  namely  edge  ha  color  connecting  vertex  kitayuta  want  process  following  query  query  give  find  color  satisfy  following  condition  edge  color  connect  vertex  vertex  directly  indirectly  input  contains  space  separated  denoting  vertex  edge  respectively  next  space  separated  note  multiple  edge  vertex  multiple  edge  color  vertex  next  contains  denoting  query  follows  containing  space  separated  guaranteed  uii  query  print  answer  separate
865/B __label__sortings  __label__binary  search  another  start  final  mean  pizza  order  onsite  contestant  type  pizza  obviously  let  pretend  sake  problem  pizza  exactly  slice  known  contestant  eat  slice  pizza  gain  happiness  slice  type  pizza  eat  happiness  slice  type  pizza  eat  order  type  type  pizza  want  buy  minimum  possible  pizza  contestant  able  eat  required  slice  given  restriction  maximum  possible  total  happiness  achieved  input  contestant  slice  per  pizza  respectively  follow  contains  slice  contestant  eat  happiness  gain  type  slice  eat  happiness  gain  type  slice  eat  respectively  print  maximum  total  happiness  achieved
71/D __label__implementation  __label__brute  force  vasya  ha  pack  card  standard  card  distinct  joker  ha  moment  die  boredom  vasya  play  solitaire  vasya  lay  card  rectangle  n  joker  vasya  change  rest  card  layed  joker  left  vasya  pick  card  replace  joker  arbitrarily  remember  card  present  pack  exactly  single  copy  vasya  try  perform  replacement  solitaire  wa  solved  vasya  think  solitaire  solved  joker  replaced  exist  non  overlapping  square  inside  card  either  suit  pairwise  different  rank  determine  initial  position  whether  solitaire  solved  solved  show  way  possible  contains  n  next  word  word  consists  letter  joker  defined  correspondingly  rest  card  letter  stand  rank  second  suit  possible  rank  possible  suit  card  different  solitaire  solved  print  solution  exists  without  quote  second  print  way  joker  replaced  variant  possible
978/C __label__implementation  __label__binary  search  dormitory  berland  state  university  numbered  dormitory  consists  room  room  dormitory  room  dormitory  numbered  postman  delivers  letter  sometimes  specific  dormitory  room  envelope  instead  room  room  dormitory  written  envelope  case  assume  room  numbered  room  dormitory  room  second  dormitory  example  case  envelope  written  written  envelope  mean  letter  delivered  room  second  dormitory  letter  room  dormitory  determine  particular  dormitory  room  dormitory  letter  delivered  contains  dormitory  letter  second  contains  sequence  equal  room  dormitory  third  contains  sequence  equal  room  room  dormitory  letter  given  increasing  order  print  letter  print  dormitory  room  dormitory  deliver  letter
538/C __label__math  __label__implementation  __label__greedy  __label__brute  force  __label__binary  search  tourist  hiked  along  mountain  range  hike  lasted  day  day  tourist  noted  height  sea  level  day  height  wa  equal  tourist  pick  smooth  enough  route  hike  meaning  consecutive  day  height  change  inequality  hold  end  route  tourist  rafted  mountain  river  note  journal  washed  away  moreover  note  could  distorted  tourist  wonder  could  maximum  height  hike  help  restore  maximum  possible  value  maximum  height  throughout  hike  determine  note  much  distorted  represent  possible  height  value  meet  limit  contains  space  separated  day  hike  note  left  journal  next  space  separated  hdi  di  day  note  wa  made  height  day  guaranteed  note  given  chronological  order  following  condition  hold  note  contradictory  print  single  maximum  possible  height  value  throughout  whole  route
1082/A __label__math  __label__implementation  vasya  reading  book  file  book  consists  page  numbered  screen  currently  displaying  content  page  vasya  want  read  page  button  book  allow  vasya  scroll  page  forward  backwards  scroll  outside  book  example  book  consists  page  page  vasya  scroll  fourth  page  pressing  button  second  page  fifth  sixth  page  third  ninth  eighth  fifth  tenth  help  vasya  calculate  minimum  time  need  press  button  move  page  contains  testcases  testcase  denoted  containing  page  starting  page  desired  page  page  scrolled  pressing  button  respectively  print  test
386/A __label__implementation  problem  consider  special  type  auction  called  second  price  auction  regular  auction  bidder  place  bid  price  bidder  ready  pay  auction  closed  bidder  secretly  informs  organizer  auction  price  willing  pay  auction  winner  participant  offered  highest  price  pay  price  offer  highest  price  offer  participant  hence  name  second  price  auction  write  program  read  price  offered  bidder  find  winner  price  pay  consider  offered  price  different  input  contains  bidder  second  contains  distinct  separated  single  space  stand  price  offered  bidder  single  output  index  winner  price  pay  index  based
1082/B __label__greedy  vova  ha  trophy  different  competition  trophy  either  golden  silver  trophy  arranged  row  beauty  arrangement  length  longest  subsegment  consisting  golden  trophy  vova  want  swap  trophy  necessarily  adjacent  make  arrangement  beautiful  possible  mean  maximize  length  longest  subsegment  help  vova  tell  maximum  possible  beauty  arrangement  allowed  swap  contains  trophy  second  contains  character  either  character  trophy  golden  otherwise  silver  trophy  print  maximum  possible  length  subsegment  golden  trophy  vova  allowed  swap
453/E __label__data  structures  lord  tirek  centaur  main  antagonist  season  finale  episode  series  little  pony  friendship  magic  twilight  kingdom  part  tirek  escape  tartarus  drain  magic  pony  grow  stronger  core  skill  tirek  called  absorb  mana  take  mana  magic  creature  give  caster  simplify  problem  assume  pony  numbered  pony  ha  attribute  amount  mana  pony  ha  time  maximum  mana  pony  mana  regeneration  per  unit  time  lord  tirek  instruction  described  instruction  mean  time  tirek  use  absorb  mana  pony  border  inclusive  give  instruction  order  count  much  mana  tirek  absorbs  instruction  contains  pony  next  contains  ii  describing  pony  next  contains  instruction  next  contains  ii  describing  instruction  lord  tirek  instruction  given  strictly  increasing  order  distinct  instruction  output  single  contains  single  total  mana  absorbed  instruction
1111/B __label__math  __label__implementation  __label__brute  force  every  superhero  ha  given  power  value  felicity  committee  avenger  crew  want  maximize  average  power  superheroes  team  performing  certain  operation  initially  superheroes  avenger  team  power  respectively  operation  remove  superhero  team  least  increase  power  superhero  operation  particular  superhero  operation  done  help  avenger  team  maximize  average  power  crew  contains  superheroes  maximum  time  increase  power  particular  superhero  total  maximum  operation  second  contains  initial  power  superheroes  cast  avenger  output  single  maximum  final  average  power
1166/B __label__math  __label__constructive  algorithms  __label__number  theory  tom  love  vowel  like  long  word  many  vowel  favorite  word  vowelly  word  say  word  length  vowelly  positive  word  written  using  row  column  row  filled  second  row  filled  left  right  every  vowel  english  alphabet  appears  least  every  row  every  column  given  must  either  print  vowelly  word  length  print  word  exists  problem  vowel  english  alphabet  consists  single  containing  required  length  output  must  consist  single  consisting  vowelly  word  length  consisting  lowercase  english  letter  exists  doe
390/C __label__data  structures  inna  love  sweet  much  ha  closed  present  box  row  front  box  contains  either  candy  dima  work  nothing  sereja  work  let  assume  box  numbered  left  right  box  closed  inna  know  box  candy  box  nothing  inna  chose  asked  question  dima  find  question  characterised  ii  divisible  question  dima  true  box  inclusive  candy  lie  box  dima  hate  say  inna  wonder  action  make  question  make  answer  question  positive  action  dima  either  secretly  take  candy  box  put  candy  box  dima  ha  infinitely  many  candy  help  dima  count  action  inna  question  please  note  dima  change  array  inna  question  calculate  operation  current  question  please  assume  sequence  box  change  input  contains  second  contains  character  box  contains  candy  character  equal  otherwise  equal  following  contains  ii  description  question  guaranteed  divisible  question  print  single  single  minimum  operation  dima  need  make  answer  question  positive
185/C __label__dp  fat  rat  friend  erealguy  bet  whether  least  oat  going  descend  clever  construction  figure  show  clever  construction  formal  description  clever  construction  follows  clever  construction  consists  row  scale  row  ha  scale  second  row  ha  scale  row  ha  scale  last  row  ha  exactly  scale  let  scale  row  left  right  starting  value  kilogram  weight  capacity  parameter  scale  row  body  whose  mass  le  fall  scale  weight  capacity  scale  break  anything  scale  ha  either  fall  level  left  possible  level  right  possible  word  scale  break  possible  variant  content  scale  pan  fall  content  scale  fall  either  scale  exists  scale  exists  scale  break  content  fall  right  fat  rat  claw  please  note  scale  last  row  variant  dropping  content  initially  oat  simultaneously  put  scale  level  scale  ha  kilogram  oat  put  scale  start  breaking  oat  start  falling  way  consider  everything  happen  instantly  scale  break  instantly  oat  fall  instantly  fat  rat  sure  whatever  happens  get  oat  level  cerealguy  sure  scenario  rat  get  least  oat  help  fat  rat  cerealguy  determine  right  contains  single  row  scale  next  contains  space  separated  mass  oat  kilogram  next  description  scale  contains  space  separated  weight  capacity  parameter  scale  stand  row  kilogram  print  fat  rat  fat  rat  right  otherwise  print  cerealguy
498/E __label__dp  given  figure  grid  representing  stair  consisting  step  width  stair  height  square  formally  figure  created  consecutively  joining  rectangle  size  wi  side  lie  straight  thus  example  figure  look  like  different  color  represent  different  rectangle  look  like  find  way  color  border  figure  inner  square  square  border  colored  border  square  lying  border  figure  considered  painted  way  differ  figure  rotation  considered  distinct  single  input  contains  guaranteed  least  equal  single  output  display  single  answer  problem  modulo
1184/A2 __label__brute  force  __label__number  theory  learning  polynomial  hashing  heidi  decided  learn  shift  xor  hashing  particular  came  interesting  problem  given  bitstring  find  different  exists  shift  xor  operation  shift  shift  operation  shifting  bitstring  cyclically  right  time  example  shift  shift  contains  length  bitstring  second  contains  bitstring  output  single  suitable  value
309/E __label__greedy  __label__binary  search  information  technology  developing  increasingly  penetrating  sphere  human  activity  incredible  modern  technology  used  farming  large  farm  ha  meadow  grazing  sheep  overall  sheep  contains  unique  sheep  need  distinguished  need  remember  information  much  alike  meadow  consists  infinite  region  numbered  infinity  known  sheep  like  region  shepherd  taking  care  sheep  second  wake  early  morning  lead  sheep  graze  lawn  second  come  evening  collect  sheep  morning  woke  little  later  usual  time  lead  sheep  graze  lawn  tied  together  every  sheep  region  like  thought  would  better  second  would  le  work  evening  sheep  scatter  much  tied  evening  second  came  lawn  gathered  sheep  tried  row  try  might  sheep  second  want  second  neither  strength  ability  untie  sheep  left  condition  wanted  sheep  maximum  distance  tied  sheep  wa  small  possible  distance  sheep  sheep  rank  help  second  find  right  arrangement  input  contains  following  contains  lii  single  output  print  space  separated  sought  arrangement  sheep  value  must  represent  sheep  took  place  left  optimal  arrangement
1056/A __label__implementation  arkady  morning  seemed  straight  nightmare  overslept  whole  morning  still  half  asleep  got  tram  arrived  time  leaving  tram  realized  wa  sure  tram  wa  ride  arkady  woke  several  time  time  saw  tram  stopping  stop  stop  know  tram  stop  given  information  help  arkady  determine  possible  tram  wa  contains  single  stop  arkady  saw  next  describe  stop  start  single  tram  stop  distinct  follow  inclusive  arbitrary  order  guaranteed  arkady  information  consistent  least  tram  arkady  could  take  print  tram  arkady  could  arbitrary  order
794/G __label__math  __label__dp  igor  analyst  work  learned  feature  text  editor  called  replace  igor  bored  work  thus  came  following  problem  given  string  consist  english  letter  pair  string  called  good  consist  character  denotes  length  string  fixed  positive  replace  occurrence  string  replace  occurrence  string  obtained  string  equal  example  ab  good  pair  string  obtained  replacing  string  flexibility  pair  string  pair  good  string  pair  ordered  example  pair  different  given  string  consist  character  find  sum  flexibility  possible  pair  string  obtained  respectively  replacing  question  mark  either  modulo  contains  string  second  contains  string  last  contains  single  output  single  answer  problem  modulo
12/C __label__implementation  __label__sortings  spring  coming  mean  lot  fruit  appear  counter  sunny  day  little  boy  valera  decided  shopping  made  list  fruit  wanted  buy  valera  want  buy  fruit  kind  includes  list  several  time  came  fruit  stall  ashot  saw  seller  distributed  price  tag  good  put  price  tag  counter  later  ashot  attach  every  price  tag  kind  fruit  valera  able  count  total  price  fruit  list  valera  want  know  smallest  total  price  case  lucky  distribution  price  tag  largest  total  price  case  unlucky  distribution  price  tag  input  contains  price  tag  equal  different  kind  fruit  ashot  sell  item  valera  list  second  contains  space  separated  positive  exceed  stand  price  fruit  kind  following  name  fruit  list  name  non  empty  string  small  latin  letter  length  exceed  guaranteed  distinct  fruit  list  le  equal  known  seller  ha  stock  fruit  valera  want  buy  print  minimum  maximum  possible  sum  valera  need  buy  fruit  list
1036/A __label__math  given  set  point  cartesian  plane  point  numbered  inclusive  let  point  coordinate  point  equal  coordinate  point  equal  initially  thus  initially  given  point  vertex  plot  piecewise  function  piece  function  segment  move  increase  coordinate  point  odd  coordinate  point  n  note  corresponding  segment  change  example  following  plot  show  function  point  increased  coordinate  point  time  coordinate  point  time  let  area  plot  area  plot  coordinate  axis  example  area  plot  picture  light  blue  area  picture  area  plot  drawn  let  height  plot  maximum  coordinate  initial  point  plot  point  height  plot  picture  problem  say  minimum  possible  height  plot  consisting  vertex  area  equal  note  unnecessary  minimize  move  easy  see  answer  obtained  performing  move  described  always  exists  exceeding  input  contains  vertex  plot  piecewise  function  area  need  obtain  print  minimum  possible  height  plot  consisting  vertex  area  equal  easy  see  answer  obtained  performing  move  described  always  exists  exceeding
1102/F __label__dp  __label__graphs  __label__brute  force  __label__binary  search  given  matrix  consisting  row  column  cell  contains  change  order  row  arbitrarily  including  leaving  initial  order  change  order  cell  row  pick  order  row  traverse  whole  matrix  following  way  firstly  visit  cell  column  top  row  bottom  second  column  traversal  write  sequence  cell  order  visited  let  sequence  traversal  acceptable  find  maximum  exists  order  row  matrix  produce  acceptable  traversal  contains  row  column  respectively  next  contains  description  matrix  print  single  maximum  exists  order  row  matrix  produce  acceptable  traversal
615/E __label__math  __label__implementation  __label__binary  search  ayrat  looking  perfect  code  decided  start  search  infinite  field  tiled  hexagon  convenience  coordinate  system  introduced  take  look  picture  see  coordinate  hexagon  defined  ayrat  searching  field  started  point  moving  along  spiral  see  second  picture  sometimes  forgets  help  ayrat  determine  location  move  input  contains  ayrat  move  print  current  coordinate  ayrat  coordinate
1098/E __label__math  __label__implementation  __label__binary  search  __label__number  theory  fedya  love  problem  involving  data  structure  especially  different  query  subsegments  fedya  nice  array  beautiful  data  structure  data  structure  given  could  find  greatest  divide  fedya  really  like  data  structure  applied  every  non  empty  contiguous  subarray  array  put  answer  array  sorted  called  array  easy  see  array  contains  element  fedya  implemented  another  cool  data  structure  allowed  find  sum  given  surely  fedya  applied  data  structure  every  contiguous  subarray  array  called  result  sorted  help  fedya  find  lower  median  array  recall  sorted  array  length  lower  median  element  position  element  array  enumerated  starting  example  lower  median  array  lower  median  contains  single  element  array  second  contains  element  array  print  single  lower  median  array
10/B __label__dp  __label__implementation  cinema  hall  berland  rectangle  row  seat  odd  row  seat  numbered  safety  reason  people  come  box  office  buy  ticket  allowed  choose  seat  formerly  choice  wa  made  cashier  responsibility  special  seating  program  wa  found  large  majority  berland  inhabitant  cinema  order  watch  movie  want  sit  close  hall  center  possible  moreover  company  people  come  watch  movie  want  necessarily  occupy  successive  seat  row  let  formulate  algorithm  according  program  chooses  seat  sell  ticket  request  seat  come  program  determine  row  segment  seat  row  possible  variant  final  result  program  choose  minimum  function  value  total  seat  remoteness  center  say  row  seat  central  seat  function  value  seat  remoteness  hall  center  amount  minimum  function  value  program  choose  closer  screen  row  lower  variant  still  multiple  choose  minimum  get  task  simulate  work  program  contains  amount  request  hall  size  respectively  second  contains  space  separated  range  request  program  output  output  without  quote  impossible  find  successive  seat  row  otherwise  output  separate  space
631/C __label__data  structures  __label__sortings  month  blake  get  report  containing  main  economic  indicator  company  blake  technology  commodity  produced  company  exactly  final  report  denotes  corresponding  revenue  report  get  blake  pass  hand  manager  reorder  element  order  namely  manager  either  sort  non  descending  non  ascending  order  pass  report  manager  directly  blake  manager  ha  employee  blake  technology  preparing  report  right  know  initial  sequence  length  description  manager  value  favourite  order  asked  speed  process  determine  final  report  look  like  input  contains  commodity  report  manager  respectively  second  contains  initial  report  get  manager  follow  description  operation  manager  going  perform  contains  meaning  manager  sort  either  non  descending  non  ascending  order  print  final  report  passed  blake  manager
488/A __label__brute  force  giga  tower  tallest  deepest  building  cyberland  floor  numbered  particular  floor  floor  floor  every  day  thousand  tourist  come  place  enjoy  wonderful  view  cyberland  believed  lucky  giga  tower  ha  floor  ground  lucky  decimal  notation  contains  least  digit  example  lucky  giga  tower  write  code  floor  lucky  floor  good  luck  always  well  round  lucky  huh  tourist  henry  go  tower  seek  good  luck  floor  numbered  want  find  minimum  positive  walk  floor  higher  arrive  floor  lucky  input  contains  print  minimum
98/A __label__implementation  __label__brute  force  vasilisa  wise  far  away  kingdom  got  present  friend  helga  wise  farther  away  kingdom  present  surprise  box  vasilisa  wise  know  surprise  actually  open  box  hope  help  box  lock  constructed  like  box  represented  absolutely  perfect  black  cube  identical  deepening  face  foreign  nanotechnology  far  away  kingdom  scientist  dreamt  box  accompanied  gem  whose  form  match  deepening  box  face  box  opened  correctly  decorated  gem  deepening  contains  exactly  gem  way  decorating  box  considered  obtained  arbitrarily  rotating  box  note  box  represented  perfect  nanotechnological  cube  vasilisa  wise  want  know  given  set  color  following  many  way  would  decorate  box  worst  case  open  answer  question  useful  know  gem  color  indistinguishable  help  vasilisa  solve  challenging  problem  contains  exactly  character  without  space  set  color  gem  box  decorated  print  required  different  way  decorate  box
612/A __label__implementation  __label__brute  force  __label__strings  given  string  length  split  string  piece  length  example  string  hello  split  string  hel  string  llo  note  allowed  split  string  string  length  string  length  see  second  sample  test  contains  positive  second  contains  string  consists  lowercase  uppercase  latin  letter  digit  impossible  split  string  string  length  print
549/D __label__implementation  __label__greedy  algorithm  detecting  face  image  working  realtime  wa  developed  paul  viola  michael  jones  part  algorithm  procedure  computes  haar  feature  part  task  consider  simplified  model  concept  let  consider  rectangular  image  represented  table  size  n  table  element  specify  brightness  pixel  image  feature  rectangular  table  size  n  cell  feature  painted  black  white  calculate  value  given  feature  given  image  must  perform  following  step  table  feature  put  table  image  without  rotation  reflection  thus  pixel  entirely  covered  either  black  white  cell  value  feature  image  value  total  brightness  pixel  image  covered  white  feature  cell  total  brightness  pixel  covered  black  feature  cell  example  popular  haar  feature  given  task  determine  operation  required  calculate  feature  using  called  prefix  rectangle  prefix  rectangle  rectangle  image  upper  left  corner  coincides  upper  left  corner  image  variable  value  whose  value  initially  operation  count  sum  pixel  value  prefix  rectangle  multiply  add  variable  value  given  feature  necessary  calculate  minimum  operation  required  calculate  value  attribute  arbitrary  image  better  understanding  statement  read  explanation  sample  contains  space  separated  row  column  feature  next  description  feature  consists  character  character  equal  element  feature  white  black  print  single  minimum  operation  need  make  calculate  value  feature
1059/B __label__implementation  student  andrey  ha  skipping  physical  education  lesson  whole  term  must  somehow  get  passing  grade  subject  obviously  impossible  legal  mean  andrey  give  obtained  empty  certificate  local  hospital  going  use  knowledge  local  doctor  handwriting  make  counterfeit  certificate  illness  writing  certificate  andrey  suddenly  discovered  doctor  signature  impossible  forge  simplicity  signature  represented  nm  grid  every  cell  either  filled  ink  empty  andrey  pen  fill  square  without  central  cell  completely  contained  inside  grid  shown  xxx  xxx  determine  whether  possible  forge  signature  empty  nm  grid  input  contains  follow  contains  character  character  either  representing  empty  cell  representing  ink  filled  cell  andrey  forge  signature  output  yes  otherwise  output
1066/E __label__math  __label__implementation  __label__data  structures  given  huge  binary  length  respectively  repeat  following  process  add  answer  value  divide  rounding  remove  last  digit  repeat  process  otherwise  stop  process  value  mean  bitwise  task  calculate  answer  modulo  note  add  value  answer  decimal  notation  binary  task  calculate  answer  decimal  notation  example  value  equal  input  contains  length  length  correspondingly  second  input  contains  huge  guaranteed  consists  exactly  digit  always  third  input  contains  huge  guaranteed  consists  exactly  digit  always  print  answer  problem  decimal  notation  modulo
1097/A __label__implementation  __label__brute  force  gennady  owns  small  hotel  countryside  life  peaceful  life  love  take  long  walk  watch  sunset  play  card  tourist  staying  hotel  favorite  game  called  mau  mau  play  mau  mau  need  pack  card  card  ha  suit  diamond  club  spade  heart  rank  start  game  card  table  card  hand  play  card  hand  ha  rank  suit  card  table  order  check  good  playing  partner  gennady  ha  prepared  task  given  card  table  card  hand  check  play  least  card  input  contains  string  describes  card  table  second  contains  string  describe  card  hand  string  character  long  character  denotes  rank  belongs  set  second  character  denotes  suit  belongs  set  card  input  different  possible  play  card  hand  print  word  yes  otherwise  print
1149/D __label__dp  __label__greedy  __label__graphs  __label__brute  force  codefortia  small  island  country  located  somewhere  west  pacific  consists  settlement  connected  bidirectional  gravel  road  curiously  enough  belief  inhabitant  require  time  needed  pas  road  equal  either  second  guaranteed  pair  settlement  following  sequence  road  codefortia  wa  recently  struck  financial  crisis  therefore  king  decided  abandon  road  possible  travel  pair  city  using  remaining  road  sum  time  required  pas  remaining  road  minimum  possible  word  remaining  road  must  form  minimum  spanning  tree  using  time  pas  road  weight  plan  minimizing  sum  time  time  required  travel  king  residence  settlement  parliament  house  settlement  using  remaining  road  minimum  possible  king  forgot  parliament  house  wa  settlement  tell  minimum  time  required  travel  king  residence  parliament  house  located  settlement  road  abandoned  input  contains  n  settlement  gravel  road  codefortia  possible  travel  time  following  contains  denoting  single  gravel  road  settlement  requires  minute  travel  assume  road  network  connected  ha  loop  multiedges  output  single  containing  denote  minimum  possible  time  required  travel  selected  road  abandoned  note  abandon  different  set  road
739/C __label__data  structures  alyona  ha  built  tower  putting  small  cube  top  others  cube  ha  size  tower  non  amount  cube  standing  top  tower  next  forming  row  sometimes  alyona  chooses  segment  tower  put  top  tower  several  cube  formally  alyouna  chooses  segment  tower  add  cube  top  let  sequence  height  tower  left  right  let  call  segment  tower  hill  following  condition  hold  l  addition  cube  top  tower  alyona  want  know  maximum  width  hill  width  hill  tower  single  tower  second  cube  tower  third  single  addition  next  contains  mean  alyona  put  cube  tio  tower  print  print  maximum  width  hill  addition
241/G __label__constructive  algorithms  martha  professional  problemsetter  proposed  problem  world  class  contest  problem  statement  tomorrow  nadia  birthday  bardia  brother  assigned  make  balloon  ready  balloon  initially  empty  tied  straight  certain  position  bardia  inflates  balloon  left  right  result  balloon  get  bigger  bigger  radius  reach  pressure  endurance  touch  another  previously  inflated  balloon  bardia  wa  busy  balloon  wondered  sum  radius  balloon  balloon  inflated  nerdy  type  guy  thinking  problem  instead  preparing  sister  birthday  calculate  answer  bardia  problem  nadia  birthday  balloon  le  artha  martha  student  claimed  solution  got  accepted  martha  teacher  long  time  knew  solved  problem  real  thus  think  something  wrong  testcases  artha  anyhow  logical  mean  way  martha  explain  wrong  point  algorithm  way  find  testcase  prove  wrong  artha  pseudo  code  shown  output  small  testcase  problem  artha  algorithm  incorrect  algorithm  output  considered  correct  differs  correct  value  please  pay  attention  input  given  program  problem  read  input  anything  output  generated  small  testcase  artha  solution  get  right  following  format
618/E __label__data  structures  __label__geometry  roger  robot  ha  arm  series  segment  connected  endpoint  segment  initially  located  point  endpoint  colored  red  endpoint  colored  blue  segment  thus  blue  endpoint  segment  touching  red  endpoint  segment  valid  roger  move  arm  different  way  choose  segment  value  denoted  choosing  segment  picking  positive  change  happens  follows  red  endpoint  segment  segment  fixed  place  imagine  ray  red  endpoint  blue  endpoint  blue  endpoint  segment  translated  unit  direction  ray  picture  red  point  labeled  segment  stay  place  blue  point  labeled  segment  get  translated  choose  segment  rotate  denoted  choosing  segment  angle  red  endpoint  segment  stay  fixed  place  blue  endpoint  segment  segment  rotate  clockwise  angle  degree  around  red  endpoint  picture  red  point  labeled  segment  stay  place  blue  point  labeled  segment  get  rotated  around  point  roger  move  arm  time  transformation  bit  complicated  roger  easily  loses  track  blue  endpoint  last  segment  help  compute  coordinate  blue  endpoint  last  segment  applying  operation  note  operation  cumulative  roger  arm  intersect  arbitrarily  move  input  segment  operation  perform  next  contains  describing  move  describes  move  type  denotes  segment  denotes  increase  length  describes  move  type  denotes  segment  denotes  angle  degree  print  real  value  denoting  coordinate  blue  endpoint  last  segment  applying  operation  answer  considered  correct  absolute  relative  error  doe  exceed
571/A __label__math  __label__implementation  given  stick  positive  length  centimeter  increase  length  positive  centimeter  different  stick  increased  different  length  total  centimeter  particular  allowed  increase  length  stick  determine  way  increase  length  stick  form  non  degenerate  positive  area  triangle  way  considered  different  length  stick  increased  different  centimeter  single  contains  print  single  way  increase  size  stick  total  centimeter  make  non  degenerate  triangle
388/A __label__greedy  __label__sortings  fox  ciel  ha  box  room  size  weight  might  different  strength  box  hold  box  top  call  strength  box  since  box  size  ciel  put  box  directly  top  box  example  imagine  ciel  ha  box  ha  strength  second  ha  strength  third  ha  strength  put  second  third  box  simultaneously  directly  top  put  second  box  directly  top  third  box  directly  top  second  call  construction  box  pile  fox  ciel  want  construct  pile  box  pile  box  top  bottom  box  top  box  minimal  pile  need  construct  contains  next  contains  output  single  minimal  possible  pile
731/C __label__greedy  __label__dfs  __label__graphs  arseniy  already  grown  independent  mother  decided  leave  alone  day  left  vacation  prepared  lot  food  left  money  washed  arseniy  clothes  minute  leave  realized  would  useful  prepare  instruction  particular  clothes  wear  day  absent  arseniy  family  bit  weird  clothes  enumerated  example  arseniy  sock  assigned  unique  thus  thing  mother  wa  write  day  index  sock  wear  day  obviously  stand  left  foot  right  sock  painted  color  mother  already  left  arseniy  noticed  according  instruction  would  wear  sock  different  color  day  course  terrible  mistake  cause  rush  arseniy  smart  boy  magical  coincidence  posse  jar  paint  color  arseniy  want  repaint  sock  way  day  follow  mother  instruction  wear  sock  color  going  busy  day  time  change  color  sock  ha  finalize  color  new  computer  game  bota  wa  realised  arseniy  wait  play  minimum  sock  need  color  changed  order  make  possible  follow  mother  instruction  wear  sock  color  day  input  contains  sock  day  available  color  respectively  second  current  color  arseniy  sock  following  contains  lii  index  sock  arseniy  wear  day  print  minimum  sock  color  changed  order  able  obey  instruction  make  people  laugh  watching  sock  different  color
1217/C __label__brute  force  __label__binary  search  given  binary  string  recall  string  binary  character  either  let  decimal  representation  written  binary  form  possibly  leading  example  substring  good  example  string  ha  good  substring  task  calculate  good  substring  string  answer  independent  query  contains  query  query  contains  string  consisting  digit  guaranteed  query  print  good  substring  string
1153/A __label__math  __label__brute  force  raining  heavily  day  serval  became  year  old  kindergarten  unfortunately  life  far  kindergarten  father  busy  drive  choice  poor  little  boy  wait  bus  rainy  day  circumstance  poor  boy  use  bus  see  matter  go  several  bus  come  time  choose  randomly  serval  bus  station  time  bus  route  stop  station  bus  route  bus  arrives  time  minute  bus  route  come  minute  later  previous  serval  best  friend  wonder  bus  route  get  several  bus  arrive  time  print  contains  space  separated  bus  route  time  serval  go  station  next  contains  space  separated  time  bus  route  arrives  interval  bus  route  print  bus  route  serval  use  several  possible  answer  print
690/B2 __label__geometry  heidi  ha  made  sure  zombie  contamination  level  checker  work  time  strike  time  zombie  lair  strictly  convex  polygon  lattice  vertex  polygon  occupies  point  lattice  cell  lattice  heidi  know  level  zombie  contamination  corner  cell  inside  border  lair  given  information  heidi  want  know  exact  shape  lair  rain  destruction  zombie  help  input  contains  multiple  test  case  test  case  contains  size  lattice  grid  next  character  describing  level  zombie  contamination  cell  lattice  every  character  every  digit  cell  given  order  shown  picture  row  decreasing  value  coordinate  row  cell  order  increasing  coordinate  mean  row  corresponds  cell  coordinate  last  row  corresponds  cell  coordinate  last  file  contains  treated  test  case  sum  value  test  file  exceed  test  case  give  following  output
789/A __label__math  __label__implementation  anastasia  love  going  walk  central  uzhlyandian  park  became  uninterested  simple  walking  began  collect  uzhlyandian  pebble  decided  collect  pebble  could  find  park  ha  pocket  put  pebble  pocket  time  different  pebble  type  park  pebble  type  anastasia  responsible  never  mix  pebble  different  type  pocket  put  different  kind  pebble  different  pocket  time  unfortunately  spend  time  collecting  pebble  collect  pebble  park  day  help  find  minimum  day  needed  collect  pebble  uzhlyandian  central  park  taking  consideration  anastasia  place  pebble  different  type  pocket  contains  different  pebble  type  pebble  anastasia  place  pocket  second  contains  pebble  type  output  contains  minimum  day  anastasia  need  collect  pebble
814/C __label__dp  __label__brute  force  __label__strings  nadeko  birthday  approaching  decorated  room  party  long  garland  dianthus  shaped  paper  piece  wa  placed  prominent  part  wall  brother  koyomi  like  still  unsatisfied  garland  nadeko  decided  polish  garland  ha  piece  numbered  left  right  piece  ha  colour  denoted  lowercase  english  letter  nadeko  repaint  piece  give  arbitrary  new  colour  still  denoted  lowercase  english  letter  work  find  subsegments  garland  containing  piece  colour  brother  koyomi  favourite  take  length  longest  koyomity  garland  instance  let  say  garland  represented  kooomo  brother  koyomi  favourite  colour  subsegments  containing  piece  ooo  longest  length  thus  koyomity  garland  equal  problem  arises  nadeko  unsure  brother  koyomi  favourite  colour  ha  swaying  idea  amount  work  ha  plan  expressed  pair  lowercase  letter  meaning  explained  find  maximum  koyomity  achievable  repainting  garland  according  plan  input  contains  positive  length  garland  second  contains  lowercase  english  letter  string  initial  colour  paper  piece  garland  third  contains  positive  plan  nadeko  ha  next  describe  plan  contains  maximum  amount  piece  repaint  followed  space  lowercase  english  letter  koyomi  possible  favourite  colour  output  work  plan  output  containing  largest  koyomity  achievable  repainting  garland  according
651/B __label__greedy  __label__sortings  picture  delivered  new  exhibition  painting  ha  beauty  know  visitor  becomes  happy  every  time  pass  painting  beautiful  allowed  arranged  picture  order  maximum  possible  time  visitor  become  happy  passing  picture  last  word  allowed  rearrange  element  order  maximum  possible  index  input  contains  painting  second  contains  sequence  mean  beauty  painting  print  maximum  possible  neighbouring  pair  optimal  rearrangement
507/B __label__math  __label__geometry  amr  love  geometry  day  came  interesting  problem  amr  ha  circle  radius  center  point  want  circle  center  new  position  step  amr  put  pin  border  circle  certain  point  rotate  circle  around  pin  angle  finally  remove  pin  help  amr  achieve  goal  minimum  step  consists  space  separated  circle  radius  coordinate  original  center  circle  coordinate  destination  center  circle  respectively  output  single  minimum  step  required  move  center  circle  destination  point
818/D __label__implementation  __label__data  structures  alice  bob  got  bored  long  car  trip  decided  play  game  window  see  car  different  color  running  past  car  going  another  game  rule  like  firstly  alice  chooses  color  bob  chooses  color  car  update  car  chosen  color  run  past  let  define  car  cnta  cntb  cnta  ntb  every  winner  alice  cntb  nta  every  winner  bob  otherwise  draw  bob  know  color  car  encounter  order  appearance  alice  already  chosen  color  bob  want  choose  color  win  game  draw  win  help  find  color  multiple  solution  print  color  print  contains  car  color  chosen  alice  second  contains  color  car  alice  bob  encounter  order  appearance  output  color  bob  chooses  win  game  multiple  solution  print  color  print
1083/C __label__data  structures  __label__trees  grisha  found  tree  connected  graph  without  cycle  root  node  tree  wa  tree  permutation  written  node  written  node  grisha  like  invent  strange  interesting  problem  always  solve  need  help  deal  type  query  tree  let  define  function  mex  set  non  negative  smallest  non  negative  included  set  let  simple  path  tree  let  define  index  node  lie  define  set  query  node  swap  find  maximum  value  mex  possible  contains  single  node  tree  second  contains  permutation  guaranteed  different  third  contains  direct  ancestor  node  tree  fourth  contains  single  query  following  description  query  beginning  next  single  type  query  contains  index  node  value  permutation  swapped  need  find  maximum  value  mex  possible  type  query  print  single  answer  query
76/F __label__dp  __label__data  structures  __label__binary  search  tourist  walk  along  axis  choose  either  direction  speed  exceeding  stand  without  moving  anywhere  know  newspaper  time  point  coordinate  interesting  event  occur  time  point  coordinate  another  interesting  event  short  assume  immediate  event  count  visited  time  tourist  wa  point  coordinate  write  program  tourist  find  maximum  event  tourist  beginning  time  equal  tourist  appears  point  tourist  choose  initial  point  yes  answer  similar  different  question  input  contains  single  interesting  event  following  coordinate  time  event  last  input  contains  maximum  speed  tourist  range  inclusive  positive  exceed  input  event  happen  time  place  place  time  output  space  sepatated  maximum  event  tourist  visit  start  moving  point  time  maximum  event  tourist  visit  chooses  initial  point
666/A __label__dp  __label__implementation  __label__strings  rate  specialist  graduate  berland  state  institute  peace  friendship  talented  student  university  education  easy  need  fundamental  knowledge  different  area  sometimes  related  example  know  linguistics  well  learn  structure  reberland  language  foreign  language  language  word  constructed  according  following  rule  need  choose  root  word  string  ha  letter  several  string  length  symbol  appended  word  restriction  allowed  append  string  twice  row  string  considered  suffix  word  time  use  word  suffix  describe  morpheme  last  character  string  used  exercise  found  task  list  given  word  find  distinct  string  length  suffix  word  according  word  constructing  rule  reberland  language  string  considered  distinct  different  length  position  corresponding  character  match  let  look  example  word  abacabaca  given  word  obtained  following  way  root  word  overlined  suffix  marked  corner  thus  set  possible  suffix  word  aca  contains  string  consisting  lowercase  english  letter  print  distinct  possible  suffix  next  print  suffix
494/D __label__dp  __label__data  structures  __label__dfs  __label__trees  ali  hamed  little  brother  tomorrow  birthday  hamed  want  brother  earn  gift  gave  hard  programming  problem  told  successfully  solve  get  brand  new  laptop  ali  talented  programmer  like  hamed  although  usually  cheat  time  exception  brand  new  laptop  decided  secretly  seek  help  please  solve  problem  ali  vertex  weighted  rooted  tree  given  vertex  root  tree  define  sum  edge  weight  shortest  path  vertex  specifically  define  let  define  vertex  set  containing  vertex  function  defined  using  following  formula  goal  calculate  given  pair  vertex  answer  rather  large  enough  print  modulo  input  vertex  tree  given  next  space  separated  given  indicating  edge  weight  equal  next  vertex  pair  given  next  space  separated  given  meaning  must  calculate  guaranteed  given  edge  form  tree  output  print  value  modulo
715/E __label__math  __label__graphs  coder  given  permutation  element  replaced  distance  permutation  defined  minimum  move  required  turn  move  consists  swapping  exactly  element  coder  want  determine  way  replace  positive  set  permutation  distance  exactly  coder  want  find  answer  help  input  contains  single  element  permutation  second  contains  permutation  guaranteed  least  way  replace  permutation  third  contains  permutation  guaranteed  least  way  replace  permutation  print  denote  answer  since  answer  quite  large  coder  love  weird  prime  print  modulo  prime
1105/C __label__math  __label__dp  ayoub  array  size  array  interesting  property  array  inclusive  sum  element  wa  divisible  unfortunately  ayoub  ha  lost  array  remembers  size  array  asked  find  way  restore  array  since  answer  could  large  print  modulo  remainder  dividing  case  satisfying  array  ayoub  ha  wrong  memory  print  contains  size  lost  array  range  array  print  remainder  dividing  way  restore  array
484/C __label__math  __label__implementation  many  specific  order  know  ascending  order  descending  order  order  ascending  length  order  ascending  polar  angle  let  look  another  specific  order  sorting  sorting  applied  string  length  least  positive  character  string  sorted  following  manner  come  character  initial  string  end  character  initial  string  character  mean  character  whose  position  exactly  modulo  character  stand  position  remainder  division  relative  order  sorting  changed  string  indexed  example  string  qwerty  sorting  string  qwerty  character  stand  position  sorting  string  qetwry  character  stand  position  character  position  sorting  string  qrwtey  character  stand  position  character  stand  position  character  stand  position  sorting  string  qtwyer  sorting  string  qywert  given  string  length  shuffling  operation  string  shuffling  operation  accepts  argument  transforms  string  follows  increasing  order  apply  operation  sorting  substring  represents  substring  consists  character  position  inclusive  shuffling  operation  need  print  string  input  contains  non  empty  string  length  consisting  lowercase  uppercase  english  letter  digit  second  input  contains  shuffling  operation  n  following  description  operation  consisting  operation  print  current  state  string
631/E __label__dp  __label__data  structures  __label__geometry  blake  bos  kris  spoil  friendship  often  gather  bar  talk  intriguing  problem  maximising  value  time  problem  really  special  given  array  length  characteristic  array  value  sum  product  value  perform  following  operation  exactly  pick  element  array  move  position  particular  allowed  move  element  beginning  end  array  allowed  put  back  initial  position  goal  get  array  maximum  possible  value  characteristic  input  contains  single  size  array  second  contains  element  array  print  single  maximum  possible  value  characteristic  obtained  performing  move
1202/C __label__math  __label__dp  __label__implementation  __label__greedy  __label__data  structures  __label__brute  force  __label__strings  string  sequence  command  toy  robot  robot  placed  cell  rectangular  grid  perform  command  move  cell  move  cell  move  cell  left  move  cell  right  let  grid  grid  minimum  possible  area  position  grid  place  robot  way  fall  grid  running  sequence  command  example  dsawwaw  grid  grid  place  robot  cell  robot  performs  command  move  robot  performs  command  move  robot  performs  command  move  robot  performs  command  move  robot  performs  command  move  robot  performs  command  move  robot  performs  command  move  extra  letter  like  insert  letter  position  sequence  minimize  area  grid  minimum  area  grid  achieve  contains  query  next  query  per  contains  single  string  sequence  command  guaranteed  total  length  query  exceed  print  per  query  query  print  minimum  area  grid  achieve
1187/F __label__math  __label__dp  let  array  let  define  minimal  size  partition  subsegments  element  subsegment  equal  example  using  next  partition  exact  value  know  value  uniformly  random  independent  calculate  expected  value  guaranteed  expected  value  represented  rational  fraction  print  value  mod  contains  single  size  array  second  contains  third  contains  print  single  mod
543/D __label__dp  __label__trees  country  ha  city  bidirectional  road  possible  get  every  city  move  along  road  city  numbered  inclusive  road  initially  bad  government  want  improve  state  road  assume  citizen  happy  road  improvement  path  capital  located  city  city  contains  bad  road  task  every  possible  determine  way  improving  quality  road  order  meet  citizen  condition  value  rather  large  need  print  value  modulo  input  contains  single  city  country  next  contains  positive  description  road  country  mean  country  ha  road  connecting  city  city  print  sought  way  improve  quality  road  modulo  capital  country  city
444/A __label__math  __label__greedy  dzy  love  physic  enjoys  calculating  density  almost  everything  ha  density  even  graph  define  density  non  directed  graph  node  edge  graph  value  follows  sum  value  node  sum  value  edge  dzy  got  graph  want  find  connected  induced  subgraph  graph  density  large  possible  induced  subgraph  graph  graph  satisfies  edge  edge  value  edge  value  corresponding  edge  value  node  help  dzy  find  induced  subgraph  maximum  density  note  induced  subgraph  choose  must  connected  contains  space  separated  represents  node  graph  represents  edge  second  contains  space  separated  represents  value  node  consider  graph  node  numbered  next  contains  space  separated  denoting  edge  node  value  graph  multiple  edge  output  real  denoting  answer  absolute  relative  error
1129/E __label__trees  __label__binary  search  interactive  problem  legendary  tree  rest  deep  forest  legend  ha  individual  realize  tree  would  eternally  become  legendary  grandmaster  help  determine  tree  mikaela  goddess  ha  revealed  tree  contains  vertex  enumerated  allows  ask  question  follows  question  tell  mikaela  disjoint  non  empty  set  vertex  along  vertex  like  mikaela  count  give  pair  vertex  simple  path  contains  mikaela  goddess  busy  available  answer  question  chance  task  determine  tree  report  edge  contains  vertex  tree  program  ha  realized  tree  ready  report  edge  print  answer  separate  make  sure  letter  capitalized
504/E __label__dfs  __label__trees  __label__binary  search  misha  ha  tree  character  written  vertex  choose  vertex  tree  write  character  vertex  lying  path  say  string  corresponds  pair  misha  ha  query  type  given  vertex  need  find  largest  common  prefix  string  correspond  pair  task  help  contains  vertex  tree  next  follows  consisting  small  english  letter  character  string  corresponds  character  written  vertex  next  information  edge  edge  defined  pair  u  separated  space  next  contains  query  next  information  query  query  defined  separated  space  query  print  length  largest  common  prefix  separate
739/A __label__greedy  __label__constructive  algorithms  alyona  mother  want  present  array  non  negative  alyona  array  special  alyona  capricious  girl  get  array  inspects  subarrays  subarray  set  subsequent  element  array  subarray  described  element  alyona  going  find  mex  chosen  subarrays  mexes  girl  going  find  smallest  want  minimum  mex  large  possible  find  array  element  minimum  mex  chosen  alyona  subarrays  large  possible  mex  set  minimum  possible  non  negative  contains  next  information  subarrays  chosen  alyona  contains  ii  describe  subarray  print  single  maximum  possible  minimum  mex
396/B __label__math  __label__number  theory  let  assume  largest  prime  doe  exceed  smallest  prime  strictly  greater  find  contains  testscases  following  input  contains  print  must  answer  test  irreducible  fraction
817/A __label__math  __label__implementation  __label__number  theory  captain  bill  hummingbird  crew  recieved  interesting  challenge  offer  stranger  gave  map  potion  teleportation  said  potion  might  help  reach  treasure  bottle  potion  ha  value  written  value  define  move  performed  using  potion  map  show  position  captain  bill  hummingbird  position  treasure  task  tell  captain  bill  hummingbird  whether  accept  challenge  decline  possible  captain  reach  treasure  using  potion  output  yes  otherwise  without  quote  potion  used  infinite  amount  time  contains  position  captain  bill  hummingbird  treasure  respectively  second  contains  value  potion  bottle  print  yes  possible  captain  reach  treasure  using  potion  otherwise  print  without  quote
725/D __label__greedy  __label__data  structures  tradition  acm  icpc  contest  team  get  balloon  every  solved  problem  assume  submission  time  matter  team  sorted  balloon  mean  place  equal  team  balloon  increased  example  team  balloon  get  place  tie  allowed  know  important  eat  contest  balloon  team  greater  weight  team  team  start  float  air  together  workstation  eventually  touch  ceiling  strictly  forbidden  rule  team  disqualified  considered  standing  contest  ha  finished  team  numbered  team  ha  balloon  weight  guaranteed  exceed  nobody  float  initially  limak  member  team  like  cheating  would  never  steal  balloon  team  instead  give  balloon  away  team  possibly  making  float  limak  give  away  balloon  team  obviously  give  away  balloon  team  initially  ha  best  place  limak  get  standard  input  contains  team  following  contains  ii  respectively  balloon  weight  team  limak  member  team  print  denoting  best  place  limak  get
1176/E __label__dfs  __label__graphs  __label__trees  given  undirected  unweighted  connected  graph  consisting  vertex  edge  guaranteed  self  loop  multiple  edge  given  graph  task  choose  vertex  graph  unchosen  vertex  adjacent  word  connected  edge  least  chosen  vertex  guaranteed  answer  exists  multiple  answer  print  given  multiple  independent  query  answer  contains  single  query  query  follow  query  contains  n  vertex  edge  respectively  following  denote  edge  edge  represented  pair  index  vertex  connected  edge  self  loop  multiple  edge  given  graph  pair  pair  list  edge  pair  condition  satisfied  guaranteed  given  graph  connected  guaranteed  query  query  print
1025/G __label__math  __label__constructive  algorithms  startup  startup  active  acquired  startup  acquired  mean  ha  exactly  active  startup  following  active  startup  arbitrarily  many  acquired  startup  following  active  startup  follow  startup  following  step  happen  exactly  active  startup  following  sequence  step  take  exactly  day  distinct  active  startup  chosen  uniformly  random  fair  coin  flipped  equal  probability  acquires  acquires  acquires  mean  state  change  active  acquired  start  following  startup  change  active  acquired  previously  acquired  startup  become  active  example  following  scenario  happen  let  say  active  startup  acquired  startup  acquired  startup  active  startup  shown  red  acquires  state  active  startup  acquired  startup  acquired  startup  instead  acquires  state  active  startup  acquired  startup  acquired  startup  given  initial  state  startup  startup  told  either  acquired  active  acquired  given  index  active  startup  following  wondering  expected  day  needed  process  finish  exactly  active  startup  end  shown  expected  day  written  rational  prime  mod  return  value  modulo  contains  single  startup  next  space  separated  mean  startup  active  otherwise  startup  acquired  currently  following  startup  guaranteed  startup  followed  active  print  single  expected  day  needed  process  end  exactly  active  startup  modulo
405/E __label__dfs  __label__graphs  little  chris  participating  graph  cutting  contest  pro  time  ha  come  test  skill  fullest  chris  given  simple  undirected  connected  graph  vertex  numbered  edge  problem  cut  edge  distinct  path  length  formally  chris  ha  partition  edge  graph  pair  way  edge  single  pair  adjacent  edge  must  contained  exactly  pair  example  figure  show  way  chris  cut  graph  sample  test  contains  description  graph  given  chance  compete  chris  find  way  cut  given  graph  determine  impossible  input  contains  space  separated  vertex  edge  graph  next  description  graph  edge  contains  space  separated  aii  vertex  connected  edge  guaranteed  given  graph  simple  without  self  loop  multi  edge  connected  note  since  size  input  output  could  large  use  slow  output  technique  language  example  use  input  output  stream  cin  cout  possible  cut  given  graph  edge  distinct  path  length  output  print  space  separated  description  path  graph  path  graph  edge  edge  appear  exactly  path  length  multiple  solution  output
1043/E __label__math  __label__greedy  __label__sortings  __label__constructive  algorithms  zibi  competitive  programming  coach  competitor  want  prepared  well  training  contest  quite  unusual  people  team  problem  competitor  code  exactly  course  people  team  code  different  problem  rule  scoring  typical  problem  always  implementation  problem  implement  well  known  algorithm  fast  time  typing  rated  second  awful  geometry  task  get  accepted  reasonable  time  length  difficulty  code  important  zibi  give  penalty  point  possibly  negative  solution  final  score  team  sum  le  score  better  know  competitor  always  score  code  task  code  second  task  assume  competitor  know  skill  contest  distribute  problem  way  minimizes  final  score  remember  person  code  exactly  problem  contest  zibi  want  competitor  write  contest  pair  people  really  like  cooperate  definitely  write  contest  together  still  coach  going  conduct  training  possible  pair  people  people  pair  hate  coach  interested  participant  sum  score  team  trained  contains  participant  pair  people  write  contest  together  next  contains  score  competitor  get  problem  second  problem  guaranteed  people  next  index  people  want  write  contest  team  unordered  pair  index  appear  output  sum  score  participant  order  appear  input
949/C __label__dfs  __label__graphs  bigdata  inc  corporation  ha  data  center  indexed  located  world  data  center  provide  storage  client  data  figure  client  data  really  big  main  feature  service  offered  bigdata  inc  access  availability  guarantee  even  circumstance  data  center  outage  guarantee  ensured  using  way  replication  way  replication  approach  data  storage  piece  data  represented  identical  copy  stored  different  data  center  company  client  let  denote  index  different  data  center  storing  client  data  order  keep  data  center  operational  safe  software  running  data  center  computer  updated  regularly  release  cycle  bigdata  inc  day  meaning  new  version  software  deployed  data  center  computer  day  data  center  software  update  non  trivial  long  process  special  hour  long  time  frame  dedicated  data  center  maintenance  maintenance  period  data  center  computer  installing  software  update  thus  unavailable  consider  day  exactly  hour  long  data  center  j  defining  index  hour  day  hour  data  center  unavailable  due  maintenance  summing  everything  condition  uci  ci  hold  client  otherwise  data  unaccessible  data  center  store  maintenance  due  occasional  timezone  change  different  city  world  maintenance  time  data  center  change  hour  sometimes  company  prepared  situation  decided  conduct  experiment  choosing  non  empty  subset  data  center  shifting  maintenance  time  hour  later  new  maintenance  hour  would  become  otherwise  would  become  nonetheless  experiment  break  accessibility  guarantee  meaning  data  client  still  available  hour  day  data  center  maintenance  time  changed  experiment  would  provide  useful  insight  changing  update  time  quite  expensive  procedure  company  asked  find  minimum  data  center  included  experiment  order  keep  data  accessibility  guarantee  input  contains  company  data  center  client  day  length  day  measured  hour  second  input  contains  j  index  maintenance  hour  data  center  next  contains  defining  data  center  index  containing  data  client  guaranteed  given  maintenance  schedule  allows  client  access  least  copy  data  moment  day  print  minimum  possible  data  center  included  experiment  order  keep  data  available  client
955/F __label__dp  __label__trees  given  tree  vertex  rooted  say  ary  heap  depth  located  following  hold  ary  heap  depth  vertex  ary  heap  depth  least  child  ary  heap  depth  least  denote  dpk  maximum  depth  ary  heap  subtree  including  goal  compute  contains  denoting  size  tree  next  describing  vertex  connected  edge  guaranteed  given  configuration  form  tree  output  answer  task
722/D __label__greedy  __label__data  structures  __label__dfs  __label__trees  __label__strings  __label__binary  search  given  set  distinct  positive  set  distinct  positive  said  generate  set  transform  applying  following  operation  take  multiply  replace  take  multiply  add  replace  note  required  distinct  operation  set  distinct  equal  equal  set  word  write  element  set  array  increasing  order  array  would  equal  note  set  permutation  generates  given  set  find  set  generates  maximum  element  mininum  possible  input  contains  single  element  second  contains  guaranteed  distinct  print  set  distinct  generate  maximum  element  minimum  possible  several  set  print
61/A __label__implementation  shapur  wa  extremely  gifted  student  wa  great  everything  including  combinatorics  algebra  theory  geometry  calculus  etc  wa  smart  extraordinarily  fast  could  manage  sum  single  second  day  shapur  wa  trying  find  possibly  calculation  faster  result  made  great  contest  asked  every  come  take  part  contest  gave  contestant  many  different  pair  made  digit  contestant  write  new  corresponding  given  pair  rule  simple  digit  answer  digit  given  differ  case  digit  answer  shapur  made  many  tried  speed  saw  perform  operation  length  length  digit  glance  always  give  correct  answer  expects  contestant  give  correct  answer  good  fellow  give  anyone  big  always  give  person  length  going  take  part  shapur  contest  see  faster  accurate  input  contains  single  guaranteed  made  length  start  length  exceed  write  corresponding  answer  omit  leading
773/B __label__greedy  __label__brute  force  vasya  petya  take  part  codeforces  round  round  last  hour  contains  problem  round  dynamic  problem  scoring  used  lucky  participate  codeforces  round  dynamic  problem  scoring  mean  maximum  point  value  problem  depends  ratio  participant  solved  problem  total  round  participant  everyone  made  least  submission  considered  participating  round  pay  attention  range  bound  example  people  taking  part  round  solve  particular  problem  solver  fraction  equal  problem  maximum  point  value  equal  problem  maximum  point  value  equal  whole  minute  passed  beginning  contest  moment  participant  correct  submission  participant  loses  point  example  problem  maximum  point  value  participant  submits  correct  solution  minute  round  participant  awarded  point  problem  participant  round  including  vasya  petya  participant  problem  minute  passed  beginning  contest  submission  participant  problem  known  possible  participant  made  submission  problem  second  end  round  participant  submission  passed  pretests  single  hack  attempt  ha  made  vasya  belief  submission  hack  attempt  made  remaining  second  every  submission  pas  system  testing  unfortunately  vasya  cheater  ha  registered  new  account  round  vasya  submit  solution  new  account  order  change  maximum  point  value  problem  vasya  submit  wrong  solution  problem  note  vasya  submit  correct  solution  problem  solved  vasya  seek  score  strictly  point  petya  current  round  vasya  ha  already  prepared  script  allow  obfuscate  solution  submit  system  new  account  fraction  second  vasya  want  make  cheating  obvious  want  achieve  goal  making  submission  smallest  possible  new  account  find  smallest  new  account  vasya  need  order  beat  petya  provided  vasya  assumption  correct  report  vasya  achieve  goal  contains  single  round  participant  including  vasya  petya  next  contains  minute  passed  beginning  round  submission  problem  participant  participant  solved  problem  guaranteed  participant  ha  made  least  successful  submission  vasya  listed  participant  petya  listed  participant  participant  listed  particular  order  output  single  new  account  vasya  need  beat  petya  vasya  achieve  goal
1183/F __label__math  __label__sortings  __label__brute  force  important  contest  take  place  famous  programming  platform  topforces  soon  author  pool  problem  choose  contest  prettiness  problem  author  compose  pretty  contest  word  cumulative  prettiness  chosen  problem  maximum  possible  important  thing  contest  preparation  superstition  author  prettiness  problem  divide  word  prettiness  chosen  problem  divisible  neither  divisible  neither  divisible  neither  prettiness  chosen  problem  neither  divisible  divisible  contest  composed  problem  considered  good  task  find  maximum  possible  total  prettiness  contest  composed  problem  given  pool  answer  independent  query  python  programmer  consider  using  pypy  instead  python  submit  code  input  contains  query  query  contains  problem  second  query  contains  prettiness  problem  guaranteed  sum  query  doe  exceed  query  print  maximum  possible  cumulative  prettiness  contest  composed  problem  given  pool  problem  query
873/E __label__dp  __label__data  structures  __label__brute  force  alexey  recently  held  programming  contest  student  berland  student  participated  contest  solved  problem  want  award  contestant  alexey  award  student  diploma  different  degree  student  either  receive  diploma  degree  receive  diploma  let  cntx  student  awarded  diploma  degree  following  condition  must  hold  cntx  degree  cntx  cnty  course  lot  way  distribute  diploma  let  degree  diploma  student  receive  student  receive  diploma  let  maximum  problem  solved  student  receives  diploma  degree  minimum  problem  solved  student  receives  diploma  degree  alexey  want  distribute  diploma  way  student  solved  problem  student  ha  awarded  worse  student  impossible  student  receives  diploma  receive  impossible  receive  diploma  maximum  possible  way  maximize  previous  expression  maximum  possible  way  correspond  previous  condition  maximum  possible  maximum  problem  solved  student  receive  diploma  student  awarded  diploma  help  alexey  find  way  award  contestant  contains  second  contains  output  must  equal  degree  diploma  contestant  receive  receive  diploma
1250/B __label__math  __label__greedy  __label__constructive  algorithms  __label__brute  force  employee  jebtrains  way  celebrate  day  year  employee  team  jebtrains  employee  member  exactly  team  team  numbered  given  array  employee  team  jebtrains  going  rent  single  bus  get  employee  feast  bus  take  ride  bus  pick  entire  team  entire  team  team  take  ride  together  start  new  project  considered  unacceptable  prohibited  split  team  member  team  take  ride  possible  rent  bus  capacity  bus  take  people  single  ride  total  cost  rent  equal  burles  ride  note  impossible  rent  bus  help  jebtrains  calculate  minimum  cost  rent  required  get  employee  feast  fulfilling  condition  contains  employee  team  jebtrains  second  contains  sequence  employee  team  every  team  contains  least  employee  print  minimum  cost  rent
1132/A __label__implementation  __label__greedy  string  called  bracket  sequence  doe  character  bracket  sequence  called  regular  possible  obtain  correct  arithmetic  expression  inserting  character  sequence  example  regular  bracket  sequence  bracket  sequence  regular  bracket  sequence  string  string  bracket  sequence  length  overall  string  string  string  string  want  write  string  order  another  get  long  bracket  sequence  length  wonder  possible  choose  order  string  get  regular  bracket  sequence  note  remove  character  string  add  anything  either  input  consists  contains  n  print  possible  form  regular  bracket  sequence  choosing  correct  order  given  string  otherwise
900/C __label__math  __label__data  structures  __label__brute  force  given  permutation  length  remove  element  permutation  make  record  maximum  possible  remind  sequence  element  record  every  following  hold  contains  length  permutation  second  contains  permutation  distinct  print  element  removed  make  record  maximum  possible  multiple  element  print  smallest
675/B __label__math  __label__constructive  algorithms  __label__brute  force  vasya  work  watchman  gallery  unfortunately  expensive  painting  wa  stolen  wa  duty  want  fired  ha  quickly  restore  painting  remembers  fact  painting  square  cell  contains  single  different  cell  either  different  equal  sum  square  equal  sum  top  left  square  element  known  located  shown  picture  help  vasya  find  distinct  square  satisfy  condition  note  equal  meaning  vasya  remembers  something  wrong  square  considered  different  exists  cell  contains  different  different  square  input  contains  maximum  possible  value  cell  vasya  remembers  print  distinct  valid  square
1025/E __label__implementation  __label__constructive  algorithms  vasya  pass  exam  despite  expectation  vasya  tired  moreover  ready  new  challenge  doe  want  work  hard  difficult  problem  vasya  remembered  ha  hard  puzzle  colored  cube  placed  chessboard  size  nn  fact  cube  distinct  color  cube  occupies  exactly  cell  designated  cell  cube  board  puzzle  place  cube  place  cube  fragile  operation  move  cube  onto  neighboring  side  cell  empty  vasya  want  careful  operation  take  exactly  second  vasya  used  train  hard  cup  final  focus  attention  puzzle  hour  second  help  vasya  find  sequence  operation  cube  moved  onto  designated  place  vasya  lose  attention  contains  next  contains  initial  position  cube  next  describe  designated  place  cube  format  order  guaranteed  initial  position  distinct  designated  place  distinct  possible  initial  position  coincide  final  position  print  single  operation  vasya  make
691/C __label__implementation  given  positive  decimal  task  convert  simple  exponential  notation  let  b  general  case  simple  exponential  notation  look  like  aeb  equal  part  skipped  written  without  decimal  point  extra  contains  positive  decimal  length  exceed  note  given  large  use  standard  built  data  type  float  double  print  simple  exponential  notation  given
550/A __label__dp  __label__implementation  __label__greedy  __label__brute  force  __label__strings  given  string  task  determine  given  string  contains  non  overlapping  substring  substring  order  input  contains  string  length  consisting  uppercase  latin  letter  print  yes  without  quote  string  contains  non  overlapping  substring  otherwise
1081/H __label__data  structures  __label__strings  learning  fancy  algorithm  palindrome  chouti  found  palindrome  interesting  want  challenge  problem  chouti  ha  got  string  since  like  palindrome  would  like  pick  non  empty  palindromic  substring  non  empty  palindromic  substring  concatenating  get  string  chouti  think  string  could  get  way  interesting  want  know  many  different  string  get  contains  single  string  second  contains  single  string  string  lowercase  english  letter  single  possible  string
596/E __label__dp  __label__dfs  __label__graphs  __label__strings  wilbur  pig  want  play  string  ha  found  table  consisting  digit  row  numbered  column  numbered  wilbur  start  square  make  certain  move  square  digit  written  position  must  move  square  square  lie  table  stay  square  otherwise  wilbur  make  move  choose  whether  write  digit  written  square  white  board  digit  written  whiteboard  form  string  every  time  new  digit  written  go  end  current  string  wilbur  ha  string  worried  string  wilbur  want  know  whether  exists  starting  position  making  finitely  many  move  wilbur  end  string  written  white  board  input  consists  dimension  table  string  process  respectively  next  contains  digit  giving  table  follow  contains  value  vector  wilbur  us  make  move  square  digit  follow  string  consisting  digit  guaranteed  total  length  string  exceed  string  print  yes  wilbur  choose  order  finish  string  finite  move  impossible  print  corresponding  string
1056/H __label__data  structures  __label__strings  successfully  found  poor  arkady  near  exit  station  perfectly  predicted  sent  home  taxi  suddenly  came  question  crossroad  city  several  bidirectional  road  connecting  taxi  ride  path  crossroad  another  without  passing  crossroad  twice  collection  ride  made  driver  wonder  driver  robot  definitely  human  think  driver  robot  every  crossroad  driver  always  chooses  path  whenever  drive  note  endpoint  ride  path  different  contrary  driver  ever  ha  driven  different  path  definitely  human  given  system  road  description  ride  available  determine  driver  robot  test  contains  test  case  contains  single  test  case  test  case  contains  single  crossroad  city  next  contains  single  ride  available  following  start  single  crossroad  visited  driver  ride  followed  crossroad  order  driver  visited  guaranteed  crossroad  ride  distinct  guaranteed  sum  value  ride  test  case  doe  exceed  guaranteed  sum  value  sum  value  exceed  test  case  output  single  test  case
923/B __label__data  structures  __label__binary  search  alice  like  snow  lot  unfortunately  year  winter  already  expect  bob  ha  thus  bought  gift  large  snow  maker  plan  make  amount  snow  every  day  day  make  pile  snow  volume  put  garden  day  every  pile  shrink  little  due  melting  precisely  temperature  given  day  pile  reduce  volume  would  reduce  volume  pile  disappears  forever  snow  pile  independent  note  pile  made  day  already  loses  part  volume  day  extreme  case  mean  pile  left  end  particular  day  given  initial  pile  size  temperature  day  determine  total  volume  snow  melted  day  contains  single  day  second  contains  initial  size  snow  pile  made  day  third  contains  temperature  day  output  single  represents  total  volume  snow  melted  day
477/E __label__data  structures  dreamoon  ha  created  document  hard  problem  using  notepad  exe  document  consists  text  denotes  length  want  know  fastest  way  move  cursor  around  document  really  long  let  current  cursor  position  row  position  cursor  row  r  use  following  operation  notepad  exe  move  cursor  assuming  current  cursor  position  key  new  cursor  position  max  anr  key  new  cursor  position  min  anr  left  key  new  cursor  position  ax  right  key  new  cursor  position  anr  home  key  new  cursor  position  end  key  new  cursor  position  given  document  description  sequence  query  dreamoon  query  asks  minimal  key  press  needed  move  cursor  contains  text  second  contains  third  contains  next  contains  representing  query  r  r  query  print  result  query
813/C __label__dfs  __label__graphs  alice  got  tired  playing  tag  game  usual  rule  offered  bob  little  modification  game  played  undirected  rooted  tree  vertex  vertex  root  tree  alice  start  vertex  bob  start  vertex  x  move  made  turn  bob  go  move  either  stay  current  vertex  travel  neighbouring  game  end  alice  go  vertex  bob  standing  alice  want  minimize  total  move  bob  want  maximize  write  program  determine  many  move  game  last  contains  next  contains  edge  tree  guaranteed  edge  form  valid  tree  print  total  move  alice  bob  make
542/B __label__data  structures  duck  hunter  favorite  thing  hunting  life  dimensional  world  located  point  like  walking  prey  prefers  shoot  vertically  case  duck  fall  straight  hand  hunter  reload  gun  immediately  second  must  pas  shot  hunter  shoot  bullet  immediately  hit  duck  directly  hunter  dimensional  world  duck  horizontal  segment  move  horizontally  negative  direction  axis  speed  length  unit  per  second  duck  know  value  coordinate  head  left  end  segment  tail  right  end  segment  time  height  duck  flying  important  gun  shoot  vertically  infinite  height  hit  duck  way  figure  sample  maximum  duck  hunter  shoot  duck  considered  shot  hunter  moment  shot  least  point  intersects  axis  hunter  shoot  duck  fall  shot  anymore  hunter  make  shot  moment  time  input  contains  duck  minimum  time  second  shot  follow  contains  coordinate  head  tail  duck  moment  print  single  maximum  duck  shot  hunter
612/E __label__math  __label__dfs  __label__graphs  __label__constructive  algorithms  permutation  length  array  containing  exactly  example  permutation  permutation  square  permutation  permutation  example  square  problem  inverse  operation  given  permutation  task  find  permutation  several  find  contains  element  permutation  second  contains  distinct  element  permutation  permutation  print
935/E __label__dp  __label__dfs  __label__trees  ancient  egyptian  known  understood  difficult  concept  mathematics  ancient  egyptian  mathematician  ahmes  liked  write  kind  arithmetic  expression  papyrus  paper  called  ahmes  arithmetic  expression  ahmes  arithmetic  expression  defined  ahmes  arithmetic  expression  digit  positive  e  p  ahmes  arithmetic  expression  valid  ahmes  arithmetic  expression  without  space  either  plus  minus  example  valid  ahmes  arithmetic  expression  trip  egypt  fafa  found  piece  papyrus  paper  ahmes  arithmetic  expression  written  ancient  papyrus  piece  wa  worn  result  operator  erased  keeping  bracket  since  fafa  love  mathematics  decided  challenge  following  task  given  plus  minus  operator  original  expression  find  maximum  possible  value  expression  papyrus  paper  putting  plus  minus  operator  place  original  erased  operator  contains  string  valid  ahmes  arithmetic  expression  operator  erased  replaced  second  contains  space  separated  plus  minus  operator  respectively  guaranteed  erased  operator  print  containing  answer  problem
679/B __label__dp  __label__greedy  __label__binary  search  limak  little  polar  bear  play  building  tower  block  every  block  cube  positive  length  side  limak  ha  infinitely  many  block  side  length  block  side  ha  volume  tower  consisting  block  side  ha  total  volume  k  limak  going  build  tower  asks  tell  positive  required  total  volume  tower  limak  add  new  block  greedily  time  add  biggest  block  total  volume  exceed  limak  asks  choose  greater  want  maximize  block  tower  end  still  behaves  greedily  secondarily  want  maximize  help  limak  find  maximum  block  tower  maximum  x  result  block  input  contains  meaning  limak  want  choose  inclusive  print  maximum  block  tower  maximum  required  total  volume  resulting  maximum  block
895/D __label__math  __label__strings  byteland  state  university  mark  string  length  mark  considered  better  string  lexicographically  smaller  recently  bsu  wa  important  test  work  vasya  recived  mark  hard  teacher  remember  exact  mark  every  student  know  mark  every  student  recieved  mark  strictly  smaller  vasya  satisfied  mark  decided  improve  swap  character  string  corresponding  mark  many  time  like  want  know  different  way  improve  mark  teacher  notice  something  suspicious  formally  given  string  length  need  figure  different  string  obtained  swapping  character  word  permutation  string  lexicographically  smaller  string  lexicographically  smaller  string  length  true  lexicographically  smaller  exists  since  answer  large  need  find  answer  modulo  contains  string  second  contains  string  string  consist  lowercase  english  letter  length  equal  exceed  guaranteed  lexicographically  smaller  print  different  string  satisfying  condition  problem  modulo
459/B __label__implementation  __label__sortings  pashmak  decided  give  parmida  pair  flower  garden  flower  garden  ha  beauty  parmida  strange  girl  want  beautiful  flower  necessarily  want  pair  flower  beauty  difference  maximal  possible  task  write  program  calculates  thing  maximum  beauty  difference  flower  pashmak  give  parmida  way  pashmak  pick  flower  way  considered  different  least  flower  chosen  way  chosen  second  way  input  contains  next  space  separated  output  maximum  beauty  difference  way  happen  respectively
609/B __label__implementation  __label__constructive  algorithms  emily  birthday  next  week  jack  ha  decided  buy  present  know  love  book  go  local  bookshop  book  sale  genre  bookshop  jack  decides  buy  book  different  genre  based  genre  book  sale  shop  find  option  available  jack  choosing  book  different  genre  emily  option  considered  different  differ  least  book  book  given  index  genre  genre  numbered  contains  positive  book  bookstore  genre  second  contains  sequence  equal  genre  book  guaranteed  genre  least  book  genre  print  way  jack  choose  book
878/B __label__implementation  __label__data  structures  time  berland  team  olympiad  informatics  held  remote  city  reached  small  bus  bus  ha  passenger  seat  seat  occupied  participant  city  today  bus  ha  completed  trip  time  bringing  participant  participant  aligned  order  arrived  people  bus  standing  order  seat  write  city  participant  came  get  sequence  repeated  time  team  formed  consisting  participant  form  city  standing  next  formed  team  left  team  formed  neighboring  participant  city  help  organizer  determine  many  participant  left  process  ended  prove  answer  depend  order  team  selected  contains  second  contains  city  person  must  take  seat  bus  output  remaining  participant
940/A __label__greedy  __label__sortings  __label__brute  force  got  test  case  big  olympiad  coming  problemsetters  priority  adding  another  problem  round  diameter  multiset  point  largest  distance  point  set  example  diameter  multiset  diameter  multiset  consisting  point  given  point  minimum  point  remove  diameter  multiset  remaining  point  exceed  contains  amount  point  maximum  allowed  diameter  respectively  second  contains  space  separated  coordinate  point  output  single  minimum  point  remove
733/E __label__math  __label__data  structures  __label__constructive  algorithms  academic  year  ha  begun  lesson  olympiad  already  occupied  free  time  surprise  today  olga  fell  asleep  literature  dream  wa  stair  stair  consists  step  step  numbered  bottom  top  mean  lowest  step  ha  highest  step  ha  pointer  direction  olga  move  step  soon  olga  go  next  step  direction  pointer  step  leaf  change  mean  direction  change  direction  direction  olga  always  move  next  step  direction  shown  pointer  step  olga  move  beyond  stair  fall  wake  moving  beyond  stair  moving  step  moving  last  mean  step  second  olga  move  step  according  direction  pointer  located  step  olga  beginning  second  step  find  duration  dream  olga  wa  step  beginning  dream  olga  fall  take  second  wa  step  went  would  wake  next  second  contains  single  step  stair  second  contains  string  length  denotes  initial  direction  pointer  stair  character  string  denotes  direction  pointer  step  either  mean  pointer  directed  mean  pointed  directed  pointer  given  order  bottom  top  print  equal  either  duration  olga  dream  olga  never  go  beyond  stair  beginning  sleep  wa  step
342/E __label__data  structures  __label__trees  xenia  programmer  ha  tree  consisting  node  consider  tree  node  indexed  consider  node  initially  painted  red  node  painted  blue  distance  tree  node  edge  shortest  path  xenia  need  learn  quickly  execute  query  type  paint  specified  blue  node  red  calculate  red  node  closest  given  print  shortest  distance  closest  red  node  task  write  program  execute  described  query  contains  node  tree  query  next  tree  edge  contains  pair  ii  edge  tree  next  query  query  specified  pair  reply  query  need  paint  blue  node  red  reply  query  printing  shortest  distance  red  node  node  guaranteed  given  graph  tree  query  correct  second  type  query  print  reply  single
893/C __label__greedy  __label__dfs  __label__graphs  vova  promised  would  never  play  computer  game  recently  firestorm  well  known  game  developing  company  published  newest  game  world  farcraft  became  really  popular  course  vova  started  playing  try  solve  quest  task  come  settlement  named  overcity  spread  rumor  vova  know  character  overcity  character  friend  share  information  got  vova  know  bribe  character  start  spreading  rumor  character  want  gold  exchange  spreading  rumor  character  hears  rumor  tell  friend  start  spreading  rumor  friend  free  quest  finished  character  know  rumor  minimum  amount  gold  vova  need  spend  order  finish  quest  take  look  note  think  understood  problem  completely  contains  character  overcity  pair  friend  second  contains  amount  gold  character  asks  start  spreading  rumor  follow  containing  pair  represent  character  friend  xii  guaranteed  pair  listed  print  minimum  amount  gold  vova  ha  spend  order  finish  quest
1007/A __label__math  __label__data  structures  __label__sortings  given  array  vasya  permute  change  order  want  many  possible  become  place  smaller  used  stand  help  vasya  find  maximal  instance  given  array  permute  becomes  second  position  became  larger  third  fourth  permutation  vasya  want  maximize  equal  read  note  example  demonstrative  test  case  help  vasya  permute  way  position  new  array  greater  original  maximal  contains  single  length  array  second  contains  element  array  print  single  maximal  array  element  permutation  stand  position  smaller  element  stood  initial  array
761/A __label__math  __label__implementation  __label__constructive  algorithms  __label__brute  force  way  programming  school  tiger  dasha  faced  test  huge  staircase  step  numbered  infinity  know  tiger  fond  striped  thing  possible  ha  something  color  interval  way  calculated  value  step  even  odd  need  check  whether  interval  step  value  dasha  ha  found  correct  given  even  odd  step  accordingly  print  yes  interval  step  described  exists  otherwise
1142/B __label__math  __label__dp  __label__data  structures  __label__dfs  __label__trees  recently  lynyrd  skynyrd  went  shop  lynyrd  bought  permutation  length  skynyrd  bought  array  length  consisting  lynyrd  skynyrd  became  bored  asked  query  ha  following  form  doe  subsegment  position  inclusive  subsequence  cyclic  shift  please  answer  query  permutation  length  sequence  appears  exactly  cyclic  shift  permutation  permutation  example  permutation  ha  distinct  cyclic  shift  subsequence  subsegment  array  position  inclusive  sequence  contains  length  permutation  length  array  query  next  contains  element  permutation  appears  exactly  next  contains  element  array  next  describe  query  contains  meaning  query  subsegment  array  position  inclusive  print  single  string  length  consisting  digit  position  subsegment  array  position  inclusive  contains  subsequence  cyclic  shift  otherwise
814/D __label__dp  __label__greedy  __label__dfs  __label__trees  __label__geometry  crowdedness  discotheque  would  never  stop  friend  fun  bit  spaciousness  hurt  discotheque  seen  infinite  plane  total  dancer  someone  start  moving  around  move  inside  movement  range  circular  area  described  center  radius  range  border  common  point  every  pair  either  range  disjoint  subset  note  possible  range  border  share  single  common  point  dancer  exactly  range  tsukihi  defines  spaciousness  area  covered  odd  movement  range  dancer  moving  example  shown  shaded  region  representing  spaciousness  everyone  move  time  keep  moving  whole  night  whole  night  time  divided  half  midnight  midnight  every  dancer  move  around  half  sitting  friend  spaciousness  half  calculated  separately  sum  course  large  possible  following  figure  show  optimal  solution  example  different  plan  dance  half  doe  different  sum  spaciousness  half  achieved  find  largest  achievable  value  sum  input  contains  positive  dancer  following  describes  dancer  contains  space  separated  describing  circular  movement  range  centered  radius  output  decimal  largest  achievable  sum  spaciousness  half  night
863/D __label__implementation  __label__data  structures  given  array  size  query  query  type  perform  cyclic  shift  segment  right  every  li  new  value  becomes  equal  old  value  new  value  ali  becomes  equal  old  value  ari  reverse  segment  important  index  array  output  index  array  query  performed  contains  second  contains  follow  contains  type  query  segment  query  performed  ii  last  contains  important  index  array  print  equal  index  query  done
750/B __label__implementation  __label__geometry  problem  assume  earth  completely  round  ball  surface  perfect  sphere  length  equator  meridian  considered  exactly  kilometer  thus  travelling  north  pole  south  pole  vice  versa  take  exactly  kilometer  limak  polar  bear  life  north  pole  close  new  year  help  somebody  delivering  package  around  world  instead  coordinate  place  visit  limak  got  description  move  assuming  start  north  pole  description  consists  part  part  journey  limak  move  kilometer  direction  represented  string  diri  north  south  west  east  limak  sure  whether  description  valid  must  help  check  following  condition  moment  time  instruction  performing  limak  north  pole  move  south  moment  time  instruction  performing  limak  south  pole  move  north  journey  must  end  north  pole  check  condition  satisfied  print  yes  single  input  contains  single  next  contains  string  diri  length  direction  part  journey  according  description  limak  got  print  yes  description  satisfies  condition  otherwise  print  without  quote
773/E __label__data  structures  __label__sortings  well  known  blog  post  important  part  codeforces  platform  every  blog  post  ha  global  characteristic  changing  time  community  rating  newly  created  blog  post  community  rating  codeforces  user  visit  blog  post  page  rate  changing  community  rating  consider  following  model  codeforces  user  behavior  user  ha  estimated  blog  post  rating  denoted  user  visit  blog  post  page  compare  estimated  blog  post  rating  community  rating  estimated  rating  higher  rate  blog  post  thus  blog  post  community  rating  increase  estimated  rating  lower  rate  blog  post  decreasing  community  rating  estimated  rating  community  rating  equal  user  rate  blog  post  case  say  user  rate  blog  post  case  procedure  user  close  blog  post  page  never  open  consider  newly  created  blog  post  initial  community  rating  codeforces  user  numbered  estimated  blog  post  rating  known  inclusive  following  question  asked  let  user  index  order  visit  blog  post  page  rate  blog  post  close  page  user  open  blog  post  previous  user  close  could  maximum  possible  community  rating  blog  post  visit  contains  single  codeforces  user  second  contains  estimated  blog  post  rating  user  order  output  single  equal  maximum  possible  community  rating  blog  post  user  index  order  visit  blog  post  page  rate  blog  post  close  page
449/B __label__greedy  __label__graphs  jzzhu  president  country  city  numbered  country  city  capital  road  connecting  city  city  vise  versa  using  road  length  road  finally  train  route  country  use  train  route  capital  country  city  vise  versa  length  route  jzzhu  want  waste  money  country  going  close  train  route  please  tell  jzzhu  maximum  train  route  closed  following  condition  length  shortest  path  every  city  capital  change  contains  next  contains  uii  next  contains  guaranteed  least  way  every  city  capital  note  multiple  road  city  multiple  route  going  city  capital  output  single  representing  maximum  train  route  closed
862/E __label__data  structures  __label__sortings  __label__binary  search  evil  interested  math  function  gave  mahmoud  ehab  array  length  array  length  introduced  function  defined  satisfy  suppose  formally  evil  want  mahmoud  ehab  calculate  minimum  value  function  valid  found  bit  easy  evil  made  task  harder  give  update  query  update  add  element  range  add  ali  li  ri  calculate  minimum  value  valid  please  help  mahmoud  ehab  contains  element  element  query  respectively  second  contains  element  third  contains  element  follow  describing  query  contains  ii  range  updated  added  value  minimum  value  function  update
1056/F __label__math  __label__dp  __label__binary  search  polycarp  arkady  friend  prepares  programming  competition  decides  write  contest  contest  consists  problem  last  minute  problem  defined  positive  difficulty  score  awarded  solution  polycarp  experience  suggests  skill  level  defined  positive  real  value  initially  solve  problem  polycarp  need  minute  polycarp  love  watch  series  solving  problem  definitely  watch  episode  polycarp  watch  episode  skill  decrease  skill  level  decrease  episode  take  exactly  minute  watch  polycarp  decides  solve  problem  firstly  ha  watch  episode  start  solving  problem  without  break  minute  current  skill  level  calculation  rounding  performed  division  value  real  value  happens  polycarp  train  time  train  minute  increase  skill  given  positive  real  constant  polycarp  train  solving  problem  watching  series  duration  training  arbitrary  real  value  polycarp  interested  largest  score  get  contest  allowed  solve  problem  order  training  allowed  solving  problem  contains  c  test  case  test  case  follow  test  contains  problem  contest  second  test  contains  real  value  defines  efficiency  training  duration  contest  minute  value  given  exactly  digit  decimal  point  next  test  characteristic  corresponding  problem  difficulty  score  problem  guaranteed  value  changing  direction  change  test  answer  please  note  hack  use  print  maximum  possible  score  test  case
677/E __label__dp  __label__implementation  __label__brute  force  __label__binary  search  vanya  play  game  balloon  field  size  n  cell  contains  balloon  value  goal  destroy  cross  product  value  balloon  cross  maximum  possible  type  cross  normal  rotated  example  ooooo  formally  cross  given  normal  cross  consists  balloon  located  cell  stay  row  column  rotated  cross  consists  balloon  located  cell  vanya  want  know  maximum  possible  product  value  ball  forming  cross  value  large  output  modulo  input  contains  single  row  column  table  balloon  following  contains  character  description  value  balloon  print  maximum  possible  product  modulo  note  asked  maximize  remainder  modulo  find  maximum  value  print  modulo
507/C __label__math  __label__implementation  __label__trees  amr  bought  new  video  game  guess  way  goal  game  find  exit  maze  look  like  perfect  binary  tree  height  player  initially  standing  root  tree  exit  tree  located  leaf  node  let  index  leaf  node  left  right  exit  located  node  h  player  know  exit  ha  guess  way  amr  follows  simple  algorithm  choose  path  let  consider  infinite  command  string  lrlrlrlrl  consisting  alternating  character  amr  sequentially  executes  character  string  using  following  rule  character  mean  left  child  current  node  character  mean  right  child  current  node  destination  node  already  visited  amr  skip  current  command  otherwise  move  destination  node  amr  skipped  consecutive  command  go  back  parent  current  node  executing  next  command  reached  leaf  node  exit  return  parent  current  node  reach  exit  game  finished  amr  wonder  follows  algorithm  many  node  going  visit  reaching  exit  consists  h  output  single  representing  node  excluding  exit  node  amr  going  visit  reaching  exit  following  algorithm
870/F __label__data  structures  __label__number  theory  given  positive  let  build  graph  vertex  way  edge  vertex  let  shortest  distance  path  compute  sum  value  gcd  greatest  common  divisor  positive  maximum  positive  divide  single  print  sum
542/E __label__graphs  vova  marina  love  offering  puzzle  today  marina  offered  vova  cope  following  task  vova  ha  non  directed  graph  consisting  vertex  edge  without  loop  multiple  edge  let  define  operation  contraction  vertex  connected  edge  result  operation  vertex  deleted  instead  new  vertex  added  graph  edge  drawn  vertex  connected  specifically  vertex  wa  connected  exactly  edge  added  thus  result  contraction  non  directed  graph  formed  contains  loop  multiple  edge  contains  vertex  vova  must  perform  contraction  arbitrary  time  transform  given  graph  chain  maximum  length  chain  length  k  connected  graph  whose  vertex  numbered  edge  graph  connect  pair  vertex  specifically  graph  consists  vertex  chain  length  vertex  formed  result  contraction  allowed  used  following  operation  contraction  picture  illustrates  contraction  vertex  marked  red  help  vova  cope  girlfriend  task  find  maximum  length  chain  obtained  resulting  graph  else  determine  impossible  obtain  chain  contains  vertex  edge  original  graph  next  description  edge  format  aii  mean  edge  vertex  guaranteed  edge  pair  vertex  impossible  obtain  chain  given  graph  print  otherwise  print  maximum  possible  edge  resulting  chain
675/C __label__greedy  __label__data  structures  __label__sortings  __label__constructive  algorithms  bank  city  vasya  life  located  circle  bank  neighbouring  index  differ  bank  bank  neighbour  bank  neighbour  vasya  ha  account  bank  balance  negative  meaning  vasya  owes  money  bank  type  operation  available  transfer  amount  money  bank  account  neighbouring  bank  restriction  size  sum  transferred  balance  requirement  perform  operation  vasya  like  deal  large  asks  determine  minimum  operation  required  change  balance  bank  account  guaranteed  possible  achieve  total  balance  vasya  bank  equal  input  contains  single  bank  second  contains  equal  initial  balance  account  bank  guaranteed  sum  equal  print  minimum  operation  required  change  balance  bank
412/B __label__greedy  __label__sortings  company  want  hold  web  search  championship  computer  given  competition  connected  internet  organizer  believe  data  transfer  speed  directly  affect  result  higher  speed  internet  faster  participant  find  necessary  information  therefore  competition  started  computer  maximum  possible  data  transfer  speed  measured  computer  wa  kilobit  per  second  participant  competing  championship  get  separate  computer  organizing  company  doe  want  participant  advantage  others  want  provide  data  transfer  speed  participant  computer  organizer  want  create  comfortable  condition  participant  data  transfer  speed  participant  computer  large  possible  network  setting  company  ha  special  option  let  cut  initial  maximum  data  transfer  speed  computer  lower  speed  company  configure  network  using  described  option  least  computer  data  transfer  speed  data  transfer  speed  computer  wa  large  possible  contains  space  separated  computer  participant  respectively  second  space  separated  sequence  consisting  denotes  maximum  data  transfer  speed  computer  print  single  maximum  internet  speed  value  guaranteed  answer  problem  always
860/E __label__data  structures  __label__dfs  __label__trees  arkady  word  large  company  employee  working  system  strict  hierarchy  namely  employee  exception  ceo  ha  exactly  immediate  manager  ceo  manager  chain  immediate  manager  employee  employee  ha  rank  ceo  ha  rank  equal  employee  ha  rank  equal  rank  immediate  manager  plus  arkady  ha  good  post  company  feel  nobody  company  structure  lot  people  replace  introduced  value  replaceability  consider  employee  employee  latter  manager  necessarily  immediate  replaceability  respect  subordinate  necessarily  immediate  manager  whose  rank  greater  rank  apart  replaceability  arkady  introduced  value  negligibility  negligibility  employee  equal  sum  replaceability  respect  manager  sum  taken  manager  arkady  interested  negligibility  negligibility  employee  company  find  negligibility  employee  arkady  contains  single  employee  company  second  contains  employee  ceo  otherwise  equal  immediate  manager  employee  employee  numbered  guaranteed  exactly  value  ceo  manager  necessarily  immediate  employee  print  negligibilities  employee  order  id
1119/D __label__sortings  __label__binary  search  miyako  came  flea  kingdom  ukulele  became  good  friend  local  flea  resident  played  beautiful  music  every  day  return  flea  made  bigger  ukulele  ha  string  string  ha  fret  numerated  flea  use  array  describe  ukulele  tuning  pitch  fret  string  miyako  leave  kingdom  flea  hope  miyako  answer  last  question  question  form  many  different  pitch  consider  fret  inclusive  string  miyako  visit  cricket  kingdom  ha  time  answer  question  please  help  task  formally  given  matrix  row  column  cell  row  column  contains  answer  query  query  answer  distinct  matrix  column  inclusive  contains  string  second  contains  tuning  ukulele  third  contains  question  following  contains  question  flea  output  question  separated  space  different  pitch
842/E __label__dfs  __label__graphs  __label__trees  __label__binary  search  nikita  play  new  computer  game  level  game  beginning  level  new  class  appears  game  class  child  class  class  called  parent  class  new  class  thus  class  form  tree  initially  class  index  changing  class  neighbour  child  class  parent  class  tree  cost  coin  change  class  back  cost  changing  class  class  equal  total  cost  class  change  path  class  tree  suppose  level  maximum  cost  changing  class  another  level  output  class  class  exists  class  distance  class  exactly  contains  query  next  description  query  describes  level  contains  index  parent  class  class  index  suppose  level  maximum  cost  changing  class  another  level  output  class  class  exists  class  distance  class  exactly
570/D __label__dfs  __label__graphs  __label__trees  __label__constructive  algorithms  __label__binary  search  roman  planted  tree  consisting  vertex  vertex  contains  lowercase  english  letter  vertex  root  tree  remaining  vertex  ha  parent  tree  vertex  connected  parent  edge  parent  vertex  vertex  parent  index  always  le  index  vertex  depth  vertex  node  path  root  along  edge  particular  depth  root  equal  say  vertex  subtree  vertex  get  moving  vertex  parent  particular  vertex  subtree  rom  give  query  consists  let  consider  vertex  subtree  located  depth  determine  whether  use  letter  written  vertex  make  string  palindrome  letter  written  vertex  rearranged  order  make  palindrome  letter  used  contains  node  tree  query  respectively  following  contains  parent  vertex  second  next  contains  lowercase  english  letter  letter  written  vertex  next  describe  query  contains  vertex  depth  appear  query  print  print  yes  without  quote  query  make  palindrome  letter  written  vertex  otherwise  print  without  quote
1174/A __label__greedy  __label__sortings  __label__constructive  algorithms  given  array  length  possible  reorder  way  sum  element  equal  sum  last  element  contains  element  array  second  contains  space  separated  element  array  solution  print  without  quote  otherwise  print  single  containing  space  separated  must  form  reordering  allowed  change  order
1077/D __label__sortings  __label__binary  search  given  array  consisting  find  array  length  cut  maximum  copy  array  array  cutting  copy  mean  element  array  find  remove  find  element  cut  copy  array  duplicate  element  example  possible  answer  array  cut  time  cut  copy  use  element  use  highlighted  element  cutting  copy  array  look  like  cut  second  copy  use  element  cutting  second  copy  array  task  find  array  cut  copy  maximum  time  multiple  answer  choose  input  contains  element  desired  element  respectively  second  input  contains  exactly  print  element  array  cut  maximum  possible  copy  array  multiple  answer  print  required  array  duplicate  element  element  satisfy  following  condition
808/E __label__dp  __label__greedy  __label__binary  search  several  latest  reform  many  tourist  planning  visit  berland  berland  people  understood  opportunity  earn  money  changed  job  attract  tourist  petya  example  left  corporation  working  started  sell  souvenir  market  morning  usual  petya  come  market  petya  ha  different  souvenir  sell  ith  souvenir  characterised  weight  cost  petya  know  might  able  carry  souvenir  market  petya  want  choose  subset  souvenir  total  weight  greater  total  cost  maximum  possible  help  petya  determine  maximum  possible  total  cost  contains  petya  souvenir  total  weight  carry  market  follow  ith  contains  weight  cost  ith  souvenir  print  maximum  possible  total  cost  souvenir  petya  carry  market
490/E __label__implementation  __label__greedy  __label__brute  force  __label__binary  search  peter  wrote  board  strictly  increasing  sequence  positive  vasil  replaced  digit  sequence  question  mark  thus  question  mark  corresponds  exactly  lost  digit  restore  original  sequence  knowing  digit  remaining  board  input  contains  length  sequence  next  element  sequence  element  consists  digit  question  mark  element  start  digit  element  ha  length  character  inclusive  answer  exists  print  yes  without  quote  next  must  sequence  positive  possible  variant  peter  sequence  found  sequence  must  strictly  increasing  must  transformed  given  replacing  question  mark  single  digit  resulting  sequence  must  written  without  leading  multiple  solution  print
992/A __label__implementation  __label__sortings  nastya  owns  many  array  want  delete  least  important  discovered  array  magic  nastya  know  array  ha  following  property  second  add  arbitrary  possibly  negative  element  array  equal  element  array  become  equal  array  explodes  nastya  always  busy  want  explode  array  fast  possible  compute  minimum  time  array  exploded  contains  single  size  array  second  contains  element  array  print  single  minimum  second  needed  make  element  array  equal
372/A __label__greedy  __label__sortings  __label__binary  search  kangaroo  pocket  kangaroo  ha  size  kangaroo  another  kangaroo  pocket  size  kangaroo  hold  kangaroo  least  twice  large  size  kangaroo  held  kangaroo  hold  kangaroo  kangaroo  held  another  kangaroo  hold  kangaroo  kangaroo  held  another  kangaroo  visible  outside  please  find  plan  holding  kangaroo  minimal  kangaroo  visible  contains  single  next  contains  size  kangaroo  output  single  optimal  visible  kangaroo
1137/F __label__data  structures  __label__trees  lena  playing  match  natural  question  arising  head  child  playing  match  whether  possible  set  tree  fire  match  let  say  tree  connected  graph  without  cycle  vertex  labeled  every  vertex  ha  priority  associated  priority  distinct  turn  set  tree  fire  burn  nothing  process  happen  instantly  beginning  burn  leaf  vertex  called  leaf  ha  adjacent  vertex  tree  minimum  priority  burn  leaf  minimal  priority  remaining  tree  way  vertex  turn  leaf  burn  vertex  remains  vertex  burn  well  lena  ha  prepared  tree  vertex  every  vertex  ha  priority  lena  curious  burning  tree  understands  burn  tree  disappear  completely  lena  kind  girl  feel  bad  burned  tree  want  study  process  burning  tree  mind  lena  want  process  query  following  type  assign  vertex  priority  max  find  step  vertex  burn  tree  would  set  fire  compare  find  vertex  burn  tree  would  set  fire  notice  priority  would  distinct  query  stay  distinct  well  initially  priority  distinct  hence  purely  hypothetical  course  burning  tree  leaf  would  distinct  priority  contains  vertex  tree  query  following  contains  denoting  endpoint  edge  remaining  contains  query  following  type  change  priority  vertex  determine  step  vertex  burn  compare  determine  vertex  burn  earlier  current  tree  guaranteed  least  query  type  compare  every  query  type  print  range  step  vertex  burn
1154/E __label__implementation  __label__data  structures  __label__sortings  student  standing  row  coach  forming  team  coach  chooses  team  second  coach  chooses  second  team  student  ha  programming  skill  programming  skill  distinct  inclusive  firstly  coach  choose  student  maximum  programming  skill  student  taken  team  closest  student  left  closest  student  right  le  student  left  right  chosen  student  chosen  leave  row  join  team  secondly  second  coach  make  move  student  chosen  join  second  team  coach  make  move  repeat  row  becomes  empty  process  end  student  becomes  team  problem  determine  student  taken  team  student  taken  second  team  input  contains  student  value  determining  range  chosen  student  move  respectively  second  input  contains  programming  skill  student  guaranteed  programming  skill  distinct  print  string  character  character  student  join  team  otherwise
817/F __label__data  structures  __label__trees  __label__binary  search  given  set  initially  empty  perform  query  different  type  query  add  missing  interval  remove  present  interval  invert  interval  add  missing  remove  present  interval  query  output  mex  set  smallest  positive  mex  presented  set  contains  next  type  query  left  right  bound  print  mex  set  query
977/E __label__dfs  __label__graphs  given  undirected  graph  consisting  vertex  edge  task  find  connected  component  cycle  definition  graph  theory  undirected  graph  consists  set  set  node  called  vertex  set  edge  edge  connects  pair  vertex  edge  bidirectional  vertex  connected  vertex  vertex  connected  vertex  edge  connect  vertex  edge  pair  vertex  vertex  belong  connected  component  least  path  along  edge  connecting  connected  component  cycle  vertex  reordered  way  vertex  connected  second  vertex  edge  second  vertex  connected  third  vertex  edge  last  vertex  connected  vertex  edge  described  edge  cycle  distinct  cycle  edge  except  described  definition  cycle  contains  vertex  connected  component  cycle  contains  vertex  edge  following  contains  edge  edge  given  pair  vertex  multiple  edge  given  graph  pair  pair  list  edge  print  connected  component  cycle
977/C __label__sortings  given  sequence  length  print  range  exactly  element  given  sequence  le  equal  note  sequence  equal  element  print  without  quote  input  contains  second  input  contains  sequence  print  range  exactly  element  given  sequence  le  equal
983/C __label__dp  __label__graphs  work  big  office  floor  building  elevator  accommodate  people  responsibility  manage  elevator  today  late  queue  floor  already  person  know  floor  currently  floor  want  reach  know  order  people  came  elevator  according  company  rule  employee  come  elevator  earlier  another  ha  enter  elevator  earlier  even  employee  stay  different  floor  note  employee  allowed  leave  elevator  arbitrary  order  elevator  ha  command  floor  movement  take  second  open  door  current  floor  operation  employee  reached  destination  get  elevator  employee  floor  get  elevator  order  queued  contradict  company  rule  enough  space  elevator  employee  spends  second  get  inside  outside  elevator  initially  elevator  empty  located  floor  interested  minimum  possible  time  need  spend  deliver  employee  destination  necessary  return  elevator  floor  contains  employee  next  contains  aii  floor  employee  initially  floor  want  reach  employee  given  order  came  elevator  print  single  minimal  possible  time  second
666/B __label__graphs  famous  sculptor  cicasso  go  world  tour  well  actually  world  wide  everyone  opportunity  see  work  sculptor  otherwise  exclusivity  cicasso  entirely  hold  world  tour  native  country  berland  cicasso  devoted  work  want  distracted  little  possible  therefore  visit  city  city  different  could  think  ha  favourite  course  save  money  chose  shortest  path  city  probably  guessed  cicasso  weird  person  although  like  organize  exhibition  like  travel  around  country  enjoy  scenery  want  total  distance  travel  large  possible  sculptor  bad  planning  asks  help  city  way  road  berland  choose  different  city  cicasso  visit  determine  order  visit  total  distance  travel  visit  city  order  starting  city  list  ending  last  choosing  time  shortest  route  pair  city  largest  note  intermediate  route  pas  city  assigned  tour  well  pas  twice  city  example  tour  look  like  city  order  visiting  marked  overlines  note  berland  high  tech  country  using  nanotechnology  road  altered  length  reason  moving  using  regular  car  popular  country  happen  pair  city  generally  reached  car  cicasso  conservative  travel  without  car  choose  city  sculptor  make  tour  using  automobile  guaranteed  always  possible  pair  city  way  road  berland  next  contains  pair  way  road  city  city  note  required  distinct  moreover  several  way  road  pair  city  print  city  cicasso  visit  according  optimal  choice  route  city  printed  order  cicasso  visit  multiple  solution  print
758/E __label__dp  __label__greedy  __label__dfs  __label__graphs  __label__trees  given  tree  ha  vertex  numbered  vertex  root  edge  ha  weight  strength  botanist  innokentiy  member  jury  olympiad  informatics  like  broken  tree  tree  broken  edge  strength  le  sum  weight  subtree  edge  lead  allowed  reduce  weight  edge  arbitrary  value  strength  edge  reduced  value  mean  weight  edge  strength  reducing  weight  weight  equal  strength  equal  allowed  increase  weight  edge  task  get  tree  broken  reducing  weight  edge  given  tree  edged  positive  weight  moreover  total  weight  edge  large  possible  obvious  strength  edge  negative  equal  weight  subtree  equal  contains  vertex  tree  next  contains  description  edge  contains  vertex  connect  edge  vertex  parent  vertex  weight  strength  edge  accordingly  guaranteed  edge  describe  tree  root  vertex  impossible  get  unbroken  tree  given  tree  print
915/F __label__data  structures  __label__graphs  __label__trees  given  tree  consisting  vertex  written  vertex  written  vertex  let  denote  function  difference  maximum  minimum  value  simple  path  connecting  vertex  task  calculate  contains  vertex  tree  second  contains  written  vertex  follow  contains  denoting  edge  connecting  vertex  vertex  x  guaranteed  edge  denote  tree  print  equal
475/B __label__implementation  __label__dfs  __label__graphs  __label__brute  force  imagine  city  horizontal  street  crossing  vertical  street  forming  grid  order  increase  traffic  flow  mayor  city  ha  decided  make  street  way  mean  horizontal  street  traffic  move  west  east  east  west  traffic  move  north  south  south  north  vertical  street  possible  enter  horizontal  street  vertical  street  vice  versa  intersection  mayor  ha  received  street  direction  pattern  task  check  whether  possible  reach  junction  junction  proposed  street  direction  pattern  input  contains  denoting  horizontal  street  vertical  street  second  contains  string  length  made  character  denoting  direction  horizontal  street  character  equal  street  directed  east  west  otherwise  street  directed  west  east  street  listed  order  north  south  third  contains  string  length  made  character  denoting  direction  vertical  street  character  equal  street  directed  south  north  otherwise  street  directed  north  south  street  listed  order  west  east  given  pattern  meet  mayor  criterion  print  single  containing  yes  otherwise  print  single  containing
1010/D __label__implementation  __label__dfs  __label__graphs  __label__trees  natasha  travel  around  mar  mar  rover  suddenly  broke  namely  logical  scheme  inside  scheme  undirected  tree  connected  acyclic  graph  root  vertex  every  leaf  excluding  root  input  vertex  logical  element  including  root  output  bit  fed  input  bit  returned  output  type  logical  element  input  input  xor  input  input  logical  element  take  value  direct  descendant  input  return  result  function  perform  natasha  know  logical  scheme  mar  rover  well  fact  input  broken  order  fix  mar  rover  need  change  value  input  input  determine  output  natasha  change  input  contains  single  vertex  graph  input  element  next  contains  description  vertex  word  xor  mean  input  scheme  vertex  type  vertex  value  input  follows  otherwise  follow  index  input  vertex  element  xor  input  whereas  ha  input  vertex  numbered  guaranteed  input  data  contains  correct  logical  scheme  output  produced  vertex  print  string  character  without  quote  answer  problem  input  ascending  order  vertex  index
685/E __label__graphs  __label__brute  force  gerda  travelling  palace  snow  queen  road  network  consists  intersection  bidirectional  road  road  numbered  snow  queen  put  powerful  spell  road  change  weather  condition  gerda  step  road  moment  time  le  equal  leave  road  exactly  moment  case  step  road  moment  time  greater  stay  forever  gerda  start  moment  time  intersection  go  palace  snow  queen  located  intersection  moreover  ha  moment  earlier  arrival  queen  given  description  road  network  determine  query  possible  gerda  get  palace  time  input  contains  intersection  road  network  snow  queen  kingdom  road  query  answer  following  contains  description  road  description  consists  vii  index  intersection  connected  road  possible  get  using  road  pair  intersection  appear  several  time  meaning  several  road  connecting  pair  last  query  description  consists  ii  sii  moment  time  gerda  start  journey  last  moment  time  allowed  arrive  palace  index  starting  intersection  index  intersection  palace  located  query  print  yes  without  quote  gerda  snow  queen  palace  time  later  without  quote  otherwise
1158/A __label__math  __label__implementation  __label__greedy  __label__sortings  __label__constructive  algorithms  __label__binary  search  boy  girl  came  party  boy  presented  girl  sweet  possibly  boy  numbered  girl  numbered  minimal  sweet  boy  presented  girl  equal  maximal  sweet  girl  received  boy  equal  formally  let  sweet  boy  give  girl  equal  exactly  minimum  value  equal  exactly  maximum  value  interested  minimum  total  sweet  boy  could  present  need  minimize  sum  given  determine  contains  separated  space  boy  girl  respectively  second  contains  separated  space  equal  minimal  sweet  boy  presented  girl  third  contains  separated  space  equal  maximal  sweet  girl  received  boy  described  situation  impossible  print  another  case  print  minimal  total  sweet  boy  could  presented  condition  could  satisfied
1139/E __label__graphs  student  club  college  club  numbered  student  ha  potential  member  club  index  initially  student  member  exactly  club  technical  fest  start  college  run  next  day  coding  competition  every  day  technical  fest  every  day  morning  exactly  student  college  leaf  club  student  leaf  club  never  join  club  every  day  afternoon  director  college  select  student  club  case  club  ha  member  nobody  selected  club  form  team  day  coding  competition  strength  team  mex  potential  student  team  director  want  know  maximum  possible  strength  team  coming  day  thus  every  day  director  chooses  team  team  strength  maximized  mex  multiset  smallest  non  negative  present  example  mex  mex  mex  empty  set  contains  student  club  college  second  contains  potential  student  third  contains  mean  student  initially  member  club  index  fourth  contains  day  director  want  know  maximum  possible  strength  team  next  contains  mean  student  left  club  day  guaranteed  student  ha  left  club  earlier  day  print  maximum  possible  strength  team  day
986/F __label__math  __label__graphs  __label__number  theory  surely  seen  insane  video  south  korean  rapper  psy  gangnam  style  gentleman  daddy  might  hear  psy  ha  recording  video  oppa  funcan  style  year  ago  unfortunately  find  internet  remind  hit  looked  like  find  original  description  ground  platform  numbered  platform  dancer  every  second  dancer  standing  platform  jump  platform  moving  rule  selected  advance  changed  throughout  clip  duration  clip  wa  second  rule  wa  chosen  way  second  dancer  initial  position  dancer  stood  platform  allowed  loop  clip  collect  even  like  psy  know  enhanced  version  old  artwork  become  popular  every  day  decided  release  remastered  version  video  case  enhanced  version  mean  even  insanity  platform  video  director  said  dancer  stay  platform  time  viewer  get  bored  turn  video  immediately  therefore  must  hold  big  part  classic  video  success  wa  looping  remastered  version  dancer  return  initial  position  end  clip  well  psy  decided  exact  platform  video  duration  asks  check  good  rule  different  option  input  option  check  next  option  given  option  described  dancer  duration  second  guaranteed  different  value  test  greater  print  option  video  feasible  print  yes  without  quote  otherwise  print  without  quote
1158/C __label__math  __label__greedy  __label__data  structures  __label__sortings  __label__dfs  __label__graphs  __label__constructive  algorithms  vasya  ha  written  permutation  true  different  wrote  nex  nex  nex  nex  equal  minimal  index  let  let  define  nex  evening  vasya  went  home  school  due  rain  notebook  got  wet  impossible  read  written  permutation  value  nex  completely  lost  value  nex  lost  let  say  nex  given  nex  nex  nex  maybe  equal  help  vasya  find  permutation  write  notebook  nex  equal  correct  contains  test  case  next  contains  description  test  case  contains  length  permutation  written  vasya  second  contains  nex  nex  nex  separated  space  nex  nex  guaranteed  sum  test  case  exceed  hack  use  test  case  print  answer  test  case
